public class soot.rtlib.tamiflex.SootSig extends java.lang.Object
{
    private static final org.slf4j.Logger logger;
    private static java.util.Map constrCache;
    private static java.util.Map methodCache;

    public void <init>()
    {
        soot.rtlib.tamiflex.SootSig r0;

        r0 := @this: soot.rtlib.tamiflex.SootSig;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String sootSignature(java.lang.reflect.Constructor)
    {
        java.lang.reflect.Constructor r0;
        java.lang.String[] r1;
        java.util.Map $r2, $r8;
        java.lang.Object $r3;
        java.lang.String r4, $r7;
        java.lang.Class[] $r5;
        java.lang.Class $r6;

        r0 := @parameter0: java.lang.reflect.Constructor;

        $r2 = <soot.rtlib.tamiflex.SootSig: java.util.Map constrCache>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r4 = (java.lang.String) $r3;

        if r4 != null goto label1;

        $r5 = virtualinvoke r0.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        r1 = staticinvoke <soot.rtlib.tamiflex.SootSig: java.lang.String[] classesToTypeNames(java.lang.Class[])>($r5);

        $r6 = virtualinvoke r0.<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        r4 = staticinvoke <soot.rtlib.tamiflex.SootSig: java.lang.String sootSignature(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>($r7, "void", "<init>", r1);

        $r8 = <soot.rtlib.tamiflex.SootSig: java.util.Map constrCache>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r4);

     label1:
        return r4;
    }

    public static java.lang.String sootSignature(java.lang.Object, java.lang.reflect.Method)
    {
        java.lang.Object r0, $r23;
        java.lang.reflect.Method r1, r5;
        java.lang.Class r2, $r4, r6, $r26, $r28;
        java.lang.String[] r3;
        int $i0;
        boolean $z0;
        java.lang.String $r7, $r18, $r21, r24, $r27, $r29, $r30;
        java.lang.Class[] $r8, $r25;
        java.lang.NoSuchMethodException $r9;
        java.lang.Error $r11;
        java.lang.StringBuilder $r12, $r13, $r14, $r15, $r16, $r17;
        org.slf4j.Logger $r20;
        java.util.Map $r22, $r31;
        java.lang.Exception $r34;
        java.lang.RuntimeException $r36;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.reflect.Method;

        $i0 = virtualinvoke r1.<java.lang.reflect.Method: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i0);

        if $z0 == 0 goto label01;

        $r4 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        goto label02;

     label01:
        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

     label02:
        r2 = $r4;

     label03:
        r5 = null;

        r6 = $r4;

     label04:
        $r7 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.String getName()>();

        $r8 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        r5 = virtualinvoke r6.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>($r7, $r8);

     label05:
        goto label07;

     label06:
        $r9 := @caughtexception;

        r6 = virtualinvoke r6.<java.lang.Class: java.lang.Class getSuperclass()>();

     label07:
        if r5 != null goto label08;

        if r6 != null goto label04;

     label08:
        if r5 != null goto label09;

        $r11 = new java.lang.Error;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Method not found : ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in class ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and super classes.");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.Error: void <init>(java.lang.String)>($r18);

        $r20 = <soot.rtlib.tamiflex.SootSig: org.slf4j.Logger logger>;

        $r21 = virtualinvoke $r11.<java.lang.Error: java.lang.String getMessage()>();

        interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r21, $r11);

     label09:
        $r22 = <soot.rtlib.tamiflex.SootSig: java.util.Map methodCache>;

        $r23 = interfaceinvoke $r22.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        r24 = (java.lang.String) $r23;

        if r24 != null goto label10;

        $r25 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        r3 = staticinvoke <soot.rtlib.tamiflex.SootSig: java.lang.String[] classesToTypeNames(java.lang.Class[])>($r25);

        $r26 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $r27 = virtualinvoke $r26.<java.lang.Class: java.lang.String getName()>();

        $r28 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r29 = staticinvoke <soot.rtlib.tamiflex.SootSig: java.lang.String getTypeName(java.lang.Class)>($r28);

        $r30 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.String getName()>();

        r24 = staticinvoke <soot.rtlib.tamiflex.SootSig: java.lang.String sootSignature(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>($r27, $r29, $r30, r3);

        $r31 = <soot.rtlib.tamiflex.SootSig: java.util.Map methodCache>;

        interfaceinvoke $r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r24);

     label10:
        return r24;

     label11:
        $r34 := @caughtexception;

        $r36 = new java.lang.RuntimeException;

        specialinvoke $r36.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r34);

        throw $r36;

        catch java.lang.NoSuchMethodException from label04 to label05 with label06;
        catch java.lang.Exception from label03 to label10 with label11;
    }

    private static java.lang.String[] classesToTypeNames(java.lang.Class[])
    {
        java.lang.Class[] r0;
        java.lang.String[] r1;
        int i0, $i1, i2, i3;
        java.lang.Class r3;
        java.lang.String $r4;

        r0 := @parameter0: java.lang.Class[];

        $i1 = lengthof r0;

        r1 = newarray (java.lang.String)[$i1];

        i2 = 0;

        i0 = lengthof r0;

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        r3 = r0[i3];

        $r4 = staticinvoke <soot.rtlib.tamiflex.SootSig: java.lang.String getTypeName(java.lang.Class)>(r3);

        r1[i2] = $r4;

        i2 = i2 + 1;

        i3 = i3 + 1;

        goto label1;

     label2:
        return r1;
    }

    private static java.lang.String getTypeName(java.lang.Class)
    {
        java.lang.Class r0, r2;
        boolean $z0, $z1;
        int i0, i1;
        java.lang.StringBuffer $r3;
        java.lang.String $r4, $r7, $r10;
        java.lang.Throwable $r8;

        r0 := @parameter0: java.lang.Class;

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label8;

     label1:
        r2 = r0;

        i0 = 0;

     label2:
        $z1 = virtualinvoke r2.<java.lang.Class: boolean isArray()>();

        if $z1 == 0 goto label3;

        i0 = i0 + 1;

        r2 = virtualinvoke r2.<java.lang.Class: java.lang.Class getComponentType()>();

        goto label2;

     label3:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        i1 = 0;

     label4:
        if i1 >= i0 goto label5;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[]");

        i1 = i1 + 1;

        goto label4;

     label5:
        $r7 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

     label6:
        return $r7;

     label7:
        $r8 := @caughtexception;

     label8:
        $r10 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        return $r10;

        catch java.lang.Throwable from label1 to label6 with label7;
    }

    private static transient java.lang.String sootSignature(java.lang.String, java.lang.String, java.lang.String, java.lang.String[])
    {
        java.lang.String r0, r1, r2, r6, $r18;
        java.lang.String[] r3;
        int i0, i1, i2, $i3;
        java.lang.StringBuilder $r7;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String[];

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        i1 = 0;

        i0 = lengthof r3;

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        r6 = r3[i2];

        i1 = i1 + 1;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $i3 = lengthof r3;

        if i1 >= $i3 goto label2;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")>");

        $r18 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r18;
    }

    public static java.lang.String sootSignature(java.lang.reflect.Field)
    {
        java.lang.reflect.Field r0;
        java.lang.StringBuilder $r2;
        java.lang.Class $r4, $r8;
        java.lang.String $r5, $r9, $r12, $r15;

        r0 := @parameter0: java.lang.reflect.Field;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r4 = virtualinvoke r0.<java.lang.reflect.Field: java.lang.Class getDeclaringClass()>();

        $r5 = staticinvoke <soot.rtlib.tamiflex.SootSig: java.lang.String getTypeName(java.lang.Class)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r8 = virtualinvoke r0.<java.lang.reflect.Field: java.lang.Class getType()>();

        $r9 = staticinvoke <soot.rtlib.tamiflex.SootSig: java.lang.String getTypeName(java.lang.Class)>($r8);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r12 = virtualinvoke r0.<java.lang.reflect.Field: java.lang.String getName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r15 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;
        java.util.concurrent.ConcurrentHashMap $r1, $r2;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lsoot/rtlib/tamiflex/SootSig;");

        <soot.rtlib.tamiflex.SootSig: org.slf4j.Logger logger> = $r0;

        $r1 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        <soot.rtlib.tamiflex.SootSig: java.util.Map constrCache> = $r1;

        $r2 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r2.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        <soot.rtlib.tamiflex.SootSig: java.util.Map methodCache> = $r2;

        return;
    }
}
