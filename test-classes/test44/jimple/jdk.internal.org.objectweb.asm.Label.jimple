public class jdk.internal.org.objectweb.asm.Label extends java.lang.Object
{
    static final int DEBUG;
    static final int RESOLVED;
    static final int RESIZED;
    static final int PUSHED;
    static final int TARGET;
    static final int STORE;
    static final int REACHABLE;
    static final int JSR;
    static final int RET;
    static final int SUBROUTINE;
    static final int VISITED;
    static final int VISITED2;
    public java.lang.Object info;
    int status;
    int line;
    int position;
    private int referenceCount;
    private int[] srcAndRefPositions;
    int inputStackTop;
    int outputStackMax;
    jdk.internal.org.objectweb.asm.Frame frame;
    jdk.internal.org.objectweb.asm.Label successor;
    jdk.internal.org.objectweb.asm.Edge successors;
    jdk.internal.org.objectweb.asm.Label next;

    public void <init>()
    {
        jdk.internal.org.objectweb.asm.Label r0;

        r0 := @this: jdk.internal.org.objectweb.asm.Label;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int getOffset()
    {
        jdk.internal.org.objectweb.asm.Label r0;
        int $i0, $i1, $i2;
        java.lang.IllegalStateException $r1;

        r0 := @this: jdk.internal.org.objectweb.asm.Label;

        $i0 = r0.<jdk.internal.org.objectweb.asm.Label: int status>;

        $i1 = $i0 & 2;

        if $i1 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Label offset position has not been resolved yet");

        throw $r1;

     label1:
        $i2 = r0.<jdk.internal.org.objectweb.asm.Label: int position>;

        return $i2;
    }

    void put(jdk.internal.org.objectweb.asm.MethodWriter, jdk.internal.org.objectweb.asm.ByteVector, int, boolean)
    {
        jdk.internal.org.objectweb.asm.Label r0;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean z0;
        jdk.internal.org.objectweb.asm.ByteVector r1;
        jdk.internal.org.objectweb.asm.MethodWriter r6;

        r0 := @this: jdk.internal.org.objectweb.asm.Label;

        r6 := @parameter0: jdk.internal.org.objectweb.asm.MethodWriter;

        r1 := @parameter1: jdk.internal.org.objectweb.asm.ByteVector;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        $i0 = r0.<jdk.internal.org.objectweb.asm.Label: int status>;

        $i1 = $i0 & 2;

        if $i1 != 0 goto label2;

        if z0 == 0 goto label1;

        $i9 = -1 - i2;

        $i8 = r1.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        specialinvoke r0.<jdk.internal.org.objectweb.asm.Label: void addReference(int,int)>($i9, $i8);

        virtualinvoke r1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>(-1);

        goto label4;

     label1:
        $i7 = r1.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        specialinvoke r0.<jdk.internal.org.objectweb.asm.Label: void addReference(int,int)>(i2, $i7);

        virtualinvoke r1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(-1);

        goto label4;

     label2:
        if z0 == 0 goto label3;

        $i5 = r0.<jdk.internal.org.objectweb.asm.Label: int position>;

        $i6 = $i5 - i2;

        virtualinvoke r1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>($i6);

        goto label4;

     label3:
        $i3 = r0.<jdk.internal.org.objectweb.asm.Label: int position>;

        $i4 = $i3 - i2;

        virtualinvoke r1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($i4);

     label4:
        return;
    }

    private void addReference(int, int)
    {
        jdk.internal.org.objectweb.asm.Label r0;
        int[] $r1, $r2, $r3, $r4, $r5, r6, $r7, $r8, $r11;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, i7, $i8, $i9, $i10;

        r0 := @this: jdk.internal.org.objectweb.asm.Label;

        i4 := @parameter0: int;

        i7 := @parameter1: int;

        $r1 = r0.<jdk.internal.org.objectweb.asm.Label: int[] srcAndRefPositions>;

        if $r1 != null goto label1;

        $r11 = newarray (int)[6];

        r0.<jdk.internal.org.objectweb.asm.Label: int[] srcAndRefPositions> = $r11;

     label1:
        $i1 = r0.<jdk.internal.org.objectweb.asm.Label: int referenceCount>;

        $r2 = r0.<jdk.internal.org.objectweb.asm.Label: int[] srcAndRefPositions>;

        $i0 = lengthof $r2;

        if $i1 < $i0 goto label2;

        $r5 = r0.<jdk.internal.org.objectweb.asm.Label: int[] srcAndRefPositions>;

        $i8 = lengthof $r5;

        $i9 = $i8 + 6;

        r6 = newarray (int)[$i9];

        $r8 = r0.<jdk.internal.org.objectweb.asm.Label: int[] srcAndRefPositions>;

        $r7 = r0.<jdk.internal.org.objectweb.asm.Label: int[] srcAndRefPositions>;

        $i10 = lengthof $r7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, r6, 0, $i10);

        r0.<jdk.internal.org.objectweb.asm.Label: int[] srcAndRefPositions> = r6;

     label2:
        $r3 = r0.<jdk.internal.org.objectweb.asm.Label: int[] srcAndRefPositions>;

        $i2 = r0.<jdk.internal.org.objectweb.asm.Label: int referenceCount>;

        $i3 = $i2 + 1;

        r0.<jdk.internal.org.objectweb.asm.Label: int referenceCount> = $i3;

        $r3[$i2] = i4;

        $r4 = r0.<jdk.internal.org.objectweb.asm.Label: int[] srcAndRefPositions>;

        $i5 = r0.<jdk.internal.org.objectweb.asm.Label: int referenceCount>;

        $i6 = $i5 + 1;

        r0.<jdk.internal.org.objectweb.asm.Label: int referenceCount> = $i6;

        $r4[$i5] = i7;

        return;
    }

    boolean resolve(jdk.internal.org.objectweb.asm.MethodWriter, int, byte[])
    {
        jdk.internal.org.objectweb.asm.Label r0;
        int $i0, $i1, i2, $i3, i4, $i5, $i6, $i8, $i10, $i13, i15, $i16, $i18, $i19, $i21, i22, i23, i24, i25, i26, $i27, i30, i31, i32, i33;
        int[] $r1, $r2;
        byte[] r3;
        byte $b7, $b9, $b11, $b12, $b14, $b17, $b20, $b28, $b29;
        jdk.internal.org.objectweb.asm.MethodWriter r4;
        boolean z0;

        r0 := @this: jdk.internal.org.objectweb.asm.Label;

        r4 := @parameter0: jdk.internal.org.objectweb.asm.MethodWriter;

        i2 := @parameter1: int;

        r3 := @parameter2: byte[];

        z0 = 0;

        $i0 = r0.<jdk.internal.org.objectweb.asm.Label: int status>;

        $i1 = $i0 | 2;

        r0.<jdk.internal.org.objectweb.asm.Label: int status> = $i1;

        r0.<jdk.internal.org.objectweb.asm.Label: int position> = i2;

        i22 = 0;

     label1:
        $i3 = r0.<jdk.internal.org.objectweb.asm.Label: int referenceCount>;

        if i22 >= $i3 goto label8;

        $r1 = r0.<jdk.internal.org.objectweb.asm.Label: int[] srcAndRefPositions>;

        i23 = i22 + 1;

        i4 = $r1[i22];

        $r2 = r0.<jdk.internal.org.objectweb.asm.Label: int[] srcAndRefPositions>;

        i22 = i23 + 1;

        i24 = $r2[i23];

        if i4 < 0 goto label6;

        i25 = i2 - i4;

        if i25 < -32768 goto label2;

        if i25 <= 32767 goto label5;

     label2:
        $i13 = i24 - 1;

        $b14 = r3[$i13];

        i15 = $b14 & 255;

        if i15 > 168 goto label3;

        $i21 = i24 - 1;

        $i19 = i15 + 49;

        $b20 = (byte) $i19;

        r3[$i21] = $b20;

        goto label4;

     label3:
        $i18 = i24 - 1;

        $i16 = i15 + 20;

        $b17 = (byte) $i16;

        r3[$i18] = $b17;

     label4:
        z0 = 1;

     label5:
        i26 = i24 + 1;

        $i27 = i25 >>> 8;

        $b28 = (byte) $i27;

        r3[i24] = $b28;

        $b29 = (byte) i25;

        r3[i26] = $b29;

        goto label7;

     label6:
        $i5 = i2 + i4;

        i30 = $i5 + 1;

        i31 = i24 + 1;

        $i6 = i30 >>> 24;

        $b7 = (byte) $i6;

        r3[i24] = $b7;

        i32 = i31 + 1;

        $i8 = i30 >>> 16;

        $b9 = (byte) $i8;

        r3[i31] = $b9;

        i33 = i32 + 1;

        $i10 = i30 >>> 8;

        $b11 = (byte) $i10;

        r3[i32] = $b11;

        $b12 = (byte) i30;

        r3[i33] = $b12;

     label7:
        goto label1;

     label8:
        return z0;
    }

    jdk.internal.org.objectweb.asm.Label getFirst()
    {
        jdk.internal.org.objectweb.asm.Label r0, $r3;
        jdk.internal.org.objectweb.asm.Frame $r1, $r2;

        r0 := @this: jdk.internal.org.objectweb.asm.Label;

        $r1 = r0.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        if $r1 != null goto label1;

        $r3 = r0;

        goto label2;

     label1:
        $r2 = r0.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        $r3 = $r2.<jdk.internal.org.objectweb.asm.Frame: jdk.internal.org.objectweb.asm.Label owner>;

     label2:
        return $r3;
    }

    boolean inSubroutine(long)
    {
        jdk.internal.org.objectweb.asm.Label r0;
        int $i0, $i1, $i4, $i5, $i6, $i7;
        long l2, $l3;
        int[] $r1;
        boolean $z0;

        r0 := @this: jdk.internal.org.objectweb.asm.Label;

        l2 := @parameter0: long;

        $i0 = r0.<jdk.internal.org.objectweb.asm.Label: int status>;

        $i1 = $i0 & 1024;

        if $i1 == 0 goto label3;

        $r1 = r0.<jdk.internal.org.objectweb.asm.Label: int[] srcAndRefPositions>;

        $l3 = l2 >>> 32;

        $i4 = (int) $l3;

        $i6 = $r1[$i4];

        $i5 = (int) l2;

        $i7 = $i6 & $i5;

        if $i7 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;

     label3:
        return 0;
    }

    boolean inSameSubroutine(jdk.internal.org.objectweb.asm.Label)
    {
        jdk.internal.org.objectweb.asm.Label r0, r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        int[] $r2, $r3, $r4;

        r0 := @this: jdk.internal.org.objectweb.asm.Label;

        r1 := @parameter0: jdk.internal.org.objectweb.asm.Label;

        $i0 = r0.<jdk.internal.org.objectweb.asm.Label: int status>;

        $i1 = $i0 & 1024;

        if $i1 == 0 goto label1;

        $i2 = r1.<jdk.internal.org.objectweb.asm.Label: int status>;

        $i3 = $i2 & 1024;

        if $i3 != 0 goto label2;

     label1:
        return 0;

     label2:
        i8 = 0;

     label3:
        $r2 = r0.<jdk.internal.org.objectweb.asm.Label: int[] srcAndRefPositions>;

        $i4 = lengthof $r2;

        if i8 >= $i4 goto label5;

        $r3 = r0.<jdk.internal.org.objectweb.asm.Label: int[] srcAndRefPositions>;

        $i6 = $r3[i8];

        $r4 = r1.<jdk.internal.org.objectweb.asm.Label: int[] srcAndRefPositions>;

        $i5 = $r4[i8];

        $i7 = $i6 & $i5;

        if $i7 == 0 goto label4;

        return 1;

     label4:
        i8 = i8 + 1;

        goto label3;

     label5:
        return 0;
    }

    void addToSubroutine(long, int)
    {
        jdk.internal.org.objectweb.asm.Label r0;
        int $i0, $i1, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i11, $i12;
        long l2, $l3;
        int[] $r1, $r2;

        r0 := @this: jdk.internal.org.objectweb.asm.Label;

        l2 := @parameter0: long;

        i10 := @parameter1: int;

        $i0 = r0.<jdk.internal.org.objectweb.asm.Label: int status>;

        $i1 = $i0 & 1024;

        if $i1 != 0 goto label1;

        $i8 = r0.<jdk.internal.org.objectweb.asm.Label: int status>;

        $i9 = $i8 | 1024;

        r0.<jdk.internal.org.objectweb.asm.Label: int status> = $i9;

        $i11 = i10 / 32;

        $i12 = $i11 + 1;

        $r2 = newarray (int)[$i12];

        r0.<jdk.internal.org.objectweb.asm.Label: int[] srcAndRefPositions> = $r2;

     label1:
        $r1 = r0.<jdk.internal.org.objectweb.asm.Label: int[] srcAndRefPositions>;

        $l3 = l2 >>> 32;

        $i4 = (int) $l3;

        $i6 = $r1[$i4];

        $i5 = (int) l2;

        $i7 = $i6 | $i5;

        $r1[$i4] = $i7;

        return;
    }

    void visitSubroutine(jdk.internal.org.objectweb.asm.Label, long, int)
    {
        jdk.internal.org.objectweb.asm.Label r0, r1, r2, $r3, $r4, $r5, $r10, r12;
        long l0;
        boolean $z0, $z1;
        int i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        jdk.internal.org.objectweb.asm.Edge $r6, $r7, $r8, $r9, $r11, r14;

        r0 := @this: jdk.internal.org.objectweb.asm.Label;

        r2 := @parameter0: jdk.internal.org.objectweb.asm.Label;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        r12 = r0;

     label01:
        if r12 == null goto label10;

        r1 = r12;

        r12 = r12.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label next>;

        r1.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label next> = null;

        if r2 == null goto label03;

        $i4 = r1.<jdk.internal.org.objectweb.asm.Label: int status>;

        $i5 = $i4 & 2048;

        if $i5 == 0 goto label02;

        goto label01;

     label02:
        $i6 = r1.<jdk.internal.org.objectweb.asm.Label: int status>;

        $i7 = $i6 | 2048;

        r1.<jdk.internal.org.objectweb.asm.Label: int status> = $i7;

        $i8 = r1.<jdk.internal.org.objectweb.asm.Label: int status>;

        $i9 = $i8 & 256;

        if $i9 == 0 goto label05;

        $z1 = virtualinvoke r1.<jdk.internal.org.objectweb.asm.Label: boolean inSameSubroutine(jdk.internal.org.objectweb.asm.Label)>(r2);

        if $z1 != 0 goto label05;

        $r8 = new jdk.internal.org.objectweb.asm.Edge;

        specialinvoke $r8.<jdk.internal.org.objectweb.asm.Edge: void <init>()>();

        $i10 = r1.<jdk.internal.org.objectweb.asm.Label: int inputStackTop>;

        $r8.<jdk.internal.org.objectweb.asm.Edge: int info> = $i10;

        $r9 = r2.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Edge successors>;

        $r10 = $r9.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Label successor>;

        $r8.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Label successor> = $r10;

        $r11 = r1.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Edge successors>;

        $r8.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Edge next> = $r11;

        r1.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Edge successors> = $r8;

        goto label05;

     label03:
        $z0 = virtualinvoke r1.<jdk.internal.org.objectweb.asm.Label: boolean inSubroutine(long)>(l0);

        if $z0 == 0 goto label04;

        goto label01;

     label04:
        virtualinvoke r1.<jdk.internal.org.objectweb.asm.Label: void addToSubroutine(long,int)>(l0, i1);

     label05:
        r14 = r1.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Edge successors>;

     label06:
        if r14 == null goto label09;

        $i2 = r1.<jdk.internal.org.objectweb.asm.Label: int status>;

        $i3 = $i2 & 128;

        if $i3 == 0 goto label07;

        $r6 = r1.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Edge successors>;

        $r7 = $r6.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Edge next>;

        if r14 == $r7 goto label08;

     label07:
        $r3 = r14.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Label successor>;

        $r4 = $r3.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label next>;

        if $r4 != null goto label08;

        $r5 = r14.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Label successor>;

        $r5.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label next> = r12;

        r12 = r14.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Label successor>;

     label08:
        r14 = r14.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Edge next>;

        goto label06;

     label09:
        goto label01;

     label10:
        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r3;
        jdk.internal.org.objectweb.asm.Label r2;
        int $i0;
        java.lang.String $r4;

        r2 := @this: jdk.internal.org.objectweb.asm.Label;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("L");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r2);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public static void <clinit>()
    {
        <jdk.internal.org.objectweb.asm.Label: int VISITED2> = 2048;

        <jdk.internal.org.objectweb.asm.Label: int VISITED> = 1024;

        <jdk.internal.org.objectweb.asm.Label: int SUBROUTINE> = 512;

        <jdk.internal.org.objectweb.asm.Label: int RET> = 256;

        <jdk.internal.org.objectweb.asm.Label: int JSR> = 128;

        <jdk.internal.org.objectweb.asm.Label: int REACHABLE> = 64;

        <jdk.internal.org.objectweb.asm.Label: int STORE> = 32;

        <jdk.internal.org.objectweb.asm.Label: int TARGET> = 16;

        <jdk.internal.org.objectweb.asm.Label: int PUSHED> = 8;

        <jdk.internal.org.objectweb.asm.Label: int RESIZED> = 4;

        <jdk.internal.org.objectweb.asm.Label: int RESOLVED> = 2;

        <jdk.internal.org.objectweb.asm.Label: int DEBUG> = 1;

        return;
    }
}
