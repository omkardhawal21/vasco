public class soot.rtlib.tamiflex.SootSig extends java.lang.Object
{
    private static final org.slf4j.Logger logger;
    private static java.util.Map constrCache;
    private static java.util.Map methodCache;

    static void <clinit>()
    {
        org.slf4j.Logger $stack0;
        java.util.concurrent.ConcurrentHashMap $stack1, $stack2;

        $stack0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>("Lsoot.rtlib.tamiflex.SootSig;");

        <soot.rtlib.tamiflex.SootSig: org.slf4j.Logger logger> = $stack0;

        $stack1 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $stack1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        <soot.rtlib.tamiflex.SootSig: java.util.Map constrCache> = $stack1;

        $stack2 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $stack2.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        <soot.rtlib.tamiflex.SootSig: java.util.Map methodCache> = $stack2;

        return;
    }

    public void <init>()
    {
        soot.rtlib.tamiflex.SootSig l0;

        l0 := @this: soot.rtlib.tamiflex.SootSig;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.String[] classesToTypeNames(java.lang.Class[])
    {
        java.lang.Class[] l0;
        int $stack5, l2, l3#1, l4#2;
        java.lang.String[] l1;
        java.lang.Class $stack6;
        java.lang.String $stack7;

        l0 := @parameter0: java.lang.Class[];

        $stack5 = lengthof l0;

        l1 = newarray (java.lang.String)[$stack5];

        l3#1 = 0;

        l2 = lengthof l0;

        l4#2 = 0;

     label1:
        if l4#2 >= l2 goto label2;

        $stack6 = l0[l4#2];

        $stack7 = staticinvoke <soot.rtlib.tamiflex.SootSig: java.lang.String getTypeName(java.lang.Class)>($stack6);

        l1[l3#1] = $stack7;

        l3#1 = l3#1 + 1;

        l4#2 = l4#2 + 1;

        goto label1;

     label2:
        return l1;
    }

    private static java.lang.String getTypeName(java.lang.Class)
    {
        java.lang.Class l0, $stack13, l1#1;
        boolean $stack4, $stack6;
        java.lang.String $stack5, $stack7, $stack9;
        java.lang.StringBuffer l3;
        java.lang.Throwable $stack15;
        int l2#2, l1#3;

        l0 := @parameter0: java.lang.Class;

        $stack4 = virtualinvoke l0.<java.lang.Class: boolean isArray()>();

        if $stack4 == 0 goto label8;

     label1:
        l1#1 = l0;

        l2#2 = 0;

     label2:
        $stack6 = virtualinvoke l1#1.<java.lang.Class: boolean isArray()>();

        if $stack6 == 0 goto label3;

        l2#2 = l2#2 + 1;

        $stack13 = virtualinvoke l1#1.<java.lang.Class: java.lang.Class getComponentType()>();

        l1#1 = $stack13;

        goto label2;

     label3:
        l3 = new java.lang.StringBuffer;

        specialinvoke l3.<java.lang.StringBuffer: void <init>()>();

        $stack7 = virtualinvoke l1#1.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke l3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack7);

        l1#3 = 0;

     label4:
        if l1#3 >= l2#2 goto label5;

        virtualinvoke l3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[]");

        l1#3 = l1#3 + 1;

        goto label4;

     label5:
        $stack9 = virtualinvoke l3.<java.lang.StringBuffer: java.lang.String toString()>();

     label6:
        return $stack9;

     label7:
        $stack15 := @caughtexception;

     label8:
        $stack5 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>();

        return $stack5;

        catch java.lang.Throwable from label1 to label6 with label7;
    }

    public static java.lang.String sootSignature(java.lang.reflect.Constructor)
    {
        java.lang.reflect.Constructor l0;
        java.util.Map $stack2, $stack9;
        java.lang.Object $stack3;
        java.lang.Class[] $stack4;
        java.lang.String[] $stack5;
        java.lang.Class $stack6;
        java.lang.String $stack7, $stack8, l1#1;

        l0 := @parameter0: java.lang.reflect.Constructor;

        $stack2 = <soot.rtlib.tamiflex.SootSig: java.util.Map constrCache>;

        $stack3 = interfaceinvoke $stack2.<java.util.Map: java.lang.Object get(java.lang.Object)>(l0);

        l1#1 = (java.lang.String) $stack3;

        if l1#1 != null goto label1;

        $stack4 = virtualinvoke l0.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        $stack5 = staticinvoke <soot.rtlib.tamiflex.SootSig: java.lang.String[] classesToTypeNames(java.lang.Class[])>($stack4);

        $stack6 = virtualinvoke l0.<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()>();

        $stack7 = virtualinvoke $stack6.<java.lang.Class: java.lang.String getName()>();

        $stack8 = staticinvoke <soot.rtlib.tamiflex.SootSig: java.lang.String sootSignature(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>($stack7, "void", "<init>", $stack5);

        l1#1 = $stack8;

        $stack9 = <soot.rtlib.tamiflex.SootSig: java.util.Map constrCache>;

        interfaceinvoke $stack9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(l0, $stack8);

     label1:
        return l1#1;
    }

    public static java.lang.String sootSignature(java.lang.Object, java.lang.reflect.Method)
    {
        int $stack5;
        boolean $stack6;
        java.lang.Class $stack7, l2, $stack15, $stack17, $stack40, $stack47, l3#3, l3#5;
        java.util.Map $stack11, $stack21;
        java.lang.Object $stack12, l0#1;
        java.lang.Class[] $stack13, $stack9#14;
        java.lang.String[] $stack14;
        java.lang.String $stack16, $stack18, $stack19, $stack20, $stack30, $stack32, $stack34, $stack8#10, l1#19;
        java.lang.StringBuilder $stack24, $stack25, $stack26, $stack27, $stack28, $stack29;
        org.slf4j.Logger $stack31;
        java.lang.Exception $stack44;
        java.lang.RuntimeException $stack45;
        java.lang.NoSuchMethodException $stack46;
        java.lang.reflect.Method l1#2, l0#4, $stack10#16;
        java.lang.Error l3#18;

        l0#1 := @parameter0: java.lang.Object;

        l1#2 := @parameter1: java.lang.reflect.Method;

        $stack5 = virtualinvoke l1#2.<java.lang.reflect.Method: int getModifiers()>();

        $stack6 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($stack5);

        if $stack6 == 0 goto label01;

        $stack40 = virtualinvoke l1#2.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        l3#3 = $stack40;

        goto label02;

     label01:
        $stack7 = virtualinvoke l0#1.<java.lang.Object: java.lang.Class getClass()>();

        l3#3 = $stack7;

     label02:
        l2 = l3#3;

     label03:
        l0#4 = null;

        l3#5 = l3#3;

     label04:
        $stack8#10 = virtualinvoke l1#2.<java.lang.reflect.Method: java.lang.String getName()>();

        $stack9#14 = virtualinvoke l1#2.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $stack10#16 = virtualinvoke l3#5.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>($stack8#10, $stack9#14);

        l0#4 = $stack10#16;

     label05:
        goto label07;

     label06:
        $stack46 := @caughtexception;

        $stack47 = virtualinvoke l3#5.<java.lang.Class: java.lang.Class getSuperclass()>();

        l3#5 = $stack47;

     label07:
        if l0#4 != null goto label08;

        if l3#5 != null goto label04;

     label08:
        if l0#4 != null goto label09;

        l3#18 = new java.lang.Error;

        $stack24 = new java.lang.StringBuilder;

        specialinvoke $stack24.<java.lang.StringBuilder: void <init>()>();

        $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Method not found : ");

        $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(l1#2);

        $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in class ");

        $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(l2);

        $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and super classes.");

        $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke l3#18.<java.lang.Error: void <init>(java.lang.String)>($stack30);

        $stack31 = <soot.rtlib.tamiflex.SootSig: org.slf4j.Logger logger>;

        $stack32 = virtualinvoke l3#18.<java.lang.Error: java.lang.String getMessage()>();

        interfaceinvoke $stack31.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($stack32, l3#18);

     label09:
        $stack11 = <soot.rtlib.tamiflex.SootSig: java.util.Map methodCache>;

        $stack12 = interfaceinvoke $stack11.<java.util.Map: java.lang.Object get(java.lang.Object)>(l0#4);

        $stack34 = (java.lang.String) $stack12;

        l1#19 = $stack34;

        if $stack34 != null goto label10;

        $stack13 = virtualinvoke l0#4.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $stack14 = staticinvoke <soot.rtlib.tamiflex.SootSig: java.lang.String[] classesToTypeNames(java.lang.Class[])>($stack13);

        $stack15 = virtualinvoke l0#4.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $stack16 = virtualinvoke $stack15.<java.lang.Class: java.lang.String getName()>();

        $stack17 = virtualinvoke l0#4.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $stack18 = staticinvoke <soot.rtlib.tamiflex.SootSig: java.lang.String getTypeName(java.lang.Class)>($stack17);

        $stack19 = virtualinvoke l0#4.<java.lang.reflect.Method: java.lang.String getName()>();

        $stack20 = staticinvoke <soot.rtlib.tamiflex.SootSig: java.lang.String sootSignature(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>($stack16, $stack18, $stack19, $stack14);

        l1#19 = $stack20;

        $stack21 = <soot.rtlib.tamiflex.SootSig: java.util.Map methodCache>;

        interfaceinvoke $stack21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(l0#4, $stack20);

     label10:
        return l1#19;

     label11:
        $stack44 := @caughtexception;

        $stack45 = new java.lang.RuntimeException;

        specialinvoke $stack45.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($stack44);

        throw $stack45;

        catch java.lang.NoSuchMethodException from label04 to label05 with label06;
        catch java.lang.Exception from label03 to label10 with label11;
    }

    private static transient java.lang.String sootSignature(java.lang.String, java.lang.String, java.lang.String, java.lang.String[])
    {
        java.lang.StringBuilder l4;
        java.lang.String[] l3;
        java.lang.String $stack13, $stack14, l0#1, l1#2, l2#3;
        int $stack16, l1#4, l0#5, l2#6;

        l0#1 := @parameter0: java.lang.String;

        l1#2 := @parameter1: java.lang.String;

        l2#3 := @parameter2: java.lang.String;

        l3 := @parameter3: java.lang.String[];

        l4 = new java.lang.StringBuilder;

        specialinvoke l4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke l4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        virtualinvoke l4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l0#1);

        virtualinvoke l4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke l4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l1#2);

        virtualinvoke l4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke l4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l2#3);

        virtualinvoke l4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        l1#4 = 0;

        l0#5 = lengthof l3;

        l2#6 = 0;

     label1:
        if l2#6 >= l0#5 goto label3;

        $stack14 = l3[l2#6];

        l1#4 = l1#4 + 1;

        virtualinvoke l4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14);

        $stack16 = lengthof l3;

        if l1#4 >= $stack16 goto label2;

        virtualinvoke l4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label2:
        l2#6 = l2#6 + 1;

        goto label1;

     label3:
        virtualinvoke l4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")>");

        $stack13 = virtualinvoke l4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack13;
    }

    public static java.lang.String sootSignature(java.lang.reflect.Field)
    {
        java.lang.StringBuilder l1;
        java.lang.reflect.Field l0;
        java.lang.Class $stack3, $stack7;
        java.lang.String $stack4, $stack8, $stack11, $stack14;

        l0 := @parameter0: java.lang.reflect.Field;

        l1 = new java.lang.StringBuilder;

        specialinvoke l1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke l1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $stack3 = virtualinvoke l0.<java.lang.reflect.Field: java.lang.Class getDeclaringClass()>();

        $stack4 = staticinvoke <soot.rtlib.tamiflex.SootSig: java.lang.String getTypeName(java.lang.Class)>($stack3);

        virtualinvoke l1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack4);

        virtualinvoke l1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $stack7 = virtualinvoke l0.<java.lang.reflect.Field: java.lang.Class getType()>();

        $stack8 = staticinvoke <soot.rtlib.tamiflex.SootSig: java.lang.String getTypeName(java.lang.Class)>($stack7);

        virtualinvoke l1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8);

        virtualinvoke l1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $stack11 = virtualinvoke l0.<java.lang.reflect.Field: java.lang.String getName()>();

        virtualinvoke l1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11);

        virtualinvoke l1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $stack14 = virtualinvoke l1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack14;
    }
}
