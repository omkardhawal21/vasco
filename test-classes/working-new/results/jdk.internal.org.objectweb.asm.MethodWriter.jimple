class jdk.internal.org.objectweb.asm.MethodWriter extends jdk.internal.org.objectweb.asm.MethodVisitor
{
    static final int ACC_CONSTRUCTOR;
    static final int SAME_FRAME;
    static final int SAME_LOCALS_1_STACK_ITEM_FRAME;
    static final int RESERVED;
    static final int SAME_LOCALS_1_STACK_ITEM_FRAME_EXTENDED;
    static final int CHOP_FRAME;
    static final int SAME_FRAME_EXTENDED;
    static final int APPEND_FRAME;
    static final int FULL_FRAME;
    private static final int FRAMES;
    private static final int MAXS;
    private static final int NOTHING;
    final jdk.internal.org.objectweb.asm.ClassWriter cw;
    private int access;
    private final int name;
    private final int desc;
    private final java.lang.String descriptor;
    java.lang.String signature;
    int classReaderOffset;
    int classReaderLength;
    int exceptionCount;
    int[] exceptions;
    private jdk.internal.org.objectweb.asm.ByteVector annd;
    private jdk.internal.org.objectweb.asm.AnnotationWriter anns;
    private jdk.internal.org.objectweb.asm.AnnotationWriter ianns;
    private jdk.internal.org.objectweb.asm.AnnotationWriter tanns;
    private jdk.internal.org.objectweb.asm.AnnotationWriter itanns;
    private jdk.internal.org.objectweb.asm.AnnotationWriter[] panns;
    private jdk.internal.org.objectweb.asm.AnnotationWriter[] ipanns;
    private int synthetics;
    private jdk.internal.org.objectweb.asm.Attribute attrs;
    private jdk.internal.org.objectweb.asm.ByteVector code;
    private int maxStack;
    private int maxLocals;
    private int currentLocals;
    private int frameCount;
    private jdk.internal.org.objectweb.asm.ByteVector stackMap;
    private int previousFrameOffset;
    private int[] previousFrame;
    private int[] frame;
    private int handlerCount;
    private jdk.internal.org.objectweb.asm.Handler firstHandler;
    private jdk.internal.org.objectweb.asm.Handler lastHandler;
    private int methodParametersCount;
    private jdk.internal.org.objectweb.asm.ByteVector methodParameters;
    private int localVarCount;
    private jdk.internal.org.objectweb.asm.ByteVector localVar;
    private int localVarTypeCount;
    private jdk.internal.org.objectweb.asm.ByteVector localVarType;
    private int lineNumberCount;
    private jdk.internal.org.objectweb.asm.ByteVector lineNumber;
    private int lastCodeOffset;
    private jdk.internal.org.objectweb.asm.AnnotationWriter ctanns;
    private jdk.internal.org.objectweb.asm.AnnotationWriter ictanns;
    private jdk.internal.org.objectweb.asm.Attribute cattrs;
    private boolean resize;
    private int subroutines;
    private final int compute;
    private jdk.internal.org.objectweb.asm.Label labels;
    private jdk.internal.org.objectweb.asm.Label previousBlock;
    private jdk.internal.org.objectweb.asm.Label currentBlock;
    private int stackSize;
    private int maxStackSize;

    void <init>(jdk.internal.org.objectweb.asm.ClassWriter, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean)
    {
        jdk.internal.org.objectweb.asm.MethodWriter l0, $stack11, $stack12;
        jdk.internal.org.objectweb.asm.ByteVector $stack10;
        jdk.internal.org.objectweb.asm.ClassWriter l1;
        int l2, $stack15, $stack16, $stack18, $stack19, $stack22, $stack23, $stack36, $stack42, $stack44, $stack45, $stack47, $stack50, $stack53, $stack54, l9#1, l9#9;
        java.lang.String l3, $stack13, l4, l5, $stack17, $stack48;
        boolean $stack14, l8, l7;
        java.lang.String[] l6;
        jdk.internal.org.objectweb.asm.Label $stack20, $stack21, $stack24;
        int[] $stack46, $stack49;
        byte $stack39#6;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.ClassWriter;

        l2 := @parameter1: int;

        l3 := @parameter2: java.lang.String;

        l4 := @parameter3: java.lang.String;

        l5 := @parameter4: java.lang.String;

        l6 := @parameter5: java.lang.String[];

        l7 := @parameter6: boolean;

        l8 := @parameter7: boolean;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.MethodVisitor: void <init>(int)>(327680);

        $stack10 = new jdk.internal.org.objectweb.asm.ByteVector;

        specialinvoke $stack10.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code> = $stack10;

        $stack11 = l1.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.MethodWriter firstMethod>;

        if $stack11 != null goto label01;

        l1.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.MethodWriter firstMethod> = l0;

        goto label02;

     label01:
        $stack12 = l1.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.MethodWriter lastMethod>;

        $stack12.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.MethodVisitor mv> = l0;

     label02:
        l1.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.MethodWriter lastMethod> = l0;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw> = l1;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int access> = l2;

        $stack13 = "<init>";

        $stack14 = virtualinvoke $stack13.<java.lang.String: boolean equals(java.lang.Object)>(l3);

        if $stack14 == 0 goto label03;

        $stack53 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int access>;

        $stack54 = $stack53 | 524288;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int access> = $stack54;

     label03:
        $stack15 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>(l3);

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int name> = $stack15;

        $stack16 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>(l4);

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int desc> = $stack16;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String descriptor> = l4;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String signature> = l5;

        if l6 == null goto label05;

        $stack42 = lengthof l6;

        if $stack42 <= 0 goto label05;

        $stack44 = lengthof l6;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int exceptionCount> = $stack44;

        $stack45 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int exceptionCount>;

        $stack46 = newarray (int)[$stack45];

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] exceptions> = $stack46;

        l9#1 = 0;

     label04:
        $stack47 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int exceptionCount>;

        if l9#1 >= $stack47 goto label05;

        $stack49 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] exceptions>;

        $stack48 = l6[l9#1];

        $stack50 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.ClassWriter: int newClass(java.lang.String)>($stack48);

        $stack49[l9#1] = $stack50;

        l9#1 = l9#1 + 1;

        goto label04;

     label05:
        if l8 == 0 goto label06;

        $stack39#6 = 0;

        goto label08;

     label06:
        if l7 == 0 goto label07;

        $stack39#6 = 1;

        goto label08;

     label07:
        $stack39#6 = 2;

     label08:
        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int compute> = $stack39#6;

        if l7 != 0 goto label09;

        if l8 == 0 goto label11;

     label09:
        $stack17 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String descriptor>;

        $stack18 = staticinvoke <jdk.internal.org.objectweb.asm.Type: int getArgumentsAndReturnSizes(java.lang.String)>($stack17);

        $stack36 = $stack18 >> 2;

        l9#9 = $stack36;

        $stack19 = l2 & 8;

        if $stack19 == 0 goto label10;

        l9#9 = $stack36 + -1;

     label10:
        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxLocals> = l9#9;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int currentLocals> = l9#9;

        $stack20 = new jdk.internal.org.objectweb.asm.Label;

        specialinvoke $stack20.<jdk.internal.org.objectweb.asm.Label: void <init>()>();

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label labels> = $stack20;

        $stack21 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label labels>;

        $stack22 = $stack21.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack23 = $stack22 | 8;

        $stack21.<jdk.internal.org.objectweb.asm.Label: int status> = $stack23;

        $stack24 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label labels>;

        virtualinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: void visitLabel(jdk.internal.org.objectweb.asm.Label)>($stack24);

     label11:
        return;
    }

    public void visitParameter(java.lang.String, int)
    {
        jdk.internal.org.objectweb.asm.MethodWriter l0;
        jdk.internal.org.objectweb.asm.ByteVector $stack3, $stack7, $stack9, $stack12;
        int $stack4, $stack5, l2, $stack8#1;
        java.lang.String l1;
        jdk.internal.org.objectweb.asm.ClassWriter $stack6;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: int;

        $stack3 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector methodParameters>;

        if $stack3 != null goto label1;

        $stack12 = new jdk.internal.org.objectweb.asm.ByteVector;

        specialinvoke $stack12.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector methodParameters> = $stack12;

     label1:
        $stack4 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int methodParametersCount>;

        $stack5 = $stack4 + 1;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int methodParametersCount> = $stack5;

        $stack7 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector methodParameters>;

        if l1 != null goto label2;

        $stack8#1 = 0;

        goto label3;

     label2:
        $stack6 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack8#1 = virtualinvoke $stack6.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>(l1);

     label3:
        $stack9 = virtualinvoke $stack7.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack8#1);

        virtualinvoke $stack9.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(l2);

        return;
    }

    public jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotationDefault()
    {
        jdk.internal.org.objectweb.asm.MethodWriter l0;
        jdk.internal.org.objectweb.asm.ByteVector $stack1, $stack3;
        jdk.internal.org.objectweb.asm.AnnotationWriter $stack2;
        jdk.internal.org.objectweb.asm.ClassWriter $stack4;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        $stack1 = new jdk.internal.org.objectweb.asm.ByteVector;

        specialinvoke $stack1.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector annd> = $stack1;

        $stack2 = new jdk.internal.org.objectweb.asm.AnnotationWriter;

        $stack4 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack3 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector annd>;

        specialinvoke $stack2.<jdk.internal.org.objectweb.asm.AnnotationWriter: void <init>(jdk.internal.org.objectweb.asm.ClassWriter,boolean,jdk.internal.org.objectweb.asm.ByteVector,jdk.internal.org.objectweb.asm.ByteVector,int)>($stack4, 0, $stack3, null, 0);

        return $stack2;
    }

    public jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String, boolean)
    {
        jdk.internal.org.objectweb.asm.ByteVector $stack5, $stack8;
        jdk.internal.org.objectweb.asm.MethodWriter l0;
        java.lang.String l1;
        jdk.internal.org.objectweb.asm.ClassWriter $stack6, $stack11;
        int $stack7;
        jdk.internal.org.objectweb.asm.AnnotationWriter $stack10, $stack12, $stack13;
        boolean l2;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: boolean;

        $stack5 = new jdk.internal.org.objectweb.asm.ByteVector;

        specialinvoke $stack5.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        $stack6 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack7 = virtualinvoke $stack6.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>(l1);

        $stack8 = virtualinvoke $stack5.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack7);

        virtualinvoke $stack8.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(0);

        $stack10 = new jdk.internal.org.objectweb.asm.AnnotationWriter;

        $stack11 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        specialinvoke $stack10.<jdk.internal.org.objectweb.asm.AnnotationWriter: void <init>(jdk.internal.org.objectweb.asm.ClassWriter,boolean,jdk.internal.org.objectweb.asm.ByteVector,jdk.internal.org.objectweb.asm.ByteVector,int)>($stack11, 1, $stack5, $stack5, 2);

        if l2 == 0 goto label1;

        $stack13 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter anns>;

        $stack10.<jdk.internal.org.objectweb.asm.AnnotationWriter: jdk.internal.org.objectweb.asm.AnnotationWriter next> = $stack13;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter anns> = $stack10;

        goto label2;

     label1:
        $stack12 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ianns>;

        $stack10.<jdk.internal.org.objectweb.asm.AnnotationWriter: jdk.internal.org.objectweb.asm.AnnotationWriter next> = $stack12;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ianns> = $stack10;

     label2:
        return $stack10;
    }

    public jdk.internal.org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int, jdk.internal.org.objectweb.asm.TypePath, java.lang.String, boolean)
    {
        jdk.internal.org.objectweb.asm.ByteVector $stack7, $stack10;
        int l1, $stack9, $stack13, $stack14;
        jdk.internal.org.objectweb.asm.TypePath l2;
        jdk.internal.org.objectweb.asm.MethodWriter l0;
        java.lang.String l3;
        jdk.internal.org.objectweb.asm.ClassWriter $stack8, $stack15;
        jdk.internal.org.objectweb.asm.AnnotationWriter $stack12, $stack16, $stack17;
        boolean l4;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        l1 := @parameter0: int;

        l2 := @parameter1: jdk.internal.org.objectweb.asm.TypePath;

        l3 := @parameter2: java.lang.String;

        l4 := @parameter3: boolean;

        $stack7 = new jdk.internal.org.objectweb.asm.ByteVector;

        specialinvoke $stack7.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        staticinvoke <jdk.internal.org.objectweb.asm.AnnotationWriter: void putTarget(int,jdk.internal.org.objectweb.asm.TypePath,jdk.internal.org.objectweb.asm.ByteVector)>(l1, l2, $stack7);

        $stack8 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack9 = virtualinvoke $stack8.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>(l3);

        $stack10 = virtualinvoke $stack7.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack9);

        virtualinvoke $stack10.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(0);

        $stack12 = new jdk.internal.org.objectweb.asm.AnnotationWriter;

        $stack15 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack13 = $stack7.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack14 = $stack13 - 2;

        specialinvoke $stack12.<jdk.internal.org.objectweb.asm.AnnotationWriter: void <init>(jdk.internal.org.objectweb.asm.ClassWriter,boolean,jdk.internal.org.objectweb.asm.ByteVector,jdk.internal.org.objectweb.asm.ByteVector,int)>($stack15, 1, $stack7, $stack7, $stack14);

        if l4 == 0 goto label1;

        $stack17 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter tanns>;

        $stack12.<jdk.internal.org.objectweb.asm.AnnotationWriter: jdk.internal.org.objectweb.asm.AnnotationWriter next> = $stack17;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter tanns> = $stack12;

        goto label2;

     label1:
        $stack16 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter itanns>;

        $stack12.<jdk.internal.org.objectweb.asm.AnnotationWriter: jdk.internal.org.objectweb.asm.AnnotationWriter next> = $stack16;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter itanns> = $stack12;

     label2:
        return $stack12;
    }

    public jdk.internal.org.objectweb.asm.AnnotationVisitor visitParameterAnnotation(int, java.lang.String, boolean)
    {
        jdk.internal.org.objectweb.asm.ByteVector $stack6, $stack11;
        java.lang.String l2, $stack7, $stack19, $stack34;
        boolean $stack8, l3;
        jdk.internal.org.objectweb.asm.MethodWriter l0;
        jdk.internal.org.objectweb.asm.ClassWriter $stack9, $stack14, $stack48;
        int $stack10, l1, $stack21, $stack36, $stack44, $stack45, $stack46;
        jdk.internal.org.objectweb.asm.AnnotationWriter $stack13, $stack17, $stack32, $stack47;
        jdk.internal.org.objectweb.asm.AnnotationWriter[] $stack15, $stack16, $stack18, $stack22, $stack30, $stack31, $stack33, $stack37;
        jdk.internal.org.objectweb.asm.Type[] $stack20, $stack35;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        l1 := @parameter0: int;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: boolean;

        $stack6 = new jdk.internal.org.objectweb.asm.ByteVector;

        specialinvoke $stack6.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        $stack7 = "Ljava/lang/Synthetic;";

        $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equals(java.lang.Object)>(l2);

        if $stack8 == 0 goto label1;

        $stack45 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int synthetics>;

        $stack44 = l1 + 1;

        $stack46 = staticinvoke <java.lang.Math: int max(int,int)>($stack45, $stack44);

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int synthetics> = $stack46;

        $stack47 = new jdk.internal.org.objectweb.asm.AnnotationWriter;

        $stack48 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        specialinvoke $stack47.<jdk.internal.org.objectweb.asm.AnnotationWriter: void <init>(jdk.internal.org.objectweb.asm.ClassWriter,boolean,jdk.internal.org.objectweb.asm.ByteVector,jdk.internal.org.objectweb.asm.ByteVector,int)>($stack48, 0, $stack6, null, 0);

        return $stack47;

     label1:
        $stack9 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack10 = virtualinvoke $stack9.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>(l2);

        $stack11 = virtualinvoke $stack6.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack10);

        virtualinvoke $stack11.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(0);

        $stack13 = new jdk.internal.org.objectweb.asm.AnnotationWriter;

        $stack14 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        specialinvoke $stack13.<jdk.internal.org.objectweb.asm.AnnotationWriter: void <init>(jdk.internal.org.objectweb.asm.ClassWriter,boolean,jdk.internal.org.objectweb.asm.ByteVector,jdk.internal.org.objectweb.asm.ByteVector,int)>($stack14, 1, $stack6, $stack6, 2);

        if l3 == 0 goto label3;

        $stack30 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] panns>;

        if $stack30 != null goto label2;

        $stack34 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String descriptor>;

        $stack35 = staticinvoke <jdk.internal.org.objectweb.asm.Type: jdk.internal.org.objectweb.asm.Type[] getArgumentTypes(java.lang.String)>($stack34);

        $stack36 = lengthof $stack35;

        $stack37 = newarray (jdk.internal.org.objectweb.asm.AnnotationWriter)[$stack36];

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] panns> = $stack37;

     label2:
        $stack31 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] panns>;

        $stack32 = $stack31[l1];

        $stack13.<jdk.internal.org.objectweb.asm.AnnotationWriter: jdk.internal.org.objectweb.asm.AnnotationWriter next> = $stack32;

        $stack33 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] panns>;

        $stack33[l1] = $stack13;

        goto label5;

     label3:
        $stack15 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] ipanns>;

        if $stack15 != null goto label4;

        $stack19 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String descriptor>;

        $stack20 = staticinvoke <jdk.internal.org.objectweb.asm.Type: jdk.internal.org.objectweb.asm.Type[] getArgumentTypes(java.lang.String)>($stack19);

        $stack21 = lengthof $stack20;

        $stack22 = newarray (jdk.internal.org.objectweb.asm.AnnotationWriter)[$stack21];

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] ipanns> = $stack22;

     label4:
        $stack16 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] ipanns>;

        $stack17 = $stack16[l1];

        $stack13.<jdk.internal.org.objectweb.asm.AnnotationWriter: jdk.internal.org.objectweb.asm.AnnotationWriter next> = $stack17;

        $stack18 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] ipanns>;

        $stack18[l1] = $stack13;

     label5:
        return $stack13;
    }

    public void visitAttribute(jdk.internal.org.objectweb.asm.Attribute)
    {
        jdk.internal.org.objectweb.asm.Attribute l1, $stack3, $stack4;
        boolean $stack2;
        jdk.internal.org.objectweb.asm.MethodWriter l0;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.Attribute;

        $stack2 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.Attribute: boolean isCodeAttribute()>();

        if $stack2 == 0 goto label1;

        $stack4 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Attribute cattrs>;

        l1.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next> = $stack4;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Attribute cattrs> = l1;

        goto label2;

     label1:
        $stack3 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Attribute attrs>;

        l1.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next> = $stack3;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Attribute attrs> = l1;

     label2:
        return;
    }

    public void visitCode()
    {
        jdk.internal.org.objectweb.asm.MethodWriter l0;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        return;
    }

    public void visitFrame(int, int, java.lang.Object[], int, java.lang.Object[])
    {
        jdk.internal.org.objectweb.asm.MethodWriter l0;
        int $stack8, l1, $stack11, $stack12, $stack13, l4, $stack27, l2, $stack48, $stack49, $stack50, $stack54, $stack55, $stack56, $stack81, $stack82, $stack87, $stack90, $stack94, $stack95, $stack98, $stack102, $stack103, $stack109, $stack110, $stack115, $stack118, $stack122, $stack123, $stack126, $stack130, $stack131, $stack137, $stack138, l6#1, l7#2, l7#7, l6#8, l7#9, l7#10, l7#11, $stack19#33, $stack20#53, $stack21#67, $stack22#90, $stack23#106, $stack25#130, $stack24#146, $stack26#154;
        jdk.internal.org.objectweb.asm.ByteVector $stack9, $stack10, $stack14, $stack15, $stack28, $stack43, $stack44, $stack46, $stack51, $stack52, $stack57, $stack58, $stack63, $stack64, $stack65, $stack67, $stack76, $stack77, $stack80, $stack18#26;
        java.lang.Object[] l5, l3;
        java.lang.Object $stack17, $stack60, $stack69, $stack72, $stack83, $stack85, $stack88, $stack99, $stack104, $stack111, $stack113, $stack116, $stack127, $stack132;
        java.lang.IllegalStateException $stack75;
        int[] $stack79, $stack92, $stack101, $stack107, $stack120, $stack129, $stack135;
        boolean $stack84, $stack86, $stack112, $stack114;
        jdk.internal.org.objectweb.asm.Label $stack89, $stack117;
        jdk.internal.org.objectweb.asm.ClassWriter $stack91, $stack106, $stack119, $stack134;
        java.lang.Integer $stack100, $stack128;
        java.lang.String $stack105, $stack133;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        l1 := @parameter0: int;

        l2 := @parameter1: int;

        l3 := @parameter2: java.lang.Object[];

        l4 := @parameter3: int;

        l5 := @parameter4: java.lang.Object[];

        $stack8 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack8 != 0 goto label01;

        return;

     label01:
        if l1 != -1 goto label13;

        $stack79 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] previousFrame>;

        if $stack79 != null goto label02;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: void visitImplicitFirstFrame()>();

     label02:
        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int currentLocals> = l2;

        $stack80 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack81 = $stack80.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack82 = specialinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: int startFrame(int,int,int)>($stack81, l2, l4);

        l6#1 = $stack82;

        l7#2 = 0;

     label03:
        if l7#2 >= l2 goto label07;

        $stack111 = l3[l7#2];

        $stack112 = $stack111 instanceof java.lang.String;

        if $stack112 == 0 goto label04;

        $stack135 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack131 = l6#1;

        l6#1 = l6#1 + 1;

        $stack134 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack132 = l3[l7#2];

        $stack133 = (java.lang.String) $stack132;

        $stack137 = virtualinvoke $stack134.<jdk.internal.org.objectweb.asm.ClassWriter: int addType(java.lang.String)>($stack133);

        $stack138 = 24117248 | $stack137;

        $stack135[$stack131] = $stack138;

        goto label06;

     label04:
        $stack113 = l3[l7#2];

        $stack114 = $stack113 instanceof java.lang.Integer;

        if $stack114 == 0 goto label05;

        $stack129 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack126 = l6#1;

        l6#1 = l6#1 + 1;

        $stack127 = l3[l7#2];

        $stack128 = (java.lang.Integer) $stack127;

        $stack130 = virtualinvoke $stack128.<java.lang.Integer: int intValue()>();

        $stack129[$stack126] = $stack130;

        goto label06;

     label05:
        $stack120 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack115 = l6#1;

        l6#1 = l6#1 + 1;

        $stack119 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack116 = l3[l7#2];

        $stack117 = (jdk.internal.org.objectweb.asm.Label) $stack116;

        $stack118 = $stack117.<jdk.internal.org.objectweb.asm.Label: int position>;

        $stack122 = virtualinvoke $stack119.<jdk.internal.org.objectweb.asm.ClassWriter: int addUninitializedType(java.lang.String,int)>("", $stack118);

        $stack123 = 25165824 | $stack122;

        $stack120[$stack115] = $stack123;

     label06:
        l7#2 = l7#2 + 1;

        goto label03;

     label07:
        l7#7 = 0;

     label08:
        if l7#7 >= l4 goto label12;

        $stack83 = l5[l7#7];

        $stack84 = $stack83 instanceof java.lang.String;

        if $stack84 == 0 goto label09;

        $stack107 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack103 = l6#1;

        l6#1 = l6#1 + 1;

        $stack106 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack104 = l5[l7#7];

        $stack105 = (java.lang.String) $stack104;

        $stack109 = virtualinvoke $stack106.<jdk.internal.org.objectweb.asm.ClassWriter: int addType(java.lang.String)>($stack105);

        $stack110 = 24117248 | $stack109;

        $stack107[$stack103] = $stack110;

        goto label11;

     label09:
        $stack85 = l5[l7#7];

        $stack86 = $stack85 instanceof java.lang.Integer;

        if $stack86 == 0 goto label10;

        $stack101 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack98 = l6#1;

        l6#1 = l6#1 + 1;

        $stack99 = l5[l7#7];

        $stack100 = (java.lang.Integer) $stack99;

        $stack102 = virtualinvoke $stack100.<java.lang.Integer: int intValue()>();

        $stack101[$stack98] = $stack102;

        goto label11;

     label10:
        $stack92 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack87 = l6#1;

        l6#1 = l6#1 + 1;

        $stack91 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack88 = l5[l7#7];

        $stack89 = (jdk.internal.org.objectweb.asm.Label) $stack88;

        $stack90 = $stack89.<jdk.internal.org.objectweb.asm.Label: int position>;

        $stack94 = virtualinvoke $stack91.<jdk.internal.org.objectweb.asm.ClassWriter: int addUninitializedType(java.lang.String,int)>("", $stack90);

        $stack95 = 25165824 | $stack94;

        $stack92[$stack87] = $stack95;

     label11:
        l7#7 = l7#7 + 1;

        goto label08;

     label12:
        specialinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: void endFrame()>();

        goto label32;

     label13:
        $stack9 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        if $stack9 != null goto label14;

        $stack76 = new jdk.internal.org.objectweb.asm.ByteVector;

        specialinvoke $stack76.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap> = $stack76;

        $stack77 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        l6#8 = $stack77.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        goto label16;

     label14:
        $stack10 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack12 = $stack10.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack11 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int previousFrameOffset>;

        $stack13 = $stack12 - $stack11;

        l6#8 = $stack13 - 1;

        if l6#8 >= 0 goto label16;

        if l1 != 3 goto label15;

        return;

     label15:
        $stack75 = new java.lang.IllegalStateException;

        specialinvoke $stack75.<java.lang.IllegalStateException: void <init>()>();

        throw $stack75;

     label16:
        tableswitch(l1)
        {
            case 0: goto label17;
            case 1: goto label22;
            case 2: goto label25;
            case 3: goto label26;
            case 4: goto label28;
            default: goto label31;
        };

     label17:
        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int currentLocals> = l2;

        $stack63 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack64 = virtualinvoke $stack63.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(255);

        $stack65 = virtualinvoke $stack64.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(l6#8);

        virtualinvoke $stack65.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(l2);

        l7#9 = 0;

     label18:
        if l7#9 >= l2 goto label19;

        $stack72 = l3[l7#9];

        specialinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: void writeFrameType(java.lang.Object)>($stack72);

        l7#9 = l7#9 + 1;

        goto label18;

     label19:
        $stack67 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        virtualinvoke $stack67.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(l4);

        l7#10 = 0;

     label20:
        if l7#10 >= l4 goto label21;

        $stack69 = l5[l7#10];

        specialinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: void writeFrameType(java.lang.Object)>($stack69);

        l7#10 = l7#10 + 1;

        goto label20;

     label21:
        goto label31;

     label22:
        $stack54 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int currentLocals>;

        $stack55 = $stack54 + l2;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int currentLocals> = $stack55;

        $stack57 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack56 = 251 + l2;

        $stack58 = virtualinvoke $stack57.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>($stack56);

        virtualinvoke $stack58.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(l6#8);

        l7#11 = 0;

     label23:
        if l7#11 >= l2 goto label24;

        $stack60 = l3[l7#11];

        specialinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: void writeFrameType(java.lang.Object)>($stack60);

        l7#11 = l7#11 + 1;

        goto label23;

     label24:
        goto label31;

     label25:
        $stack48 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int currentLocals>;

        $stack49 = $stack48 - l2;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int currentLocals> = $stack49;

        $stack51 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack50 = 251 - l2;

        $stack52 = virtualinvoke $stack51.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>($stack50);

        virtualinvoke $stack52.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(l6#8);

        goto label31;

     label26:
        if l6#8 >= 64 goto label27;

        $stack46 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        virtualinvoke $stack46.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(l6#8);

        goto label31;

     label27:
        $stack43 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack44 = virtualinvoke $stack43.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(251);

        virtualinvoke $stack44.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(l6#8);

        goto label31;

     label28:
        if l6#8 >= 64 goto label29;

        $stack28 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack27 = 64 + l6#8;

        virtualinvoke $stack28.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>($stack27);

        goto label30;

     label29:
        $stack14 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack15 = virtualinvoke $stack14.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(247);

        virtualinvoke $stack15.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(l6#8);

     label30:
        $stack17 = l5[0];

        specialinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: void writeFrameType(java.lang.Object)>($stack17);

     label31:
        $stack18#26 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack19#33 = $stack18#26.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int previousFrameOffset> = $stack19#33;

        $stack20#53 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int frameCount>;

        $stack21#67 = $stack20#53 + 1;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int frameCount> = $stack21#67;

     label32:
        $stack22#90 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStack>;

        $stack23#106 = staticinvoke <java.lang.Math: int max(int,int)>($stack22#90, l4);

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStack> = $stack23#106;

        $stack25#130 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxLocals>;

        $stack24#146 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int currentLocals>;

        $stack26#154 = staticinvoke <java.lang.Math: int max(int,int)>($stack25#130, $stack24#146);

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxLocals> = $stack26#154;

        return;
    }

    public void visitInsn(int)
    {
        jdk.internal.org.objectweb.asm.MethodWriter l0;
        jdk.internal.org.objectweb.asm.ByteVector $stack3, $stack5;
        int $stack4, l1, $stack8, $stack10, $stack11, l2, $stack12;
        jdk.internal.org.objectweb.asm.Label $stack7, $stack20;
        int[] $stack9;
        jdk.internal.org.objectweb.asm.Frame $stack21;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        l1 := @parameter0: int;

        $stack3 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack4 = $stack3.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int lastCodeOffset> = $stack4;

        $stack5 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        virtualinvoke $stack5.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(l1);

        $stack7 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        if $stack7 == null goto label6;

        $stack8 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack8 != 0 goto label1;

        $stack20 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack21 = $stack20.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        virtualinvoke $stack21.<jdk.internal.org.objectweb.asm.Frame: void execute(int,int,jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Item)>(l1, 0, null, null);

        goto label3;

     label1:
        $stack11 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        $stack9 = <jdk.internal.org.objectweb.asm.Frame: int[] SIZE>;

        $stack10 = $stack9[l1];

        l2 = $stack11 + $stack10;

        $stack12 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStackSize>;

        if l2 <= $stack12 goto label2;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStackSize> = l2;

     label2:
        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize> = l2;

     label3:
        if l1 < 172 goto label4;

        if l1 <= 177 goto label5;

     label4:
        if l1 != 191 goto label6;

     label5:
        specialinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: void noSuccessor()>();

     label6:
        return;
    }

    public void visitIntInsn(int, int)
    {
        jdk.internal.org.objectweb.asm.MethodWriter l0;
        jdk.internal.org.objectweb.asm.ByteVector $stack4, $stack7, $stack9;
        int $stack5, l1, l2, $stack11, $stack14, l3, $stack15;
        jdk.internal.org.objectweb.asm.Label $stack6, $stack18;
        jdk.internal.org.objectweb.asm.Frame $stack19;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        l1 := @parameter0: int;

        l2 := @parameter1: int;

        $stack4 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack5 = $stack4.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int lastCodeOffset> = $stack5;

        $stack6 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        if $stack6 == null goto label3;

        $stack11 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack11 != 0 goto label1;

        $stack18 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack19 = $stack18.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        virtualinvoke $stack19.<jdk.internal.org.objectweb.asm.Frame: void execute(int,int,jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Item)>(l1, l2, null, null);

        goto label3;

     label1:
        if l1 == 188 goto label3;

        $stack14 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        l3 = $stack14 + 1;

        $stack15 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStackSize>;

        if l3 <= $stack15 goto label2;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStackSize> = l3;

     label2:
        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize> = l3;

     label3:
        if l1 != 17 goto label4;

        $stack9 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        virtualinvoke $stack9.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put12(int,int)>(l1, l2);

        goto label5;

     label4:
        $stack7 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        virtualinvoke $stack7.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put11(int,int)>(l1, l2);

     label5:
        return;
    }

    public void visitVarInsn(int, int)
    {
        jdk.internal.org.objectweb.asm.MethodWriter l0;
        jdk.internal.org.objectweb.asm.ByteVector $stack4, $stack8, $stack13, $stack14, $stack23;
        int $stack5, l2, l1, $stack10, $stack11, $stack20, $stack21, $stack22, $stack25, $stack26, $stack27, $stack30, $stack38, $stack40, $stack41, $stack42, $stack48, $stack49, $stack50, l3#1, $stack7#6, $stack35#20, l3#23, l3#28;
        jdk.internal.org.objectweb.asm.Label $stack6, $stack12, $stack47, $stack51, $stack52;
        int[] $stack39;
        jdk.internal.org.objectweb.asm.Frame $stack53;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        l1 := @parameter0: int;

        l2 := @parameter1: int;

        $stack4 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack5 = $stack4.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int lastCodeOffset> = $stack5;

        $stack6 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        if $stack6 == null goto label04;

        $stack38 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack38 != 0 goto label01;

        $stack52 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack53 = $stack52.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        virtualinvoke $stack53.<jdk.internal.org.objectweb.asm.Frame: void execute(int,int,jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Item)>(l1, l2, null, null);

        goto label04;

     label01:
        if l1 != 169 goto label02;

        $stack47 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack48 = $stack47.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack49 = $stack48 | 256;

        $stack47.<jdk.internal.org.objectweb.asm.Label: int status> = $stack49;

        $stack51 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack50 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        $stack51.<jdk.internal.org.objectweb.asm.Label: int inputStackTop> = $stack50;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: void noSuccessor()>();

        goto label04;

     label02:
        $stack41 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        $stack39 = <jdk.internal.org.objectweb.asm.Frame: int[] SIZE>;

        $stack40 = $stack39[l1];

        l3#1 = $stack41 + $stack40;

        $stack42 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStackSize>;

        if l3#1 <= $stack42 goto label03;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStackSize> = l3#1;

     label03:
        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize> = l3#1;

     label04:
        $stack7#6 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack7#6 == 2 goto label08;

        if l1 == 22 goto label05;

        if l1 == 24 goto label05;

        if l1 == 55 goto label05;

        if l1 != 57 goto label06;

     label05:
        $stack35#20 = l2 + 2;

        l3#23 = $stack35#20;

        goto label07;

     label06:
        l3#23 = l2 + 1;

     label07:
        $stack30 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxLocals>;

        if l3#23 <= $stack30 goto label08;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxLocals> = l3#23;

     label08:
        if l2 >= 4 goto label11;

        if l1 == 169 goto label11;

        if l1 >= 54 goto label09;

        $stack25 = l1 - 21;

        $stack26 = $stack25 << 2;

        $stack27 = 26 + $stack26;

        l3#28 = $stack27 + l2;

        goto label10;

     label09:
        $stack20 = l1 - 54;

        $stack21 = $stack20 << 2;

        $stack22 = 59 + $stack21;

        l3#28 = $stack22 + l2;

     label10:
        $stack23 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        virtualinvoke $stack23.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(l3#28);

        goto label13;

     label11:
        if l2 < 256 goto label12;

        $stack13 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack14 = virtualinvoke $stack13.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(196);

        virtualinvoke $stack14.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put12(int,int)>(l1, l2);

        goto label13;

     label12:
        $stack8 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        virtualinvoke $stack8.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put11(int,int)>(l1, l2);

     label13:
        if l1 < 54 goto label14;

        $stack10 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack10 != 0 goto label14;

        $stack11 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int handlerCount>;

        if $stack11 <= 0 goto label14;

        $stack12 = new jdk.internal.org.objectweb.asm.Label;

        specialinvoke $stack12.<jdk.internal.org.objectweb.asm.Label: void <init>()>();

        virtualinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: void visitLabel(jdk.internal.org.objectweb.asm.Label)>($stack12);

     label14:
        return;
    }

    public void visitTypeInsn(int, java.lang.String)
    {
        jdk.internal.org.objectweb.asm.MethodWriter l0;
        jdk.internal.org.objectweb.asm.ByteVector $stack5, $stack22, $stack11#5;
        int $stack6, l1, $stack13, $stack17, l4, $stack18, $stack24, $stack10#17;
        java.lang.String l2;
        jdk.internal.org.objectweb.asm.ClassWriter $stack7, $stack23;
        jdk.internal.org.objectweb.asm.Item $stack8;
        jdk.internal.org.objectweb.asm.Label $stack9, $stack21;
        jdk.internal.org.objectweb.asm.Frame $stack25;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        l1 := @parameter0: int;

        l2 := @parameter1: java.lang.String;

        $stack5 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack6 = $stack5.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int lastCodeOffset> = $stack6;

        $stack7 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack8 = virtualinvoke $stack7.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item newClassItem(java.lang.String)>(l2);

        $stack9 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        if $stack9 == null goto label3;

        $stack13 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack13 != 0 goto label1;

        $stack21 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack25 = $stack21.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        $stack22 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack24 = $stack22.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack23 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        virtualinvoke $stack25.<jdk.internal.org.objectweb.asm.Frame: void execute(int,int,jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Item)>(l1, $stack24, $stack23, $stack8);

        goto label3;

     label1:
        if l1 != 187 goto label3;

        $stack17 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        l4 = $stack17 + 1;

        $stack18 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStackSize>;

        if l4 <= $stack18 goto label2;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStackSize> = l4;

     label2:
        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize> = l4;

     label3:
        $stack11#5 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack10#17 = $stack8.<jdk.internal.org.objectweb.asm.Item: int index>;

        virtualinvoke $stack11#5.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put12(int,int)>(l1, $stack10#17);

        return;
    }

    public void visitFieldInsn(int, java.lang.String, java.lang.String, java.lang.String)
    {
        jdk.internal.org.objectweb.asm.MethodWriter l0;
        jdk.internal.org.objectweb.asm.ByteVector $stack8, $stack14#21;
        int $stack9, l1, $stack16, $stack18, $stack26, $stack27, $stack31, $stack32, $stack34, $stack35, $stack37, l6#2, $stack19#14, $stack13#30;
        java.lang.String l2, l3, l4;
        jdk.internal.org.objectweb.asm.ClassWriter $stack10, $stack39;
        jdk.internal.org.objectweb.asm.Item $stack11;
        jdk.internal.org.objectweb.asm.Label $stack12, $stack38;
        char $stack17;
        jdk.internal.org.objectweb.asm.Frame $stack40;
        byte $stack33#1, $stack30#3, $stack25#4, $stack36#5;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        l1 := @parameter0: int;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: java.lang.String;

        l4 := @parameter3: java.lang.String;

        $stack8 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack9 = $stack8.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int lastCodeOffset> = $stack9;

        $stack10 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack11 = virtualinvoke $stack10.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item newFieldItem(java.lang.String,java.lang.String,java.lang.String)>(l2, l3, l4);

        $stack12 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        if $stack12 == null goto label20;

        $stack16 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack16 != 0 goto label01;

        $stack38 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack40 = $stack38.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        $stack39 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        virtualinvoke $stack40.<jdk.internal.org.objectweb.asm.Frame: void execute(int,int,jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Item)>(l1, 0, $stack39, $stack11);

        goto label20;

     label01:
        $stack17 = virtualinvoke l4.<java.lang.String: char charAt(int)>(0);

        tableswitch(l1)
        {
            case 178: goto label02;
            case 179: goto label06;
            case 180: goto label10;
            default: goto label14;
        };

     label02:
        $stack32 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        if $stack17 == 68 goto label03;

        if $stack17 != 74 goto label04;

     label03:
        $stack33#1 = 2;

        goto label05;

     label04:
        $stack33#1 = 1;

     label05:
        $stack34 = $stack32 + $stack33#1;

        l6#2 = $stack34;

        goto label18;

     label06:
        $stack27 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        if $stack17 == 68 goto label07;

        if $stack17 != 74 goto label08;

     label07:
        $stack30#3 = -2;

        goto label09;

     label08:
        $stack30#3 = -1;

     label09:
        $stack31 = $stack27 + $stack30#3;

        l6#2 = $stack31;

        goto label18;

     label10:
        $stack18 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        if $stack17 == 68 goto label11;

        if $stack17 != 74 goto label12;

     label11:
        $stack25#4 = 1;

        goto label13;

     label12:
        $stack25#4 = 0;

     label13:
        $stack26 = $stack18 + $stack25#4;

        l6#2 = $stack26;

        goto label18;

     label14:
        $stack35 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        if $stack17 == 68 goto label15;

        if $stack17 != 74 goto label16;

     label15:
        $stack36#5 = -3;

        goto label17;

     label16:
        $stack36#5 = -2;

     label17:
        $stack37 = $stack35 + $stack36#5;

        l6#2 = $stack37;

     label18:
        $stack19#14 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStackSize>;

        if l6#2 <= $stack19#14 goto label19;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStackSize> = l6#2;

     label19:
        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize> = l6#2;

     label20:
        $stack14#21 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack13#30 = $stack11.<jdk.internal.org.objectweb.asm.Item: int index>;

        virtualinvoke $stack14#21.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put12(int,int)>(l1, $stack13#30);

        return;
    }

    public void visitMethodInsn(int, java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        jdk.internal.org.objectweb.asm.MethodWriter l0;
        jdk.internal.org.objectweb.asm.ByteVector $stack9, $stack15, $stack18, $stack19;
        int $stack10, l1, $stack14, $stack17, $stack20, $stack22, $stack29, $stack30, $stack31, $stack32, $stack33, $stack34, $stack39, $stack40, $stack41, $stack42, $stack43, $stack46, l7#1, l8#2;
        java.lang.String l2, l3, l4;
        boolean l5;
        jdk.internal.org.objectweb.asm.ClassWriter $stack11, $stack50;
        jdk.internal.org.objectweb.asm.Item $stack12;
        jdk.internal.org.objectweb.asm.Label $stack13, $stack49;
        jdk.internal.org.objectweb.asm.Frame $stack51;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        l1 := @parameter0: int;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: java.lang.String;

        l4 := @parameter3: java.lang.String;

        l5 := @parameter4: boolean;

        $stack9 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack10 = $stack9.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int lastCodeOffset> = $stack10;

        $stack11 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack12 = virtualinvoke $stack11.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item newMethodItem(java.lang.String,java.lang.String,java.lang.String,boolean)>(l2, l3, l4, l5);

        l7#1 = $stack12.<jdk.internal.org.objectweb.asm.Item: int intVal>;

        $stack13 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        if $stack13 == null goto label6;

        $stack29 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack29 != 0 goto label1;

        $stack49 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack51 = $stack49.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        $stack50 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        virtualinvoke $stack51.<jdk.internal.org.objectweb.asm.Frame: void execute(int,int,jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Item)>(l1, 0, $stack50, $stack12);

        goto label6;

     label1:
        if l7#1 != 0 goto label2;

        $stack46 = staticinvoke <jdk.internal.org.objectweb.asm.Type: int getArgumentsAndReturnSizes(java.lang.String)>(l4);

        l7#1 = $stack46;

        $stack12.<jdk.internal.org.objectweb.asm.Item: int intVal> = $stack46;

     label2:
        if l1 != 184 goto label3;

        $stack40 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        $stack39 = l7#1 >> 2;

        $stack42 = $stack40 - $stack39;

        $stack41 = l7#1 & 3;

        $stack43 = $stack42 + $stack41;

        l8#2 = $stack43 + 1;

        goto label4;

     label3:
        $stack31 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        $stack30 = l7#1 >> 2;

        $stack33 = $stack31 - $stack30;

        $stack32 = l7#1 & 3;

        l8#2 = $stack33 + $stack32;

     label4:
        $stack34 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStackSize>;

        if l8#2 <= $stack34 goto label5;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStackSize> = l8#2;

     label5:
        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize> = l8#2;

     label6:
        if l1 != 185 goto label8;

        if l7#1 != 0 goto label7;

        $stack22 = staticinvoke <jdk.internal.org.objectweb.asm.Type: int getArgumentsAndReturnSizes(java.lang.String)>(l4);

        l7#1 = $stack22;

        $stack12.<jdk.internal.org.objectweb.asm.Item: int intVal> = $stack22;

     label7:
        $stack18 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack17 = $stack12.<jdk.internal.org.objectweb.asm.Item: int index>;

        $stack19 = virtualinvoke $stack18.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put12(int,int)>(185, $stack17);

        $stack20 = l7#1 >> 2;

        virtualinvoke $stack19.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put11(int,int)>($stack20, 0);

        goto label9;

     label8:
        $stack15 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack14 = $stack12.<jdk.internal.org.objectweb.asm.Item: int index>;

        virtualinvoke $stack15.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put12(int,int)>(l1, $stack14);

     label9:
        return;
    }

    public transient void visitInvokeDynamicInsn(java.lang.String, java.lang.String, jdk.internal.org.objectweb.asm.Handle, java.lang.Object[])
    {
        jdk.internal.org.objectweb.asm.MethodWriter l0;
        jdk.internal.org.objectweb.asm.ByteVector $stack8, $stack14#5, $stack16#20;
        int $stack9, $stack18, $stack19, $stack20, $stack21, $stack22, $stack23, $stack24, $stack32, $stack39, l6#1, $stack13#14;
        java.lang.String l1, l2;
        jdk.internal.org.objectweb.asm.Handle l3;
        java.lang.Object[] l4;
        jdk.internal.org.objectweb.asm.ClassWriter $stack10, $stack43;
        jdk.internal.org.objectweb.asm.Item $stack11;
        jdk.internal.org.objectweb.asm.Label $stack12, $stack42;
        jdk.internal.org.objectweb.asm.Frame $stack44;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: jdk.internal.org.objectweb.asm.Handle;

        l4 := @parameter3: java.lang.Object[];

        $stack8 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack9 = $stack8.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int lastCodeOffset> = $stack9;

        $stack10 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack11 = virtualinvoke $stack10.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item newInvokeDynamicItem(java.lang.String,java.lang.String,jdk.internal.org.objectweb.asm.Handle,java.lang.Object[])>(l1, l2, l3, l4);

        l6#1 = $stack11.<jdk.internal.org.objectweb.asm.Item: int intVal>;

        $stack12 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        if $stack12 == null goto label4;

        $stack18 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack18 != 0 goto label1;

        $stack42 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack44 = $stack42.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        $stack43 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        virtualinvoke $stack44.<jdk.internal.org.objectweb.asm.Frame: void execute(int,int,jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Item)>(186, 0, $stack43, $stack11);

        goto label4;

     label1:
        if l6#1 != 0 goto label2;

        $stack32 = staticinvoke <jdk.internal.org.objectweb.asm.Type: int getArgumentsAndReturnSizes(java.lang.String)>(l2);

        l6#1 = $stack32;

        $stack11.<jdk.internal.org.objectweb.asm.Item: int intVal> = $stack32;

     label2:
        $stack20 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        $stack19 = l6#1 >> 2;

        $stack22 = $stack20 - $stack19;

        $stack21 = l6#1 & 3;

        $stack23 = $stack22 + $stack21;

        $stack39 = $stack23 + 1;

        $stack24 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStackSize>;

        if $stack39 <= $stack24 goto label3;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStackSize> = $stack39;

     label3:
        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize> = $stack39;

     label4:
        $stack14#5 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack13#14 = $stack11.<jdk.internal.org.objectweb.asm.Item: int index>;

        virtualinvoke $stack14#5.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put12(int,int)>(186, $stack13#14);

        $stack16#20 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        virtualinvoke $stack16#20.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(0);

        return;
    }

    public void visitJumpInsn(int, jdk.internal.org.objectweb.asm.Label)
    {
        jdk.internal.org.objectweb.asm.MethodWriter l0;
        jdk.internal.org.objectweb.asm.ByteVector $stack4, $stack9, $stack11, $stack14, $stack18, $stack32, $stack34, $stack36, $stack59, $stack61, $stack41#28, $stack38#34;
        int $stack5, l1, $stack12, $stack13, $stack19, $stack20, $stack21, $stack42, $stack43, $stack54, $stack55, $stack63, $stack65, $stack66, $stack67, $stack68, $stack71, $stack72, $stack74, $stack75, $stack76, $stack77, $stack79, $stack80, $stack81, $stack82, $stack92, $stack93, $stack7#6, $stack8#14, $stack31#18, $stack39#37, $stack40#43;
        jdk.internal.org.objectweb.asm.Label $stack6, l2, $stack73, $stack78, $stack89, $stack91, $stack94, l3#1, $stack15#51;
        int[] $stack64;
        jdk.internal.org.objectweb.asm.Frame $stack90;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        l1 := @parameter0: int;

        l2 := @parameter1: jdk.internal.org.objectweb.asm.Label;

        $stack4 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack5 = $stack4.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int lastCodeOffset> = $stack5;

        l3#1 = null;

        $stack6 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        if $stack6 == null goto label04;

        $stack63 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack63 != 0 goto label01;

        $stack89 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack90 = $stack89.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        virtualinvoke $stack90.<jdk.internal.org.objectweb.asm.Frame: void execute(int,int,jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Item)>(l1, 0, null, null);

        $stack91 = virtualinvoke l2.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label getFirst()>();

        $stack92 = $stack91.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack93 = $stack92 | 16;

        $stack91.<jdk.internal.org.objectweb.asm.Label: int status> = $stack93;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: void addSuccessor(int,jdk.internal.org.objectweb.asm.Label)>(0, l2);

        if l1 == 167 goto label04;

        $stack94 = new jdk.internal.org.objectweb.asm.Label;

        specialinvoke $stack94.<jdk.internal.org.objectweb.asm.Label: void <init>()>();

        l3#1 = $stack94;

        goto label04;

     label01:
        if l1 != 168 goto label03;

        $stack71 = l2.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack72 = $stack71 & 512;

        if $stack72 != 0 goto label02;

        $stack79 = l2.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack80 = $stack79 | 512;

        l2.<jdk.internal.org.objectweb.asm.Label: int status> = $stack80;

        $stack81 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int subroutines>;

        $stack82 = $stack81 + 1;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int subroutines> = $stack82;

     label02:
        $stack73 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack74 = $stack73.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack75 = $stack74 | 128;

        $stack73.<jdk.internal.org.objectweb.asm.Label: int status> = $stack75;

        $stack76 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        $stack77 = $stack76 + 1;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: void addSuccessor(int,jdk.internal.org.objectweb.asm.Label)>($stack77, l2);

        $stack78 = new jdk.internal.org.objectweb.asm.Label;

        specialinvoke $stack78.<jdk.internal.org.objectweb.asm.Label: void <init>()>();

        l3#1 = $stack78;

        goto label04;

     label03:
        $stack66 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        $stack64 = <jdk.internal.org.objectweb.asm.Frame: int[] SIZE>;

        $stack65 = $stack64[l1];

        $stack67 = $stack66 + $stack65;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize> = $stack67;

        $stack68 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: void addSuccessor(int,jdk.internal.org.objectweb.asm.Label)>($stack68, l2);

     label04:
        $stack7#6 = l2.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack8#14 = $stack7#6 & 2;

        if $stack8#14 == 0 goto label11;

        $stack20 = l2.<jdk.internal.org.objectweb.asm.Label: int position>;

        $stack18 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack19 = $stack18.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack21 = $stack20 - $stack19;

        if $stack21 >= -32768 goto label11;

        if l1 != 167 goto label05;

        $stack61 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        virtualinvoke $stack61.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(200);

        goto label10;

     label05:
        if l1 != 168 goto label06;

        $stack59 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        virtualinvoke $stack59.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(201);

        goto label10;

     label06:
        if l3#1 == null goto label07;

        $stack54 = l3#1.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack55 = $stack54 | 16;

        l3#1.<jdk.internal.org.objectweb.asm.Label: int status> = $stack55;

     label07:
        $stack32 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        if l1 > 166 goto label08;

        $stack42 = l1 + 1;

        $stack43 = $stack42 ^ 1;

        $stack31#18 = $stack43 - 1;

        goto label09;

     label08:
        $stack31#18 = l1 ^ 1;

     label09:
        virtualinvoke $stack32.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>($stack31#18);

        $stack34 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        virtualinvoke $stack34.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(8);

        $stack36 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        virtualinvoke $stack36.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(200);

     label10:
        $stack41#28 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack38#34 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack39#37 = $stack38#34.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack40#43 = $stack39#37 - 1;

        virtualinvoke l2.<jdk.internal.org.objectweb.asm.Label: void put(jdk.internal.org.objectweb.asm.MethodWriter,jdk.internal.org.objectweb.asm.ByteVector,int,boolean)>(l0, $stack41#28, $stack40#43, 1);

        goto label12;

     label11:
        $stack9 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        virtualinvoke $stack9.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(l1);

        $stack14 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack11 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack12 = $stack11.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack13 = $stack12 - 1;

        virtualinvoke l2.<jdk.internal.org.objectweb.asm.Label: void put(jdk.internal.org.objectweb.asm.MethodWriter,jdk.internal.org.objectweb.asm.ByteVector,int,boolean)>(l0, $stack14, $stack13, 0);

     label12:
        $stack15#51 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        if $stack15#51 == null goto label14;

        if l3#1 == null goto label13;

        virtualinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: void visitLabel(jdk.internal.org.objectweb.asm.Label)>(l3#1);

     label13:
        if l1 != 167 goto label14;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: void noSuccessor()>();

     label14:
        return;
    }

    public void visitLabel(jdk.internal.org.objectweb.asm.Label)
    {
        jdk.internal.org.objectweb.asm.MethodWriter l0;
        jdk.internal.org.objectweb.asm.Label l1, $stack13, $stack14, $stack15, $stack19, $stack28, $stack30, $stack31, $stack34, $stack37, $stack42, $stack44, $stack48, $stack54, $stack59;
        jdk.internal.org.objectweb.asm.ByteVector $stack2, $stack3;
        byte[] $stack4;
        int $stack5, $stack9, $stack10, $stack11, $stack12, $stack18, $stack20, $stack32, $stack33, $stack38, $stack39, $stack40, $stack41, $stack49, $stack50, $stack55, $stack56, $stack57, $stack58;
        boolean $stack6, $stack7, $stack8;
        jdk.internal.org.objectweb.asm.Frame $stack29, $stack43, $stack45, $stack46, $stack60;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.Label;

        $stack6 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: boolean resize>;

        $stack2 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack5 = $stack2.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack3 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack4 = $stack3.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        $stack7 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.Label: boolean resolve(jdk.internal.org.objectweb.asm.MethodWriter,int,byte[])>(l0, $stack5, $stack4);

        $stack8 = $stack6 | $stack7;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: boolean resize> = $stack8;

        $stack9 = l1.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack10 = $stack9 & 1;

        if $stack10 == 0 goto label01;

        return;

     label01:
        $stack11 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack11 != 0 goto label07;

        $stack28 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        if $stack28 == null goto label03;

        $stack50 = l1.<jdk.internal.org.objectweb.asm.Label: int position>;

        $stack48 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack49 = $stack48.<jdk.internal.org.objectweb.asm.Label: int position>;

        if $stack50 != $stack49 goto label02;

        $stack54 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack57 = $stack54.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack55 = l1.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack56 = $stack55 & 16;

        $stack58 = $stack57 | $stack56;

        $stack54.<jdk.internal.org.objectweb.asm.Label: int status> = $stack58;

        $stack59 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack60 = $stack59.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        l1.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame> = $stack60;

        return;

     label02:
        specialinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: void addSuccessor(int,jdk.internal.org.objectweb.asm.Label)>(0, l1);

     label03:
        l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock> = l1;

        $stack29 = l1.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        if $stack29 != null goto label04;

        $stack45 = new jdk.internal.org.objectweb.asm.Frame;

        specialinvoke $stack45.<jdk.internal.org.objectweb.asm.Frame: void <init>()>();

        l1.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame> = $stack45;

        $stack46 = l1.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        $stack46.<jdk.internal.org.objectweb.asm.Frame: jdk.internal.org.objectweb.asm.Label owner> = l1;

     label04:
        $stack30 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label previousBlock>;

        if $stack30 == null goto label06;

        $stack33 = l1.<jdk.internal.org.objectweb.asm.Label: int position>;

        $stack31 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label previousBlock>;

        $stack32 = $stack31.<jdk.internal.org.objectweb.asm.Label: int position>;

        if $stack33 != $stack32 goto label05;

        $stack37 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label previousBlock>;

        $stack40 = $stack37.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack38 = l1.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack39 = $stack38 & 16;

        $stack41 = $stack40 | $stack39;

        $stack37.<jdk.internal.org.objectweb.asm.Label: int status> = $stack41;

        $stack42 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label previousBlock>;

        $stack43 = $stack42.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        l1.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame> = $stack43;

        $stack44 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label previousBlock>;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock> = $stack44;

        return;

     label05:
        $stack34 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label previousBlock>;

        $stack34.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label successor> = l1;

     label06:
        l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label previousBlock> = l1;

        goto label10;

     label07:
        $stack12 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack12 != 1 goto label10;

        $stack13 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        if $stack13 == null goto label08;

        $stack19 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack18 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStackSize>;

        $stack19.<jdk.internal.org.objectweb.asm.Label: int outputStackMax> = $stack18;

        $stack20 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: void addSuccessor(int,jdk.internal.org.objectweb.asm.Label)>($stack20, l1);

     label08:
        l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock> = l1;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize> = 0;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStackSize> = 0;

        $stack14 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label previousBlock>;

        if $stack14 == null goto label09;

        $stack15 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label previousBlock>;

        $stack15.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label successor> = l1;

     label09:
        l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label previousBlock> = l1;

     label10:
        return;
    }

    public void visitLdcInsn(java.lang.Object)
    {
        jdk.internal.org.objectweb.asm.MethodWriter l0;
        jdk.internal.org.objectweb.asm.ByteVector $stack4, $stack10, $stack13, $stack15;
        int $stack5, $stack12, $stack20, $stack21, $stack22, $stack23, $stack30, $stack31, $stack36, l3#1, $stack25#5, $stack9#12;
        java.lang.Object l1;
        jdk.internal.org.objectweb.asm.ClassWriter $stack6, $stack38;
        jdk.internal.org.objectweb.asm.Item $stack7;
        jdk.internal.org.objectweb.asm.Label $stack8, $stack37;
        jdk.internal.org.objectweb.asm.Frame $stack39;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        l1 := @parameter0: java.lang.Object;

        $stack4 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack5 = $stack4.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int lastCodeOffset> = $stack5;

        $stack6 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack7 = virtualinvoke $stack6.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item newConstItem(java.lang.Object)>(l1);

        $stack8 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        if $stack8 == null goto label06;

        $stack20 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack20 != 0 goto label01;

        $stack37 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack39 = $stack37.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        $stack38 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        virtualinvoke $stack39.<jdk.internal.org.objectweb.asm.Frame: void execute(int,int,jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Item)>(18, 0, $stack38, $stack7);

        goto label06;

     label01:
        $stack21 = $stack7.<jdk.internal.org.objectweb.asm.Item: int type>;

        if $stack21 == 5 goto label02;

        $stack30 = $stack7.<jdk.internal.org.objectweb.asm.Item: int type>;

        if $stack30 != 6 goto label03;

     label02:
        $stack22 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        $stack36 = $stack22 + 2;

        l3#1 = $stack36;

        goto label04;

     label03:
        $stack31 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        l3#1 = $stack31 + 1;

     label04:
        $stack23 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStackSize>;

        if l3#1 <= $stack23 goto label05;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStackSize> = l3#1;

     label05:
        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize> = l3#1;

     label06:
        $stack25#5 = $stack7.<jdk.internal.org.objectweb.asm.Item: int index>;

        $stack9#12 = $stack7.<jdk.internal.org.objectweb.asm.Item: int type>;

        if $stack9#12 == 5 goto label07;

        $stack12 = $stack7.<jdk.internal.org.objectweb.asm.Item: int type>;

        if $stack12 != 6 goto label08;

     label07:
        $stack10 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        virtualinvoke $stack10.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put12(int,int)>(20, $stack25#5);

        goto label10;

     label08:
        if $stack25#5 < 256 goto label09;

        $stack15 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        virtualinvoke $stack15.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put12(int,int)>(19, $stack25#5);

        goto label10;

     label09:
        $stack13 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        virtualinvoke $stack13.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put11(int,int)>(18, $stack25#5);

     label10:
        return;
    }

    public void visitIincInsn(int, int)
    {
        jdk.internal.org.objectweb.asm.MethodWriter l0;
        jdk.internal.org.objectweb.asm.ByteVector $stack4, $stack17, $stack18, $stack8#13, $stack9#17, $stack10#23;
        int $stack5, l1, l2, l3, $stack20, $stack23, $stack7#3;
        jdk.internal.org.objectweb.asm.Label $stack6, $stack26;
        jdk.internal.org.objectweb.asm.Frame $stack27;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        l1 := @parameter0: int;

        l2 := @parameter1: int;

        $stack4 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack5 = $stack4.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int lastCodeOffset> = $stack5;

        $stack6 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        if $stack6 == null goto label1;

        $stack23 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack23 != 0 goto label1;

        $stack26 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack27 = $stack26.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        virtualinvoke $stack27.<jdk.internal.org.objectweb.asm.Frame: void execute(int,int,jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Item)>(132, l1, null, null);

     label1:
        $stack7#3 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack7#3 == 2 goto label2;

        l3 = l1 + 1;

        $stack20 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxLocals>;

        if l3 <= $stack20 goto label2;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxLocals> = l3;

     label2:
        if l1 > 255 goto label3;

        if l2 > 127 goto label3;

        if l2 >= -128 goto label4;

     label3:
        $stack8#13 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack9#17 = virtualinvoke $stack8#13.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(196);

        $stack10#23 = virtualinvoke $stack9#17.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put12(int,int)>(132, l1);

        virtualinvoke $stack10#23.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(l2);

        goto label5;

     label4:
        $stack17 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack18 = virtualinvoke $stack17.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(132);

        virtualinvoke $stack18.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put11(int,int)>(l1, l2);

     label5:
        return;
    }

    public transient void visitTableSwitchInsn(int, int, jdk.internal.org.objectweb.asm.Label, jdk.internal.org.objectweb.asm.Label[])
    {
        jdk.internal.org.objectweb.asm.MethodWriter l0;
        jdk.internal.org.objectweb.asm.ByteVector $stack7, $stack9, $stack10, $stack12, $stack17, $stack19, $stack20, $stack21, $stack24;
        int $stack8, l5, $stack13, $stack14, $stack15, $stack16, l1, l2, $stack23, l6#1;
        jdk.internal.org.objectweb.asm.Label l3, $stack25;
        jdk.internal.org.objectweb.asm.Label[] l4;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        l1 := @parameter0: int;

        l2 := @parameter1: int;

        l3 := @parameter2: jdk.internal.org.objectweb.asm.Label;

        l4 := @parameter3: jdk.internal.org.objectweb.asm.Label[];

        $stack7 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack8 = $stack7.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int lastCodeOffset> = $stack8;

        $stack9 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        l5 = $stack9.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack10 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        virtualinvoke $stack10.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(170);

        $stack17 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack12 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack13 = $stack12.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack14 = $stack13 % 4;

        $stack15 = 4 - $stack14;

        $stack16 = $stack15 % 4;

        virtualinvoke $stack17.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>(null, 0, $stack16);

        $stack19 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        virtualinvoke l3.<jdk.internal.org.objectweb.asm.Label: void put(jdk.internal.org.objectweb.asm.MethodWriter,jdk.internal.org.objectweb.asm.ByteVector,int,boolean)>(l0, $stack19, l5, 1);

        $stack20 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack21 = virtualinvoke $stack20.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>(l1);

        virtualinvoke $stack21.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>(l2);

        l6#1 = 0;

     label1:
        $stack23 = lengthof l4;

        if l6#1 >= $stack23 goto label2;

        $stack25 = l4[l6#1];

        $stack24 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        virtualinvoke $stack25.<jdk.internal.org.objectweb.asm.Label: void put(jdk.internal.org.objectweb.asm.MethodWriter,jdk.internal.org.objectweb.asm.ByteVector,int,boolean)>(l0, $stack24, l5, 1);

        l6#1 = l6#1 + 1;

        goto label1;

     label2:
        specialinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: void visitSwitchInsn(jdk.internal.org.objectweb.asm.Label,jdk.internal.org.objectweb.asm.Label[])>(l3, l4);

        return;
    }

    public void visitLookupSwitchInsn(jdk.internal.org.objectweb.asm.Label, int[], jdk.internal.org.objectweb.asm.Label[])
    {
        jdk.internal.org.objectweb.asm.MethodWriter l0;
        jdk.internal.org.objectweb.asm.ByteVector $stack6, $stack8, $stack9, $stack11, $stack16, $stack18, $stack20, $stack24, $stack26;
        int $stack7, l4, $stack12, $stack13, $stack14, $stack15, $stack19, $stack22, $stack23, l5#1;
        jdk.internal.org.objectweb.asm.Label l1, $stack27;
        jdk.internal.org.objectweb.asm.Label[] l3;
        int[] l2;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.Label;

        l2 := @parameter1: int[];

        l3 := @parameter2: jdk.internal.org.objectweb.asm.Label[];

        $stack6 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack7 = $stack6.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int lastCodeOffset> = $stack7;

        $stack8 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        l4 = $stack8.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack9 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        virtualinvoke $stack9.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(171);

        $stack16 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack11 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack12 = $stack11.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack13 = $stack12 % 4;

        $stack14 = 4 - $stack13;

        $stack15 = $stack14 % 4;

        virtualinvoke $stack16.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>(null, 0, $stack15);

        $stack18 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.Label: void put(jdk.internal.org.objectweb.asm.MethodWriter,jdk.internal.org.objectweb.asm.ByteVector,int,boolean)>(l0, $stack18, l4, 1);

        $stack20 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack19 = lengthof l3;

        virtualinvoke $stack20.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>($stack19);

        l5#1 = 0;

     label1:
        $stack22 = lengthof l3;

        if l5#1 >= $stack22 goto label2;

        $stack24 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack23 = l2[l5#1];

        virtualinvoke $stack24.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>($stack23);

        $stack27 = l3[l5#1];

        $stack26 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        virtualinvoke $stack27.<jdk.internal.org.objectweb.asm.Label: void put(jdk.internal.org.objectweb.asm.MethodWriter,jdk.internal.org.objectweb.asm.ByteVector,int,boolean)>(l0, $stack26, l4, 1);

        l5#1 = l5#1 + 1;

        goto label1;

     label2:
        specialinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: void visitSwitchInsn(jdk.internal.org.objectweb.asm.Label,jdk.internal.org.objectweb.asm.Label[])>(l1, l3);

        return;
    }

    private void visitSwitchInsn(jdk.internal.org.objectweb.asm.Label, jdk.internal.org.objectweb.asm.Label[])
    {
        jdk.internal.org.objectweb.asm.MethodWriter l0;
        jdk.internal.org.objectweb.asm.Label $stack4, l1, $stack10, $stack14, $stack16, $stack21, $stack22, $stack23;
        int $stack5, $stack6, $stack7, $stack8, $stack9, $stack11, $stack17, $stack18, $stack19, $stack24, $stack25, l3#1, l3#2;
        jdk.internal.org.objectweb.asm.Label[] l2;
        jdk.internal.org.objectweb.asm.Frame $stack15;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.Label;

        l2 := @parameter1: jdk.internal.org.objectweb.asm.Label[];

        $stack4 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        if $stack4 == null goto label6;

        $stack5 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack5 != 0 goto label3;

        $stack14 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack15 = $stack14.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        virtualinvoke $stack15.<jdk.internal.org.objectweb.asm.Frame: void execute(int,int,jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Item)>(171, 0, null, null);

        specialinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: void addSuccessor(int,jdk.internal.org.objectweb.asm.Label)>(0, l1);

        $stack16 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label getFirst()>();

        $stack17 = $stack16.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack18 = $stack17 | 16;

        $stack16.<jdk.internal.org.objectweb.asm.Label: int status> = $stack18;

        l3#1 = 0;

     label1:
        $stack19 = lengthof l2;

        if l3#1 >= $stack19 goto label2;

        $stack21 = l2[l3#1];

        specialinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: void addSuccessor(int,jdk.internal.org.objectweb.asm.Label)>(0, $stack21);

        $stack22 = l2[l3#1];

        $stack23 = virtualinvoke $stack22.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label getFirst()>();

        $stack24 = $stack23.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack25 = $stack24 | 16;

        $stack23.<jdk.internal.org.objectweb.asm.Label: int status> = $stack25;

        l3#1 = l3#1 + 1;

        goto label1;

     label2:
        goto label5;

     label3:
        $stack6 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        $stack7 = $stack6 - 1;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize> = $stack7;

        $stack8 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: void addSuccessor(int,jdk.internal.org.objectweb.asm.Label)>($stack8, l1);

        l3#2 = 0;

     label4:
        $stack9 = lengthof l2;

        if l3#2 >= $stack9 goto label5;

        $stack11 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        $stack10 = l2[l3#2];

        specialinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: void addSuccessor(int,jdk.internal.org.objectweb.asm.Label)>($stack11, $stack10);

        l3#2 = l3#2 + 1;

        goto label4;

     label5:
        specialinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: void noSuccessor()>();

     label6:
        return;
    }

    public void visitMultiANewArrayInsn(java.lang.String, int)
    {
        jdk.internal.org.objectweb.asm.MethodWriter l0;
        jdk.internal.org.objectweb.asm.ByteVector $stack4, $stack10#3, $stack11#11;
        int $stack5, l2, $stack13, $stack14, $stack15, $stack16, $stack9#9;
        java.lang.String l1;
        jdk.internal.org.objectweb.asm.ClassWriter $stack6, $stack22;
        jdk.internal.org.objectweb.asm.Item $stack7;
        jdk.internal.org.objectweb.asm.Label $stack8, $stack21;
        jdk.internal.org.objectweb.asm.Frame $stack23;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: int;

        $stack4 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack5 = $stack4.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int lastCodeOffset> = $stack5;

        $stack6 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack7 = virtualinvoke $stack6.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item newClassItem(java.lang.String)>(l1);

        $stack8 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        if $stack8 == null goto label2;

        $stack13 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack13 != 0 goto label1;

        $stack21 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack23 = $stack21.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        $stack22 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        virtualinvoke $stack23.<jdk.internal.org.objectweb.asm.Frame: void execute(int,int,jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Item)>(197, l2, $stack22, $stack7);

        goto label2;

     label1:
        $stack15 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        $stack14 = 1 - l2;

        $stack16 = $stack15 + $stack14;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize> = $stack16;

     label2:
        $stack10#3 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack9#9 = $stack7.<jdk.internal.org.objectweb.asm.Item: int index>;

        $stack11#11 = virtualinvoke $stack10#3.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put12(int,int)>(197, $stack9#9);

        virtualinvoke $stack11#11.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(l2);

        return;
    }

    public jdk.internal.org.objectweb.asm.AnnotationVisitor visitInsnAnnotation(int, jdk.internal.org.objectweb.asm.TypePath, java.lang.String, boolean)
    {
        jdk.internal.org.objectweb.asm.ByteVector $stack7, $stack13;
        jdk.internal.org.objectweb.asm.MethodWriter l0;
        int $stack8, $stack9, $stack10, $stack12, $stack16, $stack17, l1#1, l1#2;
        jdk.internal.org.objectweb.asm.TypePath l2;
        java.lang.String l3;
        jdk.internal.org.objectweb.asm.ClassWriter $stack11, $stack18;
        jdk.internal.org.objectweb.asm.AnnotationWriter $stack15, $stack19, $stack20;
        boolean l4;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        l1#1 := @parameter0: int;

        l2 := @parameter1: jdk.internal.org.objectweb.asm.TypePath;

        l3 := @parameter2: java.lang.String;

        l4 := @parameter3: boolean;

        $stack7 = new jdk.internal.org.objectweb.asm.ByteVector;

        specialinvoke $stack7.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        $stack10 = l1#1 & -16776961;

        $stack8 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int lastCodeOffset>;

        $stack9 = $stack8 << 8;

        l1#2 = $stack10 | $stack9;

        staticinvoke <jdk.internal.org.objectweb.asm.AnnotationWriter: void putTarget(int,jdk.internal.org.objectweb.asm.TypePath,jdk.internal.org.objectweb.asm.ByteVector)>(l1#2, l2, $stack7);

        $stack11 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack12 = virtualinvoke $stack11.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>(l3);

        $stack13 = virtualinvoke $stack7.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack12);

        virtualinvoke $stack13.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(0);

        $stack15 = new jdk.internal.org.objectweb.asm.AnnotationWriter;

        $stack18 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack16 = $stack7.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack17 = $stack16 - 2;

        specialinvoke $stack15.<jdk.internal.org.objectweb.asm.AnnotationWriter: void <init>(jdk.internal.org.objectweb.asm.ClassWriter,boolean,jdk.internal.org.objectweb.asm.ByteVector,jdk.internal.org.objectweb.asm.ByteVector,int)>($stack18, 1, $stack7, $stack7, $stack17);

        if l4 == 0 goto label1;

        $stack20 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ctanns>;

        $stack15.<jdk.internal.org.objectweb.asm.AnnotationWriter: jdk.internal.org.objectweb.asm.AnnotationWriter next> = $stack20;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ctanns> = $stack15;

        goto label2;

     label1:
        $stack19 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ictanns>;

        $stack15.<jdk.internal.org.objectweb.asm.AnnotationWriter: jdk.internal.org.objectweb.asm.AnnotationWriter next> = $stack19;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ictanns> = $stack15;

     label2:
        return $stack15;
    }

    public void visitTryCatchBlock(jdk.internal.org.objectweb.asm.Label, jdk.internal.org.objectweb.asm.Label, jdk.internal.org.objectweb.asm.Label, java.lang.String)
    {
        jdk.internal.org.objectweb.asm.MethodWriter l0;
        int $stack6, $stack7, $stack14#1;
        jdk.internal.org.objectweb.asm.Handler $stack8, $stack9, $stack10;
        jdk.internal.org.objectweb.asm.Label l1, l2, l3;
        java.lang.String l4;
        jdk.internal.org.objectweb.asm.ClassWriter $stack13;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.Label;

        l2 := @parameter1: jdk.internal.org.objectweb.asm.Label;

        l3 := @parameter2: jdk.internal.org.objectweb.asm.Label;

        l4 := @parameter3: java.lang.String;

        $stack6 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int handlerCount>;

        $stack7 = $stack6 + 1;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int handlerCount> = $stack7;

        $stack8 = new jdk.internal.org.objectweb.asm.Handler;

        specialinvoke $stack8.<jdk.internal.org.objectweb.asm.Handler: void <init>()>();

        $stack8.<jdk.internal.org.objectweb.asm.Handler: jdk.internal.org.objectweb.asm.Label start> = l1;

        $stack8.<jdk.internal.org.objectweb.asm.Handler: jdk.internal.org.objectweb.asm.Label end> = l2;

        $stack8.<jdk.internal.org.objectweb.asm.Handler: jdk.internal.org.objectweb.asm.Label handler> = l3;

        $stack8.<jdk.internal.org.objectweb.asm.Handler: java.lang.String desc> = l4;

        if l4 == null goto label1;

        $stack13 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack14#1 = virtualinvoke $stack13.<jdk.internal.org.objectweb.asm.ClassWriter: int newClass(java.lang.String)>(l4);

        goto label2;

     label1:
        $stack14#1 = 0;

     label2:
        $stack8.<jdk.internal.org.objectweb.asm.Handler: int type> = $stack14#1;

        $stack9 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Handler lastHandler>;

        if $stack9 != null goto label3;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Handler firstHandler> = $stack8;

        goto label4;

     label3:
        $stack10 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Handler lastHandler>;

        $stack10.<jdk.internal.org.objectweb.asm.Handler: jdk.internal.org.objectweb.asm.Handler next> = $stack8;

     label4:
        l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Handler lastHandler> = $stack8;

        return;
    }

    public jdk.internal.org.objectweb.asm.AnnotationVisitor visitTryCatchAnnotation(int, jdk.internal.org.objectweb.asm.TypePath, java.lang.String, boolean)
    {
        jdk.internal.org.objectweb.asm.ByteVector $stack7, $stack10;
        int l1, $stack9, $stack13, $stack14;
        jdk.internal.org.objectweb.asm.TypePath l2;
        jdk.internal.org.objectweb.asm.MethodWriter l0;
        java.lang.String l3;
        jdk.internal.org.objectweb.asm.ClassWriter $stack8, $stack15;
        jdk.internal.org.objectweb.asm.AnnotationWriter $stack12, $stack16, $stack17;
        boolean l4;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        l1 := @parameter0: int;

        l2 := @parameter1: jdk.internal.org.objectweb.asm.TypePath;

        l3 := @parameter2: java.lang.String;

        l4 := @parameter3: boolean;

        $stack7 = new jdk.internal.org.objectweb.asm.ByteVector;

        specialinvoke $stack7.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        staticinvoke <jdk.internal.org.objectweb.asm.AnnotationWriter: void putTarget(int,jdk.internal.org.objectweb.asm.TypePath,jdk.internal.org.objectweb.asm.ByteVector)>(l1, l2, $stack7);

        $stack8 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack9 = virtualinvoke $stack8.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>(l3);

        $stack10 = virtualinvoke $stack7.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack9);

        virtualinvoke $stack10.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(0);

        $stack12 = new jdk.internal.org.objectweb.asm.AnnotationWriter;

        $stack15 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack13 = $stack7.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack14 = $stack13 - 2;

        specialinvoke $stack12.<jdk.internal.org.objectweb.asm.AnnotationWriter: void <init>(jdk.internal.org.objectweb.asm.ClassWriter,boolean,jdk.internal.org.objectweb.asm.ByteVector,jdk.internal.org.objectweb.asm.ByteVector,int)>($stack15, 1, $stack7, $stack7, $stack14);

        if l4 == 0 goto label1;

        $stack17 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ctanns>;

        $stack12.<jdk.internal.org.objectweb.asm.AnnotationWriter: jdk.internal.org.objectweb.asm.AnnotationWriter next> = $stack17;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ctanns> = $stack12;

        goto label2;

     label1:
        $stack16 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ictanns>;

        $stack12.<jdk.internal.org.objectweb.asm.AnnotationWriter: jdk.internal.org.objectweb.asm.AnnotationWriter next> = $stack16;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ictanns> = $stack12;

     label2:
        return $stack12;
    }

    public void visitLocalVariable(java.lang.String, java.lang.String, java.lang.String, jdk.internal.org.objectweb.asm.Label, jdk.internal.org.objectweb.asm.Label, int)
    {
        java.lang.String l3, l1, l2;
        jdk.internal.org.objectweb.asm.MethodWriter l0;
        int $stack10, $stack11, $stack12, $stack15, $stack16, $stack17, $stack20, $stack23, l6, $stack26, $stack28, $stack31, $stack49, $stack50, $stack51, $stack54, $stack55, $stack56, $stack59, $stack62;
        jdk.internal.org.objectweb.asm.Label l4, l5;
        jdk.internal.org.objectweb.asm.ByteVector $stack13, $stack14, $stack18, $stack21, $stack24, $stack34, $stack48, $stack52, $stack53, $stack57, $stack60, $stack63, $stack66, $stack9#3;
        jdk.internal.org.objectweb.asm.ClassWriter $stack19, $stack22, $stack58, $stack61;
        char $stack27;
        byte $stack29#5;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: java.lang.String;

        l4 := @parameter3: jdk.internal.org.objectweb.asm.Label;

        l5 := @parameter4: jdk.internal.org.objectweb.asm.Label;

        l6 := @parameter5: int;

        if l3 == null goto label2;

        $stack48 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVarType>;

        if $stack48 != null goto label1;

        $stack66 = new jdk.internal.org.objectweb.asm.ByteVector;

        specialinvoke $stack66.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVarType> = $stack66;

     label1:
        $stack49 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int localVarTypeCount>;

        $stack50 = $stack49 + 1;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int localVarTypeCount> = $stack50;

        $stack52 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVarType>;

        $stack51 = l4.<jdk.internal.org.objectweb.asm.Label: int position>;

        $stack53 = virtualinvoke $stack52.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack51);

        $stack55 = l5.<jdk.internal.org.objectweb.asm.Label: int position>;

        $stack54 = l4.<jdk.internal.org.objectweb.asm.Label: int position>;

        $stack56 = $stack55 - $stack54;

        $stack57 = virtualinvoke $stack53.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack56);

        $stack58 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack59 = virtualinvoke $stack58.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>(l1);

        $stack60 = virtualinvoke $stack57.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack59);

        $stack61 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack62 = virtualinvoke $stack61.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>(l3);

        $stack63 = virtualinvoke $stack60.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack62);

        virtualinvoke $stack63.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(l6);

     label2:
        $stack9#3 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVar>;

        if $stack9#3 != null goto label3;

        $stack34 = new jdk.internal.org.objectweb.asm.ByteVector;

        specialinvoke $stack34.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVar> = $stack34;

     label3:
        $stack10 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int localVarCount>;

        $stack11 = $stack10 + 1;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int localVarCount> = $stack11;

        $stack13 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVar>;

        $stack12 = l4.<jdk.internal.org.objectweb.asm.Label: int position>;

        $stack14 = virtualinvoke $stack13.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack12);

        $stack16 = l5.<jdk.internal.org.objectweb.asm.Label: int position>;

        $stack15 = l4.<jdk.internal.org.objectweb.asm.Label: int position>;

        $stack17 = $stack16 - $stack15;

        $stack18 = virtualinvoke $stack14.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack17);

        $stack19 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack20 = virtualinvoke $stack19.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>(l1);

        $stack21 = virtualinvoke $stack18.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack20);

        $stack22 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack23 = virtualinvoke $stack22.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>(l2);

        $stack24 = virtualinvoke $stack21.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack23);

        virtualinvoke $stack24.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(l6);

        $stack26 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack26 == 2 goto label7;

        $stack27 = virtualinvoke l2.<java.lang.String: char charAt(int)>(0);

        if $stack27 == 74 goto label4;

        if $stack27 != 68 goto label5;

     label4:
        $stack29#5 = 2;

        goto label6;

     label5:
        $stack29#5 = 1;

     label6:
        $stack31 = l6 + $stack29#5;

        $stack28 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxLocals>;

        if $stack31 <= $stack28 goto label7;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxLocals> = $stack31;

     label7:
        return;
    }

    public jdk.internal.org.objectweb.asm.AnnotationVisitor visitLocalVariableAnnotation(int, jdk.internal.org.objectweb.asm.TypePath, jdk.internal.org.objectweb.asm.Label[], jdk.internal.org.objectweb.asm.Label[], int[], java.lang.String, boolean)
    {
        jdk.internal.org.objectweb.asm.ByteVector $stack10, $stack12, $stack25, $stack48, $stack54;
        int l1, $stack11, $stack13, $stack15, $stack16, $stack19, $stack20, $stack24, $stack28, $stack29, $stack47, $stack51, $stack52, $stack53, $stack55, l9#1, l9#2;
        jdk.internal.org.objectweb.asm.Label[] l3, l4;
        jdk.internal.org.objectweb.asm.TypePath l2;
        byte[] $stack17, $stack21;
        byte $stack18;
        jdk.internal.org.objectweb.asm.MethodWriter l0;
        java.lang.String l6;
        jdk.internal.org.objectweb.asm.ClassWriter $stack23, $stack30;
        jdk.internal.org.objectweb.asm.AnnotationWriter $stack27, $stack31, $stack32;
        boolean l7;
        jdk.internal.org.objectweb.asm.Label $stack46, $stack49, $stack50;
        int[] l5;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        l1 := @parameter0: int;

        l2 := @parameter1: jdk.internal.org.objectweb.asm.TypePath;

        l3 := @parameter2: jdk.internal.org.objectweb.asm.Label[];

        l4 := @parameter3: jdk.internal.org.objectweb.asm.Label[];

        l5 := @parameter4: int[];

        l6 := @parameter5: java.lang.String;

        l7 := @parameter6: boolean;

        $stack10 = new jdk.internal.org.objectweb.asm.ByteVector;

        specialinvoke $stack10.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        $stack11 = l1 >>> 24;

        $stack12 = virtualinvoke $stack10.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>($stack11);

        $stack13 = lengthof l3;

        virtualinvoke $stack12.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack13);

        l9#1 = 0;

     label1:
        $stack15 = lengthof l3;

        if l9#1 >= $stack15 goto label2;

        $stack46 = l3[l9#1];

        $stack47 = $stack46.<jdk.internal.org.objectweb.asm.Label: int position>;

        $stack48 = virtualinvoke $stack10.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack47);

        $stack49 = l4[l9#1];

        $stack52 = $stack49.<jdk.internal.org.objectweb.asm.Label: int position>;

        $stack50 = l3[l9#1];

        $stack51 = $stack50.<jdk.internal.org.objectweb.asm.Label: int position>;

        $stack53 = $stack52 - $stack51;

        $stack54 = virtualinvoke $stack48.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack53);

        $stack55 = l5[l9#1];

        virtualinvoke $stack54.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack55);

        l9#1 = l9#1 + 1;

        goto label1;

     label2:
        if l2 != null goto label3;

        virtualinvoke $stack10.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(0);

        goto label4;

     label3:
        $stack17 = l2.<jdk.internal.org.objectweb.asm.TypePath: byte[] b>;

        $stack16 = l2.<jdk.internal.org.objectweb.asm.TypePath: int offset>;

        $stack18 = $stack17[$stack16];

        $stack19 = $stack18 * 2;

        l9#2 = $stack19 + 1;

        $stack21 = l2.<jdk.internal.org.objectweb.asm.TypePath: byte[] b>;

        $stack20 = l2.<jdk.internal.org.objectweb.asm.TypePath: int offset>;

        virtualinvoke $stack10.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($stack21, $stack20, l9#2);

     label4:
        $stack23 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack24 = virtualinvoke $stack23.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>(l6);

        $stack25 = virtualinvoke $stack10.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack24);

        virtualinvoke $stack25.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(0);

        $stack27 = new jdk.internal.org.objectweb.asm.AnnotationWriter;

        $stack30 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack28 = $stack10.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack29 = $stack28 - 2;

        specialinvoke $stack27.<jdk.internal.org.objectweb.asm.AnnotationWriter: void <init>(jdk.internal.org.objectweb.asm.ClassWriter,boolean,jdk.internal.org.objectweb.asm.ByteVector,jdk.internal.org.objectweb.asm.ByteVector,int)>($stack30, 1, $stack10, $stack10, $stack29);

        if l7 == 0 goto label5;

        $stack32 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ctanns>;

        $stack27.<jdk.internal.org.objectweb.asm.AnnotationWriter: jdk.internal.org.objectweb.asm.AnnotationWriter next> = $stack32;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ctanns> = $stack27;

        goto label6;

     label5:
        $stack31 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ictanns>;

        $stack27.<jdk.internal.org.objectweb.asm.AnnotationWriter: jdk.internal.org.objectweb.asm.AnnotationWriter next> = $stack31;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ictanns> = $stack27;

     label6:
        return $stack27;
    }

    public void visitLineNumber(int, jdk.internal.org.objectweb.asm.Label)
    {
        jdk.internal.org.objectweb.asm.MethodWriter l0;
        jdk.internal.org.objectweb.asm.ByteVector $stack3, $stack7, $stack9, $stack11;
        int $stack4, $stack5, $stack6, l1;
        jdk.internal.org.objectweb.asm.Label l2;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        l1 := @parameter0: int;

        l2 := @parameter1: jdk.internal.org.objectweb.asm.Label;

        $stack3 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector lineNumber>;

        if $stack3 != null goto label1;

        $stack11 = new jdk.internal.org.objectweb.asm.ByteVector;

        specialinvoke $stack11.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector lineNumber> = $stack11;

     label1:
        $stack4 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int lineNumberCount>;

        $stack5 = $stack4 + 1;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int lineNumberCount> = $stack5;

        $stack7 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector lineNumber>;

        $stack6 = l2.<jdk.internal.org.objectweb.asm.Label: int position>;

        virtualinvoke $stack7.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack6);

        $stack9 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector lineNumber>;

        virtualinvoke $stack9.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(l1);

        return;
    }

    public void visitMaxs(int, int)
    {
        jdk.internal.org.objectweb.asm.MethodWriter l0;
        boolean $stack13, $stack140;
        int $stack14, $stack15, l1, l2, $stack16, $stack17, $stack18, $stack19, $stack20, $stack22, $stack23, $stack25, $stack26, $stack28, $stack29, $stack42, $stack47, $stack48, $stack52, $stack55, $stack56, $stack58, $stack59, $stack63, $stack64, $stack69, $stack72, $stack76, $stack77, $stack91, $stack92, $stack94, $stack95, $stack97, $stack98, $stack99, $stack100, $stack105, $stack108, $stack112, $stack113, $stack122, $stack127, $stack128, $stack129, $stack130, $stack132, $stack133, $stack137, $stack147, $stack148, $stack153, $stack165, $stack166, $stack167, $stack176, l6#15, l10#32, $stack102#33, l12#35, l4#47, l4#57, l7#62, l8#63, $stack27#68;
        jdk.internal.org.objectweb.asm.Edge $stack39, $stack50, $stack51, $stack61, $stack62, $stack75, $stack78, $stack79, $stack80, $stack81, $stack82, $stack85, $stack146, $stack169, $stack170, l10#20, $stack144#27, l9#64, $stack31#71;
        jdk.internal.org.objectweb.asm.Label $stack43, $stack46, $stack54, $stack87, $stack88, $stack135, $stack136, $stack142, $stack156, $stack157, $stack158, $stack159, $stack160, $stack161, l4#2, l7#16, l8#17, l8#29, l9#31, $stack104#39, l4#43, l5#44, l6#45, l5#48, l6#49, $stack66#52, l5#54, l6#55, l7#56, l5#58, l6#61, l6#67;
        long $stack67, $stack68, $stack70, $stack71, $stack73;
        java.lang.String $stack89, $stack162, $stack173#5;
        jdk.internal.org.objectweb.asm.Type[] $stack90;
        jdk.internal.org.objectweb.asm.ClassWriter $stack93, $stack109, $stack139, $stack163;
        jdk.internal.org.objectweb.asm.ByteVector $stack106, $stack116, $stack120;
        byte[] $stack107, $stack117;
        int[] $stack110, $stack131;
        jdk.internal.org.objectweb.asm.Handler $stack114, $stack115, l3#1, l3#41, l3#42;
        jdk.internal.org.objectweb.asm.Frame $stack138, l4#13, l4#18, l4#30;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        l1 := @parameter0: int;

        l2 := @parameter1: int;

        $stack13 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: boolean resize>;

        if $stack13 == 0 goto label01;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: void resizeInstructions()>();

     label01:
        $stack14 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack14 != 0 goto label25;

        l3#1 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Handler firstHandler>;

     label02:
        if l3#1 == null goto label07;

        $stack156 = l3#1.<jdk.internal.org.objectweb.asm.Handler: jdk.internal.org.objectweb.asm.Label start>;

        $stack157 = virtualinvoke $stack156.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label getFirst()>();

        l4#2 = $stack157;

        $stack158 = l3#1.<jdk.internal.org.objectweb.asm.Handler: jdk.internal.org.objectweb.asm.Label handler>;

        $stack159 = virtualinvoke $stack158.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label getFirst()>();

        $stack160 = l3#1.<jdk.internal.org.objectweb.asm.Handler: jdk.internal.org.objectweb.asm.Label end>;

        $stack161 = virtualinvoke $stack160.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label getFirst()>();

        $stack162 = l3#1.<jdk.internal.org.objectweb.asm.Handler: java.lang.String desc>;

        if $stack162 != null goto label03;

        $stack173#5 = "java/lang/Throwable";

        goto label04;

     label03:
        $stack173#5 = l3#1.<jdk.internal.org.objectweb.asm.Handler: java.lang.String desc>;

     label04:
        $stack163 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack165 = virtualinvoke $stack163.<jdk.internal.org.objectweb.asm.ClassWriter: int addType(java.lang.String)>($stack173#5);

        $stack176 = 24117248 | $stack165;

        $stack166 = $stack159.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack167 = $stack166 | 16;

        $stack159.<jdk.internal.org.objectweb.asm.Label: int status> = $stack167;

     label05:
        if l4#2 == $stack161 goto label06;

        $stack169 = new jdk.internal.org.objectweb.asm.Edge;

        specialinvoke $stack169.<jdk.internal.org.objectweb.asm.Edge: void <init>()>();

        $stack169.<jdk.internal.org.objectweb.asm.Edge: int info> = $stack176;

        $stack169.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Label successor> = $stack159;

        $stack170 = l4#2.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Edge successors>;

        $stack169.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Edge next> = $stack170;

        l4#2.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Edge successors> = $stack169;

        l4#2 = l4#2.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label successor>;

        goto label05;

     label06:
        l3#1 = l3#1.<jdk.internal.org.objectweb.asm.Handler: jdk.internal.org.objectweb.asm.Handler next>;

        goto label02;

     label07:
        $stack88 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label labels>;

        l4#13 = $stack88.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        $stack89 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String descriptor>;

        $stack90 = staticinvoke <jdk.internal.org.objectweb.asm.Type: jdk.internal.org.objectweb.asm.Type[] getArgumentTypes(java.lang.String)>($stack89);

        $stack93 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack92 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int access>;

        $stack91 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxLocals>;

        virtualinvoke l4#13.<jdk.internal.org.objectweb.asm.Frame: void initInputFrame(jdk.internal.org.objectweb.asm.ClassWriter,int,jdk.internal.org.objectweb.asm.Type[],int)>($stack93, $stack92, $stack90, $stack91);

        specialinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: void visitFrame(jdk.internal.org.objectweb.asm.Frame)>(l4#13);

        l6#15 = 0;

        l7#16 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label labels>;

     label08:
        if l7#16 == null goto label14;

        l8#17 = l7#16;

        l7#16 = l7#16.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label next>;

        l8#17.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label next> = null;

        l4#18 = l8#17.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        $stack127 = l8#17.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack128 = $stack127 & 16;

        if $stack128 == 0 goto label09;

        $stack147 = l8#17.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack148 = $stack147 | 32;

        l8#17.<jdk.internal.org.objectweb.asm.Label: int status> = $stack148;

     label09:
        $stack129 = l8#17.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack130 = $stack129 | 64;

        l8#17.<jdk.internal.org.objectweb.asm.Label: int status> = $stack130;

        $stack131 = l4#18.<jdk.internal.org.objectweb.asm.Frame: int[] inputStack>;

        $stack133 = lengthof $stack131;

        $stack132 = l8#17.<jdk.internal.org.objectweb.asm.Label: int outputStackMax>;

        $stack153 = $stack133 + $stack132;

        if $stack153 <= l6#15 goto label10;

        l6#15 = $stack153;

     label10:
        $stack146 = l8#17.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Edge successors>;

        l10#20 = $stack146;

     label11:
        if l10#20 == null goto label13;

        $stack135 = l10#20.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Label successor>;

        $stack136 = virtualinvoke $stack135.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label getFirst()>();

        $stack139 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack138 = $stack136.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        $stack137 = l10#20.<jdk.internal.org.objectweb.asm.Edge: int info>;

        $stack140 = virtualinvoke l4#18.<jdk.internal.org.objectweb.asm.Frame: boolean merge(jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Frame,int)>($stack139, $stack138, $stack137);

        if $stack140 == 0 goto label12;

        $stack142 = $stack136.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label next>;

        if $stack142 != null goto label12;

        $stack136.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label next> = l7#16;

        l7#16 = $stack136;

     label12:
        $stack144#27 = l10#20.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Edge next>;

        l10#20 = $stack144#27;

        goto label11;

     label13:
        goto label08;

     label14:
        l8#29 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label labels>;

     label15:
        if l8#29 == null goto label22;

        l4#30 = l8#29.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        $stack97 = l8#29.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack98 = $stack97 & 32;

        if $stack98 == 0 goto label16;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: void visitFrame(jdk.internal.org.objectweb.asm.Frame)>(l4#30);

     label16:
        $stack99 = l8#29.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack100 = $stack99 & 64;

        if $stack100 != 0 goto label21;

        l9#31 = l8#29.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label successor>;

        l10#32 = l8#29.<jdk.internal.org.objectweb.asm.Label: int position>;

        if l9#31 != null goto label17;

        $stack120 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack102#33 = $stack120.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        goto label18;

     label17:
        $stack102#33 = l9#31.<jdk.internal.org.objectweb.asm.Label: int position>;

     label18:
        $stack122 = $stack102#33 - 1;

        if $stack122 < l10#32 goto label21;

        $stack105 = staticinvoke <java.lang.Math: int max(int,int)>(l6#15, 1);

        l6#15 = $stack105;

        l12#35 = l10#32;

     label19:
        if l12#35 >= $stack122 goto label20;

        $stack116 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack117 = $stack116.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        $stack117[l12#35] = 0;

        l12#35 = l12#35 + 1;

        goto label19;

     label20:
        $stack106 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack107 = $stack106.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        $stack107[$stack122] = -65;

        $stack108 = specialinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: int startFrame(int,int,int)>(l10#32, 0, 1);

        $stack110 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack109 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack112 = virtualinvoke $stack109.<jdk.internal.org.objectweb.asm.ClassWriter: int addType(java.lang.String)>("java/lang/Throwable");

        $stack113 = 24117248 | $stack112;

        $stack110[$stack108] = $stack113;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: void endFrame()>();

        $stack114 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Handler firstHandler>;

        $stack115 = staticinvoke <jdk.internal.org.objectweb.asm.Handler: jdk.internal.org.objectweb.asm.Handler remove(jdk.internal.org.objectweb.asm.Handler,jdk.internal.org.objectweb.asm.Label,jdk.internal.org.objectweb.asm.Label)>($stack114, l8#29, l9#31);

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Handler firstHandler> = $stack115;

     label21:
        $stack104#39 = l8#29.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label successor>;

        l8#29 = $stack104#39;

        goto label15;

     label22:
        l3#41 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Handler firstHandler>;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int handlerCount> = 0;

     label23:
        if l3#41 == null goto label24;

        $stack94 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int handlerCount>;

        $stack95 = $stack94 + 1;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int handlerCount> = $stack95;

        l3#41 = l3#41.<jdk.internal.org.objectweb.asm.Handler: jdk.internal.org.objectweb.asm.Handler next>;

        goto label23;

     label24:
        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStack> = l6#15;

        goto label49;

     label25:
        $stack15 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack15 != 1 goto label48;

        l3#42 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Handler firstHandler>;

     label26:
        if l3#42 == null goto label31;

        l4#43 = l3#42.<jdk.internal.org.objectweb.asm.Handler: jdk.internal.org.objectweb.asm.Label start>;

        l5#44 = l3#42.<jdk.internal.org.objectweb.asm.Handler: jdk.internal.org.objectweb.asm.Label handler>;

        l6#45 = l3#42.<jdk.internal.org.objectweb.asm.Handler: jdk.internal.org.objectweb.asm.Label end>;

     label27:
        if l4#43 == l6#45 goto label30;

        $stack75 = new jdk.internal.org.objectweb.asm.Edge;

        specialinvoke $stack75.<jdk.internal.org.objectweb.asm.Edge: void <init>()>();

        $stack75.<jdk.internal.org.objectweb.asm.Edge: int info> = 2147483647;

        $stack75.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Label successor> = l5#44;

        $stack76 = l4#43.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack77 = $stack76 & 128;

        if $stack77 != 0 goto label28;

        $stack85 = l4#43.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Edge successors>;

        $stack75.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Edge next> = $stack85;

        l4#43.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Edge successors> = $stack75;

        goto label29;

     label28:
        $stack78 = l4#43.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Edge successors>;

        $stack79 = $stack78.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Edge next>;

        $stack80 = $stack79.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Edge next>;

        $stack75.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Edge next> = $stack80;

        $stack81 = l4#43.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Edge successors>;

        $stack82 = $stack81.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Edge next>;

        $stack82.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Edge next> = $stack75;

     label29:
        $stack87 = l4#43.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label successor>;

        l4#43 = $stack87;

        goto label27;

     label30:
        l3#42 = l3#42.<jdk.internal.org.objectweb.asm.Handler: jdk.internal.org.objectweb.asm.Handler next>;

        goto label26;

     label31:
        $stack16 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int subroutines>;

        if $stack16 <= 0 goto label39;

        l4#47 = 0;

        $stack43 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label labels>;

        $stack42 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int subroutines>;

        virtualinvoke $stack43.<jdk.internal.org.objectweb.asm.Label: void visitSubroutine(jdk.internal.org.objectweb.asm.Label,long,int)>(null, 1L, $stack42);

        l5#48 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label labels>;

     label32:
        if l5#48 == null goto label34;

        $stack58 = l5#48.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack59 = $stack58 & 128;

        if $stack59 == 0 goto label33;

        $stack61 = l5#48.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Edge successors>;

        $stack62 = $stack61.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Edge next>;

        l6#49 = $stack62.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Label successor>;

        $stack63 = l6#49.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack64 = $stack63 & 1024;

        if $stack64 != 0 goto label33;

        l4#47 = l4#47 + 1;

        $stack67 = (long) l4#47;

        $stack68 = $stack67 / 32L;

        $stack71 = $stack68 << 32;

        $stack69 = l4#47 % 32;

        $stack70 = 1L << $stack69;

        $stack73 = $stack71 | $stack70;

        $stack72 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int subroutines>;

        virtualinvoke l6#49.<jdk.internal.org.objectweb.asm.Label: void visitSubroutine(jdk.internal.org.objectweb.asm.Label,long,int)>(null, $stack73, $stack72);

     label33:
        $stack66#52 = l5#48.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label successor>;

        l5#48 = $stack66#52;

        goto label32;

     label34:
        l5#54 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label labels>;

     label35:
        if l5#54 == null goto label39;

        $stack47 = l5#54.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack48 = $stack47 & 128;

        if $stack48 == 0 goto label38;

        l6#55 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label labels>;

     label36:
        if l6#55 == null goto label37;

        $stack55 = l6#55.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack56 = $stack55 & -2049;

        l6#55.<jdk.internal.org.objectweb.asm.Label: int status> = $stack56;

        l6#55 = l6#55.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label successor>;

        goto label36;

     label37:
        $stack50 = l5#54.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Edge successors>;

        $stack51 = $stack50.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Edge next>;

        l7#56 = $stack51.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Label successor>;

        $stack52 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int subroutines>;

        virtualinvoke l7#56.<jdk.internal.org.objectweb.asm.Label: void visitSubroutine(jdk.internal.org.objectweb.asm.Label,long,int)>(l5#54, 0L, $stack52);

     label38:
        $stack54 = l5#54.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label successor>;

        l5#54 = $stack54;

        goto label35;

     label39:
        l4#57 = 0;

        $stack46 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label labels>;

        l5#58 = $stack46;

     label40:
        if l5#58 == null goto label47;

        l6#61 = l5#58;

        l5#58 = l5#58.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label next>;

        l7#62 = l6#61.<jdk.internal.org.objectweb.asm.Label: int inputStackTop>;

        $stack18 = l6#61.<jdk.internal.org.objectweb.asm.Label: int outputStackMax>;

        l8#63 = l7#62 + $stack18;

        if l8#63 <= l4#57 goto label41;

        l4#57 = l8#63;

     label41:
        $stack39 = l6#61.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Edge successors>;

        l9#64 = $stack39;

        $stack19 = l6#61.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack20 = $stack19 & 128;

        if $stack20 == 0 goto label42;

        l9#64 = $stack39.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Edge next>;

     label42:
        if l9#64 == null goto label46;

        l6#67 = l9#64.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Label successor>;

        $stack22 = l6#67.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack23 = $stack22 & 8;

        if $stack23 != 0 goto label45;

        $stack25 = l9#64.<jdk.internal.org.objectweb.asm.Edge: int info>;

        if $stack25 != 2147483647 goto label43;

        $stack27#68 = 1;

        goto label44;

     label43:
        $stack26 = l9#64.<jdk.internal.org.objectweb.asm.Edge: int info>;

        $stack27#68 = l7#62 + $stack26;

     label44:
        l6#67.<jdk.internal.org.objectweb.asm.Label: int inputStackTop> = $stack27#68;

        $stack28 = l6#67.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack29 = $stack28 | 8;

        l6#67.<jdk.internal.org.objectweb.asm.Label: int status> = $stack29;

        l6#67.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label next> = l5#58;

        l5#58 = l6#67;

     label45:
        $stack31#71 = l9#64.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Edge next>;

        l9#64 = $stack31#71;

        goto label42;

     label46:
        goto label40;

     label47:
        $stack17 = staticinvoke <java.lang.Math: int max(int,int)>(l1, l4#57);

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStack> = $stack17;

        goto label49;

     label48:
        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStack> = l1;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxLocals> = l2;

     label49:
        return;
    }

    public void visitEnd()
    {
        jdk.internal.org.objectweb.asm.MethodWriter l0;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        return;
    }

    private void addSuccessor(int, jdk.internal.org.objectweb.asm.Label)
    {
        jdk.internal.org.objectweb.asm.Edge $stack4, $stack6;
        int l1;
        jdk.internal.org.objectweb.asm.Label l2, $stack5, $stack7;
        jdk.internal.org.objectweb.asm.MethodWriter l0;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        l1 := @parameter0: int;

        l2 := @parameter1: jdk.internal.org.objectweb.asm.Label;

        $stack4 = new jdk.internal.org.objectweb.asm.Edge;

        specialinvoke $stack4.<jdk.internal.org.objectweb.asm.Edge: void <init>()>();

        $stack4.<jdk.internal.org.objectweb.asm.Edge: int info> = l1;

        $stack4.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Label successor> = l2;

        $stack5 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack6 = $stack5.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Edge successors>;

        $stack4.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Edge next> = $stack6;

        $stack7 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack7.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Edge successors> = $stack4;

        return;
    }

    private void noSuccessor()
    {
        jdk.internal.org.objectweb.asm.MethodWriter l0;
        int $stack2, $stack3, $stack11;
        jdk.internal.org.objectweb.asm.Label $stack4, $stack5, $stack13;
        jdk.internal.org.objectweb.asm.Frame $stack6, $stack7;
        jdk.internal.org.objectweb.asm.ByteVector $stack8, $stack9;
        byte[] $stack10;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        $stack2 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack2 != 0 goto label1;

        $stack5 = new jdk.internal.org.objectweb.asm.Label;

        specialinvoke $stack5.<jdk.internal.org.objectweb.asm.Label: void <init>()>();

        $stack6 = new jdk.internal.org.objectweb.asm.Frame;

        specialinvoke $stack6.<jdk.internal.org.objectweb.asm.Frame: void <init>()>();

        $stack5.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame> = $stack6;

        $stack7 = $stack5.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        $stack7.<jdk.internal.org.objectweb.asm.Frame: jdk.internal.org.objectweb.asm.Label owner> = $stack5;

        $stack8 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack11 = $stack8.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack9 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack10 = $stack9.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        virtualinvoke $stack5.<jdk.internal.org.objectweb.asm.Label: boolean resolve(jdk.internal.org.objectweb.asm.MethodWriter,int,byte[])>(l0, $stack11, $stack10);

        $stack13 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label previousBlock>;

        $stack13.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label successor> = $stack5;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label previousBlock> = $stack5;

        goto label2;

     label1:
        $stack4 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack3 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStackSize>;

        $stack4.<jdk.internal.org.objectweb.asm.Label: int outputStackMax> = $stack3;

     label2:
        l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock> = null;

        return;
    }

    private void visitFrame(jdk.internal.org.objectweb.asm.Frame)
    {
        jdk.internal.org.objectweb.asm.Frame l1;
        int[] l7, l8, $stack17, $stack21;
        int $stack10, $stack11, $stack13, $stack14, $stack15, $stack16, $stack20, $stack25, l4#1, l5#2, l6#3, l2#4, l3#5, l2#6, l3#7, l9#8, l2#9, l3#10, l2#11, l3#12;
        jdk.internal.org.objectweb.asm.MethodWriter l0;
        jdk.internal.org.objectweb.asm.Label $stack12;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.Frame;

        l4#1 = 0;

        l5#2 = 0;

        l6#3 = 0;

        l7 = l1.<jdk.internal.org.objectweb.asm.Frame: int[] inputLocals>;

        l8 = l1.<jdk.internal.org.objectweb.asm.Frame: int[] inputStack>;

        l2#4 = 0;

     label01:
        $stack10 = lengthof l7;

        if l2#4 >= $stack10 goto label06;

        l3#5 = l7[l2#4];

        if l3#5 != 16777216 goto label02;

        l4#1 = l4#1 + 1;

        goto label03;

     label02:
        $stack25 = l4#1 + 1;

        l5#2 = l5#2 + $stack25;

        l4#1 = 0;

     label03:
        if l3#5 == 16777220 goto label04;

        if l3#5 != 16777219 goto label05;

     label04:
        l2#4 = l2#4 + 1;

     label05:
        l2#4 = l2#4 + 1;

        goto label01;

     label06:
        l2#6 = 0;

     label07:
        $stack11 = lengthof l8;

        if l2#6 >= $stack11 goto label10;

        l3#7 = l8[l2#6];

        l6#3 = l6#3 + 1;

        if l3#7 == 16777220 goto label08;

        if l3#7 != 16777219 goto label09;

     label08:
        l2#6 = l2#6 + 1;

     label09:
        l2#6 = l2#6 + 1;

        goto label07;

     label10:
        $stack12 = l1.<jdk.internal.org.objectweb.asm.Frame: jdk.internal.org.objectweb.asm.Label owner>;

        $stack13 = $stack12.<jdk.internal.org.objectweb.asm.Label: int position>;

        $stack14 = specialinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: int startFrame(int,int,int)>($stack13, l5#2, l6#3);

        l9#8 = $stack14;

        l2#9 = 0;

     label11:
        if l5#2 <= 0 goto label14;

        l3#10 = l7[l2#9];

        $stack21 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack20 = l9#8;

        l9#8 = l9#8 + 1;

        $stack21[$stack20] = l3#10;

        if l3#10 == 16777220 goto label12;

        if l3#10 != 16777219 goto label13;

     label12:
        l2#9 = l2#9 + 1;

     label13:
        l2#9 = l2#9 + 1;

        l5#2 = l5#2 + -1;

        goto label11;

     label14:
        l2#11 = 0;

     label15:
        $stack15 = lengthof l8;

        if l2#11 >= $stack15 goto label18;

        l3#12 = l8[l2#11];

        $stack17 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack16 = l9#8;

        l9#8 = l9#8 + 1;

        $stack17[$stack16] = l3#12;

        if l3#12 == 16777220 goto label16;

        if l3#12 != 16777219 goto label17;

     label16:
        l2#11 = l2#11 + 1;

     label17:
        l2#11 = l2#11 + 1;

        goto label15;

     label18:
        specialinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: void endFrame()>();

        return;
    }

    private void visitImplicitFirstFrame()
    {
        jdk.internal.org.objectweb.asm.MethodWriter l0;
        java.lang.String $stack4, $stack14, $stack16, $stack19, $stack23, $stack28, $stack41, $stack46, $stack50, $stack73, $stack12#11;
        int $stack6, $stack7, $stack8, $stack9, $stack10, l3, $stack18, $stack24, $stack25, $stack43, $stack44, $stack45, $stack51, $stack52, $stack56, $stack58, $stack60, $stack62, $stack64, $stack66, $stack67, $stack77, $stack78, l1#1, l2#4, $stack11#16;
        char $stack15, $stack17, $stack29, $stack42, $stack13#17;
        int[] $stack20, $stack47, $stack57, $stack59, $stack61, $stack63, $stack65, $stack69, $stack75;
        jdk.internal.org.objectweb.asm.ClassWriter $stack22, $stack49, $stack72, $stack74;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        $stack4 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String descriptor>;

        $stack6 = virtualinvoke $stack4.<java.lang.String: int length()>();

        $stack7 = $stack6 + 1;

        $stack8 = specialinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: int startFrame(int,int,int)>(0, $stack7, 0);

        l1#1 = $stack8;

        $stack9 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int access>;

        $stack10 = $stack9 & 8;

        if $stack10 != 0 goto label02;

        $stack66 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int access>;

        $stack67 = $stack66 & 524288;

        if $stack67 != 0 goto label01;

        $stack75 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        l1#1 = $stack8 + 1;

        $stack74 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack72 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack73 = $stack72.<jdk.internal.org.objectweb.asm.ClassWriter: java.lang.String thisName>;

        $stack77 = virtualinvoke $stack74.<jdk.internal.org.objectweb.asm.ClassWriter: int addType(java.lang.String)>($stack73);

        $stack78 = 24117248 | $stack77;

        $stack75[$stack8] = $stack78;

        goto label02;

     label01:
        $stack69 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        l1#1 = $stack8 + 1;

        $stack69[$stack8] = 6;

     label02:
        l2#4 = 1;

     label03:
        l3 = l2#4;

        $stack12#11 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String descriptor>;

        $stack11#16 = l2#4;

        l2#4 = l2#4 + 1;

        $stack13#17 = virtualinvoke $stack12#11.<java.lang.String: char charAt(int)>($stack11#16);

        tableswitch($stack13#17)
        {
            case 66: goto label04;
            case 67: goto label04;
            case 68: goto label07;
            case 69: goto label14;
            case 70: goto label05;
            case 71: goto label14;
            case 72: goto label14;
            case 73: goto label04;
            case 74: goto label06;
            case 75: goto label14;
            case 76: goto label12;
            case 77: goto label14;
            case 78: goto label14;
            case 79: goto label14;
            case 80: goto label14;
            case 81: goto label14;
            case 82: goto label14;
            case 83: goto label04;
            case 84: goto label14;
            case 85: goto label14;
            case 86: goto label14;
            case 87: goto label14;
            case 88: goto label14;
            case 89: goto label14;
            case 90: goto label04;
            case 91: goto label08;
            default: goto label14;
        };

     label04:
        $stack63 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack62 = l1#1;

        l1#1 = l1#1 + 1;

        $stack63[$stack62] = 1;

        goto label15;

     label05:
        $stack59 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack58 = l1#1;

        l1#1 = l1#1 + 1;

        $stack59[$stack58] = 2;

        goto label15;

     label06:
        $stack57 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack56 = l1#1;

        l1#1 = l1#1 + 1;

        $stack57[$stack56] = 4;

        goto label15;

     label07:
        $stack61 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack60 = l1#1;

        l1#1 = l1#1 + 1;

        $stack61[$stack60] = 3;

        goto label15;

     label08:
        $stack14 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String descriptor>;

        $stack15 = virtualinvoke $stack14.<java.lang.String: char charAt(int)>(l2#4);

        if $stack15 != 91 goto label09;

        l2#4 = l2#4 + 1;

        goto label08;

     label09:
        $stack16 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String descriptor>;

        $stack17 = virtualinvoke $stack16.<java.lang.String: char charAt(int)>(l2#4);

        if $stack17 != 76 goto label11;

        l2#4 = l2#4 + 1;

     label10:
        $stack28 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String descriptor>;

        $stack29 = virtualinvoke $stack28.<java.lang.String: char charAt(int)>(l2#4);

        if $stack29 == 59 goto label11;

        l2#4 = l2#4 + 1;

        goto label10;

     label11:
        $stack20 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack18 = l1#1;

        l1#1 = l1#1 + 1;

        $stack22 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack19 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String descriptor>;

        l2#4 = l2#4 + 1;

        $stack23 = virtualinvoke $stack19.<java.lang.String: java.lang.String substring(int,int)>(l3, l2#4);

        $stack24 = virtualinvoke $stack22.<jdk.internal.org.objectweb.asm.ClassWriter: int addType(java.lang.String)>($stack23);

        $stack25 = 24117248 | $stack24;

        $stack20[$stack18] = $stack25;

        goto label15;

     label12:
        $stack41 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String descriptor>;

        $stack42 = virtualinvoke $stack41.<java.lang.String: char charAt(int)>(l2#4);

        if $stack42 == 59 goto label13;

        l2#4 = l2#4 + 1;

        goto label12;

     label13:
        $stack47 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack43 = l1#1;

        l1#1 = l1#1 + 1;

        $stack49 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack46 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String descriptor>;

        $stack45 = l3 + 1;

        $stack44 = l2#4;

        l2#4 = l2#4 + 1;

        $stack50 = virtualinvoke $stack46.<java.lang.String: java.lang.String substring(int,int)>($stack45, $stack44);

        $stack51 = virtualinvoke $stack49.<jdk.internal.org.objectweb.asm.ClassWriter: int addType(java.lang.String)>($stack50);

        $stack52 = 24117248 | $stack51;

        $stack47[$stack43] = $stack52;

        goto label15;

     label14:
        goto label16;

     label15:
        goto label03;

     label16:
        $stack65 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack64 = l1#1 - 3;

        $stack65[1] = $stack64;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: void endFrame()>();

        return;
    }

    private int startFrame(int, int, int)
    {
        int l2, l3, $stack5, l4, l1, $stack12;
        jdk.internal.org.objectweb.asm.MethodWriter l0;
        int[] $stack6, $stack7, $stack11, $stack8#3, $stack9#11, $stack10#19;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        l1 := @parameter0: int;

        l2 := @parameter1: int;

        l3 := @parameter2: int;

        $stack5 = 3 + l2;

        l4 = $stack5 + l3;

        $stack6 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        if $stack6 == null goto label1;

        $stack11 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack12 = lengthof $stack11;

        if $stack12 >= l4 goto label2;

     label1:
        $stack7 = newarray (int)[l4];

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame> = $stack7;

     label2:
        $stack8#3 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack8#3[0] = l1;

        $stack9#11 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack9#11[1] = l2;

        $stack10#19 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack10#19[2] = l3;

        return 3;
    }

    private void endFrame()
    {
        jdk.internal.org.objectweb.asm.MethodWriter l0;
        int[] $stack1, $stack2#5;
        jdk.internal.org.objectweb.asm.ByteVector $stack3, $stack10;
        int $stack4, $stack5;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        $stack1 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] previousFrame>;

        if $stack1 == null goto label2;

        $stack3 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        if $stack3 != null goto label1;

        $stack10 = new jdk.internal.org.objectweb.asm.ByteVector;

        specialinvoke $stack10.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap> = $stack10;

     label1:
        specialinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: void writeFrame()>();

        $stack4 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int frameCount>;

        $stack5 = $stack4 + 1;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int frameCount> = $stack5;

     label2:
        $stack2#5 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] previousFrame> = $stack2#5;

        l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame> = null;

        return;
    }

    private void writeFrame()
    {
        jdk.internal.org.objectweb.asm.MethodWriter l0;
        int[] $stack9, $stack10, $stack14, $stack16, $stack17, $stack57, $stack58, $stack67, $stack69;
        int l1, l2, $stack12, $stack13, $stack15, $stack18, $stack19, $stack20, $stack21, $stack25, $stack26, $stack30, $stack37, $stack38, $stack39, $stack42, $stack43, $stack50, $stack53, $stack54, $stack55, $stack59, $stack60, $stack70, $stack74, $stack77, $stack78, $stack79, l3#1, l5#3, l6#4, l7#15, l8#16;
        jdk.internal.org.objectweb.asm.ClassWriter $stack11;
        jdk.internal.org.objectweb.asm.ByteVector $stack22, $stack23, $stack27, $stack28, $stack31, $stack32, $stack34, $stack35, $stack40, $stack44, $stack46, $stack47, $stack48, $stack51, $stack71, $stack72, $stack75;
        short l4#2, $stack66#5, $stack65#6;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        $stack9 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        l1 = $stack9[1];

        $stack10 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        l2 = $stack10[2];

        $stack11 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack12 = $stack11.<jdk.internal.org.objectweb.asm.ClassWriter: int version>;

        $stack13 = $stack12 & 65535;

        if $stack13 >= 50 goto label01;

        $stack71 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack69 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack70 = $stack69[0];

        $stack72 = virtualinvoke $stack71.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack70);

        virtualinvoke $stack72.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(l1);

        $stack74 = 3 + l1;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: void writeFrameTypes(int,int)>(3, $stack74);

        $stack75 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        virtualinvoke $stack75.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(l2);

        $stack79 = 3 + l1;

        $stack77 = 3 + l1;

        $stack78 = $stack77 + l2;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: void writeFrameTypes(int,int)>($stack79, $stack78);

        return;

     label01:
        $stack14 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] previousFrame>;

        l3#1 = $stack14[1];

        l4#2 = 255;

        l5#3 = 0;

        $stack15 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int frameCount>;

        if $stack15 != 0 goto label02;

        $stack67 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        l6#4 = $stack67[0];

        goto label03;

     label02:
        $stack16 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack19 = $stack16[0];

        $stack17 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] previousFrame>;

        $stack18 = $stack17[0];

        $stack20 = $stack19 - $stack18;

        l6#4 = $stack20 - 1;

     label03:
        if l2 != 0 goto label10;

        l5#3 = l1 - l3#1;

        tableswitch(l5#3)
        {
            case -3: goto label04;
            case -2: goto label04;
            case -1: goto label04;
            case 0: goto label05;
            case 1: goto label08;
            case 2: goto label08;
            case 3: goto label08;
            default: goto label09;
        };

     label04:
        l4#2 = 248;

        l3#1 = l1;

        goto label09;

     label05:
        if l6#4 >= 64 goto label06;

        $stack66#5 = 0;

        goto label07;

     label06:
        $stack66#5 = 251;

     label07:
        l4#2 = $stack66#5;

        goto label09;

     label08:
        l4#2 = 252;

     label09:
        goto label13;

     label10:
        if l1 != l3#1 goto label13;

        if l2 != 1 goto label13;

        if l6#4 >= 63 goto label11;

        $stack65#6 = 64;

        goto label12;

     label11:
        $stack65#6 = 247;

     label12:
        l4#2 = $stack65#6;

     label13:
        if l4#2 == 255 goto label16;

        l7#15 = 3;

        l8#16 = 0;

     label14:
        if l8#16 >= l3#1 goto label16;

        $stack57 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack60 = $stack57[l7#15];

        $stack58 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] previousFrame>;

        $stack59 = $stack58[l7#15];

        if $stack60 == $stack59 goto label15;

        l4#2 = 255;

        goto label16;

     label15:
        l7#15 = l7#15 + 1;

        l8#16 = l8#16 + 1;

        goto label14;

     label16:
        lookupswitch(l4#2)
        {
            case 0: goto label17;
            case 64: goto label18;
            case 247: goto label19;
            case 248: goto label21;
            case 251: goto label20;
            case 252: goto label22;
            default: goto label23;
        };

     label17:
        $stack44 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        virtualinvoke $stack44.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(l6#4);

        goto label24;

     label18:
        $stack40 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack39 = 64 + l6#4;

        virtualinvoke $stack40.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>($stack39);

        $stack43 = 3 + l1;

        $stack42 = 4 + l1;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: void writeFrameTypes(int,int)>($stack43, $stack42);

        goto label24;

     label19:
        $stack34 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack35 = virtualinvoke $stack34.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(247);

        virtualinvoke $stack35.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(l6#4);

        $stack38 = 3 + l1;

        $stack37 = 4 + l1;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: void writeFrameTypes(int,int)>($stack38, $stack37);

        goto label24;

     label20:
        $stack27 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack28 = virtualinvoke $stack27.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(251);

        virtualinvoke $stack28.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(l6#4);

        goto label24;

     label21:
        $stack31 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack30 = 251 + l5#3;

        $stack32 = virtualinvoke $stack31.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>($stack30);

        virtualinvoke $stack32.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(l6#4);

        goto label24;

     label22:
        $stack22 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack21 = 251 + l5#3;

        $stack23 = virtualinvoke $stack22.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>($stack21);

        virtualinvoke $stack23.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(l6#4);

        $stack26 = 3 + l3#1;

        $stack25 = 3 + l1;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: void writeFrameTypes(int,int)>($stack26, $stack25);

        goto label24;

     label23:
        $stack46 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack47 = virtualinvoke $stack46.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(255);

        $stack48 = virtualinvoke $stack47.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(l6#4);

        virtualinvoke $stack48.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(l1);

        $stack50 = 3 + l1;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: void writeFrameTypes(int,int)>(3, $stack50);

        $stack51 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        virtualinvoke $stack51.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(l2);

        $stack55 = 3 + l1;

        $stack53 = 3 + l1;

        $stack54 = $stack53 + l2;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.MethodWriter: void writeFrameTypes(int,int)>($stack55, $stack54);

     label24:
        return;
    }

    private void writeFrameTypes(int, int)
    {
        int l1, l2, l4, $stack9, $stack10, $stack11, $stack34, $stack41, $stack47, $stack56, l3#1, l5#2, l6#3, l5#5, $stack17#70;
        jdk.internal.org.objectweb.asm.MethodWriter l0;
        int[] $stack7;
        java.lang.StringBuilder $stack8;
        jdk.internal.org.objectweb.asm.ClassWriter $stack33, $stack44, $stack51, $stack55, $stack15#46;
        jdk.internal.org.objectweb.asm.Item[] $stack35, $stack45, $stack52;
        jdk.internal.org.objectweb.asm.Item $stack36, $stack46, $stack53;
        java.lang.String $stack37, $stack54, $stack16#62;
        jdk.internal.org.objectweb.asm.ByteVector $stack42, $stack43, $stack49, $stack50, $stack58, $stack13#14, $stack14#30;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        l1 := @parameter0: int;

        l2 := @parameter1: int;

        l3#1 = l1;

     label01:
        if l3#1 >= l2 goto label20;

        $stack7 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        l4 = $stack7[l3#1];

        l5#2 = l4 & -268435456;

        if l5#2 != 0 goto label06;

        l6#3 = l4 & 1048575;

        $stack41 = l4 & 267386880;

        lookupswitch($stack41)
        {
            case 24117248: goto label02;
            case 25165824: goto label03;
            default: goto label04;
        };

     label02:
        $stack49 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack50 = virtualinvoke $stack49.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(7);

        $stack55 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack51 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack52 = $stack51.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item[] typeTable>;

        $stack53 = $stack52[l6#3];

        $stack54 = $stack53.<jdk.internal.org.objectweb.asm.Item: java.lang.String strVal1>;

        $stack56 = virtualinvoke $stack55.<jdk.internal.org.objectweb.asm.ClassWriter: int newClass(java.lang.String)>($stack54);

        virtualinvoke $stack50.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack56);

        goto label05;

     label03:
        $stack42 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack43 = virtualinvoke $stack42.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(8);

        $stack44 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack45 = $stack44.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item[] typeTable>;

        $stack46 = $stack45[l6#3];

        $stack47 = $stack46.<jdk.internal.org.objectweb.asm.Item: int intVal>;

        virtualinvoke $stack43.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack47);

        goto label05;

     label04:
        $stack58 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        virtualinvoke $stack58.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(l6#3);

     label05:
        goto label19;

     label06:
        $stack8 = new java.lang.StringBuilder;

        specialinvoke $stack8.<java.lang.StringBuilder: void <init>()>();

        l5#5 = l5#2 >> 28;

     label07:
        $stack9 = l5#5;

        l5#5 = l5#5 + -1;

        if $stack9 <= 0 goto label08;

        virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        goto label07;

     label08:
        $stack10 = l4 & 267386880;

        if $stack10 != 24117248 goto label09;

        virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(76);

        $stack33 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack35 = $stack33.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item[] typeTable>;

        $stack34 = l4 & 1048575;

        $stack36 = $stack35[$stack34];

        $stack37 = $stack36.<jdk.internal.org.objectweb.asm.Item: java.lang.String strVal1>;

        virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack37);

        virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(59);

        goto label18;

     label09:
        $stack11 = l4 & 15;

        tableswitch($stack11)
        {
            case 1: goto label10;
            case 2: goto label11;
            case 3: goto label12;
            case 4: goto label17;
            case 5: goto label17;
            case 6: goto label17;
            case 7: goto label17;
            case 8: goto label17;
            case 9: goto label13;
            case 10: goto label14;
            case 11: goto label15;
            case 12: goto label16;
            default: goto label17;
        };

     label10:
        virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(73);

        goto label18;

     label11:
        virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(70);

        goto label18;

     label12:
        virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(68);

        goto label18;

     label13:
        virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(90);

        goto label18;

     label14:
        virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(66);

        goto label18;

     label15:
        virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(67);

        goto label18;

     label16:
        virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(83);

        goto label18;

     label17:
        virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(74);

     label18:
        $stack13#14 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack14#30 = virtualinvoke $stack13#14.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(7);

        $stack15#46 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack16#62 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack17#70 = virtualinvoke $stack15#46.<jdk.internal.org.objectweb.asm.ClassWriter: int newClass(java.lang.String)>($stack16#62);

        virtualinvoke $stack14#30.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack17#70);

     label19:
        l3#1 = l3#1 + 1;

        goto label01;

     label20:
        return;
    }

    private void writeFrameType(java.lang.Object)
    {
        java.lang.Object l1;
        boolean $stack2, $stack3;
        jdk.internal.org.objectweb.asm.MethodWriter l0;
        jdk.internal.org.objectweb.asm.ByteVector $stack4, $stack5, $stack10, $stack13, $stack14;
        jdk.internal.org.objectweb.asm.Label $stack6;
        int $stack7, $stack11, $stack17;
        java.lang.Integer $stack9;
        java.lang.String $stack15;
        jdk.internal.org.objectweb.asm.ClassWriter $stack16;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        l1 := @parameter0: java.lang.Object;

        $stack2 = l1 instanceof java.lang.String;

        if $stack2 == 0 goto label1;

        $stack13 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack14 = virtualinvoke $stack13.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(7);

        $stack16 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack15 = (java.lang.String) l1;

        $stack17 = virtualinvoke $stack16.<jdk.internal.org.objectweb.asm.ClassWriter: int newClass(java.lang.String)>($stack15);

        virtualinvoke $stack14.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack17);

        goto label3;

     label1:
        $stack3 = l1 instanceof java.lang.Integer;

        if $stack3 == 0 goto label2;

        $stack10 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack9 = (java.lang.Integer) l1;

        $stack11 = virtualinvoke $stack9.<java.lang.Integer: int intValue()>();

        virtualinvoke $stack10.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>($stack11);

        goto label3;

     label2:
        $stack4 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack5 = virtualinvoke $stack4.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(8);

        $stack6 = (jdk.internal.org.objectweb.asm.Label) l1;

        $stack7 = $stack6.<jdk.internal.org.objectweb.asm.Label: int position>;

        virtualinvoke $stack5.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack7);

     label3:
        return;
    }

    final int getSize()
    {
        jdk.internal.org.objectweb.asm.MethodWriter l0;
        int $stack3, $stack5, $stack7, $stack8, $stack23, $stack28, $stack29, $stack30, $stack31, $stack32, $stack34, $stack35, $stack44, $stack45, $stack49, $stack50, $stack51, $stack52, $stack53, $stack55, $stack56, $stack65, $stack66, $stack71, $stack72, $stack78, $stack79, $stack85, $stack86, $stack92, $stack93, $stack98, $stack99, $stack104, $stack105, $stack117, $stack118, $stack123, $stack124, $stack129, $stack130, $stack131, $stack135, $stack139, $stack140, $stack141, $stack142, $stack143, $stack154, $stack155, $stack156, $stack160, $stack165, $stack166, $stack172, $stack173, $stack176, $stack177, $stack181, $stack182, $stack188, $stack195, $stack196, $stack201, $stack202, $stack207, $stack208, $stack211, $stack212, l1#1, $stack6#11, $stack9#16, $stack10#22, l2#25, $stack62#26, l2#27, $stack41#28;
        jdk.internal.org.objectweb.asm.ByteVector $stack4, $stack12, $stack13, $stack97, $stack103, $stack134, $stack138, $stack144, $stack145, $stack146, $stack147, $stack152, $stack153, $stack180, $stack194, $stack200, $stack206;
        java.lang.String $stack11, $stack109, $stack184#4;
        jdk.internal.org.objectweb.asm.AnnotationWriter $stack14, $stack15, $stack16, $stack17, $stack38, $stack40, $stack59, $stack61, $stack69, $stack76, $stack83, $stack90, $stack149, $stack163, $stack170, $stack148#7;
        jdk.internal.org.objectweb.asm.AnnotationWriter[] $stack18, $stack19, $stack27, $stack33, $stack37, $stack39, $stack48, $stack54, $stack58, $stack60;
        jdk.internal.org.objectweb.asm.Attribute $stack20, $stack22, $stack150, $stack159;
        jdk.internal.org.objectweb.asm.ClassWriter $stack21, $stack25, $stack46, $stack67, $stack74, $stack81, $stack88, $stack95, $stack101, $stack107, $stack110, $stack113, $stack116, $stack119, $stack127, $stack136, $stack158, $stack161, $stack168, $stack175, $stack178, $stack192, $stack198, $stack204;
        byte[] $stack157;
        java.lang.RuntimeException $stack210;
        boolean $stack189#2;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        $stack3 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int classReaderOffset>;

        if $stack3 == 0 goto label01;

        $stack211 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int classReaderLength>;

        $stack212 = 6 + $stack211;

        return $stack212;

     label01:
        l1#1 = 8;

        $stack4 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack5 = $stack4.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        if $stack5 <= 0 goto label13;

        $stack134 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack135 = $stack134.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        if $stack135 <= 65536 goto label02;

        $stack210 = new java.lang.RuntimeException;

        specialinvoke $stack210.<java.lang.RuntimeException: void <init>(java.lang.String)>("Method code too large!");

        throw $stack210;

     label02:
        $stack136 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        virtualinvoke $stack136.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("Code");

        $stack138 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack139 = $stack138.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack142 = 18 + $stack139;

        $stack140 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int handlerCount>;

        $stack141 = 8 * $stack140;

        $stack143 = $stack142 + $stack141;

        l1#1 = 8 + $stack143;

        $stack144 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVar>;

        if $stack144 == null goto label03;

        $stack204 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        virtualinvoke $stack204.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("LocalVariableTable");

        $stack206 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVar>;

        $stack207 = $stack206.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack208 = 8 + $stack207;

        l1#1 = l1#1 + $stack208;

     label03:
        $stack145 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVarType>;

        if $stack145 == null goto label04;

        $stack198 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        virtualinvoke $stack198.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("LocalVariableTypeTable");

        $stack200 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVarType>;

        $stack201 = $stack200.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack202 = 8 + $stack201;

        l1#1 = l1#1 + $stack202;

     label04:
        $stack146 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector lineNumber>;

        if $stack146 == null goto label05;

        $stack192 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        virtualinvoke $stack192.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("LineNumberTable");

        $stack194 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector lineNumber>;

        $stack195 = $stack194.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack196 = 8 + $stack195;

        l1#1 = l1#1 + $stack196;

     label05:
        $stack147 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        if $stack147 == null goto label10;

        $stack175 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack176 = $stack175.<jdk.internal.org.objectweb.asm.ClassWriter: int version>;

        $stack177 = $stack176 & 65535;

        if $stack177 < 50 goto label06;

        $stack189#2 = 1;

        goto label07;

     label06:
        $stack189#2 = 0;

     label07:
        $stack178 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        if $stack189#2 == 0 goto label08;

        $stack184#4 = "StackMapTable";

        goto label09;

     label08:
        $stack184#4 = "StackMap";

     label09:
        virtualinvoke $stack178.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>($stack184#4);

        $stack180 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack181 = $stack180.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack182 = 8 + $stack181;

        $stack188 = l1#1 + $stack182;

        l1#1 = $stack188;

     label10:
        $stack148#7 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ctanns>;

        if $stack148#7 == null goto label11;

        $stack168 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        virtualinvoke $stack168.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeVisibleTypeAnnotations");

        $stack170 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ctanns>;

        $stack172 = virtualinvoke $stack170.<jdk.internal.org.objectweb.asm.AnnotationWriter: int getSize()>();

        $stack173 = 8 + $stack172;

        l1#1 = l1#1 + $stack173;

     label11:
        $stack149 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ictanns>;

        if $stack149 == null goto label12;

        $stack161 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        virtualinvoke $stack161.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeInvisibleTypeAnnotations");

        $stack163 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ictanns>;

        $stack165 = virtualinvoke $stack163.<jdk.internal.org.objectweb.asm.AnnotationWriter: int getSize()>();

        $stack166 = 8 + $stack165;

        l1#1 = l1#1 + $stack166;

     label12:
        $stack150 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Attribute cattrs>;

        if $stack150 == null goto label13;

        $stack159 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Attribute cattrs>;

        $stack158 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack152 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack157 = $stack152.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        $stack153 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack156 = $stack153.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack155 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStack>;

        $stack154 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxLocals>;

        $stack160 = virtualinvoke $stack159.<jdk.internal.org.objectweb.asm.Attribute: int getSize(jdk.internal.org.objectweb.asm.ClassWriter,byte[],int,int,int)>($stack158, $stack157, $stack156, $stack155, $stack154);

        l1#1 = l1#1 + $stack160;

     label13:
        $stack6#11 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int exceptionCount>;

        if $stack6#11 <= 0 goto label14;

        $stack127 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        virtualinvoke $stack127.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("Exceptions");

        $stack129 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int exceptionCount>;

        $stack130 = 2 * $stack129;

        $stack131 = 8 + $stack130;

        l1#1 = l1#1 + $stack131;

     label14:
        $stack7 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int access>;

        $stack8 = $stack7 & 4096;

        if $stack8 == 0 goto label16;

        $stack116 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack117 = $stack116.<jdk.internal.org.objectweb.asm.ClassWriter: int version>;

        $stack118 = $stack117 & 65535;

        if $stack118 < 49 goto label15;

        $stack123 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int access>;

        $stack124 = $stack123 & 262144;

        if $stack124 == 0 goto label16;

     label15:
        $stack119 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        virtualinvoke $stack119.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("Synthetic");

        l1#1 = l1#1 + 6;

     label16:
        $stack9#16 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int access>;

        $stack10#22 = $stack9#16 & 131072;

        if $stack10#22 == 0 goto label17;

        $stack113 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        virtualinvoke $stack113.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("Deprecated");

        l1#1 = l1#1 + 6;

     label17:
        $stack11 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String signature>;

        if $stack11 == null goto label18;

        $stack107 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        virtualinvoke $stack107.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("Signature");

        $stack110 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack109 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String signature>;

        virtualinvoke $stack110.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>($stack109);

        l1#1 = l1#1 + 8;

     label18:
        $stack12 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector methodParameters>;

        if $stack12 == null goto label19;

        $stack101 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        virtualinvoke $stack101.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("MethodParameters");

        $stack103 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector methodParameters>;

        $stack104 = $stack103.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack105 = 7 + $stack104;

        l1#1 = l1#1 + $stack105;

     label19:
        $stack13 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector annd>;

        if $stack13 == null goto label20;

        $stack95 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        virtualinvoke $stack95.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("AnnotationDefault");

        $stack97 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector annd>;

        $stack98 = $stack97.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack99 = 6 + $stack98;

        l1#1 = l1#1 + $stack99;

     label20:
        $stack14 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter anns>;

        if $stack14 == null goto label21;

        $stack88 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        virtualinvoke $stack88.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeVisibleAnnotations");

        $stack90 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter anns>;

        $stack92 = virtualinvoke $stack90.<jdk.internal.org.objectweb.asm.AnnotationWriter: int getSize()>();

        $stack93 = 8 + $stack92;

        l1#1 = l1#1 + $stack93;

     label21:
        $stack15 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ianns>;

        if $stack15 == null goto label22;

        $stack81 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        virtualinvoke $stack81.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeInvisibleAnnotations");

        $stack83 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ianns>;

        $stack85 = virtualinvoke $stack83.<jdk.internal.org.objectweb.asm.AnnotationWriter: int getSize()>();

        $stack86 = 8 + $stack85;

        l1#1 = l1#1 + $stack86;

     label22:
        $stack16 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter tanns>;

        if $stack16 == null goto label23;

        $stack74 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        virtualinvoke $stack74.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeVisibleTypeAnnotations");

        $stack76 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter tanns>;

        $stack78 = virtualinvoke $stack76.<jdk.internal.org.objectweb.asm.AnnotationWriter: int getSize()>();

        $stack79 = 8 + $stack78;

        l1#1 = l1#1 + $stack79;

     label23:
        $stack17 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter itanns>;

        if $stack17 == null goto label24;

        $stack67 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        virtualinvoke $stack67.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeInvisibleTypeAnnotations");

        $stack69 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter itanns>;

        $stack71 = virtualinvoke $stack69.<jdk.internal.org.objectweb.asm.AnnotationWriter: int getSize()>();

        $stack72 = 8 + $stack71;

        l1#1 = l1#1 + $stack72;

     label24:
        $stack18 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] panns>;

        if $stack18 == null goto label28;

        $stack46 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        virtualinvoke $stack46.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeVisibleParameterAnnotations");

        $stack48 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] panns>;

        $stack50 = lengthof $stack48;

        $stack49 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int synthetics>;

        $stack51 = $stack50 - $stack49;

        $stack52 = 2 * $stack51;

        $stack53 = 7 + $stack52;

        l1#1 = l1#1 + $stack53;

        $stack54 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] panns>;

        $stack55 = lengthof $stack54;

        l2#25 = $stack55 - 1;

     label25:
        $stack56 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int synthetics>;

        if l2#25 < $stack56 goto label28;

        $stack65 = l1#1;

        $stack58 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] panns>;

        $stack59 = $stack58[l2#25];

        if $stack59 != null goto label26;

        $stack62#26 = 0;

        goto label27;

     label26:
        $stack60 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] panns>;

        $stack61 = $stack60[l2#25];

        $stack62#26 = virtualinvoke $stack61.<jdk.internal.org.objectweb.asm.AnnotationWriter: int getSize()>();

     label27:
        $stack66 = $stack65 + $stack62#26;

        l1#1 = $stack66;

        l2#25 = l2#25 + -1;

        goto label25;

     label28:
        $stack19 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] ipanns>;

        if $stack19 == null goto label32;

        $stack25 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        virtualinvoke $stack25.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeInvisibleParameterAnnotations");

        $stack27 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] ipanns>;

        $stack29 = lengthof $stack27;

        $stack28 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int synthetics>;

        $stack30 = $stack29 - $stack28;

        $stack31 = 2 * $stack30;

        $stack32 = 7 + $stack31;

        l1#1 = l1#1 + $stack32;

        $stack33 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] ipanns>;

        $stack34 = lengthof $stack33;

        l2#27 = $stack34 - 1;

     label29:
        $stack35 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int synthetics>;

        if l2#27 < $stack35 goto label32;

        $stack44 = l1#1;

        $stack37 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] ipanns>;

        $stack38 = $stack37[l2#27];

        if $stack38 != null goto label30;

        $stack41#28 = 0;

        goto label31;

     label30:
        $stack39 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] ipanns>;

        $stack40 = $stack39[l2#27];

        $stack41#28 = virtualinvoke $stack40.<jdk.internal.org.objectweb.asm.AnnotationWriter: int getSize()>();

     label31:
        $stack45 = $stack44 + $stack41#28;

        l1#1 = $stack45;

        l2#27 = l2#27 + -1;

        goto label29;

     label32:
        $stack20 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Attribute attrs>;

        if $stack20 == null goto label33;

        $stack22 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Attribute attrs>;

        $stack21 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack23 = virtualinvoke $stack22.<jdk.internal.org.objectweb.asm.Attribute: int getSize(jdk.internal.org.objectweb.asm.ClassWriter,byte[],int,int,int)>($stack21, null, 0, -1, -1);

        l1#1 = l1#1 + $stack23;

     label33:
        return l1#1;
    }

    final void put(jdk.internal.org.objectweb.asm.ByteVector)
    {
        jdk.internal.org.objectweb.asm.MethodWriter l0;
        int $stack7, $stack8, $stack9, l3, $stack10, $stack11, $stack12, $stack14, $stack16, $stack18, $stack20, $stack21, $stack22, $stack23, $stack38, $stack40, $stack41, $stack57, $stack59, $stack63, $stack65, $stack69, $stack74, $stack79, $stack84, $stack89, $stack92, $stack96, $stack101, $stack104, $stack105, $stack107, $stack111, $stack116, $stack121, $stack125, $stack130, $stack131, $stack133, $stack138, $stack139, $stack145, $stack147, $stack148, $stack149, $stack151, $stack153, $stack157, $stack162, $stack163, $stack164, $stack165, $stack174, $stack177, $stack179, $stack182, $stack186, $stack189, $stack191, $stack210, $stack211, $stack212, $stack217, $stack222, $stack227, $stack228, $stack230, $stack233, $stack234, $stack236, $stack240, $stack258, $stack261, $stack262, $stack264, $stack268, $stack273, $stack276, $stack277, $stack279, $stack283, $stack288, $stack291, $stack292, $stack294, $stack298, $stack303, $stack316, $stack319, $stack322, $stack324, $stack329, $stack330, $stack331, $stack335, $stack353, $stack354, $stack358, $stack359, $stack362, $stack363, $stack366, $stack367, $stack370, $stack371, $stack374, $stack375, $stack378, $stack393, $stack394, $stack397, $stack398, $stack404, $stack405, l4#1, $stack24#5, $stack25#11, l5#14, l4#16, $stack39#26, l5#28, $stack42#32, $stack43#38;
        jdk.internal.org.objectweb.asm.ByteVector l1, $stack13, $stack15, $stack19, $stack27, $stack28, $stack37, $stack45, $stack46, $stack91, $stack94, $stack95, $stack103, $stack106, $stack109, $stack110, $stack117, $stack118, $stack126, $stack134, $stack146, $stack161, $stack166, $stack167, $stack168, $stack169, $stack175, $stack178, $stack181, $stack183, $stack184, $stack185, $stack192, $stack193, $stack194, $stack195, $stack200, $stack201, $stack202, $stack203, $stack208, $stack209, $stack232, $stack235, $stack238, $stack239, $stack260, $stack263, $stack266, $stack267, $stack275, $stack278, $stack281, $stack282, $stack290, $stack293, $stack296, $stack297, $stack317, $stack320, $stack323, $stack327, $stack328, $stack361, $stack365, $stack369, $stack373;
        java.lang.String $stack26, $stack44, $stack119, $stack244#19;
        jdk.internal.org.objectweb.asm.AnnotationWriter $stack29, $stack30, $stack31, $stack32, $stack47, $stack48, $stack49, $stack50, $stack71, $stack76, $stack81, $stack86, $stack170, $stack171, $stack196, $stack197, $stack205, $stack219, $stack224, $stack351, $stack356, $stack204#22;
        jdk.internal.org.objectweb.asm.AnnotationWriter[] $stack33, $stack34, $stack51, $stack52, $stack60, $stack66;
        jdk.internal.org.objectweb.asm.Attribute $stack35, $stack53, $stack55, $stack172, $stack198, $stack206, $stack215, $stack302, $stack334, $stack377;
        jdk.internal.org.objectweb.asm.ClassWriter $stack54, $stack56, $stack62, $stack68, $stack73, $stack78, $stack83, $stack88, $stack100, $stack115, $stack120, $stack124, $stack129, $stack132, $stack144, $stack173, $stack214, $stack216, $stack221, $stack226, $stack229, $stack257, $stack272, $stack287, $stack333, $stack392, $stack402;
        byte[] $stack97, $stack112, $stack187, $stack213, $stack241, $stack269, $stack284, $stack299, $stack332, $stack406;
        int[] $stack156;
        jdk.internal.org.objectweb.asm.Label $stack315, $stack318, $stack321;
        jdk.internal.org.objectweb.asm.ClassReader $stack403;
        jdk.internal.org.objectweb.asm.Handler l6#15;
        boolean $stack254#17;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.ByteVector;

        $stack7 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int access>;

        $stack8 = $stack7 & 262144;

        $stack9 = $stack8 / 64;

        l3 = 917504 | $stack9;

        $stack11 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int access>;

        $stack10 = l3 ^ -1;

        $stack12 = $stack11 & $stack10;

        $stack13 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack12);

        $stack14 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int name>;

        $stack15 = virtualinvoke $stack13.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack14);

        $stack16 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int desc>;

        virtualinvoke $stack15.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack16);

        $stack18 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int classReaderOffset>;

        if $stack18 == 0 goto label01;

        $stack402 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack403 = $stack402.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ClassReader cr>;

        $stack406 = $stack403.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack405 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int classReaderOffset>;

        $stack404 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int classReaderLength>;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($stack406, $stack405, $stack404);

        return;

     label01:
        l4#1 = 0;

        $stack19 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack20 = $stack19.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        if $stack20 <= 0 goto label02;

        l4#1 = 0 + 1;

     label02:
        $stack21 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int exceptionCount>;

        if $stack21 <= 0 goto label03;

        l4#1 = l4#1 + 1;

     label03:
        $stack22 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int access>;

        $stack23 = $stack22 & 4096;

        if $stack23 == 0 goto label05;

        $stack392 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack393 = $stack392.<jdk.internal.org.objectweb.asm.ClassWriter: int version>;

        $stack394 = $stack393 & 65535;

        if $stack394 < 49 goto label04;

        $stack397 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int access>;

        $stack398 = $stack397 & 262144;

        if $stack398 == 0 goto label05;

     label04:
        l4#1 = l4#1 + 1;

     label05:
        $stack24#5 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int access>;

        $stack25#11 = $stack24#5 & 131072;

        if $stack25#11 == 0 goto label06;

        l4#1 = l4#1 + 1;

     label06:
        $stack26 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String signature>;

        if $stack26 == null goto label07;

        l4#1 = l4#1 + 1;

     label07:
        $stack27 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector methodParameters>;

        if $stack27 == null goto label08;

        l4#1 = l4#1 + 1;

     label08:
        $stack28 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector annd>;

        if $stack28 == null goto label09;

        l4#1 = l4#1 + 1;

     label09:
        $stack29 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter anns>;

        if $stack29 == null goto label10;

        l4#1 = l4#1 + 1;

     label10:
        $stack30 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ianns>;

        if $stack30 == null goto label11;

        l4#1 = l4#1 + 1;

     label11:
        $stack31 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter tanns>;

        if $stack31 == null goto label12;

        l4#1 = l4#1 + 1;

     label12:
        $stack32 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter itanns>;

        if $stack32 == null goto label13;

        l4#1 = l4#1 + 1;

     label13:
        $stack33 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] panns>;

        if $stack33 == null goto label14;

        l4#1 = l4#1 + 1;

     label14:
        $stack34 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] ipanns>;

        if $stack34 == null goto label15;

        l4#1 = l4#1 + 1;

     label15:
        $stack35 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Attribute attrs>;

        if $stack35 == null goto label16;

        $stack377 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Attribute attrs>;

        $stack378 = virtualinvoke $stack377.<jdk.internal.org.objectweb.asm.Attribute: int getCount()>();

        l4#1 = l4#1 + $stack378;

     label16:
        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(l4#1);

        $stack37 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack38 = $stack37.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        if $stack38 <= 0 goto label43;

        $stack161 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack162 = $stack161.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack165 = 12 + $stack162;

        $stack163 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int handlerCount>;

        $stack164 = 8 * $stack163;

        l5#14 = $stack165 + $stack164;

        $stack166 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVar>;

        if $stack166 == null goto label17;

        $stack373 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVar>;

        $stack374 = $stack373.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack375 = 8 + $stack374;

        l5#14 = l5#14 + $stack375;

     label17:
        $stack167 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVarType>;

        if $stack167 == null goto label18;

        $stack369 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVarType>;

        $stack370 = $stack369.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack371 = 8 + $stack370;

        l5#14 = l5#14 + $stack371;

     label18:
        $stack168 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector lineNumber>;

        if $stack168 == null goto label19;

        $stack365 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector lineNumber>;

        $stack366 = $stack365.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack367 = 8 + $stack366;

        l5#14 = l5#14 + $stack367;

     label19:
        $stack169 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        if $stack169 == null goto label20;

        $stack361 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack362 = $stack361.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack363 = 8 + $stack362;

        l5#14 = l5#14 + $stack363;

     label20:
        $stack170 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ctanns>;

        if $stack170 == null goto label21;

        $stack356 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ctanns>;

        $stack358 = virtualinvoke $stack356.<jdk.internal.org.objectweb.asm.AnnotationWriter: int getSize()>();

        $stack359 = 8 + $stack358;

        l5#14 = l5#14 + $stack359;

     label21:
        $stack171 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ictanns>;

        if $stack171 == null goto label22;

        $stack351 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ictanns>;

        $stack353 = virtualinvoke $stack351.<jdk.internal.org.objectweb.asm.AnnotationWriter: int getSize()>();

        $stack354 = 8 + $stack353;

        l5#14 = l5#14 + $stack354;

     label22:
        $stack172 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Attribute cattrs>;

        if $stack172 == null goto label23;

        $stack334 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Attribute cattrs>;

        $stack333 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack327 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack332 = $stack327.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        $stack328 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack331 = $stack328.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack330 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStack>;

        $stack329 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxLocals>;

        $stack335 = virtualinvoke $stack334.<jdk.internal.org.objectweb.asm.Attribute: int getSize(jdk.internal.org.objectweb.asm.ClassWriter,byte[],int,int,int)>($stack333, $stack332, $stack331, $stack330, $stack329);

        l5#14 = l5#14 + $stack335;

     label23:
        $stack173 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack174 = virtualinvoke $stack173.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("Code");

        $stack175 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack174);

        virtualinvoke $stack175.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>(l5#14);

        $stack177 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStack>;

        $stack178 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack177);

        $stack179 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxLocals>;

        virtualinvoke $stack178.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack179);

        $stack181 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack182 = $stack181.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack183 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>($stack182);

        $stack184 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack187 = $stack184.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        $stack185 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack186 = $stack185.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        virtualinvoke $stack183.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($stack187, 0, $stack186);

        $stack189 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int handlerCount>;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack189);

        $stack191 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int handlerCount>;

        if $stack191 <= 0 goto label25;

        l6#15 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Handler firstHandler>;

     label24:
        if l6#15 == null goto label25;

        $stack315 = l6#15.<jdk.internal.org.objectweb.asm.Handler: jdk.internal.org.objectweb.asm.Label start>;

        $stack316 = $stack315.<jdk.internal.org.objectweb.asm.Label: int position>;

        $stack317 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack316);

        $stack318 = l6#15.<jdk.internal.org.objectweb.asm.Handler: jdk.internal.org.objectweb.asm.Label end>;

        $stack319 = $stack318.<jdk.internal.org.objectweb.asm.Label: int position>;

        $stack320 = virtualinvoke $stack317.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack319);

        $stack321 = l6#15.<jdk.internal.org.objectweb.asm.Handler: jdk.internal.org.objectweb.asm.Label handler>;

        $stack322 = $stack321.<jdk.internal.org.objectweb.asm.Label: int position>;

        $stack323 = virtualinvoke $stack320.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack322);

        $stack324 = l6#15.<jdk.internal.org.objectweb.asm.Handler: int type>;

        virtualinvoke $stack323.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack324);

        l6#15 = l6#15.<jdk.internal.org.objectweb.asm.Handler: jdk.internal.org.objectweb.asm.Handler next>;

        goto label24;

     label25:
        l4#16 = 0;

        $stack192 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVar>;

        if $stack192 == null goto label26;

        l4#16 = 0 + 1;

     label26:
        $stack193 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVarType>;

        if $stack193 == null goto label27;

        l4#16 = l4#16 + 1;

     label27:
        $stack194 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector lineNumber>;

        if $stack194 == null goto label28;

        l4#16 = l4#16 + 1;

     label28:
        $stack195 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        if $stack195 == null goto label29;

        l4#16 = l4#16 + 1;

     label29:
        $stack196 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ctanns>;

        if $stack196 == null goto label30;

        l4#16 = l4#16 + 1;

     label30:
        $stack197 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ictanns>;

        if $stack197 == null goto label31;

        l4#16 = l4#16 + 1;

     label31:
        $stack198 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Attribute cattrs>;

        if $stack198 == null goto label32;

        $stack302 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Attribute cattrs>;

        $stack303 = virtualinvoke $stack302.<jdk.internal.org.objectweb.asm.Attribute: int getCount()>();

        l4#16 = l4#16 + $stack303;

     label32:
        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(l4#16);

        $stack200 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVar>;

        if $stack200 == null goto label33;

        $stack287 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack288 = virtualinvoke $stack287.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("LocalVariableTable");

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack288);

        $stack290 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVar>;

        $stack291 = $stack290.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack292 = $stack291 + 2;

        $stack293 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>($stack292);

        $stack294 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int localVarCount>;

        virtualinvoke $stack293.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack294);

        $stack296 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVar>;

        $stack299 = $stack296.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        $stack297 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVar>;

        $stack298 = $stack297.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($stack299, 0, $stack298);

     label33:
        $stack201 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVarType>;

        if $stack201 == null goto label34;

        $stack272 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack273 = virtualinvoke $stack272.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("LocalVariableTypeTable");

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack273);

        $stack275 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVarType>;

        $stack276 = $stack275.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack277 = $stack276 + 2;

        $stack278 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>($stack277);

        $stack279 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int localVarTypeCount>;

        virtualinvoke $stack278.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack279);

        $stack281 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVarType>;

        $stack284 = $stack281.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        $stack282 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVarType>;

        $stack283 = $stack282.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($stack284, 0, $stack283);

     label34:
        $stack202 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector lineNumber>;

        if $stack202 == null goto label35;

        $stack257 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack258 = virtualinvoke $stack257.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("LineNumberTable");

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack258);

        $stack260 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector lineNumber>;

        $stack261 = $stack260.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack262 = $stack261 + 2;

        $stack263 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>($stack262);

        $stack264 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int lineNumberCount>;

        virtualinvoke $stack263.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack264);

        $stack266 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector lineNumber>;

        $stack269 = $stack266.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        $stack267 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector lineNumber>;

        $stack268 = $stack267.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($stack269, 0, $stack268);

     label35:
        $stack203 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        if $stack203 == null goto label40;

        $stack226 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack227 = $stack226.<jdk.internal.org.objectweb.asm.ClassWriter: int version>;

        $stack228 = $stack227 & 65535;

        if $stack228 < 50 goto label36;

        $stack254#17 = 1;

        goto label37;

     label36:
        $stack254#17 = 0;

     label37:
        $stack229 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        if $stack254#17 == 0 goto label38;

        $stack244#19 = "StackMapTable";

        goto label39;

     label38:
        $stack244#19 = "StackMap";

     label39:
        $stack230 = virtualinvoke $stack229.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>($stack244#19);

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack230);

        $stack232 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack233 = $stack232.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack234 = $stack233 + 2;

        $stack235 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>($stack234);

        $stack236 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int frameCount>;

        virtualinvoke $stack235.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack236);

        $stack238 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack241 = $stack238.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        $stack239 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack240 = $stack239.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($stack241, 0, $stack240);

     label40:
        $stack204#22 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ctanns>;

        if $stack204#22 == null goto label41;

        $stack221 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack222 = virtualinvoke $stack221.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeVisibleTypeAnnotations");

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack222);

        $stack224 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ctanns>;

        virtualinvoke $stack224.<jdk.internal.org.objectweb.asm.AnnotationWriter: void put(jdk.internal.org.objectweb.asm.ByteVector)>(l1);

     label41:
        $stack205 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ictanns>;

        if $stack205 == null goto label42;

        $stack216 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack217 = virtualinvoke $stack216.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeInvisibleTypeAnnotations");

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack217);

        $stack219 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ictanns>;

        virtualinvoke $stack219.<jdk.internal.org.objectweb.asm.AnnotationWriter: void put(jdk.internal.org.objectweb.asm.ByteVector)>(l1);

     label42:
        $stack206 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Attribute cattrs>;

        if $stack206 == null goto label43;

        $stack215 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Attribute cattrs>;

        $stack214 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack208 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack213 = $stack208.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        $stack209 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack212 = $stack209.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack211 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxLocals>;

        $stack210 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStack>;

        virtualinvoke $stack215.<jdk.internal.org.objectweb.asm.Attribute: void put(jdk.internal.org.objectweb.asm.ClassWriter,byte[],int,int,int,jdk.internal.org.objectweb.asm.ByteVector)>($stack214, $stack213, $stack212, $stack211, $stack210, l1);

     label43:
        $stack39#26 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int exceptionCount>;

        if $stack39#26 <= 0 goto label45;

        $stack144 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack145 = virtualinvoke $stack144.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("Exceptions");

        $stack146 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack145);

        $stack147 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int exceptionCount>;

        $stack148 = 2 * $stack147;

        $stack149 = $stack148 + 2;

        virtualinvoke $stack146.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>($stack149);

        $stack151 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int exceptionCount>;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack151);

        l5#28 = 0;

     label44:
        $stack153 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int exceptionCount>;

        if l5#28 >= $stack153 goto label45;

        $stack156 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int[] exceptions>;

        $stack157 = $stack156[l5#28];

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack157);

        l5#28 = l5#28 + 1;

        goto label44;

     label45:
        $stack40 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int access>;

        $stack41 = $stack40 & 4096;

        if $stack41 == 0 goto label47;

        $stack129 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack130 = $stack129.<jdk.internal.org.objectweb.asm.ClassWriter: int version>;

        $stack131 = $stack130 & 65535;

        if $stack131 < 49 goto label46;

        $stack138 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int access>;

        $stack139 = $stack138 & 262144;

        if $stack139 == 0 goto label47;

     label46:
        $stack132 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack133 = virtualinvoke $stack132.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("Synthetic");

        $stack134 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack133);

        virtualinvoke $stack134.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>(0);

     label47:
        $stack42#32 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int access>;

        $stack43#38 = $stack42#32 & 131072;

        if $stack43#38 == 0 goto label48;

        $stack124 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack125 = virtualinvoke $stack124.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("Deprecated");

        $stack126 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack125);

        virtualinvoke $stack126.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>(0);

     label48:
        $stack44 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String signature>;

        if $stack44 == null goto label49;

        $stack115 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack116 = virtualinvoke $stack115.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("Signature");

        $stack117 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack116);

        $stack118 = virtualinvoke $stack117.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>(2);

        $stack120 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack119 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String signature>;

        $stack121 = virtualinvoke $stack120.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>($stack119);

        virtualinvoke $stack118.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack121);

     label49:
        $stack45 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector methodParameters>;

        if $stack45 == null goto label50;

        $stack100 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack101 = virtualinvoke $stack100.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("MethodParameters");

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack101);

        $stack103 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector methodParameters>;

        $stack104 = $stack103.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack105 = $stack104 + 1;

        $stack106 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>($stack105);

        $stack107 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int methodParametersCount>;

        virtualinvoke $stack106.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>($stack107);

        $stack109 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector methodParameters>;

        $stack112 = $stack109.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        $stack110 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector methodParameters>;

        $stack111 = $stack110.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($stack112, 0, $stack111);

     label50:
        $stack46 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector annd>;

        if $stack46 == null goto label51;

        $stack88 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack89 = virtualinvoke $stack88.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("AnnotationDefault");

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack89);

        $stack91 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector annd>;

        $stack92 = $stack91.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>($stack92);

        $stack94 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector annd>;

        $stack97 = $stack94.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        $stack95 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector annd>;

        $stack96 = $stack95.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($stack97, 0, $stack96);

     label51:
        $stack47 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter anns>;

        if $stack47 == null goto label52;

        $stack83 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack84 = virtualinvoke $stack83.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeVisibleAnnotations");

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack84);

        $stack86 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter anns>;

        virtualinvoke $stack86.<jdk.internal.org.objectweb.asm.AnnotationWriter: void put(jdk.internal.org.objectweb.asm.ByteVector)>(l1);

     label52:
        $stack48 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ianns>;

        if $stack48 == null goto label53;

        $stack78 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack79 = virtualinvoke $stack78.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeInvisibleAnnotations");

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack79);

        $stack81 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ianns>;

        virtualinvoke $stack81.<jdk.internal.org.objectweb.asm.AnnotationWriter: void put(jdk.internal.org.objectweb.asm.ByteVector)>(l1);

     label53:
        $stack49 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter tanns>;

        if $stack49 == null goto label54;

        $stack73 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack74 = virtualinvoke $stack73.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeVisibleTypeAnnotations");

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack74);

        $stack76 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter tanns>;

        virtualinvoke $stack76.<jdk.internal.org.objectweb.asm.AnnotationWriter: void put(jdk.internal.org.objectweb.asm.ByteVector)>(l1);

     label54:
        $stack50 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter itanns>;

        if $stack50 == null goto label55;

        $stack68 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack69 = virtualinvoke $stack68.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeInvisibleTypeAnnotations");

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack69);

        $stack71 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter itanns>;

        virtualinvoke $stack71.<jdk.internal.org.objectweb.asm.AnnotationWriter: void put(jdk.internal.org.objectweb.asm.ByteVector)>(l1);

     label55:
        $stack51 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] panns>;

        if $stack51 == null goto label56;

        $stack62 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack63 = virtualinvoke $stack62.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeVisibleParameterAnnotations");

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack63);

        $stack66 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] panns>;

        $stack65 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int synthetics>;

        staticinvoke <jdk.internal.org.objectweb.asm.AnnotationWriter: void put(jdk.internal.org.objectweb.asm.AnnotationWriter[],int,jdk.internal.org.objectweb.asm.ByteVector)>($stack66, $stack65, l1);

     label56:
        $stack52 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] ipanns>;

        if $stack52 == null goto label57;

        $stack56 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack57 = virtualinvoke $stack56.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeInvisibleParameterAnnotations");

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack57);

        $stack60 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] ipanns>;

        $stack59 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int synthetics>;

        staticinvoke <jdk.internal.org.objectweb.asm.AnnotationWriter: void put(jdk.internal.org.objectweb.asm.AnnotationWriter[],int,jdk.internal.org.objectweb.asm.ByteVector)>($stack60, $stack59, l1);

     label57:
        $stack53 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Attribute attrs>;

        if $stack53 == null goto label58;

        $stack55 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Attribute attrs>;

        $stack54 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        virtualinvoke $stack55.<jdk.internal.org.objectweb.asm.Attribute: void put(jdk.internal.org.objectweb.asm.ClassWriter,byte[],int,int,int,jdk.internal.org.objectweb.asm.ByteVector)>($stack54, null, 0, -1, -1, l1);

     label58:
        return;
    }

    private void resizeInstructions()
    {
        jdk.internal.org.objectweb.asm.MethodWriter l0;
        jdk.internal.org.objectweb.asm.ByteVector $stack16, $stack17, $stack22, $stack23, $stack25, $stack29, $stack37, $stack38, $stack58#180, l14#181;
        int $stack18, $stack24, $stack26, $stack27, $stack28, $stack32, $stack39, $stack43, $stack44, $stack49, $stack50, $stack51, $stack52, $stack53, $stack54, $stack55, $stack69, $stack74, $stack75, $stack76, $stack77, $stack85, $stack86, $stack90, $stack96, $stack97, $stack99, $stack100, $stack101, $stack102, $stack104, $stack105, $stack107, $stack109, $stack111, $stack112, $stack115, $stack116, $stack118, $stack119, $stack120, $stack121, $stack123, $stack124, $stack126, $stack128, $stack129, $stack130, $stack131, $stack133, $stack134, $stack137, $stack138, $stack139, $stack142, $stack144, $stack153, $stack154, $stack164, $stack165, $stack177, $stack187, $stack191, $stack192, $stack193, $stack194, $stack195, $stack196, $stack197, $stack198, $stack219, $stack220, $stack248, $stack249, $stack250, $stack252, $stack260, $stack261, $stack273, l11#4, l2#5, $stack19#10, l12#12, l13#13, $stack268#14, l4#15, $stack223#22, $stack222#28, $stack237#30, $stack224#43, $stack226#45, $stack227#53, $stack228#55, $stack229#57, $stack230#61, $stack231#63, $stack232#67, $stack247#69, $stack202#76, $stack201#82, $stack212#84, $stack203#97, $stack205#99, $stack206#101, $stack207#105, $stack218#107, l12#109, l2#123, l13#124, $stack172#125, l4#126, l10#127, $stack148#128, l4#135, l3#137, l2#138, l4#139, l2#140, l2#143, l6#144, l4#145, l3#147, l2#148, l4#149, l2#150, l6#152, l2#153, l4#154, l13#156, l2#158, l5#169, l5#179, l2#183, l4#186, l10#187, l2#189, l5#194;
        boolean[] l9;
        jdk.internal.org.objectweb.asm.Label[] $stack30;
        jdk.internal.org.objectweb.asm.Attribute $stack34, $stack41, l14#190;
        jdk.internal.org.objectweb.asm.Label $stack35, $stack60, $stack61, $stack62, l13#157, $stack84#167;
        jdk.internal.org.objectweb.asm.ClassWriter $stack64, $stack67, $stack70;
        jdk.internal.org.objectweb.asm.Item[] $stack68, $stack71;
        boolean $stack79, $stack145, $stack200, $stack221, $stack253;
        byte $stack87, $stack89, $stack91, $stack184, $stack186, $stack188;
        byte[] $stack88, $stack185, l1#1, l1#182, l1#188;
        short $stack143, $stack251;
        int[] l7#2, l8#3, l14#120, l15#121;
        jdk.internal.org.objectweb.asm.Item l14#170;
        jdk.internal.org.objectweb.asm.Handler $stack66#173, l13#175;

        l0 := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        $stack16 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        l1#1 = $stack16.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        l7#2 = newarray (int)[0];

        l8#3 = newarray (int)[0];

        $stack17 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack18 = $stack17.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        l9 = newarray (boolean)[$stack18];

        l11#4 = 3;

     label01:
        if l11#4 != 3 goto label02;

        l11#4 = 2;

     label02:
        l2#5 = 0;

     label03:
        $stack19#10 = lengthof l1#1;

        if l2#5 >= $stack19#10 goto label30;

        $stack184 = l1#1[l2#5];

        l12#12 = $stack184 & 255;

        l13#13 = 0;

        $stack185 = <jdk.internal.org.objectweb.asm.ClassWriter: byte[] TYPE>;

        $stack186 = $stack185[l12#12];

        tableswitch($stack186)
        {
            case 0: goto label04;
            case 1: goto label24;
            case 2: goto label25;
            case 3: goto label24;
            case 4: goto label04;
            case 5: goto label25;
            case 6: goto label25;
            case 7: goto label26;
            case 8: goto label26;
            case 9: goto label05;
            case 10: goto label15;
            case 11: goto label24;
            case 12: goto label25;
            case 13: goto label25;
            case 14: goto label16;
            case 15: goto label19;
            case 16: goto label27;
            case 17: goto label22;
            default: goto label27;
        };

     label04:
        l2#5 = l2#5 + 1;

        goto label28;

     label05:
        if l12#12 <= 201 goto label08;

        if l12#12 >= 218 goto label06;

        $stack268#14 = l12#12 - 49;

        goto label07;

     label06:
        $stack268#14 = l12#12 - 20;

     label07:
        l12#12 = $stack268#14;

        $stack260 = l2#5 + 1;

        $stack261 = staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: int readUnsignedShort(byte[],int)>(l1#1, $stack260);

        $stack273 = l2#5 + $stack261;

        l4#15 = $stack273;

        goto label09;

     label08:
        $stack250 = l2#5 + 1;

        $stack251 = staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: short readShort(byte[],int)>(l1#1, $stack250);

        l4#15 = l2#5 + $stack251;

     label09:
        $stack252 = staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: int getNewOffset(int[],int[],int,int)>(l7#2, l8#3, l2#5, l4#15);

        if $stack252 < -32768 goto label10;

        if $stack252 <= 32767 goto label14;

     label10:
        $stack253 = l9[l2#5];

        if $stack253 != 0 goto label14;

        if l12#12 == 167 goto label11;

        if l12#12 != 168 goto label12;

     label11:
        l13#13 = 2;

        goto label13;

     label12:
        l13#13 = 5;

     label13:
        l9[l2#5] = 1;

     label14:
        l2#5 = l2#5 + 3;

        goto label28;

     label15:
        l2#5 = l2#5 + 5;

        goto label28;

     label16:
        if l11#4 != 1 goto label17;

        $stack248 = staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: int getNewOffset(int[],int[],int,int)>(l7#2, l8#3, 0, l2#5);

        $stack249 = $stack248 & 3;

        l13#13 = neg $stack249;

        goto label18;

     label17:
        $stack221 = l9[l2#5];

        if $stack221 != 0 goto label18;

        l13#13 = l2#5 & 3;

        l9[l2#5] = 1;

     label18:
        $stack223#22 = l2#5 + 4;

        $stack222#28 = l2#5 & 3;

        $stack237#30 = $stack223#22 - $stack222#28;

        $stack224#43 = $stack237#30 + 8;

        $stack226#45 = staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: int readInt(byte[],int)>(l1#1, $stack224#43);

        $stack227#53 = $stack237#30 + 4;

        $stack228#55 = staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: int readInt(byte[],int)>(l1#1, $stack227#53);

        $stack229#57 = $stack226#45 - $stack228#55;

        $stack230#61 = $stack229#57 + 1;

        $stack231#63 = 4 * $stack230#61;

        $stack232#67 = $stack231#63 + 12;

        $stack247#69 = $stack237#30 + $stack232#67;

        l2#5 = $stack247#69;

        goto label28;

     label19:
        if l11#4 != 1 goto label20;

        $stack219 = staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: int getNewOffset(int[],int[],int,int)>(l7#2, l8#3, 0, l2#5);

        $stack220 = $stack219 & 3;

        l13#13 = neg $stack220;

        goto label21;

     label20:
        $stack200 = l9[l2#5];

        if $stack200 != 0 goto label21;

        l13#13 = l2#5 & 3;

        l9[l2#5] = 1;

     label21:
        $stack202#76 = l2#5 + 4;

        $stack201#82 = l2#5 & 3;

        $stack212#84 = $stack202#76 - $stack201#82;

        $stack203#97 = $stack212#84 + 4;

        $stack205#99 = staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: int readInt(byte[],int)>(l1#1, $stack203#97);

        $stack206#101 = 8 * $stack205#99;

        $stack207#105 = $stack206#101 + 8;

        $stack218#107 = $stack212#84 + $stack207#105;

        l2#5 = $stack218#107;

        goto label28;

     label22:
        $stack187 = l2#5 + 1;

        $stack188 = l1#1[$stack187];

        l12#109 = $stack188 & 255;

        if l12#109 != 132 goto label23;

        l2#5 = l2#5 + 6;

        goto label28;

     label23:
        l2#5 = l2#5 + 4;

        goto label28;

     label24:
        l2#5 = l2#5 + 2;

        goto label28;

     label25:
        l2#5 = l2#5 + 3;

        goto label28;

     label26:
        l2#5 = l2#5 + 5;

        goto label28;

     label27:
        l2#5 = l2#5 + 4;

     label28:
        if l13#13 == 0 goto label29;

        $stack191 = lengthof l7#2;

        $stack192 = $stack191 + 1;

        l14#120 = newarray (int)[$stack192];

        $stack193 = lengthof l8#3;

        $stack194 = $stack193 + 1;

        l15#121 = newarray (int)[$stack194];

        $stack195 = lengthof l7#2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(l7#2, 0, l14#120, 0, $stack195);

        $stack196 = lengthof l8#3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(l8#3, 0, l15#121, 0, $stack196);

        $stack197 = lengthof l7#2;

        l14#120[$stack197] = l2#5;

        $stack198 = lengthof l8#3;

        l15#121[$stack198] = l13#13;

        l7#2 = l14#120;

        l8#3 = l15#121;

        if l13#13 <= 0 goto label29;

        l11#4 = 3;

     label29:
        goto label03;

     label30:
        if l11#4 >= 3 goto label31;

        l11#4 = l11#4 + -1;

     label31:
        if l11#4 != 0 goto label01;

        $stack22 = new jdk.internal.org.objectweb.asm.ByteVector;

        $stack23 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack24 = $stack23.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        specialinvoke $stack22.<jdk.internal.org.objectweb.asm.ByteVector: void <init>(int)>($stack24);

        l2#123 = 0;

     label32:
        $stack25 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack26 = $stack25.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        if l2#123 >= $stack26 goto label58;

        $stack87 = l1#1[l2#123];

        l13#124 = $stack87 & 255;

        $stack88 = <jdk.internal.org.objectweb.asm.ClassWriter: byte[] TYPE>;

        $stack89 = $stack88[l13#124];

        tableswitch($stack89)
        {
            case 0: goto label33;
            case 1: goto label53;
            case 2: goto label54;
            case 3: goto label53;
            case 4: goto label33;
            case 5: goto label54;
            case 6: goto label54;
            case 7: goto label55;
            case 8: goto label55;
            case 9: goto label34;
            case 10: goto label46;
            case 11: goto label53;
            case 12: goto label54;
            case 13: goto label54;
            case 14: goto label47;
            case 15: goto label49;
            case 16: goto label56;
            case 17: goto label51;
            default: goto label56;
        };

     label33:
        virtualinvoke $stack22.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(l13#124);

        l2#123 = l2#123 + 1;

        goto label57;

     label34:
        if l13#124 <= 201 goto label37;

        if l13#124 >= 218 goto label35;

        $stack172#125 = l13#124 - 49;

        goto label36;

     label35:
        $stack172#125 = l13#124 - 20;

     label36:
        l13#124 = $stack172#125;

        $stack164 = l2#123 + 1;

        $stack165 = staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: int readUnsignedShort(byte[],int)>(l1#1, $stack164);

        $stack177 = l2#123 + $stack165;

        l4#126 = $stack177;

        goto label38;

     label37:
        $stack142 = l2#123 + 1;

        $stack143 = staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: short readShort(byte[],int)>(l1#1, $stack142);

        l4#126 = l2#123 + $stack143;

     label38:
        $stack144 = staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: int getNewOffset(int[],int[],int,int)>(l7#2, l8#3, l2#123, l4#126);

        l10#127 = $stack144;

        $stack145 = l9[l2#123];

        if $stack145 == 0 goto label44;

        if l13#124 != 167 goto label39;

        virtualinvoke $stack22.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(200);

        goto label43;

     label39:
        if l13#124 != 168 goto label40;

        virtualinvoke $stack22.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(201);

        goto label43;

     label40:
        if l13#124 > 166 goto label41;

        $stack153 = l13#124 + 1;

        $stack154 = $stack153 ^ 1;

        $stack148#128 = $stack154 - 1;

        goto label42;

     label41:
        $stack148#128 = l13#124 ^ 1;

     label42:
        virtualinvoke $stack22.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>($stack148#128);

        virtualinvoke $stack22.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(8);

        virtualinvoke $stack22.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(200);

        l10#127 = $stack144 + -3;

     label43:
        virtualinvoke $stack22.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>(l10#127);

        goto label45;

     label44:
        virtualinvoke $stack22.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(l13#124);

        virtualinvoke $stack22.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack144);

     label45:
        l2#123 = l2#123 + 3;

        goto label57;

     label46:
        $stack137 = l2#123 + 1;

        $stack138 = staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: int readInt(byte[],int)>(l1#1, $stack137);

        l4#135 = l2#123 + $stack138;

        $stack139 = staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: int getNewOffset(int[],int[],int,int)>(l7#2, l8#3, l2#123, l4#135);

        virtualinvoke $stack22.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(l13#124);

        virtualinvoke $stack22.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>($stack139);

        l2#123 = l2#123 + 5;

        goto label57;

     label47:
        l3#137 = l2#123;

        $stack116 = l2#123 + 4;

        $stack115 = l2#123 & 3;

        l2#138 = $stack116 - $stack115;

        virtualinvoke $stack22.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(170);

        $stack118 = $stack22.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack119 = $stack118 % 4;

        $stack120 = 4 - $stack119;

        $stack121 = $stack120 % 4;

        virtualinvoke $stack22.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>(null, 0, $stack121);

        $stack123 = staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: int readInt(byte[],int)>(l1#1, l2#138);

        l4#139 = l2#123 + $stack123;

        l2#140 = l2#138 + 4;

        $stack124 = staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: int getNewOffset(int[],int[],int,int)>(l7#2, l8#3, l2#123, l4#139);

        virtualinvoke $stack22.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>($stack124);

        $stack126 = staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: int readInt(byte[],int)>(l1#1, l2#140);

        l2#143 = l2#140 + 4;

        virtualinvoke $stack22.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>($stack126);

        $stack128 = staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: int readInt(byte[],int)>(l1#1, l2#143);

        $stack129 = $stack128 - $stack126;

        l6#144 = $stack129 + 1;

        l2#123 = l2#143 + 4;

        $stack130 = l2#123 - 4;

        $stack131 = staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: int readInt(byte[],int)>(l1#1, $stack130);

        virtualinvoke $stack22.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>($stack131);

     label48:
        if l6#144 <= 0 goto label57;

        $stack133 = staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: int readInt(byte[],int)>(l1#1, l2#123);

        l4#145 = l3#137 + $stack133;

        l2#123 = l2#123 + 4;

        $stack134 = staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: int getNewOffset(int[],int[],int,int)>(l7#2, l8#3, l3#137, l4#145);

        virtualinvoke $stack22.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>($stack134);

        l6#144 = l6#144 + -1;

        goto label48;

     label49:
        l3#147 = l2#123;

        $stack97 = l2#123 + 4;

        $stack96 = l2#123 & 3;

        l2#148 = $stack97 - $stack96;

        virtualinvoke $stack22.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(171);

        $stack99 = $stack22.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack100 = $stack99 % 4;

        $stack101 = 4 - $stack100;

        $stack102 = $stack101 % 4;

        virtualinvoke $stack22.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>(null, 0, $stack102);

        $stack104 = staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: int readInt(byte[],int)>(l1#1, l2#148);

        l4#149 = l2#123 + $stack104;

        l2#150 = l2#148 + 4;

        $stack105 = staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: int getNewOffset(int[],int[],int,int)>(l7#2, l8#3, l2#123, l4#149);

        virtualinvoke $stack22.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>($stack105);

        $stack107 = staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: int readInt(byte[],int)>(l1#1, l2#150);

        l6#152 = $stack107;

        l2#123 = l2#150 + 4;

        virtualinvoke $stack22.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>($stack107);

     label50:
        if l6#152 <= 0 goto label57;

        $stack109 = staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: int readInt(byte[],int)>(l1#1, l2#123);

        virtualinvoke $stack22.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>($stack109);

        l2#153 = l2#123 + 4;

        $stack111 = staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: int readInt(byte[],int)>(l1#1, l2#153);

        l4#154 = l3#147 + $stack111;

        l2#123 = l2#153 + 4;

        $stack112 = staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: int getNewOffset(int[],int[],int,int)>(l7#2, l8#3, l3#147, l4#154);

        virtualinvoke $stack22.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>($stack112);

        l6#152 = l6#152 + -1;

        goto label50;

     label51:
        $stack90 = l2#123 + 1;

        $stack91 = l1#1[$stack90];

        l13#156 = $stack91 & 255;

        if l13#156 != 132 goto label52;

        virtualinvoke $stack22.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>(l1#1, l2#123, 6);

        l2#123 = l2#123 + 6;

        goto label57;

     label52:
        virtualinvoke $stack22.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>(l1#1, l2#123, 4);

        l2#123 = l2#123 + 4;

        goto label57;

     label53:
        virtualinvoke $stack22.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>(l1#1, l2#123, 2);

        l2#123 = l2#123 + 2;

        goto label57;

     label54:
        virtualinvoke $stack22.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>(l1#1, l2#123, 3);

        l2#123 = l2#123 + 3;

        goto label57;

     label55:
        virtualinvoke $stack22.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>(l1#1, l2#123, 5);

        l2#123 = l2#123 + 5;

        goto label57;

     label56:
        virtualinvoke $stack22.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>(l1#1, l2#123, 4);

        l2#123 = l2#123 + 4;

     label57:
        goto label32;

     label58:
        $stack27 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack27 != 0 goto label65;

        l13#157 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label labels>;

     label59:
        if l13#157 == null goto label61;

        $stack77 = l13#157.<jdk.internal.org.objectweb.asm.Label: int position>;

        l2#158 = $stack77 - 3;

        if l2#158 < 0 goto label60;

        $stack79 = l9[l2#158];

        if $stack79 == 0 goto label60;

        $stack85 = l13#157.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack86 = $stack85 | 16;

        l13#157.<jdk.internal.org.objectweb.asm.Label: int status> = $stack86;

     label60:
        staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: void getNewOffset(int[],int[],jdk.internal.org.objectweb.asm.Label)>(l7#2, l8#3, l13#157);

        $stack84#167 = l13#157.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label successor>;

        l13#157 = $stack84#167;

        goto label59;

     label61:
        l5#169 = 0;

     label62:
        $stack67 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack68 = $stack67.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item[] typeTable>;

        $stack69 = lengthof $stack68;

        if l5#169 >= $stack69 goto label64;

        $stack70 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack71 = $stack70.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item[] typeTable>;

        l14#170 = $stack71[l5#169];

        if l14#170 == null goto label63;

        $stack74 = l14#170.<jdk.internal.org.objectweb.asm.Item: int type>;

        if $stack74 != 31 goto label63;

        $stack75 = l14#170.<jdk.internal.org.objectweb.asm.Item: int intVal>;

        $stack76 = staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: int getNewOffset(int[],int[],int,int)>(l7#2, l8#3, 0, $stack75);

        l14#170.<jdk.internal.org.objectweb.asm.Item: int intVal> = $stack76;

     label63:
        l5#169 = l5#169 + 1;

        goto label62;

     label64:
        goto label66;

     label65:
        $stack28 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: int frameCount>;

        if $stack28 <= 0 goto label66;

        $stack64 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack64.<jdk.internal.org.objectweb.asm.ClassWriter: boolean invalidFrames> = 1;

     label66:
        $stack66#173 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Handler firstHandler>;

        l13#175 = $stack66#173;

     label67:
        if l13#175 == null goto label68;

        $stack60 = l13#175.<jdk.internal.org.objectweb.asm.Handler: jdk.internal.org.objectweb.asm.Label start>;

        staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: void getNewOffset(int[],int[],jdk.internal.org.objectweb.asm.Label)>(l7#2, l8#3, $stack60);

        $stack61 = l13#175.<jdk.internal.org.objectweb.asm.Handler: jdk.internal.org.objectweb.asm.Label end>;

        staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: void getNewOffset(int[],int[],jdk.internal.org.objectweb.asm.Label)>(l7#2, l8#3, $stack61);

        $stack62 = l13#175.<jdk.internal.org.objectweb.asm.Handler: jdk.internal.org.objectweb.asm.Label handler>;

        staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: void getNewOffset(int[],int[],jdk.internal.org.objectweb.asm.Label)>(l7#2, l8#3, $stack62);

        l13#175 = l13#175.<jdk.internal.org.objectweb.asm.Handler: jdk.internal.org.objectweb.asm.Handler next>;

        goto label67;

     label68:
        l5#179 = 0;

     label69:
        if l5#179 >= 2 goto label74;

        if l5#179 != 0 goto label70;

        $stack58#180 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVar>;

        goto label71;

     label70:
        $stack58#180 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVarType>;

     label71:
        l14#181 = $stack58#180;

        if $stack58#180 == null goto label73;

        l1#182 = $stack58#180.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        l2#183 = 0;

     label72:
        $stack49 = l14#181.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        if l2#183 >= $stack49 goto label73;

        $stack50 = staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: int readUnsignedShort(byte[],int)>(l1#182, l2#183);

        $stack51 = staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: int getNewOffset(int[],int[],int,int)>(l7#2, l8#3, 0, $stack50);

        staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: void writeShort(byte[],int,int)>(l1#182, l2#183, $stack51);

        $stack52 = l2#183 + 2;

        $stack53 = staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: int readUnsignedShort(byte[],int)>(l1#182, $stack52);

        l4#186 = $stack50 + $stack53;

        $stack54 = staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: int getNewOffset(int[],int[],int,int)>(l7#2, l8#3, 0, l4#186);

        l10#187 = $stack54 - $stack51;

        $stack55 = l2#183 + 2;

        staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: void writeShort(byte[],int,int)>(l1#182, $stack55, l10#187);

        l2#183 = l2#183 + 10;

        goto label72;

     label73:
        l5#179 = l5#179 + 1;

        goto label69;

     label74:
        $stack29 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector lineNumber>;

        if $stack29 == null goto label76;

        $stack37 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector lineNumber>;

        l1#188 = $stack37.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        l2#189 = 0;

     label75:
        $stack38 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector lineNumber>;

        $stack39 = $stack38.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        if l2#189 >= $stack39 goto label76;

        $stack43 = staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: int readUnsignedShort(byte[],int)>(l1#188, l2#189);

        $stack44 = staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: int getNewOffset(int[],int[],int,int)>(l7#2, l8#3, 0, $stack43);

        staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: void writeShort(byte[],int,int)>(l1#188, l2#189, $stack44);

        l2#189 = l2#189 + 4;

        goto label75;

     label76:
        $stack41 = l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Attribute cattrs>;

        l14#190 = $stack41;

     label77:
        if l14#190 == null goto label80;

        $stack30 = virtualinvoke l14#190.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Label[] getLabels()>();

        if $stack30 == null goto label79;

        $stack32 = lengthof $stack30;

        l5#194 = $stack32 - 1;

     label78:
        if l5#194 < 0 goto label79;

        $stack35 = $stack30[l5#194];

        staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: void getNewOffset(int[],int[],jdk.internal.org.objectweb.asm.Label)>(l7#2, l8#3, $stack35);

        l5#194 = l5#194 + -1;

        goto label78;

     label79:
        $stack34 = l14#190.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next>;

        l14#190 = $stack34;

        goto label77;

     label80:
        l0.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code> = $stack22;

        return;
    }

    static int readUnsignedShort(byte[], int)
    {
        byte[] l0;
        int l1, $stack3, $stack4, $stack6, $stack7, $stack8;
        byte $stack2, $stack5;

        l0 := @parameter0: byte[];

        l1 := @parameter1: int;

        $stack2 = l0[l1];

        $stack3 = $stack2 & 255;

        $stack7 = $stack3 << 8;

        $stack4 = l1 + 1;

        $stack5 = l0[$stack4];

        $stack6 = $stack5 & 255;

        $stack8 = $stack7 | $stack6;

        return $stack8;
    }

    static short readShort(byte[], int)
    {
        byte[] l0;
        int l1, $stack3, $stack4, $stack6, $stack7, $stack8;
        byte $stack2, $stack5;
        short $stack9;

        l0 := @parameter0: byte[];

        l1 := @parameter1: int;

        $stack2 = l0[l1];

        $stack3 = $stack2 & 255;

        $stack7 = $stack3 << 8;

        $stack4 = l1 + 1;

        $stack5 = l0[$stack4];

        $stack6 = $stack5 & 255;

        $stack8 = $stack7 | $stack6;

        $stack9 = (short) $stack8;

        return $stack9;
    }

    static int readInt(byte[], int)
    {
        byte[] l0;
        int l1, $stack3, $stack4, $stack6, $stack7, $stack8, $stack9, $stack11, $stack12, $stack13, $stack14, $stack16, $stack17, $stack18;
        byte $stack2, $stack5, $stack10, $stack15;

        l0 := @parameter0: byte[];

        l1 := @parameter1: int;

        $stack2 = l0[l1];

        $stack3 = $stack2 & 255;

        $stack8 = $stack3 << 24;

        $stack4 = l1 + 1;

        $stack5 = l0[$stack4];

        $stack6 = $stack5 & 255;

        $stack7 = $stack6 << 16;

        $stack13 = $stack8 | $stack7;

        $stack9 = l1 + 2;

        $stack10 = l0[$stack9];

        $stack11 = $stack10 & 255;

        $stack12 = $stack11 << 8;

        $stack17 = $stack13 | $stack12;

        $stack14 = l1 + 3;

        $stack15 = l0[$stack14];

        $stack16 = $stack15 & 255;

        $stack18 = $stack17 | $stack16;

        return $stack18;
    }

    static void writeShort(byte[], int, int)
    {
        byte[] l0;
        int l1, l2, $stack3, $stack6;
        byte $stack4, $stack5;

        l0 := @parameter0: byte[];

        l1 := @parameter1: int;

        l2 := @parameter2: int;

        $stack3 = l2 >>> 8;

        $stack4 = (byte) $stack3;

        l0[l1] = $stack4;

        $stack6 = l1 + 1;

        $stack5 = (byte) l2;

        l0[$stack6] = $stack5;

        return;
    }

    static int getNewOffset(int[], int[], int, int)
    {
        int l3, l2, $stack6, $stack7, $stack8, $stack11, $stack12, $stack13, $stack17, l4#1, l5#2;
        int[] l0, l1;

        l0 := @parameter0: int[];

        l1 := @parameter1: int[];

        l2 := @parameter2: int;

        l3 := @parameter3: int;

        l4#1 = l3 - l2;

        l5#2 = 0;

     label1:
        $stack6 = lengthof l0;

        if l5#2 >= $stack6 goto label4;

        $stack7 = l0[l5#2];

        if l2 >= $stack7 goto label2;

        $stack13 = l0[l5#2];

        if $stack13 > l3 goto label2;

        $stack17 = l1[l5#2];

        l4#1 = l4#1 + $stack17;

        goto label3;

     label2:
        $stack8 = l0[l5#2];

        if l3 >= $stack8 goto label3;

        $stack11 = l0[l5#2];

        if $stack11 > l2 goto label3;

        $stack12 = l1[l5#2];

        l4#1 = l4#1 - $stack12;

     label3:
        l5#2 = l5#2 + 1;

        goto label1;

     label4:
        return l4#1;
    }

    static void getNewOffset(int[], int[], jdk.internal.org.objectweb.asm.Label)
    {
        jdk.internal.org.objectweb.asm.Label l2;
        int $stack3, $stack4, $stack5, $stack6, $stack7, $stack8;
        int[] l0, l1;

        l0 := @parameter0: int[];

        l1 := @parameter1: int[];

        l2 := @parameter2: jdk.internal.org.objectweb.asm.Label;

        $stack3 = l2.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack4 = $stack3 & 4;

        if $stack4 != 0 goto label1;

        $stack5 = l2.<jdk.internal.org.objectweb.asm.Label: int position>;

        $stack6 = staticinvoke <jdk.internal.org.objectweb.asm.MethodWriter: int getNewOffset(int[],int[],int,int)>(l0, l1, 0, $stack5);

        l2.<jdk.internal.org.objectweb.asm.Label: int position> = $stack6;

        $stack7 = l2.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack8 = $stack7 | 4;

        l2.<jdk.internal.org.objectweb.asm.Label: int status> = $stack8;

     label1:
        return;
    }

    public static void <clinit>()
    {
        <jdk.internal.org.objectweb.asm.MethodWriter: int NOTHING> = 2;

        <jdk.internal.org.objectweb.asm.MethodWriter: int MAXS> = 1;

        <jdk.internal.org.objectweb.asm.MethodWriter: int FRAMES> = 0;

        <jdk.internal.org.objectweb.asm.MethodWriter: int FULL_FRAME> = 255;

        <jdk.internal.org.objectweb.asm.MethodWriter: int APPEND_FRAME> = 252;

        <jdk.internal.org.objectweb.asm.MethodWriter: int SAME_FRAME_EXTENDED> = 251;

        <jdk.internal.org.objectweb.asm.MethodWriter: int CHOP_FRAME> = 248;

        <jdk.internal.org.objectweb.asm.MethodWriter: int SAME_LOCALS_1_STACK_ITEM_FRAME_EXTENDED> = 247;

        <jdk.internal.org.objectweb.asm.MethodWriter: int RESERVED> = 128;

        <jdk.internal.org.objectweb.asm.MethodWriter: int SAME_LOCALS_1_STACK_ITEM_FRAME> = 64;

        <jdk.internal.org.objectweb.asm.MethodWriter: int SAME_FRAME> = 0;

        <jdk.internal.org.objectweb.asm.MethodWriter: int ACC_CONSTRUCTOR> = 524288;

        return;
    }
}
