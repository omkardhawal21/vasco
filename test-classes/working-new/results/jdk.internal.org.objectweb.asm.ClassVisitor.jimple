public abstract class jdk.internal.org.objectweb.asm.ClassVisitor extends java.lang.Object
{
    protected final int api;
    protected jdk.internal.org.objectweb.asm.ClassVisitor cv;

    public void <init>(int)
    {
        jdk.internal.org.objectweb.asm.ClassVisitor l0;
        int l1;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassVisitor;

        l1 := @parameter0: int;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassVisitor: void <init>(int,jdk.internal.org.objectweb.asm.ClassVisitor)>(l1, null);

        return;
    }

    public void <init>(int, jdk.internal.org.objectweb.asm.ClassVisitor)
    {
        jdk.internal.org.objectweb.asm.ClassVisitor l0, l2;
        int l1;
        java.lang.IllegalArgumentException $stack7;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassVisitor;

        l1 := @parameter0: int;

        l2 := @parameter1: jdk.internal.org.objectweb.asm.ClassVisitor;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        if l1 == 262144 goto label1;

        if l1 == 327680 goto label1;

        $stack7 = new java.lang.IllegalArgumentException;

        specialinvoke $stack7.<java.lang.IllegalArgumentException: void <init>()>();

        throw $stack7;

     label1:
        l0.<jdk.internal.org.objectweb.asm.ClassVisitor: int api> = l1;

        l0.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv> = l2;

        return;
    }

    public void visit(int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])
    {
        jdk.internal.org.objectweb.asm.ClassVisitor l0, $stack7, $stack8;
        int l1, l2;
        java.lang.String l3, l4, l5;
        java.lang.String[] l6;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassVisitor;

        l1 := @parameter0: int;

        l2 := @parameter1: int;

        l3 := @parameter2: java.lang.String;

        l4 := @parameter3: java.lang.String;

        l5 := @parameter4: java.lang.String;

        l6 := @parameter5: java.lang.String[];

        $stack7 = l0.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        if $stack7 == null goto label1;

        $stack8 = l0.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        virtualinvoke $stack8.<jdk.internal.org.objectweb.asm.ClassVisitor: void visit(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(l1, l2, l3, l4, l5, l6);

     label1:
        return;
    }

    public void visitSource(java.lang.String, java.lang.String)
    {
        jdk.internal.org.objectweb.asm.ClassVisitor l0, $stack3, $stack4;
        java.lang.String l1, l2;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassVisitor;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: java.lang.String;

        $stack3 = l0.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        if $stack3 == null goto label1;

        $stack4 = l0.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        virtualinvoke $stack4.<jdk.internal.org.objectweb.asm.ClassVisitor: void visitSource(java.lang.String,java.lang.String)>(l1, l2);

     label1:
        return;
    }

    public void visitOuterClass(java.lang.String, java.lang.String, java.lang.String)
    {
        jdk.internal.org.objectweb.asm.ClassVisitor l0, $stack4, $stack5;
        java.lang.String l1, l2, l3;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassVisitor;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: java.lang.String;

        $stack4 = l0.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        if $stack4 == null goto label1;

        $stack5 = l0.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        virtualinvoke $stack5.<jdk.internal.org.objectweb.asm.ClassVisitor: void visitOuterClass(java.lang.String,java.lang.String,java.lang.String)>(l1, l2, l3);

     label1:
        return;
    }

    public jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String, boolean)
    {
        jdk.internal.org.objectweb.asm.ClassVisitor l0, $stack3, $stack4;
        java.lang.String l1;
        boolean l2;
        jdk.internal.org.objectweb.asm.AnnotationVisitor $stack5;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassVisitor;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: boolean;

        $stack3 = l0.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        if $stack3 == null goto label1;

        $stack4 = l0.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        $stack5 = virtualinvoke $stack4.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>(l1, l2);

        return $stack5;

     label1:
        return null;
    }

    public jdk.internal.org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int, jdk.internal.org.objectweb.asm.TypePath, java.lang.String, boolean)
    {
        jdk.internal.org.objectweb.asm.ClassVisitor l0, $stack6, $stack7;
        int $stack5, l1;
        jdk.internal.org.objectweb.asm.TypePath l2;
        java.lang.String l3;
        boolean l4;
        jdk.internal.org.objectweb.asm.AnnotationVisitor $stack8;
        java.lang.RuntimeException $stack9;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassVisitor;

        l1 := @parameter0: int;

        l2 := @parameter1: jdk.internal.org.objectweb.asm.TypePath;

        l3 := @parameter2: java.lang.String;

        l4 := @parameter3: boolean;

        $stack5 = l0.<jdk.internal.org.objectweb.asm.ClassVisitor: int api>;

        if $stack5 >= 327680 goto label1;

        $stack9 = new java.lang.RuntimeException;

        specialinvoke $stack9.<java.lang.RuntimeException: void <init>()>();

        throw $stack9;

     label1:
        $stack6 = l0.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        if $stack6 == null goto label2;

        $stack7 = l0.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        $stack8 = virtualinvoke $stack7.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,java.lang.String,boolean)>(l1, l2, l3, l4);

        return $stack8;

     label2:
        return null;
    }

    public void visitAttribute(jdk.internal.org.objectweb.asm.Attribute)
    {
        jdk.internal.org.objectweb.asm.ClassVisitor l0, $stack2, $stack3;
        jdk.internal.org.objectweb.asm.Attribute l1;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassVisitor;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.Attribute;

        $stack2 = l0.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        if $stack2 == null goto label1;

        $stack3 = l0.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        virtualinvoke $stack3.<jdk.internal.org.objectweb.asm.ClassVisitor: void visitAttribute(jdk.internal.org.objectweb.asm.Attribute)>(l1);

     label1:
        return;
    }

    public void visitInnerClass(java.lang.String, java.lang.String, java.lang.String, int)
    {
        jdk.internal.org.objectweb.asm.ClassVisitor l0, $stack5, $stack6;
        java.lang.String l1, l2, l3;
        int l4;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassVisitor;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: java.lang.String;

        l4 := @parameter3: int;

        $stack5 = l0.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        if $stack5 == null goto label1;

        $stack6 = l0.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        virtualinvoke $stack6.<jdk.internal.org.objectweb.asm.ClassVisitor: void visitInnerClass(java.lang.String,java.lang.String,java.lang.String,int)>(l1, l2, l3, l4);

     label1:
        return;
    }

    public jdk.internal.org.objectweb.asm.FieldVisitor visitField(int, java.lang.String, java.lang.String, java.lang.String, java.lang.Object)
    {
        jdk.internal.org.objectweb.asm.ClassVisitor l0, $stack6, $stack7;
        int l1;
        java.lang.String l2, l3, l4;
        java.lang.Object l5;
        jdk.internal.org.objectweb.asm.FieldVisitor $stack8;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassVisitor;

        l1 := @parameter0: int;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: java.lang.String;

        l4 := @parameter3: java.lang.String;

        l5 := @parameter4: java.lang.Object;

        $stack6 = l0.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        if $stack6 == null goto label1;

        $stack7 = l0.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        $stack8 = virtualinvoke $stack7.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.FieldVisitor visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>(l1, l2, l3, l4, l5);

        return $stack8;

     label1:
        return null;
    }

    public jdk.internal.org.objectweb.asm.MethodVisitor visitMethod(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])
    {
        jdk.internal.org.objectweb.asm.ClassVisitor l0, $stack6, $stack7;
        int l1;
        java.lang.String l2, l3, l4;
        java.lang.String[] l5;
        jdk.internal.org.objectweb.asm.MethodVisitor $stack8;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassVisitor;

        l1 := @parameter0: int;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: java.lang.String;

        l4 := @parameter3: java.lang.String;

        l5 := @parameter4: java.lang.String[];

        $stack6 = l0.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        if $stack6 == null goto label1;

        $stack7 = l0.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        $stack8 = virtualinvoke $stack7.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(l1, l2, l3, l4, l5);

        return $stack8;

     label1:
        return null;
    }

    public void visitEnd()
    {
        jdk.internal.org.objectweb.asm.ClassVisitor l0, $stack1, $stack2;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassVisitor;

        $stack1 = l0.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        if $stack1 == null goto label1;

        $stack2 = l0.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        virtualinvoke $stack2.<jdk.internal.org.objectweb.asm.ClassVisitor: void visitEnd()>();

     label1:
        return;
    }
}
