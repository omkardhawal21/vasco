public class jdk.internal.org.objectweb.asm.ClassWriter extends jdk.internal.org.objectweb.asm.ClassVisitor
{
    public static final int COMPUTE_MAXS;
    public static final int COMPUTE_FRAMES;
    static final int ACC_SYNTHETIC_ATTRIBUTE;
    static final int TO_ACC_SYNTHETIC;
    static final int NOARG_INSN;
    static final int SBYTE_INSN;
    static final int SHORT_INSN;
    static final int VAR_INSN;
    static final int IMPLVAR_INSN;
    static final int TYPE_INSN;
    static final int FIELDORMETH_INSN;
    static final int ITFMETH_INSN;
    static final int INDYMETH_INSN;
    static final int LABEL_INSN;
    static final int LABELW_INSN;
    static final int LDC_INSN;
    static final int LDCW_INSN;
    static final int IINC_INSN;
    static final int TABL_INSN;
    static final int LOOK_INSN;
    static final int MANA_INSN;
    static final int WIDE_INSN;
    static final byte[] TYPE;
    static final int CLASS;
    static final int FIELD;
    static final int METH;
    static final int IMETH;
    static final int STR;
    static final int INT;
    static final int FLOAT;
    static final int LONG;
    static final int DOUBLE;
    static final int NAME_TYPE;
    static final int UTF8;
    static final int MTYPE;
    static final int HANDLE;
    static final int INDY;
    static final int HANDLE_BASE;
    static final int TYPE_NORMAL;
    static final int TYPE_UNINIT;
    static final int TYPE_MERGED;
    static final int BSM;
    jdk.internal.org.objectweb.asm.ClassReader cr;
    int version;
    int index;
    final jdk.internal.org.objectweb.asm.ByteVector pool;
    jdk.internal.org.objectweb.asm.Item[] items;
    int threshold;
    final jdk.internal.org.objectweb.asm.Item key;
    final jdk.internal.org.objectweb.asm.Item key2;
    final jdk.internal.org.objectweb.asm.Item key3;
    final jdk.internal.org.objectweb.asm.Item key4;
    jdk.internal.org.objectweb.asm.Item[] typeTable;
    private short typeCount;
    private int access;
    private int name;
    java.lang.String thisName;
    private int signature;
    private int superName;
    private int interfaceCount;
    private int[] interfaces;
    private int sourceFile;
    private jdk.internal.org.objectweb.asm.ByteVector sourceDebug;
    private int enclosingMethodOwner;
    private int enclosingMethod;
    private jdk.internal.org.objectweb.asm.AnnotationWriter anns;
    private jdk.internal.org.objectweb.asm.AnnotationWriter ianns;
    private jdk.internal.org.objectweb.asm.AnnotationWriter tanns;
    private jdk.internal.org.objectweb.asm.AnnotationWriter itanns;
    private jdk.internal.org.objectweb.asm.Attribute attrs;
    private int innerClassesCount;
    private jdk.internal.org.objectweb.asm.ByteVector innerClasses;
    int bootstrapMethodsCount;
    jdk.internal.org.objectweb.asm.ByteVector bootstrapMethods;
    jdk.internal.org.objectweb.asm.FieldWriter firstField;
    jdk.internal.org.objectweb.asm.FieldWriter lastField;
    jdk.internal.org.objectweb.asm.MethodWriter firstMethod;
    jdk.internal.org.objectweb.asm.MethodWriter lastMethod;
    private boolean computeMaxs;
    private boolean computeFrames;
    boolean invalidFrames;

    public void <init>(int)
    {
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        jdk.internal.org.objectweb.asm.ByteVector $stack2;
        jdk.internal.org.objectweb.asm.Item[] $stack3, $stack4;
        int $stack5, $stack8, l1, $stack13, $stack14;
        double $stack6, $stack7;
        jdk.internal.org.objectweb.asm.Item $stack9, $stack10, $stack11, $stack12;
        boolean $stack17#1, $stack15#2;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: int;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassVisitor: void <init>(int)>(327680);

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: int index> = 1;

        $stack2 = new jdk.internal.org.objectweb.asm.ByteVector;

        specialinvoke $stack2.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector pool> = $stack2;

        $stack3 = newarray (jdk.internal.org.objectweb.asm.Item)[256];

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item[] items> = $stack3;

        $stack4 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item[] items>;

        $stack5 = lengthof $stack4;

        $stack6 = (double) $stack5;

        $stack7 = 0.75 * $stack6;

        $stack8 = (int) $stack7;

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: int threshold> = $stack8;

        $stack9 = new jdk.internal.org.objectweb.asm.Item;

        specialinvoke $stack9.<jdk.internal.org.objectweb.asm.Item: void <init>()>();

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key> = $stack9;

        $stack10 = new jdk.internal.org.objectweb.asm.Item;

        specialinvoke $stack10.<jdk.internal.org.objectweb.asm.Item: void <init>()>();

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key2> = $stack10;

        $stack11 = new jdk.internal.org.objectweb.asm.Item;

        specialinvoke $stack11.<jdk.internal.org.objectweb.asm.Item: void <init>()>();

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key3> = $stack11;

        $stack12 = new jdk.internal.org.objectweb.asm.Item;

        specialinvoke $stack12.<jdk.internal.org.objectweb.asm.Item: void <init>()>();

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key4> = $stack12;

        $stack13 = l1 & 1;

        if $stack13 == 0 goto label1;

        $stack17#1 = 1;

        goto label2;

     label1:
        $stack17#1 = 0;

     label2:
        l0.<jdk.internal.org.objectweb.asm.ClassWriter: boolean computeMaxs> = $stack17#1;

        $stack14 = l1 & 2;

        if $stack14 == 0 goto label3;

        $stack15#2 = 1;

        goto label4;

     label3:
        $stack15#2 = 0;

     label4:
        l0.<jdk.internal.org.objectweb.asm.ClassWriter: boolean computeFrames> = $stack15#2;

        return;
    }

    public void <init>(jdk.internal.org.objectweb.asm.ClassReader, int)
    {
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        int l2;
        jdk.internal.org.objectweb.asm.ClassReader l1;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.ClassReader;

        l2 := @parameter1: int;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: void <init>(int)>(l2);

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ClassReader: void copyPool(jdk.internal.org.objectweb.asm.ClassWriter)>(l0);

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ClassReader cr> = l1;

        return;
    }

    public final void visit(int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])
    {
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        int l1, l2, $stack8, $stack10, $stack11, $stack12, $stack14, $stack17, $stack22, $stack9#1, l7#2;
        java.lang.String l3, l4, l5, $stack15;
        java.lang.String[] l6;
        int[] $stack13, $stack16;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: int;

        l2 := @parameter1: int;

        l3 := @parameter2: java.lang.String;

        l4 := @parameter3: java.lang.String;

        l5 := @parameter4: java.lang.String;

        l6 := @parameter5: java.lang.String[];

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: int version> = l1;

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: int access> = l2;

        $stack8 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newClass(java.lang.String)>(l3);

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: int name> = $stack8;

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: java.lang.String thisName> = l3;

        if l4 == null goto label1;

        $stack22 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>(l4);

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: int signature> = $stack22;

     label1:
        if l5 != null goto label2;

        $stack9#1 = 0;

        goto label3;

     label2:
        $stack9#1 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newClass(java.lang.String)>(l5);

     label3:
        l0.<jdk.internal.org.objectweb.asm.ClassWriter: int superName> = $stack9#1;

        if l6 == null goto label5;

        $stack10 = lengthof l6;

        if $stack10 <= 0 goto label5;

        $stack11 = lengthof l6;

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: int interfaceCount> = $stack11;

        $stack12 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int interfaceCount>;

        $stack13 = newarray (int)[$stack12];

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: int[] interfaces> = $stack13;

        l7#2 = 0;

     label4:
        $stack14 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int interfaceCount>;

        if l7#2 >= $stack14 goto label5;

        $stack16 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int[] interfaces>;

        $stack15 = l6[l7#2];

        $stack17 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newClass(java.lang.String)>($stack15);

        $stack16[l7#2] = $stack17;

        l7#2 = l7#2 + 1;

        goto label4;

     label5:
        return;
    }

    public final void visitSource(java.lang.String, java.lang.String)
    {
        java.lang.String l1, l2;
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        jdk.internal.org.objectweb.asm.ByteVector $stack3, $stack4;
        int $stack5;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: java.lang.String;

        if l1 == null goto label1;

        $stack5 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>(l1);

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: int sourceFile> = $stack5;

     label1:
        if l2 == null goto label2;

        $stack3 = new jdk.internal.org.objectweb.asm.ByteVector;

        specialinvoke $stack3.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        $stack4 = virtualinvoke $stack3.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector encodeUTF8(java.lang.String,int,int)>(l2, 0, 2147483647);

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector sourceDebug> = $stack4;

     label2:
        return;
    }

    public final void visitOuterClass(java.lang.String, java.lang.String, java.lang.String)
    {
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        java.lang.String l1, l2, l3;
        int $stack4, $stack5;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: java.lang.String;

        $stack4 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newClass(java.lang.String)>(l1);

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: int enclosingMethodOwner> = $stack4;

        if l2 == null goto label1;

        if l3 == null goto label1;

        $stack5 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newNameType(java.lang.String,java.lang.String)>(l2, l3);

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: int enclosingMethod> = $stack5;

     label1:
        return;
    }

    public final jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String, boolean)
    {
        jdk.internal.org.objectweb.asm.ByteVector $stack5, $stack7;
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        java.lang.String l1;
        int $stack6;
        jdk.internal.org.objectweb.asm.AnnotationWriter $stack9, $stack10, $stack11;
        boolean l2;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: boolean;

        $stack5 = new jdk.internal.org.objectweb.asm.ByteVector;

        specialinvoke $stack5.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        $stack6 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>(l1);

        $stack7 = virtualinvoke $stack5.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack6);

        virtualinvoke $stack7.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(0);

        $stack9 = new jdk.internal.org.objectweb.asm.AnnotationWriter;

        specialinvoke $stack9.<jdk.internal.org.objectweb.asm.AnnotationWriter: void <init>(jdk.internal.org.objectweb.asm.ClassWriter,boolean,jdk.internal.org.objectweb.asm.ByteVector,jdk.internal.org.objectweb.asm.ByteVector,int)>(l0, 1, $stack5, $stack5, 2);

        if l2 == 0 goto label1;

        $stack11 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.AnnotationWriter anns>;

        $stack9.<jdk.internal.org.objectweb.asm.AnnotationWriter: jdk.internal.org.objectweb.asm.AnnotationWriter next> = $stack11;

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.AnnotationWriter anns> = $stack9;

        goto label2;

     label1:
        $stack10 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ianns>;

        $stack9.<jdk.internal.org.objectweb.asm.AnnotationWriter: jdk.internal.org.objectweb.asm.AnnotationWriter next> = $stack10;

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ianns> = $stack9;

     label2:
        return $stack9;
    }

    public final jdk.internal.org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int, jdk.internal.org.objectweb.asm.TypePath, java.lang.String, boolean)
    {
        jdk.internal.org.objectweb.asm.ByteVector $stack7, $stack9;
        int l1, $stack8, $stack12, $stack13;
        jdk.internal.org.objectweb.asm.TypePath l2;
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        java.lang.String l3;
        jdk.internal.org.objectweb.asm.AnnotationWriter $stack11, $stack14, $stack15;
        boolean l4;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: int;

        l2 := @parameter1: jdk.internal.org.objectweb.asm.TypePath;

        l3 := @parameter2: java.lang.String;

        l4 := @parameter3: boolean;

        $stack7 = new jdk.internal.org.objectweb.asm.ByteVector;

        specialinvoke $stack7.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        staticinvoke <jdk.internal.org.objectweb.asm.AnnotationWriter: void putTarget(int,jdk.internal.org.objectweb.asm.TypePath,jdk.internal.org.objectweb.asm.ByteVector)>(l1, l2, $stack7);

        $stack8 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>(l3);

        $stack9 = virtualinvoke $stack7.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack8);

        virtualinvoke $stack9.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(0);

        $stack11 = new jdk.internal.org.objectweb.asm.AnnotationWriter;

        $stack12 = $stack7.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack13 = $stack12 - 2;

        specialinvoke $stack11.<jdk.internal.org.objectweb.asm.AnnotationWriter: void <init>(jdk.internal.org.objectweb.asm.ClassWriter,boolean,jdk.internal.org.objectweb.asm.ByteVector,jdk.internal.org.objectweb.asm.ByteVector,int)>(l0, 1, $stack7, $stack7, $stack13);

        if l4 == 0 goto label1;

        $stack15 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.AnnotationWriter tanns>;

        $stack11.<jdk.internal.org.objectweb.asm.AnnotationWriter: jdk.internal.org.objectweb.asm.AnnotationWriter next> = $stack15;

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.AnnotationWriter tanns> = $stack11;

        goto label2;

     label1:
        $stack14 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.AnnotationWriter itanns>;

        $stack11.<jdk.internal.org.objectweb.asm.AnnotationWriter: jdk.internal.org.objectweb.asm.AnnotationWriter next> = $stack14;

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.AnnotationWriter itanns> = $stack11;

     label2:
        return $stack11;
    }

    public final void visitAttribute(jdk.internal.org.objectweb.asm.Attribute)
    {
        jdk.internal.org.objectweb.asm.Attribute l1, $stack2;
        jdk.internal.org.objectweb.asm.ClassWriter l0;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.Attribute;

        $stack2 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Attribute attrs>;

        l1.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next> = $stack2;

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Attribute attrs> = l1;

        return;
    }

    public final void visitInnerClass(java.lang.String, java.lang.String, java.lang.String, int)
    {
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        jdk.internal.org.objectweb.asm.ByteVector $stack6, $stack12, $stack14, $stack17, $stack20, $stack29;
        java.lang.String l1, l2, l3;
        jdk.internal.org.objectweb.asm.Item $stack7;
        int $stack8, $stack9, $stack10, $stack11, l4, $stack22, $stack15#1, $stack18#2;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: java.lang.String;

        l4 := @parameter3: int;

        $stack6 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector innerClasses>;

        if $stack6 != null goto label1;

        $stack29 = new jdk.internal.org.objectweb.asm.ByteVector;

        specialinvoke $stack29.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector innerClasses> = $stack29;

     label1:
        $stack7 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item newClassItem(java.lang.String)>(l1);

        $stack8 = $stack7.<jdk.internal.org.objectweb.asm.Item: int intVal>;

        if $stack8 != 0 goto label6;

        $stack9 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int innerClassesCount>;

        $stack10 = $stack9 + 1;

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: int innerClassesCount> = $stack10;

        $stack12 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector innerClasses>;

        $stack11 = $stack7.<jdk.internal.org.objectweb.asm.Item: int index>;

        virtualinvoke $stack12.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack11);

        $stack14 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector innerClasses>;

        if l2 != null goto label2;

        $stack15#1 = 0;

        goto label3;

     label2:
        $stack15#1 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newClass(java.lang.String)>(l2);

     label3:
        virtualinvoke $stack14.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack15#1);

        $stack17 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector innerClasses>;

        if l3 != null goto label4;

        $stack18#2 = 0;

        goto label5;

     label4:
        $stack18#2 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>(l3);

     label5:
        virtualinvoke $stack17.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack18#2);

        $stack20 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector innerClasses>;

        virtualinvoke $stack20.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(l4);

        $stack22 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int innerClassesCount>;

        $stack7.<jdk.internal.org.objectweb.asm.Item: int intVal> = $stack22;

     label6:
        return;
    }

    public final jdk.internal.org.objectweb.asm.FieldVisitor visitField(int, java.lang.String, java.lang.String, java.lang.String, java.lang.Object)
    {
        jdk.internal.org.objectweb.asm.FieldWriter $stack6;
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        int l1;
        java.lang.String l2, l3, l4;
        java.lang.Object l5;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: int;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: java.lang.String;

        l4 := @parameter3: java.lang.String;

        l5 := @parameter4: java.lang.Object;

        $stack6 = new jdk.internal.org.objectweb.asm.FieldWriter;

        specialinvoke $stack6.<jdk.internal.org.objectweb.asm.FieldWriter: void <init>(jdk.internal.org.objectweb.asm.ClassWriter,int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>(l0, l1, l2, l3, l4, l5);

        return $stack6;
    }

    public final jdk.internal.org.objectweb.asm.MethodVisitor visitMethod(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])
    {
        jdk.internal.org.objectweb.asm.MethodWriter $stack6;
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        int l1;
        java.lang.String l2, l3, l4;
        java.lang.String[] l5;
        boolean $stack7, $stack8;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: int;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: java.lang.String;

        l4 := @parameter3: java.lang.String;

        l5 := @parameter4: java.lang.String[];

        $stack6 = new jdk.internal.org.objectweb.asm.MethodWriter;

        $stack8 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: boolean computeMaxs>;

        $stack7 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: boolean computeFrames>;

        specialinvoke $stack6.<jdk.internal.org.objectweb.asm.MethodWriter: void <init>(jdk.internal.org.objectweb.asm.ClassWriter,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)>(l0, l1, l2, l3, l4, l5, $stack8, $stack7);

        return $stack6;
    }

    public final void visitEnd()
    {
        jdk.internal.org.objectweb.asm.ClassWriter l0;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        return;
    }

    public byte[] toByteArray()
    {
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        int $stack10, $stack11, $stack12, $stack14, $stack15, $stack17, $stack18, $stack19, $stack20, $stack21, $stack29, $stack32, $stack34, $stack38, $stack41, $stack42, $stack43, $stack44, $stack45, $stack46, $stack48, $stack50, $stack52, $stack59, $stack60, $stack62, $stack63, $stack64, $stack65, $stack66, $stack80, $stack84, $stack88, $stack92, $stack96, $stack99, $stack100, $stack102, $stack106, $stack110, $stack111, $stack112, $stack116, $stack117, $stack122, $stack127, $stack130, $stack132, $stack137, $stack144, $stack147, $stack150, $stack153, $stack156, $stack159, $stack160, $stack162, $stack166, $stack175, $stack180, $stack182, $stack185, $stack199, $stack211, $stack212, $stack217, $stack218, $stack223, $stack224, $stack229, $stack230, $stack234, $stack235, $stack238, $stack239, $stack242, $stack243, $stack253, $stack254, $stack262, $stack263, $stack266, $stack269, l1#1, l2#2, l4#4, l6#6, l9#14, $stack54#19, l9#23;
        jdk.internal.org.objectweb.asm.ByteVector $stack13, $stack16, $stack28, $stack30, $stack31, $stack35, $stack36, $stack37, $stack47, $stack49, $stack58, $stack61, $stack98, $stack101, $stack104, $stack105, $stack113, $stack123, $stack128, $stack131, $stack136, $stack138, $stack140, $stack145, $stack146, $stack151, $stack152, $stack158, $stack161, $stack164, $stack165, $stack233, $stack252, $stack261, $stack22#10, $stack67#27;
        jdk.internal.org.objectweb.asm.AnnotationWriter $stack23, $stack24, $stack25, $stack26, $stack68, $stack69, $stack70, $stack71, $stack82, $stack86, $stack90, $stack94, $stack209, $stack215, $stack221, $stack227;
        jdk.internal.org.objectweb.asm.Attribute $stack27, $stack72, $stack78, $stack179, $stack181;
        byte[] $stack39, $stack74, $stack76, $stack77, $stack107, $stack141, $stack167;
        boolean $stack73;
        jdk.internal.org.objectweb.asm.ClassReader $stack75;
        jdk.internal.org.objectweb.asm.MethodVisitor $stack170, $stack267;
        jdk.internal.org.objectweb.asm.FieldVisitor $stack172, $stack270;
        int[] $stack174;
        java.lang.RuntimeException $stack272;
        jdk.internal.org.objectweb.asm.FieldWriter l3#3, l3#21;
        jdk.internal.org.objectweb.asm.MethodWriter l5#5, l5#22;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        $stack10 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int index>;

        if $stack10 <= 65535 goto label01;

        $stack272 = new java.lang.RuntimeException;

        specialinvoke $stack272.<java.lang.RuntimeException: void <init>(java.lang.String)>("Class file too large!");

        throw $stack272;

     label01:
        $stack11 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int interfaceCount>;

        $stack12 = 2 * $stack11;

        l1#1 = 24 + $stack12;

        l2#2 = 0;

        l3#3 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.FieldWriter firstField>;

     label02:
        if l3#3 == null goto label03;

        l2#2 = l2#2 + 1;

        $stack269 = virtualinvoke l3#3.<jdk.internal.org.objectweb.asm.FieldWriter: int getSize()>();

        l1#1 = l1#1 + $stack269;

        $stack270 = l3#3.<jdk.internal.org.objectweb.asm.FieldWriter: jdk.internal.org.objectweb.asm.FieldVisitor fv>;

        l3#3 = (jdk.internal.org.objectweb.asm.FieldWriter) $stack270;

        goto label02;

     label03:
        l4#4 = 0;

        l5#5 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.MethodWriter firstMethod>;

     label04:
        if l5#5 == null goto label05;

        l4#4 = l4#4 + 1;

        $stack266 = virtualinvoke l5#5.<jdk.internal.org.objectweb.asm.MethodWriter: int getSize()>();

        l1#1 = l1#1 + $stack266;

        $stack267 = l5#5.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.MethodVisitor mv>;

        l5#5 = (jdk.internal.org.objectweb.asm.MethodWriter) $stack267;

        goto label04;

     label05:
        l6#6 = 0;

        $stack13 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector bootstrapMethods>;

        if $stack13 == null goto label06;

        l6#6 = 0 + 1;

        $stack261 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector bootstrapMethods>;

        $stack262 = $stack261.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack263 = 8 + $stack262;

        l1#1 = l1#1 + $stack263;

        virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("BootstrapMethods");

     label06:
        $stack14 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int signature>;

        if $stack14 == 0 goto label07;

        l6#6 = l6#6 + 1;

        l1#1 = l1#1 + 8;

        virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("Signature");

     label07:
        $stack15 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int sourceFile>;

        if $stack15 == 0 goto label08;

        l6#6 = l6#6 + 1;

        l1#1 = l1#1 + 8;

        virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("SourceFile");

     label08:
        $stack16 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector sourceDebug>;

        if $stack16 == null goto label09;

        l6#6 = l6#6 + 1;

        $stack252 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector sourceDebug>;

        $stack253 = $stack252.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack254 = $stack253 + 6;

        l1#1 = l1#1 + $stack254;

        virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("SourceDebugExtension");

     label09:
        $stack17 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int enclosingMethodOwner>;

        if $stack17 == 0 goto label10;

        l6#6 = l6#6 + 1;

        l1#1 = l1#1 + 10;

        virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("EnclosingMethod");

     label10:
        $stack18 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int access>;

        $stack19 = $stack18 & 131072;

        if $stack19 == 0 goto label11;

        l6#6 = l6#6 + 1;

        l1#1 = l1#1 + 6;

        virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("Deprecated");

     label11:
        $stack20 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int access>;

        $stack21 = $stack20 & 4096;

        if $stack21 == 0 goto label13;

        $stack238 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int version>;

        $stack239 = $stack238 & 65535;

        if $stack239 < 49 goto label12;

        $stack242 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int access>;

        $stack243 = $stack242 & 262144;

        if $stack243 == 0 goto label13;

     label12:
        l6#6 = l6#6 + 1;

        l1#1 = l1#1 + 6;

        virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("Synthetic");

     label13:
        $stack22#10 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector innerClasses>;

        if $stack22#10 == null goto label14;

        l6#6 = l6#6 + 1;

        $stack233 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector innerClasses>;

        $stack234 = $stack233.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack235 = 8 + $stack234;

        l1#1 = l1#1 + $stack235;

        virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("InnerClasses");

     label14:
        $stack23 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.AnnotationWriter anns>;

        if $stack23 == null goto label15;

        l6#6 = l6#6 + 1;

        $stack227 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.AnnotationWriter anns>;

        $stack229 = virtualinvoke $stack227.<jdk.internal.org.objectweb.asm.AnnotationWriter: int getSize()>();

        $stack230 = 8 + $stack229;

        l1#1 = l1#1 + $stack230;

        virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeVisibleAnnotations");

     label15:
        $stack24 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ianns>;

        if $stack24 == null goto label16;

        l6#6 = l6#6 + 1;

        $stack221 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ianns>;

        $stack223 = virtualinvoke $stack221.<jdk.internal.org.objectweb.asm.AnnotationWriter: int getSize()>();

        $stack224 = 8 + $stack223;

        l1#1 = l1#1 + $stack224;

        virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeInvisibleAnnotations");

     label16:
        $stack25 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.AnnotationWriter tanns>;

        if $stack25 == null goto label17;

        l6#6 = l6#6 + 1;

        $stack215 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.AnnotationWriter tanns>;

        $stack217 = virtualinvoke $stack215.<jdk.internal.org.objectweb.asm.AnnotationWriter: int getSize()>();

        $stack218 = 8 + $stack217;

        l1#1 = l1#1 + $stack218;

        virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeVisibleTypeAnnotations");

     label17:
        $stack26 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.AnnotationWriter itanns>;

        if $stack26 == null goto label18;

        l6#6 = l6#6 + 1;

        $stack209 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.AnnotationWriter itanns>;

        $stack211 = virtualinvoke $stack209.<jdk.internal.org.objectweb.asm.AnnotationWriter: int getSize()>();

        $stack212 = 8 + $stack211;

        l1#1 = l1#1 + $stack212;

        virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeInvisibleTypeAnnotations");

     label18:
        $stack27 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Attribute attrs>;

        if $stack27 == null goto label19;

        $stack179 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Attribute attrs>;

        $stack180 = virtualinvoke $stack179.<jdk.internal.org.objectweb.asm.Attribute: int getCount()>();

        l6#6 = l6#6 + $stack180;

        $stack181 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Attribute attrs>;

        $stack182 = virtualinvoke $stack181.<jdk.internal.org.objectweb.asm.Attribute: int getSize(jdk.internal.org.objectweb.asm.ClassWriter,byte[],int,int,int)>(l0, null, 0, -1, -1);

        l1#1 = l1#1 + $stack182;

     label19:
        $stack28 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector pool>;

        $stack29 = $stack28.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack185 = l1#1 + $stack29;

        $stack30 = new jdk.internal.org.objectweb.asm.ByteVector;

        specialinvoke $stack30.<jdk.internal.org.objectweb.asm.ByteVector: void <init>(int)>($stack185);

        $stack31 = virtualinvoke $stack30.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>(-889275714);

        $stack32 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int version>;

        virtualinvoke $stack31.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>($stack32);

        $stack34 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int index>;

        $stack35 = virtualinvoke $stack30.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack34);

        $stack36 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector pool>;

        $stack39 = $stack36.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        $stack37 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector pool>;

        $stack38 = $stack37.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        virtualinvoke $stack35.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($stack39, 0, $stack38);

        $stack41 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int access>;

        $stack42 = $stack41 & 262144;

        $stack43 = $stack42 / 64;

        $stack199 = 393216 | $stack43;

        $stack45 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int access>;

        $stack44 = $stack199 ^ -1;

        $stack46 = $stack45 & $stack44;

        $stack47 = virtualinvoke $stack30.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack46);

        $stack48 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int name>;

        $stack49 = virtualinvoke $stack47.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack48);

        $stack50 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int superName>;

        virtualinvoke $stack49.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack50);

        $stack52 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int interfaceCount>;

        virtualinvoke $stack30.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack52);

        l9#14 = 0;

     label20:
        $stack54#19 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int interfaceCount>;

        if l9#14 >= $stack54#19 goto label21;

        $stack174 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int[] interfaces>;

        $stack175 = $stack174[l9#14];

        virtualinvoke $stack30.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack175);

        l9#14 = l9#14 + 1;

        goto label20;

     label21:
        virtualinvoke $stack30.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(l2#2);

        l3#21 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.FieldWriter firstField>;

     label22:
        if l3#21 == null goto label23;

        virtualinvoke l3#21.<jdk.internal.org.objectweb.asm.FieldWriter: void put(jdk.internal.org.objectweb.asm.ByteVector)>($stack30);

        $stack172 = l3#21.<jdk.internal.org.objectweb.asm.FieldWriter: jdk.internal.org.objectweb.asm.FieldVisitor fv>;

        l3#21 = (jdk.internal.org.objectweb.asm.FieldWriter) $stack172;

        goto label22;

     label23:
        virtualinvoke $stack30.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(l4#4);

        l5#22 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.MethodWriter firstMethod>;

     label24:
        if l5#22 == null goto label25;

        virtualinvoke l5#22.<jdk.internal.org.objectweb.asm.MethodWriter: void put(jdk.internal.org.objectweb.asm.ByteVector)>($stack30);

        $stack170 = l5#22.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.MethodVisitor mv>;

        l5#22 = (jdk.internal.org.objectweb.asm.MethodWriter) $stack170;

        goto label24;

     label25:
        virtualinvoke $stack30.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(l6#6);

        $stack58 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector bootstrapMethods>;

        if $stack58 == null goto label26;

        $stack156 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("BootstrapMethods");

        virtualinvoke $stack30.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack156);

        $stack158 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector bootstrapMethods>;

        $stack159 = $stack158.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack160 = $stack159 + 2;

        $stack161 = virtualinvoke $stack30.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>($stack160);

        $stack162 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int bootstrapMethodsCount>;

        virtualinvoke $stack161.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack162);

        $stack164 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector bootstrapMethods>;

        $stack167 = $stack164.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        $stack165 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector bootstrapMethods>;

        $stack166 = $stack165.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        virtualinvoke $stack30.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($stack167, 0, $stack166);

     label26:
        $stack59 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int signature>;

        if $stack59 == 0 goto label27;

        $stack150 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("Signature");

        $stack151 = virtualinvoke $stack30.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack150);

        $stack152 = virtualinvoke $stack151.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>(2);

        $stack153 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int signature>;

        virtualinvoke $stack152.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack153);

     label27:
        $stack60 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int sourceFile>;

        if $stack60 == 0 goto label28;

        $stack144 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("SourceFile");

        $stack145 = virtualinvoke $stack30.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack144);

        $stack146 = virtualinvoke $stack145.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>(2);

        $stack147 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int sourceFile>;

        virtualinvoke $stack146.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack147);

     label28:
        $stack61 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector sourceDebug>;

        if $stack61 == null goto label29;

        $stack136 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector sourceDebug>;

        l9#23 = $stack136.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack137 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("SourceDebugExtension");

        $stack138 = virtualinvoke $stack30.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack137);

        virtualinvoke $stack138.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>(l9#23);

        $stack140 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector sourceDebug>;

        $stack141 = $stack140.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        virtualinvoke $stack30.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($stack141, 0, l9#23);

     label29:
        $stack62 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int enclosingMethodOwner>;

        if $stack62 == 0 goto label30;

        $stack127 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("EnclosingMethod");

        $stack128 = virtualinvoke $stack30.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack127);

        virtualinvoke $stack128.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>(4);

        $stack130 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int enclosingMethodOwner>;

        $stack131 = virtualinvoke $stack30.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack130);

        $stack132 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int enclosingMethod>;

        virtualinvoke $stack131.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack132);

     label30:
        $stack63 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int access>;

        $stack64 = $stack63 & 131072;

        if $stack64 == 0 goto label31;

        $stack122 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("Deprecated");

        $stack123 = virtualinvoke $stack30.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack122);

        virtualinvoke $stack123.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>(0);

     label31:
        $stack65 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int access>;

        $stack66 = $stack65 & 4096;

        if $stack66 == 0 goto label33;

        $stack110 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int version>;

        $stack111 = $stack110 & 65535;

        if $stack111 < 49 goto label32;

        $stack116 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int access>;

        $stack117 = $stack116 & 262144;

        if $stack117 == 0 goto label33;

     label32:
        $stack112 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("Synthetic");

        $stack113 = virtualinvoke $stack30.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack112);

        virtualinvoke $stack113.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>(0);

     label33:
        $stack67#27 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector innerClasses>;

        if $stack67#27 == null goto label34;

        $stack96 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("InnerClasses");

        virtualinvoke $stack30.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack96);

        $stack98 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector innerClasses>;

        $stack99 = $stack98.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack100 = $stack99 + 2;

        $stack101 = virtualinvoke $stack30.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>($stack100);

        $stack102 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int innerClassesCount>;

        virtualinvoke $stack101.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack102);

        $stack104 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector innerClasses>;

        $stack107 = $stack104.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        $stack105 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector innerClasses>;

        $stack106 = $stack105.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        virtualinvoke $stack30.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($stack107, 0, $stack106);

     label34:
        $stack68 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.AnnotationWriter anns>;

        if $stack68 == null goto label35;

        $stack92 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeVisibleAnnotations");

        virtualinvoke $stack30.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack92);

        $stack94 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.AnnotationWriter anns>;

        virtualinvoke $stack94.<jdk.internal.org.objectweb.asm.AnnotationWriter: void put(jdk.internal.org.objectweb.asm.ByteVector)>($stack30);

     label35:
        $stack69 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ianns>;

        if $stack69 == null goto label36;

        $stack88 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeInvisibleAnnotations");

        virtualinvoke $stack30.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack88);

        $stack90 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ianns>;

        virtualinvoke $stack90.<jdk.internal.org.objectweb.asm.AnnotationWriter: void put(jdk.internal.org.objectweb.asm.ByteVector)>($stack30);

     label36:
        $stack70 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.AnnotationWriter tanns>;

        if $stack70 == null goto label37;

        $stack84 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeVisibleTypeAnnotations");

        virtualinvoke $stack30.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack84);

        $stack86 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.AnnotationWriter tanns>;

        virtualinvoke $stack86.<jdk.internal.org.objectweb.asm.AnnotationWriter: void put(jdk.internal.org.objectweb.asm.ByteVector)>($stack30);

     label37:
        $stack71 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.AnnotationWriter itanns>;

        if $stack71 == null goto label38;

        $stack80 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeInvisibleTypeAnnotations");

        virtualinvoke $stack30.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack80);

        $stack82 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.AnnotationWriter itanns>;

        virtualinvoke $stack82.<jdk.internal.org.objectweb.asm.AnnotationWriter: void put(jdk.internal.org.objectweb.asm.ByteVector)>($stack30);

     label38:
        $stack72 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Attribute attrs>;

        if $stack72 == null goto label39;

        $stack78 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Attribute attrs>;

        virtualinvoke $stack78.<jdk.internal.org.objectweb.asm.Attribute: void put(jdk.internal.org.objectweb.asm.ClassWriter,byte[],int,int,int,jdk.internal.org.objectweb.asm.ByteVector)>(l0, null, 0, -1, -1, $stack30);

     label39:
        $stack73 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: boolean invalidFrames>;

        if $stack73 == 0 goto label40;

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.AnnotationWriter anns> = null;

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ianns> = null;

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Attribute attrs> = null;

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: int innerClassesCount> = 0;

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector innerClasses> = null;

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: int bootstrapMethodsCount> = 0;

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector bootstrapMethods> = null;

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.FieldWriter firstField> = null;

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.FieldWriter lastField> = null;

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.MethodWriter firstMethod> = null;

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.MethodWriter lastMethod> = null;

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: boolean computeMaxs> = 0;

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: boolean computeFrames> = 1;

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: boolean invalidFrames> = 0;

        $stack75 = new jdk.internal.org.objectweb.asm.ClassReader;

        $stack76 = $stack30.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        specialinvoke $stack75.<jdk.internal.org.objectweb.asm.ClassReader: void <init>(byte[])>($stack76);

        virtualinvoke $stack75.<jdk.internal.org.objectweb.asm.ClassReader: void accept(jdk.internal.org.objectweb.asm.ClassVisitor,int)>(l0, 4);

        $stack77 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: byte[] toByteArray()>();

        return $stack77;

     label40:
        $stack74 = $stack30.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        return $stack74;
    }

    jdk.internal.org.objectweb.asm.Item newConstItem(java.lang.Object)
    {
        java.lang.Object l1;
        boolean $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $stack12, $stack13, $stack14, $stack44;
        java.lang.IllegalArgumentException $stack15;
        java.lang.StringBuilder $stack16, $stack17, $stack18;
        java.lang.String $stack19, $stack20, $stack21, $stack22, $stack26, $stack28, $stack30, $stack32;
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        int $stack23, $stack25, $stack50, $stack56, $stack59;
        jdk.internal.org.objectweb.asm.Item $stack24, $stack27, $stack29, $stack31, $stack33, $stack36, $stack39, $stack42, $stack45, $stack51, $stack54, $stack57, $stack60;
        java.lang.Double $stack34;
        double $stack35;
        java.lang.Long $stack37;
        long $stack38;
        java.lang.Float $stack40;
        float $stack41;
        java.lang.Boolean $stack43;
        java.lang.Short $stack49;
        java.lang.Character $stack52;
        char $stack53;
        java.lang.Byte $stack55;
        java.lang.Integer $stack58;
        byte $stack46#5;
        jdk.internal.org.objectweb.asm.Type l2#10;
        jdk.internal.org.objectweb.asm.Handle l2#11;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: java.lang.Object;

        $stack4 = l1 instanceof java.lang.Integer;

        if $stack4 == 0 goto label01;

        $stack58 = (java.lang.Integer) l1;

        $stack59 = virtualinvoke $stack58.<java.lang.Integer: int intValue()>();

        $stack60 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item newInteger(int)>($stack59);

        return $stack60;

     label01:
        $stack5 = l1 instanceof java.lang.Byte;

        if $stack5 == 0 goto label02;

        $stack55 = (java.lang.Byte) l1;

        $stack56 = virtualinvoke $stack55.<java.lang.Byte: int intValue()>();

        $stack57 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item newInteger(int)>($stack56);

        return $stack57;

     label02:
        $stack6 = l1 instanceof java.lang.Character;

        if $stack6 == 0 goto label03;

        $stack52 = (java.lang.Character) l1;

        $stack53 = virtualinvoke $stack52.<java.lang.Character: char charValue()>();

        $stack54 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item newInteger(int)>($stack53);

        return $stack54;

     label03:
        $stack7 = l1 instanceof java.lang.Short;

        if $stack7 == 0 goto label04;

        $stack49 = (java.lang.Short) l1;

        $stack50 = virtualinvoke $stack49.<java.lang.Short: int intValue()>();

        $stack51 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item newInteger(int)>($stack50);

        return $stack51;

     label04:
        $stack8 = l1 instanceof java.lang.Boolean;

        if $stack8 == 0 goto label07;

        $stack43 = (java.lang.Boolean) l1;

        $stack44 = virtualinvoke $stack43.<java.lang.Boolean: boolean booleanValue()>();

        if $stack44 == 0 goto label05;

        $stack46#5 = 1;

        goto label06;

     label05:
        $stack46#5 = 0;

     label06:
        $stack45 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item newInteger(int)>($stack46#5);

        return $stack45;

     label07:
        $stack9 = l1 instanceof java.lang.Float;

        if $stack9 == 0 goto label08;

        $stack40 = (java.lang.Float) l1;

        $stack41 = virtualinvoke $stack40.<java.lang.Float: float floatValue()>();

        $stack42 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item newFloat(float)>($stack41);

        return $stack42;

     label08:
        $stack10 = l1 instanceof java.lang.Long;

        if $stack10 == 0 goto label09;

        $stack37 = (java.lang.Long) l1;

        $stack38 = virtualinvoke $stack37.<java.lang.Long: long longValue()>();

        $stack39 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item newLong(long)>($stack38);

        return $stack39;

     label09:
        $stack11 = l1 instanceof java.lang.Double;

        if $stack11 == 0 goto label10;

        $stack34 = (java.lang.Double) l1;

        $stack35 = virtualinvoke $stack34.<java.lang.Double: double doubleValue()>();

        $stack36 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item newDouble(double)>($stack35);

        return $stack36;

     label10:
        $stack12 = l1 instanceof java.lang.String;

        if $stack12 == 0 goto label11;

        $stack32 = (java.lang.String) l1;

        $stack33 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item newString(java.lang.String)>($stack32);

        return $stack33;

     label11:
        $stack13 = l1 instanceof jdk.internal.org.objectweb.asm.Type;

        if $stack13 == 0 goto label14;

        l2#10 = (jdk.internal.org.objectweb.asm.Type) l1;

        $stack25 = virtualinvoke l2#10.<jdk.internal.org.objectweb.asm.Type: int getSort()>();

        if $stack25 != 10 goto label12;

        $stack30 = virtualinvoke l2#10.<jdk.internal.org.objectweb.asm.Type: java.lang.String getInternalName()>();

        $stack31 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item newClassItem(java.lang.String)>($stack30);

        return $stack31;

     label12:
        if $stack25 != 11 goto label13;

        $stack28 = virtualinvoke l2#10.<jdk.internal.org.objectweb.asm.Type: java.lang.String getDescriptor()>();

        $stack29 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item newMethodTypeItem(java.lang.String)>($stack28);

        return $stack29;

     label13:
        $stack26 = virtualinvoke l2#10.<jdk.internal.org.objectweb.asm.Type: java.lang.String getDescriptor()>();

        $stack27 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item newClassItem(java.lang.String)>($stack26);

        return $stack27;

     label14:
        $stack14 = l1 instanceof jdk.internal.org.objectweb.asm.Handle;

        if $stack14 == 0 goto label15;

        l2#11 = (jdk.internal.org.objectweb.asm.Handle) l1;

        $stack23 = l2#11.<jdk.internal.org.objectweb.asm.Handle: int tag>;

        $stack22 = l2#11.<jdk.internal.org.objectweb.asm.Handle: java.lang.String owner>;

        $stack21 = l2#11.<jdk.internal.org.objectweb.asm.Handle: java.lang.String name>;

        $stack20 = l2#11.<jdk.internal.org.objectweb.asm.Handle: java.lang.String desc>;

        $stack24 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item newHandleItem(int,java.lang.String,java.lang.String,java.lang.String)>($stack23, $stack22, $stack21, $stack20);

        return $stack24;

     label15:
        $stack15 = new java.lang.IllegalArgumentException;

        $stack16 = new java.lang.StringBuilder;

        specialinvoke $stack16.<java.lang.StringBuilder: void <init>()>();

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("value ");

        $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(l1);

        $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $stack15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack19);

        throw $stack15;
    }

    public int newConst(java.lang.Object)
    {
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        java.lang.Object l1;
        jdk.internal.org.objectweb.asm.Item $stack2;
        int $stack3;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: java.lang.Object;

        $stack2 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item newConstItem(java.lang.Object)>(l1);

        $stack3 = $stack2.<jdk.internal.org.objectweb.asm.Item: int index>;

        return $stack3;
    }

    public int newUTF8(java.lang.String)
    {
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        java.lang.String l1;
        jdk.internal.org.objectweb.asm.Item $stack3, $stack4, $stack5, $stack10, $stack13, l2#1;
        int $stack6, $stack11, $stack12;
        jdk.internal.org.objectweb.asm.ByteVector $stack7, $stack8;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: java.lang.String;

        $stack3 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key>;

        virtualinvoke $stack3.<jdk.internal.org.objectweb.asm.Item: void set(int,java.lang.String,java.lang.String,java.lang.String)>(1, l1, null, null);

        $stack4 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key>;

        $stack5 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item get(jdk.internal.org.objectweb.asm.Item)>($stack4);

        l2#1 = $stack5;

        if $stack5 != null goto label1;

        $stack7 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector pool>;

        $stack8 = virtualinvoke $stack7.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(1);

        virtualinvoke $stack8.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putUTF8(java.lang.String)>(l1);

        $stack10 = new jdk.internal.org.objectweb.asm.Item;

        $stack11 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int index>;

        $stack12 = $stack11 + 1;

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: int index> = $stack12;

        $stack13 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key>;

        specialinvoke $stack10.<jdk.internal.org.objectweb.asm.Item: void <init>(int,jdk.internal.org.objectweb.asm.Item)>($stack11, $stack13);

        l2#1 = $stack10;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: void put(jdk.internal.org.objectweb.asm.Item)>($stack10);

     label1:
        $stack6 = l2#1.<jdk.internal.org.objectweb.asm.Item: int index>;

        return $stack6;
    }

    jdk.internal.org.objectweb.asm.Item newClassItem(java.lang.String)
    {
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        java.lang.String l1;
        jdk.internal.org.objectweb.asm.Item $stack3, $stack4, $stack5, $stack10, $stack13, l2#1;
        jdk.internal.org.objectweb.asm.ByteVector $stack6;
        int $stack8, $stack11, $stack12;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: java.lang.String;

        $stack3 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key2>;

        virtualinvoke $stack3.<jdk.internal.org.objectweb.asm.Item: void set(int,java.lang.String,java.lang.String,java.lang.String)>(7, l1, null, null);

        $stack4 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key2>;

        $stack5 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item get(jdk.internal.org.objectweb.asm.Item)>($stack4);

        l2#1 = $stack5;

        if $stack5 != null goto label1;

        $stack6 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector pool>;

        $stack8 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>(l1);

        virtualinvoke $stack6.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put12(int,int)>(7, $stack8);

        $stack10 = new jdk.internal.org.objectweb.asm.Item;

        $stack11 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int index>;

        $stack12 = $stack11 + 1;

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: int index> = $stack12;

        $stack13 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key2>;

        specialinvoke $stack10.<jdk.internal.org.objectweb.asm.Item: void <init>(int,jdk.internal.org.objectweb.asm.Item)>($stack11, $stack13);

        l2#1 = $stack10;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: void put(jdk.internal.org.objectweb.asm.Item)>($stack10);

     label1:
        return l2#1;
    }

    public int newClass(java.lang.String)
    {
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        java.lang.String l1;
        jdk.internal.org.objectweb.asm.Item $stack2;
        int $stack3;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: java.lang.String;

        $stack2 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item newClassItem(java.lang.String)>(l1);

        $stack3 = $stack2.<jdk.internal.org.objectweb.asm.Item: int index>;

        return $stack3;
    }

    jdk.internal.org.objectweb.asm.Item newMethodTypeItem(java.lang.String)
    {
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        java.lang.String l1;
        jdk.internal.org.objectweb.asm.Item $stack3, $stack4, $stack5, $stack10, $stack13, l2#1;
        jdk.internal.org.objectweb.asm.ByteVector $stack6;
        int $stack8, $stack11, $stack12;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: java.lang.String;

        $stack3 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key2>;

        virtualinvoke $stack3.<jdk.internal.org.objectweb.asm.Item: void set(int,java.lang.String,java.lang.String,java.lang.String)>(16, l1, null, null);

        $stack4 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key2>;

        $stack5 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item get(jdk.internal.org.objectweb.asm.Item)>($stack4);

        l2#1 = $stack5;

        if $stack5 != null goto label1;

        $stack6 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector pool>;

        $stack8 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>(l1);

        virtualinvoke $stack6.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put12(int,int)>(16, $stack8);

        $stack10 = new jdk.internal.org.objectweb.asm.Item;

        $stack11 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int index>;

        $stack12 = $stack11 + 1;

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: int index> = $stack12;

        $stack13 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key2>;

        specialinvoke $stack10.<jdk.internal.org.objectweb.asm.Item: void <init>(int,jdk.internal.org.objectweb.asm.Item)>($stack11, $stack13);

        l2#1 = $stack10;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: void put(jdk.internal.org.objectweb.asm.Item)>($stack10);

     label1:
        return l2#1;
    }

    public int newMethodType(java.lang.String)
    {
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        java.lang.String l1;
        jdk.internal.org.objectweb.asm.Item $stack2;
        int $stack3;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: java.lang.String;

        $stack2 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item newMethodTypeItem(java.lang.String)>(l1);

        $stack3 = $stack2.<jdk.internal.org.objectweb.asm.Item: int index>;

        return $stack3;
    }

    jdk.internal.org.objectweb.asm.Item newHandleItem(int, java.lang.String, java.lang.String, java.lang.String)
    {
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        int l1, $stack6, $stack11, $stack30, $stack13#9, $stack14#14;
        java.lang.String l2, l3, l4;
        jdk.internal.org.objectweb.asm.Item $stack7, $stack8, $stack9, l5#1, $stack12#3, $stack15#18;
        boolean $stack20#2;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: int;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: java.lang.String;

        l4 := @parameter3: java.lang.String;

        $stack7 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key4>;

        $stack6 = 20 + l1;

        virtualinvoke $stack7.<jdk.internal.org.objectweb.asm.Item: void set(int,java.lang.String,java.lang.String,java.lang.String)>($stack6, l2, l3, l4);

        $stack8 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key4>;

        $stack9 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item get(jdk.internal.org.objectweb.asm.Item)>($stack8);

        l5#1 = $stack9;

        if $stack9 != null goto label5;

        if l1 > 4 goto label1;

        $stack30 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newField(java.lang.String,java.lang.String,java.lang.String)>(l2, l3, l4);

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: void put112(int,int,int)>(15, l1, $stack30);

        goto label4;

     label1:
        if l1 != 9 goto label2;

        $stack20#2 = 1;

        goto label3;

     label2:
        $stack20#2 = 0;

     label3:
        $stack11 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newMethod(java.lang.String,java.lang.String,java.lang.String,boolean)>(l2, l3, l4, $stack20#2);

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: void put112(int,int,int)>(15, l1, $stack11);

     label4:
        $stack12#3 = new jdk.internal.org.objectweb.asm.Item;

        $stack13#9 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int index>;

        $stack14#14 = $stack13#9 + 1;

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: int index> = $stack14#14;

        $stack15#18 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key4>;

        specialinvoke $stack12#3.<jdk.internal.org.objectweb.asm.Item: void <init>(int,jdk.internal.org.objectweb.asm.Item)>($stack13#9, $stack15#18);

        l5#1 = $stack12#3;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: void put(jdk.internal.org.objectweb.asm.Item)>($stack12#3);

     label5:
        return l5#1;
    }

    public int newHandle(int, java.lang.String, java.lang.String, java.lang.String)
    {
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        int l1, $stack6;
        java.lang.String l2, l3, l4;
        jdk.internal.org.objectweb.asm.Item $stack5;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: int;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: java.lang.String;

        l4 := @parameter3: java.lang.String;

        $stack5 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item newHandleItem(int,java.lang.String,java.lang.String,java.lang.String)>(l1, l2, l3, l4);

        $stack6 = $stack5.<jdk.internal.org.objectweb.asm.Item: int index>;

        return $stack6;
    }

    transient jdk.internal.org.objectweb.asm.Item newInvokeDynamicItem(java.lang.String, java.lang.String, jdk.internal.org.objectweb.asm.Handle, java.lang.Object[])
    {
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        jdk.internal.org.objectweb.asm.Handle l3;
        int $stack14, $stack18, $stack19, $stack22, $stack24, $stack25, $stack27, $stack28, $stack34, $stack36, $stack37, $stack47, $stack49, $stack51, $stack52, $stack59, $stack60, $stack66, $stack75, l7#2, l9#3, l10#10, l7#11, l12#15, l13#16, l12#17;
        java.lang.String $stack15, $stack16, $stack17, l1, l2;
        java.lang.Object[] l4;
        jdk.internal.org.objectweb.asm.Item[] $stack23, $stack26;
        jdk.internal.org.objectweb.asm.Item $stack29, $stack30, $stack31, $stack32, $stack35, $stack38, $stack58, l11#12, l11#19;
        byte $stack53, $stack54;
        jdk.internal.org.objectweb.asm.ByteVector $stack64, l5#1;
        java.lang.Object l10#8;
        byte[] l9#9;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: jdk.internal.org.objectweb.asm.Handle;

        l4 := @parameter3: java.lang.Object[];

        l5#1 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector bootstrapMethods>;

        if l5#1 != null goto label01;

        $stack64 = new jdk.internal.org.objectweb.asm.ByteVector;

        specialinvoke $stack64.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector bootstrapMethods> = $stack64;

        l5#1 = $stack64;

     label01:
        $stack66 = l5#1.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack14 = virtualinvoke l3.<jdk.internal.org.objectweb.asm.Handle: int hashCode()>();

        l7#2 = $stack14;

        $stack18 = l3.<jdk.internal.org.objectweb.asm.Handle: int tag>;

        $stack17 = l3.<jdk.internal.org.objectweb.asm.Handle: java.lang.String owner>;

        $stack16 = l3.<jdk.internal.org.objectweb.asm.Handle: java.lang.String name>;

        $stack15 = l3.<jdk.internal.org.objectweb.asm.Handle: java.lang.String desc>;

        $stack19 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newHandle(int,java.lang.String,java.lang.String,java.lang.String)>($stack18, $stack17, $stack16, $stack15);

        virtualinvoke l5#1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack19);

        $stack75 = lengthof l4;

        virtualinvoke l5#1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack75);

        l9#3 = 0;

     label02:
        if l9#3 >= $stack75 goto label03;

        l10#8 = l4[l9#3];

        $stack59 = virtualinvoke l10#8.<java.lang.Object: int hashCode()>();

        l7#2 = l7#2 ^ $stack59;

        $stack60 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newConst(java.lang.Object)>(l10#8);

        virtualinvoke l5#1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack60);

        l9#3 = l9#3 + 1;

        goto label02;

     label03:
        l9#9 = l5#1.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        $stack22 = 2 + $stack75;

        l10#10 = $stack22 << 1;

        l7#11 = l7#2 & 2147483647;

        $stack26 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item[] items>;

        $stack23 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item[] items>;

        $stack24 = lengthof $stack23;

        $stack25 = l7#11 % $stack24;

        l11#12 = $stack26[$stack25];

     label04:
        if l11#12 == null goto label10;

        $stack47 = l11#12.<jdk.internal.org.objectweb.asm.Item: int type>;

        if $stack47 != 33 goto label05;

        $stack49 = l11#12.<jdk.internal.org.objectweb.asm.Item: int hashCode>;

        if $stack49 == l7#11 goto label06;

     label05:
        $stack58 = l11#12.<jdk.internal.org.objectweb.asm.Item: jdk.internal.org.objectweb.asm.Item next>;

        l11#12 = $stack58;

        goto label04;

     label06:
        l12#15 = l11#12.<jdk.internal.org.objectweb.asm.Item: int intVal>;

        l13#16 = 0;

     label07:
        if l13#16 >= l10#10 goto label09;

        $stack51 = $stack66 + l13#16;

        $stack54 = l9#9[$stack51];

        $stack52 = l12#15 + l13#16;

        $stack53 = l9#9[$stack52];

        if $stack54 == $stack53 goto label08;

        l11#12 = l11#12.<jdk.internal.org.objectweb.asm.Item: jdk.internal.org.objectweb.asm.Item next>;

        goto label04;

     label08:
        l13#16 = l13#16 + 1;

        goto label07;

     label09:
        goto label10;

     label10:
        if l11#12 == null goto label11;

        l12#17 = l11#12.<jdk.internal.org.objectweb.asm.Item: int index>;

        l5#1.<jdk.internal.org.objectweb.asm.ByteVector: int length> = $stack66;

        goto label12;

     label11:
        $stack27 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int bootstrapMethodsCount>;

        $stack28 = $stack27 + 1;

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: int bootstrapMethodsCount> = $stack28;

        l12#17 = $stack27;

        $stack29 = new jdk.internal.org.objectweb.asm.Item;

        specialinvoke $stack29.<jdk.internal.org.objectweb.asm.Item: void <init>(int)>($stack27);

        virtualinvoke $stack29.<jdk.internal.org.objectweb.asm.Item: void set(int,int)>($stack66, l7#11);

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: void put(jdk.internal.org.objectweb.asm.Item)>($stack29);

     label12:
        $stack30 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key3>;

        virtualinvoke $stack30.<jdk.internal.org.objectweb.asm.Item: void set(java.lang.String,java.lang.String,int)>(l1, l2, l12#17);

        $stack31 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key3>;

        $stack32 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item get(jdk.internal.org.objectweb.asm.Item)>($stack31);

        l11#19 = $stack32;

        if $stack32 != null goto label13;

        $stack34 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newNameType(java.lang.String,java.lang.String)>(l1, l2);

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: void put122(int,int,int)>(18, l12#17, $stack34);

        $stack35 = new jdk.internal.org.objectweb.asm.Item;

        $stack36 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int index>;

        $stack37 = $stack36 + 1;

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: int index> = $stack37;

        $stack38 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key3>;

        specialinvoke $stack35.<jdk.internal.org.objectweb.asm.Item: void <init>(int,jdk.internal.org.objectweb.asm.Item)>($stack36, $stack38);

        l11#19 = $stack35;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: void put(jdk.internal.org.objectweb.asm.Item)>($stack35);

     label13:
        return l11#19;
    }

    public transient int newInvokeDynamic(java.lang.String, java.lang.String, jdk.internal.org.objectweb.asm.Handle, java.lang.Object[])
    {
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        java.lang.String l1, l2;
        jdk.internal.org.objectweb.asm.Handle l3;
        java.lang.Object[] l4;
        jdk.internal.org.objectweb.asm.Item $stack5;
        int $stack6;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: jdk.internal.org.objectweb.asm.Handle;

        l4 := @parameter3: java.lang.Object[];

        $stack5 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item newInvokeDynamicItem(java.lang.String,java.lang.String,jdk.internal.org.objectweb.asm.Handle,java.lang.Object[])>(l1, l2, l3, l4);

        $stack6 = $stack5.<jdk.internal.org.objectweb.asm.Item: int index>;

        return $stack6;
    }

    jdk.internal.org.objectweb.asm.Item newFieldItem(java.lang.String, java.lang.String, java.lang.String)
    {
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        java.lang.String l1, l2, l3;
        jdk.internal.org.objectweb.asm.Item $stack5, $stack6, $stack7, $stack11, $stack14, l4#1;
        int $stack9, $stack10, $stack12, $stack13;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: java.lang.String;

        $stack5 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key3>;

        virtualinvoke $stack5.<jdk.internal.org.objectweb.asm.Item: void set(int,java.lang.String,java.lang.String,java.lang.String)>(9, l1, l2, l3);

        $stack6 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key3>;

        $stack7 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item get(jdk.internal.org.objectweb.asm.Item)>($stack6);

        l4#1 = $stack7;

        if $stack7 != null goto label1;

        $stack9 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newClass(java.lang.String)>(l1);

        $stack10 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newNameType(java.lang.String,java.lang.String)>(l2, l3);

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: void put122(int,int,int)>(9, $stack9, $stack10);

        $stack11 = new jdk.internal.org.objectweb.asm.Item;

        $stack12 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int index>;

        $stack13 = $stack12 + 1;

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: int index> = $stack13;

        $stack14 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key3>;

        specialinvoke $stack11.<jdk.internal.org.objectweb.asm.Item: void <init>(int,jdk.internal.org.objectweb.asm.Item)>($stack12, $stack14);

        l4#1 = $stack11;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: void put(jdk.internal.org.objectweb.asm.Item)>($stack11);

     label1:
        return l4#1;
    }

    public int newField(java.lang.String, java.lang.String, java.lang.String)
    {
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        java.lang.String l1, l2, l3;
        jdk.internal.org.objectweb.asm.Item $stack4;
        int $stack5;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: java.lang.String;

        $stack4 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item newFieldItem(java.lang.String,java.lang.String,java.lang.String)>(l1, l2, l3);

        $stack5 = $stack4.<jdk.internal.org.objectweb.asm.Item: int index>;

        return $stack5;
    }

    jdk.internal.org.objectweb.asm.Item newMethodItem(java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        boolean l4;
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        java.lang.String l1, l2, l3;
        jdk.internal.org.objectweb.asm.Item $stack7, $stack8, $stack9, $stack12, $stack15, l6#2;
        int $stack10, $stack11, $stack13, $stack14;
        byte $stack17#1;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: java.lang.String;

        l4 := @parameter3: boolean;

        if l4 == 0 goto label1;

        $stack17#1 = 11;

        goto label2;

     label1:
        $stack17#1 = 10;

     label2:
        $stack7 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key3>;

        virtualinvoke $stack7.<jdk.internal.org.objectweb.asm.Item: void set(int,java.lang.String,java.lang.String,java.lang.String)>($stack17#1, l1, l2, l3);

        $stack8 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key3>;

        $stack9 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item get(jdk.internal.org.objectweb.asm.Item)>($stack8);

        l6#2 = $stack9;

        if $stack9 != null goto label3;

        $stack10 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newClass(java.lang.String)>(l1);

        $stack11 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newNameType(java.lang.String,java.lang.String)>(l2, l3);

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: void put122(int,int,int)>($stack17#1, $stack10, $stack11);

        $stack12 = new jdk.internal.org.objectweb.asm.Item;

        $stack13 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int index>;

        $stack14 = $stack13 + 1;

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: int index> = $stack14;

        $stack15 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key3>;

        specialinvoke $stack12.<jdk.internal.org.objectweb.asm.Item: void <init>(int,jdk.internal.org.objectweb.asm.Item)>($stack13, $stack15);

        l6#2 = $stack12;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: void put(jdk.internal.org.objectweb.asm.Item)>($stack12);

     label3:
        return l6#2;
    }

    public int newMethod(java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        java.lang.String l1, l2, l3;
        boolean l4;
        jdk.internal.org.objectweb.asm.Item $stack5;
        int $stack6;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: java.lang.String;

        l4 := @parameter3: boolean;

        $stack5 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item newMethodItem(java.lang.String,java.lang.String,java.lang.String,boolean)>(l1, l2, l3, l4);

        $stack6 = $stack5.<jdk.internal.org.objectweb.asm.Item: int index>;

        return $stack6;
    }

    jdk.internal.org.objectweb.asm.Item newInteger(int)
    {
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        int l1, $stack10, $stack11;
        jdk.internal.org.objectweb.asm.Item $stack3, $stack4, $stack5, $stack9, $stack12, l2#1;
        jdk.internal.org.objectweb.asm.ByteVector $stack6, $stack7;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: int;

        $stack3 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key>;

        virtualinvoke $stack3.<jdk.internal.org.objectweb.asm.Item: void set(int)>(l1);

        $stack4 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key>;

        $stack5 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item get(jdk.internal.org.objectweb.asm.Item)>($stack4);

        l2#1 = $stack5;

        if $stack5 != null goto label1;

        $stack6 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector pool>;

        $stack7 = virtualinvoke $stack6.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(3);

        virtualinvoke $stack7.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>(l1);

        $stack9 = new jdk.internal.org.objectweb.asm.Item;

        $stack10 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int index>;

        $stack11 = $stack10 + 1;

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: int index> = $stack11;

        $stack12 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key>;

        specialinvoke $stack9.<jdk.internal.org.objectweb.asm.Item: void <init>(int,jdk.internal.org.objectweb.asm.Item)>($stack10, $stack12);

        l2#1 = $stack9;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: void put(jdk.internal.org.objectweb.asm.Item)>($stack9);

     label1:
        return l2#1;
    }

    jdk.internal.org.objectweb.asm.Item newFloat(float)
    {
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        float l1;
        jdk.internal.org.objectweb.asm.Item $stack3, $stack4, $stack5, $stack8, $stack11, $stack14, l2#1;
        jdk.internal.org.objectweb.asm.ByteVector $stack6, $stack7;
        int $stack9, $stack12, $stack13;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: float;

        $stack3 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key>;

        virtualinvoke $stack3.<jdk.internal.org.objectweb.asm.Item: void set(float)>(l1);

        $stack4 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key>;

        $stack5 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item get(jdk.internal.org.objectweb.asm.Item)>($stack4);

        l2#1 = $stack5;

        if $stack5 != null goto label1;

        $stack6 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector pool>;

        $stack7 = virtualinvoke $stack6.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(4);

        $stack8 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key>;

        $stack9 = $stack8.<jdk.internal.org.objectweb.asm.Item: int intVal>;

        virtualinvoke $stack7.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>($stack9);

        $stack11 = new jdk.internal.org.objectweb.asm.Item;

        $stack12 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int index>;

        $stack13 = $stack12 + 1;

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: int index> = $stack13;

        $stack14 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key>;

        specialinvoke $stack11.<jdk.internal.org.objectweb.asm.Item: void <init>(int,jdk.internal.org.objectweb.asm.Item)>($stack12, $stack14);

        l2#1 = $stack11;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: void put(jdk.internal.org.objectweb.asm.Item)>($stack11);

     label1:
        return l2#1;
    }

    jdk.internal.org.objectweb.asm.Item newLong(long)
    {
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        long l1;
        jdk.internal.org.objectweb.asm.Item $stack4, $stack5, $stack6, $stack10, $stack11, l3#1;
        jdk.internal.org.objectweb.asm.ByteVector $stack7, $stack8;
        int $stack12, $stack13, $stack14;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: long;

        $stack4 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key>;

        virtualinvoke $stack4.<jdk.internal.org.objectweb.asm.Item: void set(long)>(l1);

        $stack5 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key>;

        $stack6 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item get(jdk.internal.org.objectweb.asm.Item)>($stack5);

        l3#1 = $stack6;

        if $stack6 != null goto label1;

        $stack7 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector pool>;

        $stack8 = virtualinvoke $stack7.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(5);

        virtualinvoke $stack8.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putLong(long)>(l1);

        $stack10 = new jdk.internal.org.objectweb.asm.Item;

        $stack12 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int index>;

        $stack11 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key>;

        specialinvoke $stack10.<jdk.internal.org.objectweb.asm.Item: void <init>(int,jdk.internal.org.objectweb.asm.Item)>($stack12, $stack11);

        l3#1 = $stack10;

        $stack13 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int index>;

        $stack14 = $stack13 + 2;

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: int index> = $stack14;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: void put(jdk.internal.org.objectweb.asm.Item)>($stack10);

     label1:
        return l3#1;
    }

    jdk.internal.org.objectweb.asm.Item newDouble(double)
    {
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        double l1;
        jdk.internal.org.objectweb.asm.Item $stack4, $stack5, $stack6, $stack9, $stack12, $stack13, l3#1;
        jdk.internal.org.objectweb.asm.ByteVector $stack7, $stack8;
        long $stack10;
        int $stack14, $stack15, $stack16;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: double;

        $stack4 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key>;

        virtualinvoke $stack4.<jdk.internal.org.objectweb.asm.Item: void set(double)>(l1);

        $stack5 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key>;

        $stack6 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item get(jdk.internal.org.objectweb.asm.Item)>($stack5);

        l3#1 = $stack6;

        if $stack6 != null goto label1;

        $stack7 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector pool>;

        $stack8 = virtualinvoke $stack7.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(6);

        $stack9 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key>;

        $stack10 = $stack9.<jdk.internal.org.objectweb.asm.Item: long longVal>;

        virtualinvoke $stack8.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putLong(long)>($stack10);

        $stack12 = new jdk.internal.org.objectweb.asm.Item;

        $stack14 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int index>;

        $stack13 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key>;

        specialinvoke $stack12.<jdk.internal.org.objectweb.asm.Item: void <init>(int,jdk.internal.org.objectweb.asm.Item)>($stack14, $stack13);

        l3#1 = $stack12;

        $stack15 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int index>;

        $stack16 = $stack15 + 2;

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: int index> = $stack16;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: void put(jdk.internal.org.objectweb.asm.Item)>($stack12);

     label1:
        return l3#1;
    }

    private jdk.internal.org.objectweb.asm.Item newString(java.lang.String)
    {
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        java.lang.String l1;
        jdk.internal.org.objectweb.asm.Item $stack3, $stack4, $stack5, $stack10, $stack13, l2#1;
        jdk.internal.org.objectweb.asm.ByteVector $stack6;
        int $stack8, $stack11, $stack12;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: java.lang.String;

        $stack3 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key2>;

        virtualinvoke $stack3.<jdk.internal.org.objectweb.asm.Item: void set(int,java.lang.String,java.lang.String,java.lang.String)>(8, l1, null, null);

        $stack4 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key2>;

        $stack5 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item get(jdk.internal.org.objectweb.asm.Item)>($stack4);

        l2#1 = $stack5;

        if $stack5 != null goto label1;

        $stack6 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector pool>;

        $stack8 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>(l1);

        virtualinvoke $stack6.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put12(int,int)>(8, $stack8);

        $stack10 = new jdk.internal.org.objectweb.asm.Item;

        $stack11 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int index>;

        $stack12 = $stack11 + 1;

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: int index> = $stack12;

        $stack13 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key2>;

        specialinvoke $stack10.<jdk.internal.org.objectweb.asm.Item: void <init>(int,jdk.internal.org.objectweb.asm.Item)>($stack11, $stack13);

        l2#1 = $stack10;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: void put(jdk.internal.org.objectweb.asm.Item)>($stack10);

     label1:
        return l2#1;
    }

    public int newNameType(java.lang.String, java.lang.String)
    {
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        java.lang.String l1, l2;
        jdk.internal.org.objectweb.asm.Item $stack3;
        int $stack4;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: java.lang.String;

        $stack3 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item newNameTypeItem(java.lang.String,java.lang.String)>(l1, l2);

        $stack4 = $stack3.<jdk.internal.org.objectweb.asm.Item: int index>;

        return $stack4;
    }

    jdk.internal.org.objectweb.asm.Item newNameTypeItem(java.lang.String, java.lang.String)
    {
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        java.lang.String l1, l2;
        jdk.internal.org.objectweb.asm.Item $stack4, $stack5, $stack6, $stack10, $stack13, l3#1;
        int $stack8, $stack9, $stack11, $stack12;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: java.lang.String;

        $stack4 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key2>;

        virtualinvoke $stack4.<jdk.internal.org.objectweb.asm.Item: void set(int,java.lang.String,java.lang.String,java.lang.String)>(12, l1, l2, null);

        $stack5 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key2>;

        $stack6 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item get(jdk.internal.org.objectweb.asm.Item)>($stack5);

        l3#1 = $stack6;

        if $stack6 != null goto label1;

        $stack8 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>(l1);

        $stack9 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>(l2);

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: void put122(int,int,int)>(12, $stack8, $stack9);

        $stack10 = new jdk.internal.org.objectweb.asm.Item;

        $stack11 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int index>;

        $stack12 = $stack11 + 1;

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: int index> = $stack12;

        $stack13 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key2>;

        specialinvoke $stack10.<jdk.internal.org.objectweb.asm.Item: void <init>(int,jdk.internal.org.objectweb.asm.Item)>($stack11, $stack13);

        l3#1 = $stack10;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: void put(jdk.internal.org.objectweb.asm.Item)>($stack10);

     label1:
        return l3#1;
    }

    int addType(java.lang.String)
    {
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        java.lang.String l1;
        jdk.internal.org.objectweb.asm.Item $stack3, $stack4, $stack5, $stack7, $stack8, l2#1;
        int $stack6;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: java.lang.String;

        $stack3 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key>;

        virtualinvoke $stack3.<jdk.internal.org.objectweb.asm.Item: void set(int,java.lang.String,java.lang.String,java.lang.String)>(30, l1, null, null);

        $stack4 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key>;

        $stack5 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item get(jdk.internal.org.objectweb.asm.Item)>($stack4);

        l2#1 = $stack5;

        if $stack5 != null goto label1;

        $stack7 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key>;

        $stack8 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item addType(jdk.internal.org.objectweb.asm.Item)>($stack7);

        l2#1 = $stack8;

     label1:
        $stack6 = l2#1.<jdk.internal.org.objectweb.asm.Item: int index>;

        return $stack6;
    }

    int addUninitializedType(java.lang.String, int)
    {
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        jdk.internal.org.objectweb.asm.Item $stack4, $stack5, $stack6, $stack7, $stack14, $stack15, $stack17, $stack18, l3#1;
        int l2, $stack10, $stack11, $stack12, $stack13, $stack16;
        java.lang.String l1;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: int;

        $stack4 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key>;

        $stack4.<jdk.internal.org.objectweb.asm.Item: int type> = 31;

        $stack5 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key>;

        $stack5.<jdk.internal.org.objectweb.asm.Item: int intVal> = l2;

        $stack6 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key>;

        $stack6.<jdk.internal.org.objectweb.asm.Item: java.lang.String strVal1> = l1;

        $stack7 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key>;

        $stack10 = virtualinvoke l1.<java.lang.String: int hashCode()>();

        $stack11 = 31 + $stack10;

        $stack12 = $stack11 + l2;

        $stack13 = 2147483647 & $stack12;

        $stack7.<jdk.internal.org.objectweb.asm.Item: int hashCode> = $stack13;

        $stack14 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key>;

        $stack15 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item get(jdk.internal.org.objectweb.asm.Item)>($stack14);

        l3#1 = $stack15;

        if $stack15 != null goto label1;

        $stack17 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key>;

        $stack18 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item addType(jdk.internal.org.objectweb.asm.Item)>($stack17);

        l3#1 = $stack18;

     label1:
        $stack16 = l3#1.<jdk.internal.org.objectweb.asm.Item: int index>;

        return $stack16;
    }

    private jdk.internal.org.objectweb.asm.Item addType(jdk.internal.org.objectweb.asm.Item)
    {
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        short $stack4, $stack6, $stack9, $stack13, $stack14;
        int $stack5, $stack12, $stack17, $stack18, $stack20;
        jdk.internal.org.objectweb.asm.Item $stack7, $stack8, l1;
        jdk.internal.org.objectweb.asm.Item[] $stack10, $stack11, $stack15, $stack16, l3, $stack19, $stack21, $stack26;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.Item;

        $stack4 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: short typeCount>;

        $stack5 = $stack4 + 1;

        $stack6 = (short) $stack5;

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: short typeCount> = $stack6;

        $stack7 = new jdk.internal.org.objectweb.asm.Item;

        $stack9 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: short typeCount>;

        $stack8 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key>;

        specialinvoke $stack7.<jdk.internal.org.objectweb.asm.Item: void <init>(int,jdk.internal.org.objectweb.asm.Item)>($stack9, $stack8);

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: void put(jdk.internal.org.objectweb.asm.Item)>($stack7);

        $stack10 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item[] typeTable>;

        if $stack10 != null goto label1;

        $stack26 = newarray (jdk.internal.org.objectweb.asm.Item)[16];

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item[] typeTable> = $stack26;

     label1:
        $stack13 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: short typeCount>;

        $stack11 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item[] typeTable>;

        $stack12 = lengthof $stack11;

        if $stack13 != $stack12 goto label2;

        $stack16 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item[] typeTable>;

        $stack17 = lengthof $stack16;

        $stack18 = 2 * $stack17;

        l3 = newarray (jdk.internal.org.objectweb.asm.Item)[$stack18];

        $stack21 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item[] typeTable>;

        $stack19 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item[] typeTable>;

        $stack20 = lengthof $stack19;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($stack21, 0, l3, 0, $stack20);

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item[] typeTable> = l3;

     label2:
        $stack15 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item[] typeTable>;

        $stack14 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: short typeCount>;

        $stack15[$stack14] = $stack7;

        return $stack7;
    }

    int getMergedType(int, int)
    {
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        jdk.internal.org.objectweb.asm.Item $stack6, $stack11, $stack15, $stack16, $stack17, $stack20, $stack22, $stack23, $stack26, $stack27, l3#1;
        int l1, l2, $stack12, $stack13, $stack14, $stack18, $stack25;
        long $stack7, $stack8, $stack9, $stack10;
        jdk.internal.org.objectweb.asm.Item[] $stack19, $stack21;
        java.lang.String l4, l5, $stack24;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: int;

        l2 := @parameter1: int;

        $stack6 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key2>;

        $stack6.<jdk.internal.org.objectweb.asm.Item: int type> = 32;

        $stack11 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key2>;

        $stack9 = (long) l1;

        $stack7 = (long) l2;

        $stack8 = $stack7 << 32;

        $stack10 = $stack9 | $stack8;

        $stack11.<jdk.internal.org.objectweb.asm.Item: long longVal> = $stack10;

        $stack15 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key2>;

        $stack12 = 32 + l1;

        $stack13 = $stack12 + l2;

        $stack14 = 2147483647 & $stack13;

        $stack15.<jdk.internal.org.objectweb.asm.Item: int hashCode> = $stack14;

        $stack16 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key2>;

        $stack17 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item get(jdk.internal.org.objectweb.asm.Item)>($stack16);

        l3#1 = $stack17;

        if $stack17 != null goto label1;

        $stack19 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item[] typeTable>;

        $stack20 = $stack19[l1];

        l4 = $stack20.<jdk.internal.org.objectweb.asm.Item: java.lang.String strVal1>;

        $stack21 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item[] typeTable>;

        $stack22 = $stack21[l2];

        l5 = $stack22.<jdk.internal.org.objectweb.asm.Item: java.lang.String strVal1>;

        $stack23 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key2>;

        $stack24 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: java.lang.String getCommonSuperClass(java.lang.String,java.lang.String)>(l4, l5);

        $stack25 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: int addType(java.lang.String)>($stack24);

        $stack23.<jdk.internal.org.objectweb.asm.Item: int intVal> = $stack25;

        $stack26 = new jdk.internal.org.objectweb.asm.Item;

        $stack27 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item key2>;

        specialinvoke $stack26.<jdk.internal.org.objectweb.asm.Item: void <init>(int,jdk.internal.org.objectweb.asm.Item)>(0, $stack27);

        l3#1 = $stack26;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassWriter: void put(jdk.internal.org.objectweb.asm.Item)>($stack26);

     label1:
        $stack18 = l3#1.<jdk.internal.org.objectweb.asm.Item: int intVal>;

        return $stack18;
    }

    protected java.lang.String getCommonSuperClass(java.lang.String, java.lang.String)
    {
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        java.lang.Class $stack7, $stack10, $stack12, $stack17, l3#1;
        java.lang.ClassLoader $stack8;
        java.lang.String l1, $stack9, l2, $stack11, $stack22, $stack23, $stack27;
        boolean $stack13, $stack14, $stack15, $stack16, $stack18;
        java.lang.Exception $stack25;
        java.lang.RuntimeException $stack26;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: java.lang.String;

        $stack7 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>();

        $stack8 = virtualinvoke $stack7.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label1:
        $stack9 = virtualinvoke l1.<java.lang.String: java.lang.String replace(char,char)>(47, 46);

        $stack10 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($stack9, 0, $stack8);

        l3#1 = $stack10;

        $stack11 = virtualinvoke l2.<java.lang.String: java.lang.String replace(char,char)>(47, 46);

        $stack12 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($stack11, 0, $stack8);

     label2:
        goto label4;

     label3:
        $stack25 := @caughtexception;

        $stack26 = new java.lang.RuntimeException;

        $stack27 = virtualinvoke $stack25.<java.lang.Exception: java.lang.String toString()>();

        specialinvoke $stack26.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack27);

        throw $stack26;

     label4:
        $stack13 = virtualinvoke $stack10.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($stack12);

        if $stack13 == 0 goto label5;

        return l1;

     label5:
        $stack14 = virtualinvoke $stack12.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($stack10);

        if $stack14 == 0 goto label6;

        return l2;

     label6:
        $stack15 = virtualinvoke $stack10.<java.lang.Class: boolean isInterface()>();

        if $stack15 != 0 goto label7;

        $stack16 = virtualinvoke $stack12.<java.lang.Class: boolean isInterface()>();

        if $stack16 == 0 goto label8;

     label7:
        return "java/lang/Object";

     label8:
        $stack17 = virtualinvoke l3#1.<java.lang.Class: java.lang.Class getSuperclass()>();

        l3#1 = $stack17;

        $stack18 = virtualinvoke $stack17.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($stack12);

        if $stack18 == 0 goto label8;

        $stack22 = virtualinvoke $stack17.<java.lang.Class: java.lang.String getName()>();

        $stack23 = virtualinvoke $stack22.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        return $stack23;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private jdk.internal.org.objectweb.asm.Item get(jdk.internal.org.objectweb.asm.Item)
    {
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        jdk.internal.org.objectweb.asm.Item l1, $stack14, l2#1;
        jdk.internal.org.objectweb.asm.Item[] $stack3, $stack7;
        int $stack4, $stack5, $stack6, $stack8, $stack9;
        boolean $stack11;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.Item;

        $stack7 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item[] items>;

        $stack5 = l1.<jdk.internal.org.objectweb.asm.Item: int hashCode>;

        $stack3 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item[] items>;

        $stack4 = lengthof $stack3;

        $stack6 = $stack5 % $stack4;

        l2#1 = $stack7[$stack6];

     label1:
        if l2#1 == null goto label3;

        $stack9 = l2#1.<jdk.internal.org.objectweb.asm.Item: int type>;

        $stack8 = l1.<jdk.internal.org.objectweb.asm.Item: int type>;

        if $stack9 != $stack8 goto label2;

        $stack11 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.Item: boolean isEqualTo(jdk.internal.org.objectweb.asm.Item)>(l2#1);

        if $stack11 != 0 goto label3;

     label2:
        $stack14 = l2#1.<jdk.internal.org.objectweb.asm.Item: jdk.internal.org.objectweb.asm.Item next>;

        l2#1 = $stack14;

        goto label1;

     label3:
        return l2#1;
    }

    private void put(jdk.internal.org.objectweb.asm.Item)
    {
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        short $stack9;
        int $stack10, $stack11, $stack12, $stack14, $stack15, $stack20, l3, $stack23, $stack26, $stack35, $stack36, l7, l2#1, l5#2;
        jdk.internal.org.objectweb.asm.Item l1, $stack17, l8, $stack37, l6#3;
        jdk.internal.org.objectweb.asm.Item[] $stack13, $stack16, $stack18, $stack19, l4, $stack33;
        double $stack21, $stack22;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.Item;

        $stack10 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int index>;

        $stack9 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: short typeCount>;

        $stack12 = $stack10 + $stack9;

        $stack11 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: int threshold>;

        if $stack12 <= $stack11 goto label5;

        $stack19 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item[] items>;

        l2#1 = lengthof $stack19;

        $stack20 = l2#1 * 2;

        l3 = $stack20 + 1;

        l4 = newarray (jdk.internal.org.objectweb.asm.Item)[l3];

        l5#2 = l2#1 - 1;

     label1:
        if l5#2 < 0 goto label4;

        $stack33 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item[] items>;

        l6#3 = $stack33[l5#2];

     label2:
        if l6#3 == null goto label3;

        $stack36 = l6#3.<jdk.internal.org.objectweb.asm.Item: int hashCode>;

        $stack35 = lengthof l4;

        l7 = $stack36 % $stack35;

        l8 = l6#3.<jdk.internal.org.objectweb.asm.Item: jdk.internal.org.objectweb.asm.Item next>;

        $stack37 = l4[l7];

        l6#3.<jdk.internal.org.objectweb.asm.Item: jdk.internal.org.objectweb.asm.Item next> = $stack37;

        l4[l7] = l6#3;

        l6#3 = l8;

        goto label2;

     label3:
        l5#2 = l5#2 + -1;

        goto label1;

     label4:
        l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item[] items> = l4;

        $stack21 = (double) l3;

        $stack22 = $stack21 * 0.75;

        $stack23 = (int) $stack22;

        l0.<jdk.internal.org.objectweb.asm.ClassWriter: int threshold> = $stack23;

     label5:
        $stack15 = l1.<jdk.internal.org.objectweb.asm.Item: int hashCode>;

        $stack13 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item[] items>;

        $stack14 = lengthof $stack13;

        $stack26 = $stack15 % $stack14;

        $stack16 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item[] items>;

        $stack17 = $stack16[$stack26];

        l1.<jdk.internal.org.objectweb.asm.Item: jdk.internal.org.objectweb.asm.Item next> = $stack17;

        $stack18 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item[] items>;

        $stack18[$stack26] = l1;

        return;
    }

    private void put122(int, int, int)
    {
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        int l1, l2, l3;
        jdk.internal.org.objectweb.asm.ByteVector $stack4, $stack5;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: int;

        l2 := @parameter1: int;

        l3 := @parameter2: int;

        $stack4 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector pool>;

        $stack5 = virtualinvoke $stack4.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put12(int,int)>(l1, l2);

        virtualinvoke $stack5.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(l3);

        return;
    }

    private void put112(int, int, int)
    {
        jdk.internal.org.objectweb.asm.ClassWriter l0;
        int l1, l2, l3;
        jdk.internal.org.objectweb.asm.ByteVector $stack4, $stack5;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassWriter;

        l1 := @parameter0: int;

        l2 := @parameter1: int;

        l3 := @parameter2: int;

        $stack4 = l0.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector pool>;

        $stack5 = virtualinvoke $stack4.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put11(int,int)>(l1, l2);

        virtualinvoke $stack5.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(l3);

        return;
    }

    static void <clinit>()
    {
        byte[] l1;
        java.lang.String l2;
        int $stack3, $stack5, l0#1;
        char $stack4;
        byte $stack6;

        <jdk.internal.org.objectweb.asm.ClassWriter: int BSM> = 33;

        <jdk.internal.org.objectweb.asm.ClassWriter: int TYPE_MERGED> = 32;

        <jdk.internal.org.objectweb.asm.ClassWriter: int TYPE_UNINIT> = 31;

        <jdk.internal.org.objectweb.asm.ClassWriter: int TYPE_NORMAL> = 30;

        <jdk.internal.org.objectweb.asm.ClassWriter: int HANDLE_BASE> = 20;

        <jdk.internal.org.objectweb.asm.ClassWriter: int INDY> = 18;

        <jdk.internal.org.objectweb.asm.ClassWriter: int HANDLE> = 15;

        <jdk.internal.org.objectweb.asm.ClassWriter: int MTYPE> = 16;

        <jdk.internal.org.objectweb.asm.ClassWriter: int UTF8> = 1;

        <jdk.internal.org.objectweb.asm.ClassWriter: int NAME_TYPE> = 12;

        <jdk.internal.org.objectweb.asm.ClassWriter: int DOUBLE> = 6;

        <jdk.internal.org.objectweb.asm.ClassWriter: int LONG> = 5;

        <jdk.internal.org.objectweb.asm.ClassWriter: int FLOAT> = 4;

        <jdk.internal.org.objectweb.asm.ClassWriter: int INT> = 3;

        <jdk.internal.org.objectweb.asm.ClassWriter: int STR> = 8;

        <jdk.internal.org.objectweb.asm.ClassWriter: int IMETH> = 11;

        <jdk.internal.org.objectweb.asm.ClassWriter: int METH> = 10;

        <jdk.internal.org.objectweb.asm.ClassWriter: int FIELD> = 9;

        <jdk.internal.org.objectweb.asm.ClassWriter: int CLASS> = 7;

        <jdk.internal.org.objectweb.asm.ClassWriter: int WIDE_INSN> = 17;

        <jdk.internal.org.objectweb.asm.ClassWriter: int MANA_INSN> = 16;

        <jdk.internal.org.objectweb.asm.ClassWriter: int LOOK_INSN> = 15;

        <jdk.internal.org.objectweb.asm.ClassWriter: int TABL_INSN> = 14;

        <jdk.internal.org.objectweb.asm.ClassWriter: int IINC_INSN> = 13;

        <jdk.internal.org.objectweb.asm.ClassWriter: int LDCW_INSN> = 12;

        <jdk.internal.org.objectweb.asm.ClassWriter: int LDC_INSN> = 11;

        <jdk.internal.org.objectweb.asm.ClassWriter: int LABELW_INSN> = 10;

        <jdk.internal.org.objectweb.asm.ClassWriter: int LABEL_INSN> = 9;

        <jdk.internal.org.objectweb.asm.ClassWriter: int INDYMETH_INSN> = 8;

        <jdk.internal.org.objectweb.asm.ClassWriter: int ITFMETH_INSN> = 7;

        <jdk.internal.org.objectweb.asm.ClassWriter: int FIELDORMETH_INSN> = 6;

        <jdk.internal.org.objectweb.asm.ClassWriter: int TYPE_INSN> = 5;

        <jdk.internal.org.objectweb.asm.ClassWriter: int IMPLVAR_INSN> = 4;

        <jdk.internal.org.objectweb.asm.ClassWriter: int VAR_INSN> = 3;

        <jdk.internal.org.objectweb.asm.ClassWriter: int SHORT_INSN> = 2;

        <jdk.internal.org.objectweb.asm.ClassWriter: int SBYTE_INSN> = 1;

        <jdk.internal.org.objectweb.asm.ClassWriter: int NOARG_INSN> = 0;

        <jdk.internal.org.objectweb.asm.ClassWriter: int TO_ACC_SYNTHETIC> = 64;

        <jdk.internal.org.objectweb.asm.ClassWriter: int ACC_SYNTHETIC_ATTRIBUTE> = 262144;

        <jdk.internal.org.objectweb.asm.ClassWriter: int COMPUTE_FRAMES> = 2;

        <jdk.internal.org.objectweb.asm.ClassWriter: int COMPUTE_MAXS> = 1;

        l1 = newarray (byte)[220];

        l2 = "AAAAAAAAAAAAAAAABCLMMDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANAAAAAAAAAAAAAAAAAAAAJJJJJJJJJJJJJJJJDOPAAAAAAGGGGGGGHIFBFAAFFAARQJJKKJJJJJJJJJJJJJJJJJJ";

        l0#1 = 0;

     label1:
        $stack3 = lengthof l1;

        if l0#1 >= $stack3 goto label2;

        $stack4 = virtualinvoke l2.<java.lang.String: char charAt(int)>(l0#1);

        $stack5 = $stack4 - 65;

        $stack6 = (byte) $stack5;

        l1[l0#1] = $stack6;

        l0#1 = l0#1 + 1;

        goto label1;

     label2:
        <jdk.internal.org.objectweb.asm.ClassWriter: byte[] TYPE> = l1;

        return;
    }
}
