Harness.main([Ljava/lang/String;)V
Harness.makeHarnessClassLoader()Ljava/lang/ClassLoader;
soot/rtlib/tamiflex/ReflectiveCallsWrapper.reflectiveCall99(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
org/dacapo/harness/TestHarness.main([Ljava/lang/String;)V
org/dacapo/harness/CommandLineArgs.<init>([Ljava/lang/String;)V
org/dacapo/harness/CommandLineArgs.printBenchmarks()V
org/dacapo/harness/CommandLineArgs.extractBenchmarkSet()Ljava/util/List;
org/dacapo/harness/CommandLineArgs.printReleaseNotes()V
org/dacapo/harness/CommandLineArgs.printUsage()V
org/dacapo/harness/CommandLineArgs.defineCallback()V
org/dacapo/harness/CommandLineArgs.getCallback()Lorg/dacapo/harness/Callback;
org/dacapo/harness/Callback.<init>(Lorg/dacapo/harness/CommandLineArgs;)V
org/dacapo/harness/CommandLineArgs.getMethodology()Lorg/dacapo/harness/CommandLineArgs$Methodology;
org/dacapo/harness/CommandLineArgs.getWindow()I
org/dacapo/harness/CommandLineArgs.getDebug()Z
org/dacapo/parser/Config.parse(Ljava/io/File;)Lorg/dacapo/parser/Config;
org/dacapo/parser/Config.parse(Ljava/io/InputStream;)Lorg/dacapo/parser/Config;
org/dacapo/parser/ConfigFile.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
org/dacapo/parser/SimpleCharStream.<init>(Ljava/io/InputStream;Ljava/lang/String;II)V
org/dacapo/parser/SimpleCharStream.<init>(Ljava/io/InputStream;Ljava/lang/String;III)V
org/dacapo/parser/SimpleCharStream.<init>(Ljava/io/Reader;III)V
org/dacapo/parser/ConfigFileTokenManager.<init>(Lorg/dacapo/parser/SimpleCharStream;)V
org/dacapo/parser/Token.<init>()V
org/dacapo/parser/ConfigFile.configFile()Lorg/dacapo/parser/Config;
org/dacapo/parser/ConfigFile.config()Lorg/dacapo/parser/Config;
org/dacapo/parser/ConfigFile.jj_consume_token(I)Lorg/dacapo/parser/Token;
org/dacapo/parser/ConfigFileTokenManager.getNextToken()Lorg/dacapo/parser/Token;
org/dacapo/parser/SimpleCharStream.BeginToken()C
org/dacapo/parser/SimpleCharStream.readChar()C
org/dacapo/parser/SimpleCharStream.FillBuff()V
org/dacapo/parser/SimpleCharStream.ExpandBuff(Z)V
org/dacapo/parser/SimpleCharStream.backup(I)V
org/dacapo/parser/SimpleCharStream.UpdateLineColumn(C)V
org/dacapo/parser/ConfigFileTokenManager.jjMoveStringLiteralDfa0_1()I
org/dacapo/parser/ConfigFileTokenManager.jjMoveNfa_1(II)I
org/dacapo/parser/ConfigFileTokenManager.ReInitRounds()V
org/dacapo/parser/ConfigFileTokenManager.jjMoveStringLiteralDfa0_2()I
org/dacapo/parser/ConfigFileTokenManager.jjMoveStringLiteralDfa1_2(J)I
org/dacapo/parser/ConfigFileTokenManager.jjStopAtPos(II)I
org/dacapo/parser/ConfigFileTokenManager.jjMoveStringLiteralDfa0_3()I
org/dacapo/parser/ConfigFileTokenManager.jjMoveStringLiteralDfa1_3(J)I
org/dacapo/parser/ConfigFileTokenManager.jjMoveStringLiteralDfa0_0()I
org/dacapo/parser/ConfigFileTokenManager.jjMoveStringLiteralDfa1_0(J)I
org/dacapo/parser/ConfigFileTokenManager.jjStartNfaWithStates_0(III)I
org/dacapo/parser/ConfigFileTokenManager.jjMoveNfa_0(II)I
org/dacapo/parser/ConfigFileTokenManager.jjCheckNAdd(I)V
org/dacapo/parser/ConfigFileTokenManager.jjCheckNAddStates(II)V
org/dacapo/parser/ConfigFileTokenManager.jjAddStates(II)V
org/dacapo/parser/ConfigFileTokenManager.jjCanMove_0(IIIJJ)Z
org/dacapo/parser/ConfigFileTokenManager.jjMoveStringLiteralDfa2_0(JJ)I
org/dacapo/parser/ConfigFileTokenManager.jjStartNfa_0(IJ)I
org/dacapo/parser/ConfigFileTokenManager.jjStopStringLiteralDfa_0(IJ)I
org/dacapo/parser/ConfigFileTokenManager.jjMoveStringLiteralDfa3_0(JJ)I
org/dacapo/parser/ConfigFileTokenManager.jjMoveStringLiteralDfa4_0(JJ)I
org/dacapo/parser/ConfigFileTokenManager.jjMoveStringLiteralDfa5_0(JJ)I
org/dacapo/parser/ConfigFileTokenManager.jjMoveStringLiteralDfa6_0(JJ)I
org/dacapo/parser/ConfigFileTokenManager.jjMoveStringLiteralDfa7_0(JJ)I
org/dacapo/parser/ConfigFileTokenManager.jjMoveStringLiteralDfa8_0(JJ)I
org/dacapo/parser/ConfigFileTokenManager.jjMoveStringLiteralDfa9_0(JJ)I
org/dacapo/parser/ConfigFileTokenManager.jjMoveStringLiteralDfa10_0(JJ)I
org/dacapo/parser/ConfigFileTokenManager.jjMoveStringLiteralDfa11_0(JJ)I
org/dacapo/parser/ConfigFileTokenManager.MoreLexicalActions()V
org/dacapo/parser/SimpleCharStream.GetSuffix(I)[C
org/dacapo/parser/ConfigFileTokenManager.jjFillToken()Lorg/dacapo/parser/Token;
org/dacapo/parser/SimpleCharStream.GetImage()Ljava/lang/String;
org/dacapo/parser/SimpleCharStream.getBeginLine()I
org/dacapo/parser/SimpleCharStream.getBeginColumn()I
org/dacapo/parser/SimpleCharStream.getEndLine()I
org/dacapo/parser/SimpleCharStream.getEndColumn()I
org/dacapo/parser/Token.newToken(ILjava/lang/String;)Lorg/dacapo/parser/Token;
org/dacapo/parser/Token.<init>(ILjava/lang/String;)V
org/dacapo/parser/ConfigFileTokenManager.SkipLexicalActions(Lorg/dacapo/parser/Token;)V
org/dacapo/parser/TokenMgrError.<init>(ZIIILjava/lang/String;CI)V
org/dacapo/parser/TokenMgrError.LexicalError(ZIIILjava/lang/String;C)Ljava/lang/String;
org/dacapo/parser/TokenMgrError.addEscapes(Ljava/lang/String;)Ljava/lang/String;
org/dacapo/parser/TokenMgrError.<init>(Ljava/lang/String;I)V
org/dacapo/parser/ConfigFile.generateParseException()Lorg/dacapo/parser/ParseException;
org/dacapo/parser/ParseException.<init>(Lorg/dacapo/parser/Token;[[I[Ljava/lang/String;)V
org/dacapo/parser/ParseException.initialise(Lorg/dacapo/parser/Token;[[I[Ljava/lang/String;)Ljava/lang/String;
org/dacapo/parser/ParseException.add_escapes(Ljava/lang/String;)Ljava/lang/String;
org/dacapo/parser/Config.<init>(Ljava/lang/String;)V
org/dacapo/parser/ConfigFile.jj_ntk()I
org/dacapo/parser/ConfigFile.configOption(Lorg/dacapo/parser/Config;)V
org/dacapo/parser/ConfigFile.identifier()Ljava/lang/String;
org/dacapo/parser/Config.setClass(Ljava/lang/String;)V
org/dacapo/parser/ParseException.<init>(Ljava/lang/String;)V
org/dacapo/parser/ConfigFile.threadModel()Lorg/dacapo/parser/Config$ThreadModel;
org/dacapo/parser/ParseException.<init>()V
org/dacapo/parser/Config.setThreadModel(Lorg/dacapo/parser/Config$ThreadModel;)V
org/dacapo/parser/ConfigFile.libraries(Lorg/dacapo/parser/Config;)V
org/dacapo/parser/ConfigFile.string()Ljava/lang/String;
org/dacapo/parser/ConfigFile.unQuote(Lorg/dacapo/parser/Token;)Ljava/lang/String;
org/dacapo/parser/Config.setJars([Ljava/lang/String;)V
org/dacapo/parser/ConfigFile.sizeSpec(Lorg/dacapo/parser/Config;)V
org/dacapo/parser/ConfigFile.sizeClause(Lorg/dacapo/parser/Config;Ljava/lang/String;)V
org/dacapo/parser/Config.addSize(Ljava/lang/String;Ljava/util/Vector;)V
org/dacapo/parser/Config$Size.<init>(Lorg/dacapo/parser/Config;Ljava/lang/String;Ljava/util/Vector;)V
org/dacapo/parser/Config.setSizeDescription(Ljava/lang/String;Ljava/lang/String;)V
org/dacapo/parser/Config.getSize(Ljava/lang/String;)Lorg/dacapo/parser/Config$Size;
org/dacapo/parser/Config$Size.setDesc(Ljava/lang/String;)V
org/dacapo/parser/ConfigFile.integer()I
org/dacapo/parser/Config.setThreadLimit(Ljava/lang/String;I)V
org/dacapo/parser/Config$Size.setThreadLimit(I)V
org/dacapo/parser/Config.setThreadFactor(Ljava/lang/String;I)V
org/dacapo/parser/Config$Size.setThreadCount(I)V
org/dacapo/parser/ConfigFile.outputFile(Lorg/dacapo/parser/Config;Ljava/lang/String;)V
org/dacapo/parser/Config.addOutputFile(Ljava/lang/String;Ljava/lang/String;)V
org/dacapo/parser/Config$Size.addOutputFile(Ljava/lang/String;)V
org/dacapo/parser/Config$OutputFile.<init>(Lorg/dacapo/parser/Config;Ljava/lang/String;)V
org/dacapo/parser/Config.setTextFile(Ljava/lang/String;Ljava/lang/String;Z)V
org/dacapo/parser/Config$Size.getOutputFile(Ljava/lang/String;)Lorg/dacapo/parser/Config$OutputFile;
org/dacapo/parser/Config.setFilterScratch(Ljava/lang/String;Ljava/lang/String;Z)V
org/dacapo/parser/ConfigFile.outputClause(Lorg/dacapo/parser/Config;Ljava/lang/String;Ljava/lang/String;)V
org/dacapo/parser/ConfigFile.digestOption(Lorg/dacapo/parser/Config;Ljava/lang/String;Ljava/lang/String;)V
org/dacapo/parser/ConfigFile.hex()Ljava/lang/String;
org/dacapo/parser/ConfigFile.unHex(Lorg/dacapo/parser/Token;)Ljava/lang/String;
org/dacapo/parser/Config.setDigest(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
org/dacapo/parser/Config.setExists(Ljava/lang/String;Ljava/lang/String;)V
org/dacapo/parser/Config.setKeep(Ljava/lang/String;Ljava/lang/String;)V
org/dacapo/parser/Config.setLines(Ljava/lang/String;Ljava/lang/String;I)V
org/dacapo/parser/ConfigFile.longInt()J
org/dacapo/parser/Config.setBytes(Ljava/lang/String;Ljava/lang/String;J)V
org/dacapo/parser/ConfigFile.description(Lorg/dacapo/parser/Config;)V
org/dacapo/parser/ConfigFile.descElement(Lorg/dacapo/parser/Config;)V
org/dacapo/parser/ConfigFile.descId()Ljava/lang/String;
org/dacapo/parser/Config.addDesc(Ljava/lang/String;Ljava/lang/String;)V
org/dacapo/harness/CommandLineArgs.getScratchDir()Ljava/lang/String;
org/dacapo/harness/TestHarness.makeCleanScratch(Ljava/io/File;)V
org/dacapo/harness/TestHarness.rmdir(Ljava/io/File;)V
org/dacapo/harness/Benchmark.setCommandLineOptions(Lorg/dacapo/harness/CommandLineArgs;)V
org/dacapo/harness/CommandLineArgs.getSilent()Z
org/dacapo/harness/CommandLineArgs.getVerbose()Z
org/dacapo/harness/CommandLineArgs.getPreserve()Z
org/dacapo/harness/CommandLineArgs.getValidate()Z
org/dacapo/harness/CommandLineArgs.getValidateOutput()Z
org/dacapo/harness/CommandLineArgs.getPreIterationGC()Z
org/dacapo/harness/CommandLineArgs.getTimeoutDialation()Ljava/lang/String;
org/dacapo/harness/CommandLineArgs.getValidationReport()Ljava/lang/String;
org/dacapo/harness/Benchmark.enableValidationReport(Ljava/lang/String;)V
org/dacapo/harness/CommandLineArgs.getThreadCount()Ljava/lang/String;
org/dacapo/parser/Config.setThreadCountOverride(I)V
org/dacapo/harness/CommandLineArgs.benchmarks()Ljava/lang/Iterable;
org/dacapo/harness/CommandLineArgs.getCnfOverride()Ljava/lang/String;
org/dacapo/harness/TestHarness.<init>(Ljava/io/InputStream;)V
org/dacapo/harness/CommandLineArgs.getSize()Ljava/lang/String;
org/dacapo/parser/Config.getThreadLimit(Ljava/lang/String;)I
org/dacapo/parser/Config$Size.getThreadLimit()I
org/dacapo/harness/CommandLineArgs.getThreadFactor()Ljava/lang/String;
org/dacapo/parser/Config.getThreadModel()Lorg/dacapo/parser/Config$ThreadModel;
org/dacapo/harness/TestHarness.isValidSize(Ljava/lang/String;)Z
org/dacapo/parser/Config.getSizes()Ljava/util/Collection;
org/dacapo/harness/TestHarness.isValidThreadCount(Ljava/lang/String;)Z
org/dacapo/parser/Config.getThreadCount(Ljava/lang/String;)I
org/dacapo/parser/Config.getThreadFactor(Ljava/lang/String;)I
org/dacapo/parser/Config$Size.getThreadCount()I
org/dacapo/parser/Config.getThreadCountOverride()I
org/dacapo/harness/CommandLineArgs.getInformation()Z
org/dacapo/harness/TestHarness.bmInfo(Ljava/lang/String;)V
org/dacapo/parser/Config.describe(Ljava/io/PrintStream;Ljava/lang/String;)V
org/dacapo/parser/Config.describe(Ljava/io/PrintStream;Ljava/lang/String;Z)V
org/dacapo/parser/Config.describe(Ljava/io/PrintStream;Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;)V
org/dacapo/parser/Config.describeSizes(Ljava/io/PrintStream;ZLjava/lang/String;)V
org/dacapo/parser/Config.pad(Ljava/lang/String;I)Ljava/lang/String;
org/dacapo/parser/Config$Size.getDesc()Ljava/lang/String;
org/dacapo/harness/CommandLineArgs.getSizes()Z
org/dacapo/harness/TestHarness.bmSizes()V
org/dacapo/parser/Config.describeSizes(Ljava/io/PrintStream;)V
org/dacapo/harness/TestHarness.dump(Z)V
org/dacapo/harness/TestHarness.runBenchmark(Ljava/io/File;Ljava/lang/String;Lorg/dacapo/harness/TestHarness;)V
org/dacapo/parser/Config.printThreadModel(Ljava/io/PrintStream;Ljava/lang/String;Z)V
org/dacapo/harness/TestHarness.findClass()Ljava/lang/Class;
soot/rtlib/tamiflex/ReflectiveCallsWrapper.reflectiveCall41()Ljava/lang/Class;
soot/rtlib/tamiflex/ReflectiveCallsWrapper.reflectiveCall81([Ljava/lang/Object;)Ljava/lang/Object;
org/dacapo/harness/Sunflow.<init>(Lorg/dacapo/parser/Config;Ljava/io/File;)V
org/dacapo/harness/Benchmark.<init>(Lorg/dacapo/parser/Config;Ljava/io/File;Z)V
org/dacapo/harness/Benchmark.initialize()V
org/dacapo/harness/Benchmark.fileInScratch(Ljava/lang/String;)Ljava/lang/String;
org/dacapo/harness/TeePrintStream.<init>(Ljava/io/OutputStream;Ljava/io/File;)V
org/dacapo/harness/TeeOutputStream.<init>(Ljava/io/OutputStream;Ljava/io/File;)V
org/dacapo/harness/TeeOutputStream.newLog()V
org/dacapo/harness/TeePrintStream.enableOutput(Z)V
org/dacapo/harness/TeeOutputStream.enableOutput(Z)V
org/dacapo/harness/Benchmark.prepareJars()V
org/dacapo/harness/Benchmark.extractFileResource(Ljava/lang/String;Ljava/io/File;)V
org/dacapo/harness/Benchmark.getURL(Ljava/lang/String;)Ljava/net/URL;
org/dacapo/harness/DacapoException.<init>(Ljava/lang/String;)V
org/dacapo/harness/Benchmark.fileFromInputStream(Ljava/io/InputStream;Ljava/io/File;)V
org/dacapo/harness/DacapoClassLoader.create(Lorg/dacapo/parser/Config;Ljava/io/File;)Lorg/dacapo/harness/DacapoClassLoader;
org/dacapo/harness/DacapoClassLoader.getJars(Lorg/dacapo/parser/Config;Ljava/io/File;)[Ljava/net/URL;
org/dacapo/harness/Benchmark.getVerbose()Z
org/dacapo/harness/DacapoClassLoader.<init>([Ljava/net/URL;Ljava/lang/ClassLoader;)V
org/dacapo/harness/Sunflow.prepare()V
soot/rtlib/tamiflex/ReflectiveCallsWrapper.reflectiveCall42()Ljava/lang/Class;
org/dacapo/harness/Callback.init(Lorg/dacapo/parser/Config;)V
org/dacapo/harness/CommandLineArgs.getIterations()I
org/dacapo/harness/Benchmark.run(Lorg/dacapo/harness/Callback;Ljava/lang/String;)Z
org/dacapo/harness/Benchmark.prepare(Ljava/lang/String;)V
org/dacapo/harness/Sunflow.preIteration(Ljava/lang/String;)V
org/dacapo/parser/Config.preprocessArgs(Ljava/lang/String;Ljava/io/File;)[Ljava/lang/String;
org/dacapo/parser/Config.getArgs(Ljava/lang/String;)[Ljava/lang/String;
org/dacapo/harness/Benchmark.useBenchmarkClassLoader()V
soot/rtlib/tamiflex/ReflectiveCallsWrapper.reflectiveCall82([Ljava/lang/Object;)Ljava/lang/Object;
org/sunflow/Benchmark.<init>(IZZZI)V
org/sunflow/system/UI.set(Lorg/sunflow/system/UserInterface;)V
org/sunflow/system/UI.printError(Lorg/sunflow/system/UI$Module;Ljava/lang/String;[Ljava/lang/Object;)V
org/sunflow/Benchmark.print(Lorg/sunflow/system/UI$Module;Lorg/sunflow/system/UI$PrintLevel;Ljava/lang/String;)V
org/sunflow/system/ui/ConsoleInterface.print(Lorg/sunflow/system/UI$Module;Lorg/sunflow/system/UI$PrintLevel;Ljava/lang/String;)V
org/sunflow/system/UI.formatOutput(Lorg/sunflow/system/UI$Module;Lorg/sunflow/system/UI$PrintLevel;Ljava/lang/String;)Ljava/lang/String;
org/sunflow/system/UI.printInfo(Lorg/sunflow/system/UI$Module;Ljava/lang/String;[Ljava/lang/Object;)V
soot/rtlib/tamiflex/ReflectiveCallsWrapper.reflectiveCall83(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
org/sunflow/Benchmark.kernelBegin()V
org/dacapo/harness/Benchmark.revertClassLoader()V
org/dacapo/harness/Callback.start(Ljava/lang/String;)V
org/dacapo/harness/Callback.start(Ljava/lang/String;Z)V
org/dacapo/harness/TestHarness.getBuildVersion()Ljava/lang/String;
org/dacapo/harness/Benchmark.startIteration()V
org/dacapo/harness/Benchmark.augmentSystemProperties(Ljava/util/Properties;)V
org/dacapo/harness/TeePrintStream.version()V
org/dacapo/harness/TeeOutputStream.version()V
org/dacapo/harness/TeePrintStream.openLog()V
org/dacapo/harness/TeeOutputStream.openLog()V
org/dacapo/harness/Sunflow.iterate(Ljava/lang/String;)V
soot/rtlib/tamiflex/ReflectiveCallsWrapper.reflectiveCall101(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
org/sunflow/Benchmark.kernelMain()V
org/sunflow/Benchmark$BenchmarkScene.<init>(Lorg/sunflow/Benchmark;)V
org/sunflow/SunflowAPI.<init>()V
org/sunflow/SunflowAPI.reset()V
org/sunflow/core/Scene.<init>()V
org/sunflow/core/LightServer.<init>(Lorg/sunflow/core/Scene;)V
org/sunflow/core/LightServer.shadingCache(F)V
org/sunflow/core/InstanceList.<init>()V
org/sunflow/core/renderer/BucketRenderer.<init>()V
org/sunflow/core/renderer/ProgressiveRenderer.<init>()V
org/sunflow/system/SearchPath.<init>(Ljava/lang/String;)V
org/sunflow/core/ParameterList.<init>()V
org/sunflow/util/FastHashMap.<init>()V
org/sunflow/util/FastHashMap.clear()V
org/sunflow/util/FastHashMap.alloc(I)[Lorg/sunflow/util/FastHashMap$Entry;
org/sunflow/RenderObjectMap.<init>()V
org/sunflow/Benchmark$BenchmarkScene.build()V
org/sunflow/Benchmark.access$200(Lorg/sunflow/Benchmark;)I
org/sunflow/SunflowAPI.parameter(Ljava/lang/String;I)V
org/sunflow/core/ParameterList.addInteger(Ljava/lang/String;I)V
org/sunflow/core/ParameterList$Parameter.<init>(ILorg/sunflow/core/ParameterList$1;)V
org/sunflow/core/ParameterList$Parameter.<init>(I)V
org/sunflow/core/ParameterList.add(Ljava/lang/String;Lorg/sunflow/core/ParameterList$Parameter;)V
org/sunflow/util/FastHashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
org/sunflow/util/FastHashMap$Entry.access$000(Lorg/sunflow/util/FastHashMap$Entry;)Z
org/sunflow/util/FastHashMap$Entry.isRemoved()Z
org/sunflow/util/FastHashMap$Entry.access$100(Lorg/sunflow/util/FastHashMap$Entry;)Ljava/lang/Object;
org/sunflow/util/FastHashMap$Entry.<init>(Ljava/lang/Object;Ljava/lang/Object;Lorg/sunflow/util/FastHashMap$1;)V
org/sunflow/util/FastHashMap$Entry.<init>(Ljava/lang/Object;Ljava/lang/Object;)V
org/sunflow/util/FastHashMap.resize(I)V
org/sunflow/util/FastHashMap$Entry.access$200(Lorg/sunflow/util/FastHashMap$Entry;)Ljava/lang/Object;
org/sunflow/util/FastHashMap$Entry.access$202(Lorg/sunflow/util/FastHashMap$Entry;Ljava/lang/Object;)Ljava/lang/Object;
org/sunflow/system/UI.printWarning(Lorg/sunflow/system/UI$Module;Ljava/lang/String;[Ljava/lang/Object;)V
org/sunflow/SunflowAPI.parameter(Ljava/lang/String;Z)V
org/sunflow/core/ParameterList.addBoolean(Ljava/lang/String;Z)V
org/sunflow/core/ParameterList$Parameter.<init>(ZLorg/sunflow/core/ParameterList$1;)V
org/sunflow/core/ParameterList$Parameter.<init>(Z)V
org/sunflow/Benchmark.access$100(Lorg/sunflow/Benchmark;)I
org/sunflow/SunflowAPI.parameter(Ljava/lang/String;Ljava/lang/String;)V
org/sunflow/core/ParameterList.addString(Ljava/lang/String;Ljava/lang/String;)V
org/sunflow/core/ParameterList$Parameter.<init>(Ljava/lang/String;Lorg/sunflow/core/ParameterList$1;)V
org/sunflow/core/ParameterList$Parameter.<init>(Ljava/lang/String;)V
org/sunflow/SunflowAPI.parameter(Ljava/lang/String;F)V
org/sunflow/core/ParameterList.addFloat(Ljava/lang/String;F)V
org/sunflow/core/ParameterList$Parameter.<init>(FLorg/sunflow/core/ParameterList$1;)V
org/sunflow/core/ParameterList$Parameter.<init>(F)V
org/sunflow/SunflowAPI.options(Ljava/lang/String;)V
org/sunflow/SunflowAPI.lookupOptions(Ljava/lang/String;)Lorg/sunflow/core/Options;
org/sunflow/RenderObjectMap.lookupOptions(Ljava/lang/String;)Lorg/sunflow/core/Options;
org/sunflow/util/FastHashMap.get(Ljava/lang/Object;)Ljava/lang/Object;
org/sunflow/RenderObjectMap$RenderObjectHandle.access$1700(Lorg/sunflow/RenderObjectMap$RenderObjectHandle;)Lorg/sunflow/core/Options;
org/sunflow/RenderObjectMap$RenderObjectHandle.getOptions()Lorg/sunflow/core/Options;
org/sunflow/RenderObjectMap.has(Ljava/lang/String;)Z
org/sunflow/util/FastHashMap.containsKey(Ljava/lang/Object;)Z
org/sunflow/core/ParameterList.clear(Z)V
org/sunflow/util/FastHashMap.iterator()Ljava/util/Iterator;
org/sunflow/util/FastHashMap$EntryIterator.<init>(Lorg/sunflow/util/FastHashMap;Lorg/sunflow/util/FastHashMap$1;)V
org/sunflow/util/FastHashMap$EntryIterator.<init>(Lorg/sunflow/util/FastHashMap;)V
org/sunflow/util/FastHashMap$EntryIterator.readable()Z
org/sunflow/util/FastHashMap.access$500(Lorg/sunflow/util/FastHashMap;)[Lorg/sunflow/util/FastHashMap$Entry;
org/sunflow/util/FastHashMap$EntryIterator.inc()V
org/sunflow/util/FastHashMap$EntryIterator.hasNext()Z
org/sunflow/util/FastHashMap$EntryIterator.next()Ljava/lang/Object;
org/sunflow/util/FastHashMap$EntryIterator.next()Lorg/sunflow/util/FastHashMap$Entry;
org/sunflow/util/FastHashMap$Entry.getValue()Ljava/lang/Object;
org/sunflow/core/ParameterList$Parameter.access$000(Lorg/sunflow/core/ParameterList$Parameter;)Z
org/sunflow/util/FastHashMap$Entry.getKey()Ljava/lang/Object;
org/sunflow/core/Options.<init>()V
org/sunflow/RenderObjectMap.put(Ljava/lang/String;Lorg/sunflow/core/Options;)V
org/sunflow/RenderObjectMap$RenderObjectHandle.<init>(Lorg/sunflow/core/Options;Lorg/sunflow/RenderObjectMap$1;)V
org/sunflow/RenderObjectMap$RenderObjectHandle.<init>(Lorg/sunflow/core/Options;)V
org/sunflow/SunflowAPI.update(Ljava/lang/String;)Z
org/sunflow/RenderObjectMap.update(Ljava/lang/String;Lorg/sunflow/core/ParameterList;Lorg/sunflow/SunflowAPI;)Z
org/sunflow/RenderObjectMap$RenderObjectHandle.access$500(Lorg/sunflow/RenderObjectMap$RenderObjectHandle;)Ljava/lang/String;
org/sunflow/RenderObjectMap$RenderObjectHandle.typeName()Ljava/lang/String;
org/sunflow/system/UI.printDetailed(Lorg/sunflow/system/UI$Module;Ljava/lang/String;[Ljava/lang/Object;)V
org/sunflow/RenderObjectMap$RenderObjectHandle.access$600(Lorg/sunflow/RenderObjectMap$RenderObjectHandle;Lorg/sunflow/core/ParameterList;Lorg/sunflow/SunflowAPI;)Z
org/sunflow/RenderObjectMap$RenderObjectHandle.update(Lorg/sunflow/core/ParameterList;Lorg/sunflow/SunflowAPI;)Z
org/sunflow/core/Options.update(Lorg/sunflow/core/ParameterList;Lorg/sunflow/SunflowAPI;)Z
org/sunflow/core/ParameterList$Parameter.check()V
org/sunflow/RenderObjectMap.remove(Ljava/lang/String;)V
org/sunflow/util/FastHashMap.remove(Ljava/lang/Object;)V
org/sunflow/util/FastHashMap$Entry.access$400(Lorg/sunflow/util/FastHashMap$Entry;)V
org/sunflow/util/FastHashMap$Entry.remove()V
org/sunflow/RenderObjectMap$RenderObjectHandle.access$000(Lorg/sunflow/RenderObjectMap$RenderObjectHandle;)Lorg/sunflow/RenderObjectMap$RenderObjectType;
org/sunflow/RenderObjectMap$RenderObjectHandle.access$100(Lorg/sunflow/RenderObjectMap$RenderObjectHandle;)Lorg/sunflow/core/Shader;
org/sunflow/RenderObjectMap$RenderObjectHandle.getShader()Lorg/sunflow/core/Shader;
org/sunflow/RenderObjectMap$RenderObjectHandle.access$200(Lorg/sunflow/RenderObjectMap$RenderObjectHandle;)Lorg/sunflow/core/Instance;
org/sunflow/RenderObjectMap$RenderObjectHandle.getInstance()Lorg/sunflow/core/Instance;
org/sunflow/RenderObjectMap$RenderObjectHandle.access$300(Lorg/sunflow/RenderObjectMap$RenderObjectHandle;)Lorg/sunflow/core/Modifier;
org/sunflow/RenderObjectMap$RenderObjectHandle.getModifier()Lorg/sunflow/core/Modifier;
org/sunflow/RenderObjectMap$RenderObjectHandle.access$400(Lorg/sunflow/RenderObjectMap$RenderObjectHandle;)Lorg/sunflow/core/Geometry;
org/sunflow/RenderObjectMap$RenderObjectHandle.getGeometry()Lorg/sunflow/core/Geometry;
org/sunflow/Benchmark$BenchmarkScene.buildCornellBox()V
org/sunflow/math/Point3.<init>(FFF)V
org/sunflow/SunflowAPI.parameter(Ljava/lang/String;Lorg/sunflow/math/Point3;)V
org/sunflow/core/ParameterList.addPoints(Ljava/lang/String;Lorg/sunflow/core/ParameterList$InterpolationType;[F)V
org/sunflow/core/ParameterList$Parameter.<init>(Lorg/sunflow/core/ParameterList$ParameterType;Lorg/sunflow/core/ParameterList$InterpolationType;[FLorg/sunflow/core/ParameterList$1;)V
org/sunflow/core/ParameterList$Parameter.<init>(Lorg/sunflow/core/ParameterList$ParameterType;Lorg/sunflow/core/ParameterList$InterpolationType;[F)V
org/sunflow/math/Vector3.<init>(FFF)V
org/sunflow/SunflowAPI.parameter(Ljava/lang/String;Lorg/sunflow/math/Vector3;)V
org/sunflow/core/ParameterList.addVectors(Ljava/lang/String;Lorg/sunflow/core/ParameterList$InterpolationType;[F)V
org/sunflow/core/camera/PinholeLens.<init>()V
org/sunflow/core/camera/PinholeLens.update()V
org/sunflow/SunflowAPI.camera(Ljava/lang/String;Lorg/sunflow/core/CameraLens;)V
org/sunflow/core/Camera.<init>(Lorg/sunflow/core/CameraLens;)V
org/sunflow/RenderObjectMap.put(Ljava/lang/String;Lorg/sunflow/core/Camera;)V
org/sunflow/RenderObjectMap$RenderObjectHandle.<init>(Lorg/sunflow/core/Camera;Lorg/sunflow/RenderObjectMap$1;)V
org/sunflow/RenderObjectMap$RenderObjectHandle.<init>(Lorg/sunflow/core/Camera;)V
org/sunflow/core/Camera.update(Lorg/sunflow/core/ParameterList;Lorg/sunflow/SunflowAPI;)Z
org/sunflow/core/ParameterList.getInt(Ljava/lang/String;I)I
org/sunflow/core/ParameterList.isValidParameter(Ljava/lang/String;Lorg/sunflow/core/ParameterList$ParameterType;Lorg/sunflow/core/ParameterList$InterpolationType;ILorg/sunflow/core/ParameterList$Parameter;)Z
org/sunflow/core/ParameterList$Parameter.access$2000(Lorg/sunflow/core/ParameterList$Parameter;)Lorg/sunflow/core/ParameterList$ParameterType;
org/sunflow/core/ParameterList$Parameter.access$2100(Lorg/sunflow/core/ParameterList$Parameter;)Lorg/sunflow/core/ParameterList$InterpolationType;
org/sunflow/core/ParameterList$Parameter.access$2200(Lorg/sunflow/core/ParameterList$Parameter;)I
org/sunflow/core/ParameterList$Parameter.size()I
org/sunflow/core/ParameterList$Parameter.access$002(Lorg/sunflow/core/ParameterList$Parameter;Z)Z
org/sunflow/core/ParameterList$Parameter.access$1100(Lorg/sunflow/core/ParameterList$Parameter;)I
org/sunflow/core/ParameterList$Parameter.getIntValue()I
org/sunflow/core/Camera.updateCameraMatrix(ILorg/sunflow/core/ParameterList;)Z
org/sunflow/core/ParameterList.getMatrix(Ljava/lang/String;Lorg/sunflow/math/Matrix4;)Lorg/sunflow/math/Matrix4;
org/sunflow/core/ParameterList$Parameter.access$1900(Lorg/sunflow/core/ParameterList$Parameter;)Lorg/sunflow/math/Matrix4;
org/sunflow/core/ParameterList$Parameter.getMatrix()Lorg/sunflow/math/Matrix4;
org/sunflow/math/Matrix4.<init>([FZ)V
org/sunflow/core/ParameterList.getPoint(Ljava/lang/String;Lorg/sunflow/math/Point3;)Lorg/sunflow/math/Point3;
org/sunflow/core/ParameterList$Parameter.access$1600(Lorg/sunflow/core/ParameterList$Parameter;)Lorg/sunflow/math/Point3;
org/sunflow/core/ParameterList$Parameter.getPoint()Lorg/sunflow/math/Point3;
org/sunflow/core/ParameterList.getVector(Ljava/lang/String;Lorg/sunflow/math/Vector3;)Lorg/sunflow/math/Vector3;
org/sunflow/core/ParameterList$Parameter.access$1700(Lorg/sunflow/core/ParameterList$Parameter;)Lorg/sunflow/math/Vector3;
org/sunflow/core/ParameterList$Parameter.getVector()Lorg/sunflow/math/Vector3;
org/sunflow/math/Vector3.<init>()V
org/sunflow/math/Point3.sub(Lorg/sunflow/math/Point3;Lorg/sunflow/math/Point3;Lorg/sunflow/math/Vector3;)Lorg/sunflow/math/Vector3;
org/sunflow/math/OrthoNormalBasis.makeFromWV(Lorg/sunflow/math/Vector3;Lorg/sunflow/math/Vector3;)Lorg/sunflow/math/OrthoNormalBasis;
org/sunflow/math/OrthoNormalBasis.<init>()V
org/sunflow/math/Vector3.normalize(Lorg/sunflow/math/Vector3;)Lorg/sunflow/math/Vector3;
org/sunflow/math/Vector3.cross(Lorg/sunflow/math/Vector3;Lorg/sunflow/math/Vector3;Lorg/sunflow/math/Vector3;)Lorg/sunflow/math/Vector3;
org/sunflow/math/Vector3.normalize()Lorg/sunflow/math/Vector3;
org/sunflow/math/Matrix4.fromBasis(Lorg/sunflow/math/OrthoNormalBasis;)Lorg/sunflow/math/Matrix4;
org/sunflow/math/Matrix4.<init>()V
org/sunflow/math/OrthoNormalBasis.transform(Lorg/sunflow/math/Vector3;)Lorg/sunflow/math/Vector3;
org/sunflow/math/Vector3.set(FFF)Lorg/sunflow/math/Vector3;
org/sunflow/math/Matrix4.translation(FFF)Lorg/sunflow/math/Matrix4;
org/sunflow/math/Matrix4.multiply(Lorg/sunflow/math/Matrix4;)Lorg/sunflow/math/Matrix4;
org/sunflow/math/Matrix4.<init>(FFFFFFFFFFFFFFFF)V
org/sunflow/math/Matrix4.inverse()Lorg/sunflow/math/Matrix4;
org/sunflow/core/camera/PinholeLens.update(Lorg/sunflow/core/ParameterList;Lorg/sunflow/SunflowAPI;)Z
org/sunflow/core/ParameterList.getFloat(Ljava/lang/String;F)F
org/sunflow/core/ParameterList$Parameter.access$1400(Lorg/sunflow/core/ParameterList$Parameter;)F
org/sunflow/core/ParameterList$Parameter.getFloatValue()F
org/sunflow/SunflowAPI.lookupCamera(Ljava/lang/String;)Lorg/sunflow/core/Camera;
org/sunflow/RenderObjectMap.lookupCamera(Ljava/lang/String;)Lorg/sunflow/core/Camera;
org/sunflow/RenderObjectMap$RenderObjectHandle.access$1600(Lorg/sunflow/RenderObjectMap$RenderObjectHandle;)Lorg/sunflow/core/Camera;
org/sunflow/RenderObjectMap$RenderObjectHandle.getCamera()Lorg/sunflow/core/Camera;
org/sunflow/image/Color.<init>(FFF)V
org/sunflow/SunflowAPI.parameter(Ljava/lang/String;Lorg/sunflow/image/Color;)V
org/sunflow/core/ParameterList.addColor(Ljava/lang/String;Lorg/sunflow/image/Color;)V
org/sunflow/core/ParameterList$Parameter.<init>(Lorg/sunflow/image/Color;Lorg/sunflow/core/ParameterList$1;)V
org/sunflow/core/ParameterList$Parameter.<init>(Lorg/sunflow/image/Color;)V
org/sunflow/core/shader/DiffuseShader.<init>()V
org/sunflow/SunflowAPI.shader(Ljava/lang/String;Lorg/sunflow/core/Shader;)V
org/sunflow/RenderObjectMap.put(Ljava/lang/String;Lorg/sunflow/core/Shader;)V
org/sunflow/RenderObjectMap$RenderObjectHandle.<init>(Lorg/sunflow/core/Shader;Lorg/sunflow/RenderObjectMap$1;)V
org/sunflow/RenderObjectMap$RenderObjectHandle.<init>(Lorg/sunflow/core/Shader;)V
org/sunflow/core/shader/DiffuseShader.update(Lorg/sunflow/core/ParameterList;Lorg/sunflow/SunflowAPI;)Z
org/sunflow/core/ParameterList.getColor(Ljava/lang/String;Lorg/sunflow/image/Color;)Lorg/sunflow/image/Color;
org/sunflow/core/ParameterList$Parameter.access$1500(Lorg/sunflow/core/ParameterList$Parameter;)Lorg/sunflow/image/Color;
org/sunflow/core/ParameterList$Parameter.getColor()Lorg/sunflow/image/Color;
org/sunflow/SunflowAPI.lookupShader(Ljava/lang/String;)Lorg/sunflow/core/Shader;
org/sunflow/RenderObjectMap.lookupShader(Ljava/lang/String;)Lorg/sunflow/core/Shader;
org/sunflow/SunflowAPI.parameter(Ljava/lang/String;[I)V
org/sunflow/core/ParameterList.addIntegerArray(Ljava/lang/String;[I)V
org/sunflow/core/ParameterList$Parameter.<init>([ILorg/sunflow/core/ParameterList$1;)V
org/sunflow/core/ParameterList$Parameter.<init>([I)V
org/sunflow/SunflowAPI.parameter(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[F)V
org/sunflow/core/ParameterList$InterpolationType.valueOf(Ljava/lang/String;)Lorg/sunflow/core/ParameterList$InterpolationType;
org/sunflow/core/ParameterList.addFloats(Ljava/lang/String;Lorg/sunflow/core/ParameterList$InterpolationType;[F)V
org/sunflow/core/ParameterList.addTexCoords(Ljava/lang/String;Lorg/sunflow/core/ParameterList$InterpolationType;[F)V
org/sunflow/core/ParameterList.addMatrices(Ljava/lang/String;Lorg/sunflow/core/ParameterList$InterpolationType;[F)V
org/sunflow/core/primitive/TriangleMesh.<init>()V
org/sunflow/core/ParameterList$FloatParameter.<init>()V
org/sunflow/core/ParameterList$FloatParameter.<init>(Lorg/sunflow/core/ParameterList$InterpolationType;[F)V
org/sunflow/SunflowAPI.geometry(Ljava/lang/String;Lorg/sunflow/core/PrimitiveList;)V
org/sunflow/RenderObjectMap.put(Ljava/lang/String;Lorg/sunflow/core/PrimitiveList;)V
org/sunflow/RenderObjectMap$RenderObjectHandle.<init>(Lorg/sunflow/core/PrimitiveList;Lorg/sunflow/RenderObjectMap$1;)V
org/sunflow/RenderObjectMap$RenderObjectHandle.<init>(Lorg/sunflow/core/PrimitiveList;)V
org/sunflow/core/Geometry.<init>(Lorg/sunflow/core/PrimitiveList;)V
org/sunflow/core/Geometry.update(Lorg/sunflow/core/ParameterList;Lorg/sunflow/SunflowAPI;)Z
org/sunflow/core/ParameterList.getString(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
org/sunflow/core/ParameterList$Parameter.access$900(Lorg/sunflow/core/ParameterList$Parameter;)Ljava/lang/String;
org/sunflow/core/ParameterList$Parameter.getStringValue()Ljava/lang/String;
org/sunflow/core/primitive/TriangleMesh.update(Lorg/sunflow/core/ParameterList;Lorg/sunflow/SunflowAPI;)Z
org/sunflow/core/ParameterList.getIntArray(Ljava/lang/String;)[I
org/sunflow/core/ParameterList$Parameter.access$1200(Lorg/sunflow/core/ParameterList$Parameter;)[I
org/sunflow/core/ParameterList$Parameter.getInts()[I
org/sunflow/core/ParameterList.setFaceCount(I)V
org/sunflow/core/ParameterList.getPointArray(Ljava/lang/String;)Lorg/sunflow/core/ParameterList$FloatParameter;
org/sunflow/core/ParameterList.getFloatParameter(Ljava/lang/String;Lorg/sunflow/core/ParameterList$ParameterType;Lorg/sunflow/core/ParameterList$Parameter;)Lorg/sunflow/core/ParameterList$FloatParameter;
org/sunflow/core/ParameterList$Parameter.access$2300(Lorg/sunflow/core/ParameterList$Parameter;)Lorg/sunflow/core/ParameterList$FloatParameter;
org/sunflow/core/ParameterList$Parameter.getFloats()Lorg/sunflow/core/ParameterList$FloatParameter;
org/sunflow/core/ParameterList$FloatParameter.<init>(Lorg/sunflow/core/ParameterList$InterpolationType;[FLorg/sunflow/core/ParameterList$1;)V
org/sunflow/core/ParameterList.setVertexCount(I)V
org/sunflow/core/ParameterList.setFaceVertexCount(I)V
org/sunflow/core/ParameterList.getVectorArray(Ljava/lang/String;)Lorg/sunflow/core/ParameterList$FloatParameter;
org/sunflow/core/ParameterList.getTexCoordArray(Ljava/lang/String;)Lorg/sunflow/core/ParameterList$FloatParameter;
org/sunflow/core/primitive/TriangleMesh.init()V
org/sunflow/core/primitive/TriangleMesh.getNumPrimitives()I
org/sunflow/core/primitive/TriangleMesh$WaldTriangle.<init>(Lorg/sunflow/core/primitive/TriangleMesh;ILorg/sunflow/core/primitive/TriangleMesh$1;)V
org/sunflow/core/primitive/TriangleMesh$WaldTriangle.<init>(Lorg/sunflow/core/primitive/TriangleMesh;I)V
org/sunflow/core/primitive/TriangleMesh.getPoint(I)Lorg/sunflow/math/Point3;
org/sunflow/math/Point3.normal(Lorg/sunflow/math/Point3;Lorg/sunflow/math/Point3;Lorg/sunflow/math/Point3;)Lorg/sunflow/math/Vector3;
org/sunflow/SunflowAPI.lookupGeometry(Ljava/lang/String;)Lorg/sunflow/core/Geometry;
org/sunflow/RenderObjectMap.lookupGeometry(Ljava/lang/String;)Lorg/sunflow/core/Geometry;
org/sunflow/SunflowAPI.parameter(Ljava/lang/String;[Ljava/lang/String;)V
org/sunflow/core/ParameterList.addStringArray(Ljava/lang/String;[Ljava/lang/String;)V
org/sunflow/core/ParameterList$Parameter.<init>([Ljava/lang/String;Lorg/sunflow/core/ParameterList$1;)V
org/sunflow/core/ParameterList$Parameter.<init>([Ljava/lang/String;)V
org/sunflow/SunflowAPI.instance(Ljava/lang/String;Ljava/lang/String;)V
org/sunflow/core/Instance.<init>()V
org/sunflow/RenderObjectMap.put(Ljava/lang/String;Lorg/sunflow/core/Instance;)V
org/sunflow/RenderObjectMap$RenderObjectHandle.<init>(Lorg/sunflow/core/Instance;Lorg/sunflow/RenderObjectMap$1;)V
org/sunflow/RenderObjectMap$RenderObjectHandle.<init>(Lorg/sunflow/core/Instance;)V
org/sunflow/core/Instance.update(Lorg/sunflow/core/ParameterList;Lorg/sunflow/SunflowAPI;)Z
org/sunflow/core/ParameterList.getStringArray(Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;
org/sunflow/core/Instance.removeShader(Lorg/sunflow/core/Shader;)V
org/sunflow/core/Instance.removeModifier(Lorg/sunflow/core/Modifier;)V
org/sunflow/core/Instance.hasGeometry(Lorg/sunflow/core/Geometry;)Z
org/sunflow/core/ParameterList$Parameter.access$1000(Lorg/sunflow/core/ParameterList$Parameter;)[Ljava/lang/String;
org/sunflow/core/ParameterList$Parameter.getStrings()[Ljava/lang/String;
org/sunflow/SunflowAPI.lookupModifier(Ljava/lang/String;)Lorg/sunflow/core/Modifier;
org/sunflow/RenderObjectMap.lookupModifier(Ljava/lang/String;)Lorg/sunflow/core/Modifier;
org/sunflow/math/Matrix4.determinant()F
org/sunflow/SunflowAPI.lookupInstance(Ljava/lang/String;)Lorg/sunflow/core/Instance;
org/sunflow/RenderObjectMap.lookupInstance(Ljava/lang/String;)Lorg/sunflow/core/Instance;
org/sunflow/core/light/TriangleMeshLight.<init>()V
org/sunflow/core/light/TriangleMeshLight.init(Ljava/lang/String;Lorg/sunflow/SunflowAPI;)V
org/sunflow/core/light/TriangleMeshLight.update(Lorg/sunflow/core/ParameterList;Lorg/sunflow/SunflowAPI;)Z
org/sunflow/core/light/TriangleMeshLight$TriangleLight.<init>(Lorg/sunflow/core/light/TriangleMeshLight;I)V
org/sunflow/core/light/TriangleMeshLight.access$000(Lorg/sunflow/core/light/TriangleMeshLight;)[I
org/sunflow/core/light/TriangleMeshLight.access$100(Lorg/sunflow/core/light/TriangleMeshLight;)[I
org/sunflow/core/light/TriangleMeshLight.access$200(Lorg/sunflow/core/light/TriangleMeshLight;)[I
org/sunflow/core/light/TriangleMeshLight.access$300(Lorg/sunflow/core/light/TriangleMeshLight;I)Lorg/sunflow/math/Point3;
org/sunflow/core/light/TriangleMeshLight.access$400(Lorg/sunflow/core/light/TriangleMeshLight;I)Lorg/sunflow/math/Point3;
org/sunflow/core/light/TriangleMeshLight.access$500(Lorg/sunflow/core/light/TriangleMeshLight;I)Lorg/sunflow/math/Point3;
org/sunflow/math/Vector3.length()F
org/sunflow/SunflowAPI.light(Ljava/lang/String;Lorg/sunflow/core/LightSource;)V
org/sunflow/RenderObjectMap.put(Ljava/lang/String;Lorg/sunflow/core/LightSource;)V
org/sunflow/RenderObjectMap$RenderObjectHandle.<init>(Lorg/sunflow/core/LightSource;Lorg/sunflow/RenderObjectMap$1;)V
org/sunflow/RenderObjectMap$RenderObjectHandle.<init>(Lorg/sunflow/core/LightSource;)V
org/sunflow/core/light/TriangleMeshLight$TriangleLight.update(Lorg/sunflow/core/ParameterList;Lorg/sunflow/SunflowAPI;)Z
org/sunflow/SunflowAPI.lookupLight(Ljava/lang/String;)Lorg/sunflow/core/LightSource;
org/sunflow/RenderObjectMap.lookupLight(Ljava/lang/String;)Lorg/sunflow/core/LightSource;
org/sunflow/RenderObjectMap$RenderObjectHandle.access$700(Lorg/sunflow/RenderObjectMap$RenderObjectHandle;)Lorg/sunflow/core/LightSource;
org/sunflow/RenderObjectMap$RenderObjectHandle.getLight()Lorg/sunflow/core/LightSource;
org/sunflow/core/shader/GlassShader.<init>()V
org/sunflow/core/shader/GlassShader.update(Lorg/sunflow/core/ParameterList;Lorg/sunflow/SunflowAPI;)Z
org/sunflow/Benchmark$BenchmarkScene.sphere(Ljava/lang/String;Ljava/lang/String;FFFF)V
org/sunflow/core/primitive/Sphere.<init>()V
org/sunflow/core/primitive/Sphere.update(Lorg/sunflow/core/ParameterList;Lorg/sunflow/SunflowAPI;)Z
org/sunflow/math/Matrix4.scale(F)Lorg/sunflow/math/Matrix4;
org/sunflow/SunflowAPI.parameter(Ljava/lang/String;Lorg/sunflow/math/Matrix4;)V
org/sunflow/math/Matrix4.asRowMajor()[F
org/sunflow/core/shader/MirrorShader.<init>()V
org/sunflow/core/shader/MirrorShader.update(Lorg/sunflow/core/ParameterList;Lorg/sunflow/SunflowAPI;)Z
org/sunflow/core/tesselatable/Teapot.<init>()V
org/sunflow/core/tesselatable/BezierMesh.<init>([[F)V
org/sunflow/SunflowAPI.geometry(Ljava/lang/String;Lorg/sunflow/core/Tesselatable;)V
org/sunflow/RenderObjectMap.put(Ljava/lang/String;Lorg/sunflow/core/Tesselatable;)V
org/sunflow/RenderObjectMap$RenderObjectHandle.<init>(Lorg/sunflow/core/Tesselatable;Lorg/sunflow/RenderObjectMap$1;)V
org/sunflow/RenderObjectMap$RenderObjectHandle.<init>(Lorg/sunflow/core/Tesselatable;)V
org/sunflow/core/Geometry.<init>(Lorg/sunflow/core/Tesselatable;)V
org/sunflow/core/tesselatable/BezierMesh.update(Lorg/sunflow/core/ParameterList;Lorg/sunflow/SunflowAPI;)Z
org/sunflow/core/ParameterList.getBoolean(Ljava/lang/String;Z)Z
org/sunflow/core/ParameterList$Parameter.access$1300(Lorg/sunflow/core/ParameterList$Parameter;)Z
org/sunflow/core/ParameterList$Parameter.getBoolValue()Z
org/sunflow/math/Matrix4.rotateX(F)Lorg/sunflow/math/Matrix4;
org/sunflow/math/Matrix4.rotateY(F)Lorg/sunflow/math/Matrix4;
org/sunflow/Benchmark.access$000(Lorg/sunflow/Benchmark;)Z
org/sunflow/SunflowAPI.render(Ljava/lang/String;Lorg/sunflow/core/Display;)V
org/sunflow/RenderObjectMap.updateScene(Lorg/sunflow/core/Scene;)V
org/sunflow/core/Instance.updateBounds()V
org/sunflow/core/Geometry.getWorldBounds(Lorg/sunflow/math/Matrix4;)Lorg/sunflow/math/BoundingBox;
org/sunflow/core/tesselatable/BezierMesh.getWorldBounds(Lorg/sunflow/math/Matrix4;)Lorg/sunflow/math/BoundingBox;
org/sunflow/math/BoundingBox.<init>()V
org/sunflow/math/BoundingBox.include(FFF)V
org/sunflow/math/Matrix4.transformPX(FFF)F
org/sunflow/math/Matrix4.transformPY(FFF)F
org/sunflow/math/Matrix4.transformPZ(FFF)F
org/sunflow/core/Geometry.tesselate()V
org/sunflow/core/tesselatable/BezierMesh.tesselate()Lorg/sunflow/core/PrimitiveList;
org/sunflow/math/Point3.<init>()V
org/sunflow/core/tesselatable/BezierMesh.bernstein(F)[F
org/sunflow/core/tesselatable/BezierMesh.bernsteinDeriv(F)[F
org/sunflow/core/tesselatable/BezierMesh.getPatchPoint(FF[F[F[F[F[FLorg/sunflow/math/Point3;Lorg/sunflow/math/Vector3;)V
org/sunflow/core/primitive/Sphere.getNumPrimitives()I
org/sunflow/core/primitive/Sphere.getWorldBounds(Lorg/sunflow/math/Matrix4;)Lorg/sunflow/math/BoundingBox;
org/sunflow/core/primitive/TriangleMesh.getWorldBounds(Lorg/sunflow/math/Matrix4;)Lorg/sunflow/math/BoundingBox;
org/sunflow/math/BoundingBox.<init>(F)V
org/sunflow/math/Matrix4.transform(Lorg/sunflow/math/BoundingBox;)Lorg/sunflow/math/BoundingBox;
org/sunflow/math/BoundingBox.isEmpty()Z
org/sunflow/math/BoundingBox.getMinimum()Lorg/sunflow/math/Point3;
org/sunflow/math/Matrix4.transformP(Lorg/sunflow/math/Point3;)Lorg/sunflow/math/Point3;
org/sunflow/math/BoundingBox.<init>(Lorg/sunflow/math/Point3;)V
org/sunflow/math/BoundingBox.<init>(FFF)V
org/sunflow/math/BoundingBox.getMaximum()Lorg/sunflow/math/Point3;
org/sunflow/math/BoundingBox.include(Lorg/sunflow/math/Point3;)V
org/sunflow/math/BoundingBox.getCorner(I)Lorg/sunflow/math/Point3;
org/sunflow/core/Instance.getBounds()Lorg/sunflow/math/BoundingBox;
org/sunflow/core/Scene.setInstanceLists([Lorg/sunflow/core/Instance;[Lorg/sunflow/core/Instance;)V
org/sunflow/core/InstanceList.<init>([Lorg/sunflow/core/Instance;)V
org/sunflow/core/Scene.setLightList([Lorg/sunflow/core/LightSource;)V
org/sunflow/core/LightServer.setLights([Lorg/sunflow/core/LightSource;)V
org/sunflow/core/Scene.setCamera(Lorg/sunflow/core/Camera;)V
org/sunflow/core/Scene.setBakingInstance(Lorg/sunflow/core/Instance;)V
org/sunflow/core/Scene.render(Lorg/sunflow/core/Options;Lorg/sunflow/core/ImageSampler;Lorg/sunflow/core/Display;)V
org/sunflow/core/Instance.getBakingPrimitives()Lorg/sunflow/core/PrimitiveList;
org/sunflow/core/Geometry.getBakingPrimitives()Lorg/sunflow/core/PrimitiveList;
org/sunflow/core/primitive/Sphere.getBakingPrimitives()Lorg/sunflow/core/PrimitiveList;
org/sunflow/core/primitive/TriangleMesh.getBakingPrimitives()Lorg/sunflow/core/PrimitiveList;
org/sunflow/math/MathUtils.clamp(III)I
org/sunflow/core/InstanceList.getNumPrimitives()I
org/sunflow/core/InstanceList.getNumPrimitives(I)I
org/sunflow/core/Instance.getNumPrimitives()I
org/sunflow/core/Geometry.getNumPrimitives()I
org/sunflow/core/AccelerationStructureFactory.create(Ljava/lang/String;IZ)Lorg/sunflow/core/AccelerationStructure;
org/sunflow/core/accel/NullAccelerator.<init>()V
org/sunflow/core/accel/KDTree.<init>()V
org/sunflow/core/accel/KDTree.<init>(I)V
org/sunflow/core/accel/BoundingIntervalHierarchy.<init>()V
org/sunflow/core/accel/NullAccelerator.build(Lorg/sunflow/core/PrimitiveList;)V
org/sunflow/core/accel/KDTree.build(Lorg/sunflow/core/PrimitiveList;)V
org/sunflow/core/accel/BoundingIntervalHierarchy.build(Lorg/sunflow/core/PrimitiveList;)V
org/sunflow/core/InstanceList.getWorldBounds(Lorg/sunflow/math/Matrix4;)Lorg/sunflow/math/BoundingBox;
org/sunflow/math/BoundingBox.include(Lorg/sunflow/math/BoundingBox;)V
org/sunflow/util/IntArray.<init>(I)V
org/sunflow/core/accel/BoundingIntervalHierarchy$BuildStats.<init>()V
org/sunflow/system/Timer.<init>()V
org/sunflow/system/Timer.start()V
org/sunflow/core/accel/BoundingIntervalHierarchy.buildHierarchy(Lorg/sunflow/util/IntArray;[ILorg/sunflow/core/accel/BoundingIntervalHierarchy$BuildStats;)V
org/sunflow/util/IntArray.add(I)V
org/sunflow/core/accel/BoundingIntervalHierarchy.subdivide(IILorg/sunflow/util/IntArray;[I[F[FIILorg/sunflow/core/accel/BoundingIntervalHierarchy$BuildStats;)V
org/sunflow/core/InstanceList.getPrimitiveBound(II)F
org/sunflow/math/BoundingBox.getBound(I)F
org/sunflow/core/accel/BoundingIntervalHierarchy$BuildStats.updateBVH2()V
org/sunflow/util/IntArray.getSize()I
org/sunflow/core/accel/BoundingIntervalHierarchy$BuildStats.updateInner()V
org/sunflow/util/IntArray.set(II)V
org/sunflow/core/accel/BoundingIntervalHierarchy$BuildStats.updateLeaf(II)V
org/sunflow/core/accel/BoundingIntervalHierarchy.createNode(Lorg/sunflow/util/IntArray;III)V
org/sunflow/system/Timer.end()V
org/sunflow/util/IntArray.trim()[I
org/sunflow/core/accel/BoundingIntervalHierarchy$BuildStats.printStats()V
org/sunflow/system/Memory.sizeof([I)Ljava/lang/String;
org/sunflow/system/Memory.bytesToString(J)Ljava/lang/String;
org/sunflow/core/accel/KDTree$BuildTask.<init>(I)V
org/sunflow/core/accel/KDTree.pack(FJII)J
org/sunflow/util/IntArray.<init>()V
org/sunflow/core/accel/KDTree.radix12([JI)V
org/sunflow/core/accel/KDTree$BuildStats.<init>()V
org/sunflow/core/accel/KDTree.buildTree(FFFFFFLorg/sunflow/core/accel/KDTree$BuildTask;ILorg/sunflow/util/IntArray;ILorg/sunflow/util/IntArray;Lorg/sunflow/core/accel/KDTree$BuildStats;)V
org/sunflow/core/accel/KDTree.unpackSplit(J)F
org/sunflow/core/accel/KDTree.unpackAxis(J)I
org/sunflow/core/accel/KDTree.unpackObject(J)I
org/sunflow/core/accel/KDTree$BuildTask.<init>(ILorg/sunflow/core/accel/KDTree$BuildTask;)V
org/sunflow/core/accel/KDTree.unpackSplitType(J)J
org/sunflow/core/accel/KDTree$BuildStats.updateInner()V
org/sunflow/core/accel/KDTree$BuildStats.updateLeaf(II)V
org/sunflow/core/accel/KDTree$BuildStats.printStats()V
org/sunflow/core/accel/KDTree$BuildStats.access$000(Lorg/sunflow/core/accel/KDTree$BuildStats;)I
org/sunflow/image/Color.blend(Lorg/sunflow/image/Color;Lorg/sunflow/image/Color;F)Lorg/sunflow/image/Color;
org/sunflow/image/Color.<init>()V
org/sunflow/image/Color.blend(Lorg/sunflow/image/Color;Lorg/sunflow/image/Color;FLorg/sunflow/image/Color;)Lorg/sunflow/image/Color;
org/sunflow/image/Color.getRGB()[F
org/sunflow/math/BoundingBox.<init>(Lorg/sunflow/math/BoundingBox;)V
org/sunflow/math/Point3.<init>(Lorg/sunflow/math/Point3;)V
org/sunflow/core/accel/KDTree.dumpObj(IIILorg/sunflow/math/BoundingBox;Ljava/io/FileWriter;Ljava/io/FileWriter;)I
org/sunflow/core/Scene.getBounds()Lorg/sunflow/math/BoundingBox;
org/sunflow/math/BoundingBox.getCenter()Lorg/sunflow/math/Point3;
org/sunflow/math/Point3.mid(Lorg/sunflow/math/Point3;Lorg/sunflow/math/Point3;Lorg/sunflow/math/Point3;)Lorg/sunflow/math/Point3;
org/sunflow/math/BoundingBox.getExtents()Lorg/sunflow/math/Vector3;
org/sunflow/core/LightServer.build(Lorg/sunflow/core/Options;)Z
org/sunflow/core/gi/GIEngineFactory.create(Lorg/sunflow/core/Options;)Lorg/sunflow/core/GIEngine;
org/sunflow/core/gi/InstantGI.<init>(Lorg/sunflow/core/Options;)V
org/sunflow/core/InstanceList.update(Lorg/sunflow/core/ParameterList;Lorg/sunflow/SunflowAPI;)Z
org/sunflow/core/tesselatable/BezierMesh.getNumPrimitives()I
org/sunflow/core/InstanceList.getBakingPrimitives()Lorg/sunflow/core/PrimitiveList;
org/sunflow/core/tesselatable/BezierMesh.getBakingPrimitives()Lorg/sunflow/core/PrimitiveList;
org/sunflow/core/light/TriangleMeshLight$TriangleLight.getNumSamples()I
org/sunflow/core/light/TriangleMeshLight.access$600(Lorg/sunflow/core/light/TriangleMeshLight;)I
org/sunflow/core/gi/InstantGI.init(Lorg/sunflow/core/Scene;)Z
org/sunflow/core/gi/InstantGI$PointLightStore.<init>(Lorg/sunflow/core/gi/InstantGI;Lorg/sunflow/core/gi/InstantGI$1;)V
org/sunflow/core/gi/InstantGI$PointLightStore.<init>(Lorg/sunflow/core/gi/InstantGI;)V
org/sunflow/core/Scene.calculatePhotons(Lorg/sunflow/core/PhotonStore;Ljava/lang/String;I)Z
org/sunflow/core/LightServer.calculatePhotons(Lorg/sunflow/core/PhotonStore;Ljava/lang/String;I)Z
org/sunflow/core/light/TriangleMeshLight$TriangleLight.getPower()F
org/sunflow/core/light/TriangleMeshLight.access$3100(Lorg/sunflow/core/light/TriangleMeshLight;)Lorg/sunflow/image/Color;
org/sunflow/image/Color.copy()Lorg/sunflow/image/Color;
org/sunflow/image/Color.<init>(Lorg/sunflow/image/Color;)V
org/sunflow/image/Color.mul(F)Lorg/sunflow/image/Color;
org/sunflow/image/Color.getLuminance()F
org/sunflow/core/gi/InstantGI$PointLightStore.numEmit()I
org/sunflow/core/gi/InstantGI.access$100(Lorg/sunflow/core/gi/InstantGI;)I
org/sunflow/core/gi/InstantGI$PointLightStore.prepare(Lorg/sunflow/math/BoundingBox;)V
org/sunflow/system/UI.taskStart(Ljava/lang/String;II)V
org/sunflow/system/ui/ConsoleInterface.taskStart(Ljava/lang/String;II)V
org/sunflow/Benchmark.taskStart(Ljava/lang/String;II)V
org/sunflow/core/Scene.getThreads()I
org/sunflow/core/LightServer$1.<init>(Lorg/sunflow/core/LightServer;III[FFLorg/sunflow/core/PhotonStore;)V
org/sunflow/core/Scene.getThreadPriority()I
org/sunflow/system/UI.taskCanceled()Z
org/sunflow/system/UI.taskStop()V
org/sunflow/system/ui/ConsoleInterface.taskStop()V
org/sunflow/Benchmark.taskStop()V
org/sunflow/system/Timer.toString()Ljava/lang/String;
org/sunflow/system/Timer.nanos()J
org/sunflow/core/gi/InstantGI$PointLightStore.init()V
org/sunflow/core/renderer/ProgressiveRenderer.prepare(Lorg/sunflow/core/Options;Lorg/sunflow/core/Scene;II)Z
org/sunflow/core/renderer/BucketRenderer.prepare(Lorg/sunflow/core/Options;Lorg/sunflow/core/Scene;II)Z
org/sunflow/core/bucket/BucketOrderFactory.create(Ljava/lang/String;)Lorg/sunflow/core/BucketOrder;
org/sunflow/core/bucket/HilbertBucketOrder.<init>()V
org/sunflow/core/bucket/HilbertBucketOrder.getBucketSequence(II)[I
org/sunflow/math/MathUtils.clamp(FFF)F
org/sunflow/core/filter/FilterFactory.get(Ljava/lang/String;)Lorg/sunflow/core/Filter;
org/sunflow/core/filter/TriangleFilter.<init>(F)V
org/sunflow/core/filter/TriangleFilter.getSize()F
org/sunflow/math/QMC.generateSigmaTable(I)[I
org/sunflow/core/renderer/BucketRenderer.aaDepthToString(I)Ljava/lang/String;
org/sunflow/core/renderer/BucketRenderer.render(Lorg/sunflow/core/Display;)V
org/sunflow/core/renderer/ProgressiveRenderer.render(Lorg/sunflow/core/Display;)V
org/sunflow/Benchmark.imageBegin(III)V
org/sunflow/Benchmark.imageEnd()V
org/sunflow/core/renderer/BucketRenderer$BucketThread.<init>(Lorg/sunflow/core/renderer/BucketRenderer;I)V
org/sunflow/core/renderer/BucketRenderer$BucketThread.run()V
org/sunflow/core/IntersectionState.<init>()V
org/sunflow/core/IntersectionState$StackNode.<init>()V
org/sunflow/core/renderer/BucketRenderer.access$000(Lorg/sunflow/core/renderer/BucketRenderer;)I
org/sunflow/core/renderer/BucketRenderer.access$100(Lorg/sunflow/core/renderer/BucketRenderer;)[I
org/sunflow/system/UI.taskUpdate(I)V
org/sunflow/system/ui/ConsoleInterface.taskUpdate(I)V
org/sunflow/Benchmark.taskUpdate(I)V
org/sunflow/core/renderer/BucketRenderer.access$002(Lorg/sunflow/core/renderer/BucketRenderer;I)I
org/sunflow/core/renderer/BucketRenderer.access$200(Lorg/sunflow/core/renderer/BucketRenderer;)Lorg/sunflow/core/Display;
org/sunflow/core/renderer/BucketRenderer.access$300(Lorg/sunflow/core/renderer/BucketRenderer;Lorg/sunflow/core/Display;IIILorg/sunflow/core/IntersectionState;)V
org/sunflow/core/renderer/BucketRenderer.renderBucket(Lorg/sunflow/core/Display;IIILorg/sunflow/core/IntersectionState;)V
org/sunflow/Benchmark.imagePrepare(IIIII)V
org/sunflow/core/renderer/BucketRenderer$ImageSample.<init>(FFI)V
org/sunflow/core/renderer/BucketRenderer.refineSamples([Lorg/sunflow/core/renderer/BucketRenderer$ImageSample;IIIIFLorg/sunflow/core/IntersectionState;)V
org/sunflow/core/renderer/BucketRenderer$ImageSample.sampled()Z
org/sunflow/core/renderer/BucketRenderer.computeSubPixel(Lorg/sunflow/core/renderer/BucketRenderer$ImageSample;Lorg/sunflow/core/IntersectionState;)V
org/sunflow/math/QMC.halton(II)D
org/sunflow/core/Scene.getRadiance(Lorg/sunflow/core/IntersectionState;FFDDDI)Lorg/sunflow/core/ShadingState;
org/sunflow/core/Camera.getRay(FFIIDDD)Lorg/sunflow/core/Ray;
org/sunflow/core/camera/PinholeLens.getRay(FFIIDDD)Lorg/sunflow/core/Ray;
org/sunflow/core/Ray.<init>(FFFFFF)V
org/sunflow/core/Ray.transform(Lorg/sunflow/math/Matrix4;)Lorg/sunflow/core/Ray;
org/sunflow/core/Ray.<init>()V
org/sunflow/math/Matrix4.transformVX(FFF)F
org/sunflow/math/Matrix4.transformVY(FFF)F
org/sunflow/math/Matrix4.transformVZ(FFF)F
org/sunflow/math/Matrix4.blend(Lorg/sunflow/math/Matrix4;Lorg/sunflow/math/Matrix4;F)Lorg/sunflow/math/Matrix4;
org/sunflow/core/Ray.normalize()V
org/sunflow/core/LightServer.getRadiance(FFILorg/sunflow/core/Ray;Lorg/sunflow/core/IntersectionState;)Lorg/sunflow/core/ShadingState;
org/sunflow/core/Scene.trace(Lorg/sunflow/core/Ray;Lorg/sunflow/core/IntersectionState;)V
org/sunflow/core/InstanceList.intersectPrimitive(Lorg/sunflow/core/Ray;ILorg/sunflow/core/IntersectionState;)V
org/sunflow/core/Instance.intersect(Lorg/sunflow/core/Ray;Lorg/sunflow/core/IntersectionState;)V
org/sunflow/core/Geometry.intersect(Lorg/sunflow/core/Ray;Lorg/sunflow/core/IntersectionState;)V
org/sunflow/core/Geometry.build()V
org/sunflow/core/primitive/TriangleMesh.getPrimitiveBound(II)F
org/sunflow/core/tesselatable/BezierMesh.getPrimitiveBound(II)F
org/sunflow/core/primitive/Sphere.getPrimitiveBound(II)F
org/sunflow/math/MathUtils.min(FFF)F
org/sunflow/math/MathUtils.max(FFF)F
org/sunflow/core/accel/NullAccelerator.intersect(Lorg/sunflow/core/Ray;Lorg/sunflow/core/IntersectionState;)V
org/sunflow/core/accel/KDTree.intersect(Lorg/sunflow/core/Ray;Lorg/sunflow/core/IntersectionState;)V
org/sunflow/core/accel/BoundingIntervalHierarchy.intersect(Lorg/sunflow/core/Ray;Lorg/sunflow/core/IntersectionState;)V
org/sunflow/core/Ray.getMin()F
org/sunflow/core/Ray.getMax()F
org/sunflow/core/IntersectionState.getStack()[Lorg/sunflow/core/IntersectionState$StackNode;
org/sunflow/core/IntersectionState.getStackTop()I
org/sunflow/core/primitive/Sphere.intersectPrimitive(Lorg/sunflow/core/Ray;ILorg/sunflow/core/IntersectionState;)V
org/sunflow/core/primitive/TriangleMesh.intersectPrimitive(Lorg/sunflow/core/Ray;ILorg/sunflow/core/IntersectionState;)V
org/sunflow/core/tesselatable/BezierMesh.intersectPrimitive(Lorg/sunflow/core/Ray;ILorg/sunflow/core/IntersectionState;)V
org/sunflow/core/IntersectionState.getRobustStack()[F
org/sunflow/core/Ray.setMax(F)V
org/sunflow/core/IntersectionState.setIntersection(IFF)V
org/sunflow/core/primitive/TriangleMesh$WaldTriangle.intersect(Lorg/sunflow/core/Ray;ILorg/sunflow/core/IntersectionState;)V
org/sunflow/core/Ray.isInside(F)Z
org/sunflow/core/primitive/TriangleMesh.intersectTriangleKensler(Lorg/sunflow/core/Ray;ILorg/sunflow/core/IntersectionState;)V
org/sunflow/core/Ray.dot(FFF)F
org/sunflow/math/Solvers.solveQuadric(DDD)[D
org/sunflow/core/IntersectionState.hit()Z
org/sunflow/core/ShadingState.createState(Lorg/sunflow/core/IntersectionState;FFLorg/sunflow/core/Ray;ILorg/sunflow/core/LightServer;)Lorg/sunflow/core/ShadingState;
org/sunflow/core/ShadingState.<init>(Lorg/sunflow/core/ShadingState;Lorg/sunflow/core/IntersectionState;Lorg/sunflow/core/Ray;II)V
org/sunflow/core/ShadingState.getInstance()Lorg/sunflow/core/Instance;
org/sunflow/core/Instance.prepareShadingState(Lorg/sunflow/core/ShadingState;)V
org/sunflow/core/Geometry.prepareShadingState(Lorg/sunflow/core/ShadingState;)V
org/sunflow/core/primitive/TriangleMesh.prepareShadingState(Lorg/sunflow/core/ShadingState;)V
org/sunflow/core/tesselatable/BezierMesh.prepareShadingState(Lorg/sunflow/core/ShadingState;)V
org/sunflow/core/primitive/Sphere.prepareShadingState(Lorg/sunflow/core/ShadingState;)V
org/sunflow/core/InstanceList.prepareShadingState(Lorg/sunflow/core/ShadingState;)V
org/sunflow/core/ShadingState.init()V
org/sunflow/math/Point2.<init>()V
org/sunflow/core/ShadingState.getRay()Lorg/sunflow/core/Ray;
org/sunflow/core/ShadingState.getPoint()Lorg/sunflow/math/Point3;
org/sunflow/core/Ray.getPoint(Lorg/sunflow/math/Point3;)Lorg/sunflow/math/Point3;
org/sunflow/core/Instance.transformWorldToObject(Lorg/sunflow/math/Point3;)Lorg/sunflow/math/Point3;
org/sunflow/core/ShadingState.getNormal()Lorg/sunflow/math/Vector3;
org/sunflow/core/ShadingState.getUV()Lorg/sunflow/math/Point2;
org/sunflow/core/Instance.getShader(I)Lorg/sunflow/core/Shader;
org/sunflow/core/ShadingState.setShader(Lorg/sunflow/core/Shader;)V
org/sunflow/core/Instance.getModifier(I)Lorg/sunflow/core/Modifier;
org/sunflow/core/ShadingState.setModifier(Lorg/sunflow/core/Modifier;)V
org/sunflow/core/Instance.transformNormalObjectToWorld(Lorg/sunflow/math/Vector3;)Lorg/sunflow/math/Vector3;
org/sunflow/math/Vector3.<init>(Lorg/sunflow/math/Vector3;)V
org/sunflow/math/Matrix4.transformTransposeV(Lorg/sunflow/math/Vector3;)Lorg/sunflow/math/Vector3;
org/sunflow/core/Instance.transformVectorObjectToWorld(Lorg/sunflow/math/Vector3;)Lorg/sunflow/math/Vector3;
org/sunflow/math/Matrix4.transformV(Lorg/sunflow/math/Vector3;)Lorg/sunflow/math/Vector3;
org/sunflow/math/Vector3.set(Lorg/sunflow/math/Vector3;)Lorg/sunflow/math/Vector3;
org/sunflow/core/ShadingState.getGeoNormal()Lorg/sunflow/math/Vector3;
org/sunflow/core/ShadingState.setBasis(Lorg/sunflow/math/OrthoNormalBasis;)V
org/sunflow/core/ShadingState.getU()F
org/sunflow/core/ShadingState.getV()F
org/sunflow/core/ShadingState.getPrimitiveID()I
org/sunflow/math/Point2.set(FF)Lorg/sunflow/math/Point2;
org/sunflow/math/OrthoNormalBasis.makeFromW(Lorg/sunflow/math/Vector3;)Lorg/sunflow/math/OrthoNormalBasis;
org/sunflow/core/ShadingState.correctShadingNormal()V
org/sunflow/math/Vector3.dot(Lorg/sunflow/math/Vector3;Lorg/sunflow/math/Vector3;)F
org/sunflow/math/Vector3.negate()Lorg/sunflow/math/Vector3;
org/sunflow/math/OrthoNormalBasis.flipW()V
org/sunflow/core/ShadingState.getModifier()Lorg/sunflow/core/Modifier;
org/sunflow/core/LightServer.getShader(Lorg/sunflow/core/ShadingState;)Lorg/sunflow/core/Shader;
org/sunflow/core/ShadingState.getShader()Lorg/sunflow/core/Shader;
org/sunflow/core/ShadingState.setResult(Lorg/sunflow/image/Color;)V
org/sunflow/core/LightServer.lookupShadingCache(Lorg/sunflow/core/ShadingState;Lorg/sunflow/core/Shader;)Lorg/sunflow/image/Color;
org/sunflow/core/ShadingState.getRasterX()F
org/sunflow/core/ShadingState.getRasterY()F
org/sunflow/core/LightServer.hash(II)I
org/sunflow/math/Vector3.dot(FFF)F
org/sunflow/core/shader/GlassShader.getRadiance(Lorg/sunflow/core/ShadingState;)Lorg/sunflow/image/Color;
org/sunflow/core/shader/DiffuseShader.getRadiance(Lorg/sunflow/core/ShadingState;)Lorg/sunflow/image/Color;
org/sunflow/core/light/TriangleMeshLight.getRadiance(Lorg/sunflow/core/ShadingState;)Lorg/sunflow/image/Color;
org/sunflow/core/shader/MirrorShader.getRadiance(Lorg/sunflow/core/ShadingState;)Lorg/sunflow/image/Color;
org/sunflow/core/ShadingState.includeSpecular()Z
org/sunflow/core/ShadingState.faceforward()V
org/sunflow/core/Ray.dot(Lorg/sunflow/math/Vector3;)F
org/sunflow/core/ShadingState.getCosND()F
org/sunflow/core/Ray.getDirection()Lorg/sunflow/math/Vector3;
org/sunflow/core/Ray.<init>(Lorg/sunflow/math/Point3;Lorg/sunflow/math/Vector3;)V
org/sunflow/image/Color.white()Lorg/sunflow/image/Color;
org/sunflow/image/Color.sub(Lorg/sunflow/image/Color;)Lorg/sunflow/image/Color;
org/sunflow/image/Color.add(Lorg/sunflow/image/Color;)Lorg/sunflow/image/Color;
org/sunflow/core/ShadingState.traceReflection(Lorg/sunflow/core/Ray;I)Lorg/sunflow/image/Color;
org/sunflow/core/LightServer.traceReflection(Lorg/sunflow/core/ShadingState;Lorg/sunflow/core/Ray;I)Lorg/sunflow/image/Color;
org/sunflow/core/ShadingState.getReflectionDepth()I
org/sunflow/core/ShadingState.getDiffuseDepth()I
org/sunflow/core/ShadingState.getIntersectionState()Lorg/sunflow/core/IntersectionState;
org/sunflow/core/ShadingState.createReflectionBounceState(Lorg/sunflow/core/ShadingState;Lorg/sunflow/core/Ray;I)Lorg/sunflow/core/ShadingState;
org/sunflow/core/LightServer.shadeHit(Lorg/sunflow/core/ShadingState;)Lorg/sunflow/image/Color;
org/sunflow/image/Color.mul(Lorg/sunflow/image/Color;)Lorg/sunflow/image/Color;
org/sunflow/core/ShadingState.includeLights()Z
org/sunflow/core/ShadingState.isBehind()Z
org/sunflow/core/ShadingState.initLightSamples()V
org/sunflow/core/LightServer.initLightSamples(Lorg/sunflow/core/ShadingState;)V
org/sunflow/core/light/TriangleMeshLight$TriangleLight.getSamples(Lorg/sunflow/core/ShadingState;)V
org/sunflow/core/light/TriangleMeshLight.access$2500(Lorg/sunflow/core/light/TriangleMeshLight;)[I
org/sunflow/core/light/TriangleMeshLight.access$2600(Lorg/sunflow/core/light/TriangleMeshLight;I)Lorg/sunflow/math/Point3;
org/sunflow/core/light/TriangleMeshLight.access$2700(Lorg/sunflow/core/light/TriangleMeshLight;)[I
org/sunflow/core/light/TriangleMeshLight.access$2800(Lorg/sunflow/core/light/TriangleMeshLight;I)Lorg/sunflow/math/Point3;
org/sunflow/core/light/TriangleMeshLight.access$2900(Lorg/sunflow/core/light/TriangleMeshLight;)[I
org/sunflow/core/light/TriangleMeshLight.access$3000(Lorg/sunflow/core/light/TriangleMeshLight;I)Lorg/sunflow/math/Point3;
org/sunflow/math/Vector3.div(F)Lorg/sunflow/math/Vector3;
org/sunflow/image/Color.mul(FLorg/sunflow/image/Color;)Lorg/sunflow/image/Color;
org/sunflow/image/Color.mul(FLorg/sunflow/image/Color;Lorg/sunflow/image/Color;)Lorg/sunflow/image/Color;
org/sunflow/core/ShadingState.getRandom(III)D
org/sunflow/math/QMC.mod1(D)D
org/sunflow/core/light/TriangleMeshLight$TriangleLight.intersectTriangleKensler(Lorg/sunflow/core/Ray;)Z
org/sunflow/core/light/TriangleMeshLight.access$700(Lorg/sunflow/core/light/TriangleMeshLight;)[I
org/sunflow/core/light/TriangleMeshLight.access$800(Lorg/sunflow/core/light/TriangleMeshLight;)[I
org/sunflow/core/light/TriangleMeshLight.access$900(Lorg/sunflow/core/light/TriangleMeshLight;)[I
org/sunflow/core/light/TriangleMeshLight.access$1000(Lorg/sunflow/core/light/TriangleMeshLight;)[F
org/sunflow/core/light/TriangleMeshLight.access$1100(Lorg/sunflow/core/light/TriangleMeshLight;)[F
org/sunflow/core/light/TriangleMeshLight.access$1200(Lorg/sunflow/core/light/TriangleMeshLight;)[F
org/sunflow/core/light/TriangleMeshLight.access$1300(Lorg/sunflow/core/light/TriangleMeshLight;)[F
org/sunflow/core/light/TriangleMeshLight.access$1400(Lorg/sunflow/core/light/TriangleMeshLight;)[F
org/sunflow/core/light/TriangleMeshLight.access$1500(Lorg/sunflow/core/light/TriangleMeshLight;)[F
org/sunflow/core/light/TriangleMeshLight.access$1600(Lorg/sunflow/core/light/TriangleMeshLight;)[F
org/sunflow/core/light/TriangleMeshLight.access$1700(Lorg/sunflow/core/light/TriangleMeshLight;)[F
org/sunflow/core/light/TriangleMeshLight.access$1800(Lorg/sunflow/core/light/TriangleMeshLight;)[F
org/sunflow/core/light/TriangleMeshLight.access$1900(Lorg/sunflow/core/light/TriangleMeshLight;)[F
org/sunflow/core/light/TriangleMeshLight.access$2000(Lorg/sunflow/core/light/TriangleMeshLight;)[F
org/sunflow/core/light/TriangleMeshLight.access$2100(Lorg/sunflow/core/light/TriangleMeshLight;)[F
org/sunflow/core/light/TriangleMeshLight.access$2200(Lorg/sunflow/core/light/TriangleMeshLight;)[F
org/sunflow/core/light/TriangleMeshLight.access$2300(Lorg/sunflow/core/light/TriangleMeshLight;)[F
org/sunflow/core/light/TriangleMeshLight.access$2400(Lorg/sunflow/core/light/TriangleMeshLight;)[F
org/sunflow/core/LightSample.<init>()V
org/sunflow/core/LightSample.setShadowRay(Lorg/sunflow/core/Ray;)V
org/sunflow/core/LightSample.setRadiance(Lorg/sunflow/image/Color;Lorg/sunflow/image/Color;)V
org/sunflow/core/LightSample.traceShadow(Lorg/sunflow/core/ShadingState;)V
org/sunflow/core/ShadingState.traceShadow(Lorg/sunflow/core/Ray;)Lorg/sunflow/image/Color;
org/sunflow/core/LightServer.getScene()Lorg/sunflow/core/Scene;
org/sunflow/core/Scene.traceShadow(Lorg/sunflow/core/Ray;Lorg/sunflow/core/IntersectionState;)Lorg/sunflow/image/Color;
org/sunflow/image/Color.blend(Lorg/sunflow/image/Color;Lorg/sunflow/image/Color;Lorg/sunflow/image/Color;Lorg/sunflow/image/Color;)Lorg/sunflow/image/Color;
org/sunflow/core/ShadingState.addSample(Lorg/sunflow/core/LightSample;)V
org/sunflow/core/ShadingState.initCausticSamples()V
org/sunflow/core/LightServer.initCausticSamples(Lorg/sunflow/core/ShadingState;)V
org/sunflow/core/shader/DiffuseShader.getDiffuse(Lorg/sunflow/core/ShadingState;)Lorg/sunflow/image/Color;
org/sunflow/core/ShadingState.diffuse(Lorg/sunflow/image/Color;)Lorg/sunflow/image/Color;
org/sunflow/image/Color.black()Lorg/sunflow/image/Color;
org/sunflow/image/Color.isBlack()Z
org/sunflow/core/ShadingState.iterator()Ljava/util/Iterator;
org/sunflow/core/ShadingState$LightSampleIterator.<init>(Lorg/sunflow/core/LightSample;)V
org/sunflow/core/ShadingState$LightSampleIterator.hasNext()Z
org/sunflow/core/ShadingState$LightSampleIterator.next()Ljava/lang/Object;
org/sunflow/core/ShadingState$LightSampleIterator.next()Lorg/sunflow/core/LightSample;
org/sunflow/core/LightSample.dot(Lorg/sunflow/math/Vector3;)F
org/sunflow/core/LightSample.getDiffuseRadiance()Lorg/sunflow/image/Color;
org/sunflow/image/Color.madd(FLorg/sunflow/image/Color;)Lorg/sunflow/image/Color;
org/sunflow/core/ShadingState.getIrradiance(Lorg/sunflow/image/Color;)Lorg/sunflow/image/Color;
org/sunflow/core/LightServer.getIrradiance(Lorg/sunflow/core/ShadingState;Lorg/sunflow/image/Color;)Lorg/sunflow/image/Color;
org/sunflow/core/gi/InstantGI.getIrradiance(Lorg/sunflow/core/ShadingState;Lorg/sunflow/image/Color;)Lorg/sunflow/image/Color;
org/sunflow/image/Color.getMax()F
org/sunflow/core/Ray.<init>(Lorg/sunflow/math/Point3;Lorg/sunflow/math/Point3;)V
org/sunflow/image/Color.blend(Lorg/sunflow/image/Color;Lorg/sunflow/image/Color;Lorg/sunflow/image/Color;)Lorg/sunflow/image/Color;
org/sunflow/core/ShadingState.getBasis()Lorg/sunflow/math/OrthoNormalBasis;
org/sunflow/core/ShadingState.traceFinalGather(Lorg/sunflow/core/Ray;I)Lorg/sunflow/core/ShadingState;
org/sunflow/core/LightServer.traceFinalGather(Lorg/sunflow/core/ShadingState;Lorg/sunflow/core/Ray;I)Lorg/sunflow/core/ShadingState;
org/sunflow/core/ShadingState.createFinalGatherState(Lorg/sunflow/core/ShadingState;Lorg/sunflow/core/Ray;I)Lorg/sunflow/core/ShadingState;
org/sunflow/image/Color.opposite()Lorg/sunflow/image/Color;
org/sunflow/image/Color.exp()Lorg/sunflow/image/Color;
org/sunflow/core/ShadingState.traceRefraction(Lorg/sunflow/core/Ray;I)Lorg/sunflow/image/Color;
org/sunflow/core/LightServer.traceRefraction(Lorg/sunflow/core/ShadingState;Lorg/sunflow/core/Ray;I)Lorg/sunflow/image/Color;
org/sunflow/core/ShadingState.getRefractionDepth()I
org/sunflow/core/ShadingState.createRefractionBounceState(Lorg/sunflow/core/ShadingState;Lorg/sunflow/core/Ray;I)Lorg/sunflow/core/ShadingState;
org/sunflow/core/ShadingState.getResult()Lorg/sunflow/image/Color;
org/sunflow/core/LightServer.addShadingCache(Lorg/sunflow/core/ShadingState;Lorg/sunflow/core/Shader;Lorg/sunflow/image/Color;)V
org/sunflow/core/Scene.traceBake(Lorg/sunflow/core/Ray;Lorg/sunflow/core/IntersectionState;)V
org/sunflow/core/Camera.getRay(Lorg/sunflow/math/Point3;)Lorg/sunflow/core/Ray;
org/sunflow/core/ShadingState.setRay(Lorg/sunflow/core/Ray;)V
org/sunflow/core/LightServer.shadeBakeResult(Lorg/sunflow/core/ShadingState;)V
org/sunflow/core/renderer/BucketRenderer$ImageSample.add(Lorg/sunflow/core/ShadingState;)V
org/sunflow/core/renderer/BucketRenderer$ImageSample.checkNanInf()V
org/sunflow/image/Color.isNan()Z
org/sunflow/image/Color.isInf()Z
org/sunflow/core/renderer/BucketRenderer$ImageSample.scale(F)V
org/sunflow/core/renderer/BucketRenderer$ImageSample.set(Lorg/sunflow/core/ShadingState;)V
org/sunflow/core/renderer/BucketRenderer$ImageSample.isDifferent(Lorg/sunflow/core/renderer/BucketRenderer$ImageSample;F)Z
org/sunflow/image/Color.hasContrast(Lorg/sunflow/image/Color;Lorg/sunflow/image/Color;F)Z
org/sunflow/core/renderer/BucketRenderer$ImageSample.processed()Z
org/sunflow/core/renderer/BucketRenderer$ImageSample.bilerp(Lorg/sunflow/core/renderer/BucketRenderer$ImageSample;Lorg/sunflow/core/renderer/BucketRenderer$ImageSample;Lorg/sunflow/core/renderer/BucketRenderer$ImageSample;Lorg/sunflow/core/renderer/BucketRenderer$ImageSample;Lorg/sunflow/core/renderer/BucketRenderer$ImageSample;FF)Lorg/sunflow/core/renderer/BucketRenderer$ImageSample;
org/sunflow/image/Color.toNonLinear()Lorg/sunflow/image/Color;
org/sunflow/image/RGBSpace.gammaCorrect(F)F
org/sunflow/image/Color.<init>(F)V
org/sunflow/core/filter/TriangleFilter.get(FF)F
org/sunflow/Benchmark.imageUpdate(IIII[Lorg/sunflow/image/Color;)V
org/sunflow/image/Color.toRGB()I
org/sunflow/core/LightServer.showStats()V
org/dacapo/harness/Benchmark.stopIteration()V
org/dacapo/harness/TeePrintStream.closeLog()V
org/dacapo/harness/TeeOutputStream.closeLog()V
org/dacapo/harness/TeeOutputStream.flush()V
org/dacapo/harness/Callback.stop(J)V
org/dacapo/harness/Callback.stop(JZ)V
org/dacapo/harness/Sunflow.validate(Ljava/lang/String;)Z
org/dacapo/harness/Benchmark.getValidate()Z
soot/rtlib/tamiflex/ReflectiveCallsWrapper.reflectiveCall100(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
org/sunflow/Benchmark.kernelEnd()V
org/dacapo/harness/Benchmark.validate(Ljava/lang/String;)Z
org/dacapo/parser/Config.getOutputs(Ljava/lang/String;)Ljava/util/Set;
org/dacapo/parser/Config.hasDigest(Ljava/lang/String;Ljava/lang/String;)Z
org/dacapo/parser/Config$OutputFile.hasDigest()Z
org/dacapo/parser/Config.getDigest(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
org/dacapo/parser/Config.isTextFile(Ljava/lang/String;Ljava/lang/String;)Z
org/dacapo/parser/Config.filterScratch(Ljava/lang/String;Ljava/lang/String;)Z
org/dacapo/harness/FileDigest.get(Ljava/lang/String;ZZLjava/io/File;)[B
org/dacapo/harness/FileDigest.getText(Ljava/io/File;ZLjava/io/File;)[B
org/dacapo/harness/Digest.create()Ljava/security/MessageDigest;
org/dacapo/harness/FileDigest.replaceAllFixed(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
org/dacapo/harness/FileDigest.getBinary(Ljava/io/File;)[B
org/dacapo/harness/Digest.toString([B)Ljava/lang/String;
org/dacapo/parser/Config.hasLines(Ljava/lang/String;Ljava/lang/String;)Z
org/dacapo/parser/Config$OutputFile.hasLines()Z
org/dacapo/parser/Config.getLines(Ljava/lang/String;Ljava/lang/String;)I
org/dacapo/harness/Benchmark.lineCount(Ljava/io/File;)I
org/dacapo/parser/Config.hasBytes(Ljava/lang/String;Ljava/lang/String;)Z
org/dacapo/parser/Config$OutputFile.hasBytes()Z
org/dacapo/parser/Config.getBytes(Ljava/lang/String;Ljava/lang/String;)J
org/dacapo/harness/Benchmark.byteCount(Ljava/io/File;)J
org/dacapo/parser/Config.checkExists(Ljava/lang/String;Ljava/lang/String;)Z
org/dacapo/harness/Callback.complete(Ljava/lang/String;Z)V
org/dacapo/harness/Callback.complete(Ljava/lang/String;ZZ)V
org/dacapo/harness/Benchmark.postIteration(Ljava/lang/String;)V
org/dacapo/harness/Benchmark.postIterationCleanup(Ljava/lang/String;)V
org/dacapo/parser/Config.isKept(Ljava/lang/String;Ljava/lang/String;)Z
org/dacapo/harness/Benchmark.deleteFile(Ljava/io/File;)V
org/dacapo/harness/Callback.runAgain()Z
org/dacapo/harness/Callback.isWarmup()Z
org/dacapo/harness/CommandLineArgs.getMaxIterations()I
org/dacapo/harness/TestHarness.coeff_of_var([J)D
org/dacapo/harness/CommandLineArgs.getTargetVar()D
org/dacapo/harness/Benchmark.cleanup()V
org/dacapo/harness/Benchmark.deleteTree(Ljava/io/File;)V
org/dacapo/harness/CommandLineArgs.getIgnoreValidation()Z
