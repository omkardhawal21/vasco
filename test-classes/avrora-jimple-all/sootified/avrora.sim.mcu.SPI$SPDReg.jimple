class avrora.sim.mcu.SPI$SPDReg extends java.lang.Object implements avrora.sim.ActiveRegister
{
    protected final avrora.sim.RWRegister receiveReg;
    protected final avrora.sim.mcu.SPI$SPDReg$TransmitRegister transmitReg;
    final avrora.sim.mcu.SPI this$0;

    void <init>(avrora.sim.mcu.SPI)
    {
        avrora.sim.mcu.SPI$SPDReg this;
        avrora.sim.mcu.SPI this$0;
        avrora.sim.RWRegister $stack2;
        avrora.sim.mcu.SPI$SPDReg$TransmitRegister $stack3;

        this := @this: avrora.sim.mcu.SPI$SPDReg;

        this$0 := @parameter0: avrora.sim.mcu.SPI;

        this.<avrora.sim.mcu.SPI$SPDReg: avrora.sim.mcu.SPI this$0> = this$0;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $stack2 = new avrora.sim.RWRegister;

        specialinvoke $stack2.<avrora.sim.RWRegister: void <init>()>();

        this.<avrora.sim.mcu.SPI$SPDReg: avrora.sim.RWRegister receiveReg> = $stack2;

        $stack3 = new avrora.sim.mcu.SPI$SPDReg$TransmitRegister;

        specialinvoke $stack3.<avrora.sim.mcu.SPI$SPDReg$TransmitRegister: void <init>(avrora.sim.mcu.SPI$SPDReg)>(this);

        this.<avrora.sim.mcu.SPI$SPDReg: avrora.sim.mcu.SPI$SPDReg$TransmitRegister transmitReg> = $stack3;

        return;
    }

    public byte read()
    {
        avrora.sim.mcu.SPI$SPDReg this;
        avrora.sim.mcu.SPI $stack1, $stack5;
        boolean $stack2;
        avrora.sim.RWRegister $stack3;
        byte $stack4;

        this := @this: avrora.sim.mcu.SPI$SPDReg;

        $stack1 = this.<avrora.sim.mcu.SPI$SPDReg: avrora.sim.mcu.SPI this$0>;

        $stack2 = $stack1.<avrora.sim.mcu.SPI: boolean spifAccessed>;

        if $stack2 == 0 goto label1;

        $stack5 = this.<avrora.sim.mcu.SPI$SPDReg: avrora.sim.mcu.SPI this$0>;

        staticinvoke <avrora.sim.mcu.SPI: void access$100(avrora.sim.mcu.SPI)>($stack5);

     label1:
        $stack3 = this.<avrora.sim.mcu.SPI$SPDReg: avrora.sim.RWRegister receiveReg>;

        $stack4 = virtualinvoke $stack3.<avrora.sim.RWRegister: byte read()>();

        return $stack4;
    }

    public void write(byte)
    {
        avrora.sim.mcu.SPI$SPDReg this;
        byte val;
        avrora.sim.mcu.SPI$SPDReg$TransmitRegister $stack2;

        this := @this: avrora.sim.mcu.SPI$SPDReg;

        val := @parameter0: byte;

        $stack2 = this.<avrora.sim.mcu.SPI$SPDReg: avrora.sim.mcu.SPI$SPDReg$TransmitRegister transmitReg>;

        virtualinvoke $stack2.<avrora.sim.mcu.SPI$SPDReg$TransmitRegister: void write(byte)>(val);

        return;
    }
}
