public class cck.text.Verbose extends java.lang.Object
{
    static boolean ALL;
    static final java.util.HashMap printerMap;
    static final cck.text.Verbose$Printer verbosePrinter;

    public void <init>()
    {
        cck.text.Verbose this;

        this := @this: cck.text.Verbose;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public static cck.text.Verbose$Printer getVerbosePrinter(java.lang.String)
    {
        java.lang.String category, $stack10, $stack12;
        cck.text.Verbose$Printer p, $stack3, $stack4, $stack8;
        boolean $stack5;
        java.lang.StringBuilder $stack7, $stack9, $stack11;

        category := @parameter0: java.lang.String;

        p = staticinvoke <cck.text.Verbose: cck.text.Verbose$Printer getPrinter(java.lang.String)>(category);

        $stack3 = <cck.text.Verbose: cck.text.Verbose$Printer verbosePrinter>;

        if $stack3 == null goto label1;

        $stack4 = <cck.text.Verbose: cck.text.Verbose$Printer verbosePrinter>;

        $stack5 = $stack4.<cck.text.Verbose$Printer: boolean enabled>;

        if $stack5 == 0 goto label1;

        $stack8 = <cck.text.Verbose: cck.text.Verbose$Printer verbosePrinter>;

        $stack7 = new java.lang.StringBuilder;

        specialinvoke $stack7.<java.lang.StringBuilder: void <init>()>();

        $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("verbose: requested printer for ");

        $stack10 = staticinvoke <cck.text.StringUtil: java.lang.String quote(java.lang.Object)>(category);

        $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10);

        $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack8.<cck.text.Verbose$Printer: void println(java.lang.String)>($stack12);

     label1:
        return p;
    }

    public static boolean isVerbose(java.lang.String)
    {
        java.lang.String category;
        java.util.HashMap $stack2;
        java.lang.Object $stack3;
        cck.text.Verbose$Printer printer;
        boolean $stack4, $stack5#1;

        category := @parameter0: java.lang.String;

        $stack2 = <cck.text.Verbose: java.util.HashMap printerMap>;

        $stack3 = virtualinvoke $stack2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(category);

        printer = (cck.text.Verbose$Printer) $stack3;

        if printer == null goto label1;

        $stack4 = printer.<cck.text.Verbose$Printer: boolean enabled>;

        if $stack4 == 0 goto label1;

        $stack5#1 = 1;

        goto label2;

     label1:
        $stack5#1 = 0;

     label2:
        return $stack5#1;
    }

    public static void setVerbose(java.lang.String, boolean)
    {
        java.lang.String category, $stack4, $stack15, $stack19;
        boolean $stack5, on, $stack9, $stack23;
        cck.text.Verbose$Printer $stack7, $stack8, $stack13, p, i#2;
        java.lang.StringBuilder $stack12, $stack14, $stack16, $stack17, $stack18;
        java.util.HashMap $stack20;
        java.util.Collection $stack21;
        java.lang.Object $stack24;
        java.util.Iterator i#1;

        category := @parameter0: java.lang.String;

        on := @parameter1: boolean;

        $stack4 = "all";

        $stack5 = virtualinvoke $stack4.<java.lang.String: boolean equals(java.lang.Object)>(category);

        if $stack5 == 0 goto label3;

        <cck.text.Verbose: boolean ALL> = on;

        $stack20 = <cck.text.Verbose: java.util.HashMap printerMap>;

        $stack21 = virtualinvoke $stack20.<java.util.HashMap: java.util.Collection values()>();

        i#1 = interfaceinvoke $stack21.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $stack23 = interfaceinvoke i#1.<java.util.Iterator: boolean hasNext()>();

        if $stack23 == 0 goto label2;

        $stack24 = interfaceinvoke i#1.<java.util.Iterator: java.lang.Object next()>();

        p = (cck.text.Verbose$Printer) $stack24;

        p.<cck.text.Verbose$Printer: boolean enabled> = on;

        goto label1;

     label2:
        return;

     label3:
        i#2 = staticinvoke <cck.text.Verbose: cck.text.Verbose$Printer getPrinter(java.lang.String)>(category);

        $stack7 = <cck.text.Verbose: cck.text.Verbose$Printer verbosePrinter>;

        if $stack7 == null goto label4;

        $stack8 = <cck.text.Verbose: cck.text.Verbose$Printer verbosePrinter>;

        $stack9 = $stack8.<cck.text.Verbose$Printer: boolean enabled>;

        if $stack9 == 0 goto label4;

        $stack13 = <cck.text.Verbose: cck.text.Verbose$Printer verbosePrinter>;

        $stack12 = new java.lang.StringBuilder;

        specialinvoke $stack12.<java.lang.StringBuilder: void <init>()>();

        $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("verbose: set printer ");

        $stack15 = staticinvoke <cck.text.StringUtil: java.lang.String quote(java.lang.Object)>(category);

        $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack15);

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(on);

        $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack13.<cck.text.Verbose$Printer: void println(java.lang.String)>($stack19);

     label4:
        i#2.<cck.text.Verbose$Printer: boolean enabled> = on;

        return;
    }

    private static cck.text.Verbose$Printer getPrinter(java.lang.String)
    {
        java.lang.String category;
        java.util.HashMap $stack2, $stack5;
        java.lang.Object $stack3;
        cck.text.Verbose$Printer $stack4, p#1;

        category := @parameter0: java.lang.String;

        $stack2 = <cck.text.Verbose: java.util.HashMap printerMap>;

        $stack3 = virtualinvoke $stack2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(category);

        p#1 = (cck.text.Verbose$Printer) $stack3;

        if p#1 != null goto label1;

        $stack4 = new cck.text.Verbose$Printer;

        specialinvoke $stack4.<cck.text.Verbose$Printer: void <init>()>();

        p#1 = $stack4;

        $stack5 = <cck.text.Verbose: java.util.HashMap printerMap>;

        virtualinvoke $stack5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(category, $stack4);

     label1:
        return p#1;
    }

    static void <clinit>()
    {
        java.util.HashMap $stack0;
        cck.text.Verbose$Printer $stack1;

        $stack0 = new java.util.HashMap;

        specialinvoke $stack0.<java.util.HashMap: void <init>()>();

        <cck.text.Verbose: java.util.HashMap printerMap> = $stack0;

        $stack1 = staticinvoke <cck.text.Verbose: cck.text.Verbose$Printer getVerbosePrinter(java.lang.String)>("verbose");

        <cck.text.Verbose: cck.text.Verbose$Printer verbosePrinter> = $stack1;

        return;
    }
}
