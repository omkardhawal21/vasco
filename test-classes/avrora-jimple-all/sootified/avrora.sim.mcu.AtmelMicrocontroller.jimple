public abstract class avrora.sim.mcu.AtmelMicrocontroller extends avrora.sim.mcu.DefaultMCU
{
    protected final avrora.sim.clock.MainClock mainClock;
    protected avrora.sim.AtmelInterpreter interpreter;
    public final avrora.arch.avr.AVRProperties properties;
    protected final java.util.HashMap devices;
    public static final int MODE_ACTIVE;

    public void sleep()
    {
        avrora.sim.mcu.AtmelMicrocontroller this;
        avrora.sim.FiniteStateMachine $stack1;
        int $stack2;

        this := @this: avrora.sim.mcu.AtmelMicrocontroller;

        $stack1 = this.<avrora.sim.mcu.AtmelMicrocontroller: avrora.sim.FiniteStateMachine sleepState>;

        $stack2 = virtualinvoke this.<avrora.sim.mcu.AtmelMicrocontroller: int getSleepMode()>();

        virtualinvoke $stack1.<avrora.sim.FiniteStateMachine: void transition(int)>($stack2);

        return;
    }

    protected abstract int getSleepMode();

    public int wakeup()
    {
        avrora.sim.mcu.AtmelMicrocontroller this;
        avrora.sim.FiniteStateMachine $stack1, $stack2, $stack3;
        int $stack4, $stack5;

        this := @this: avrora.sim.mcu.AtmelMicrocontroller;

        $stack1 = this.<avrora.sim.mcu.AtmelMicrocontroller: avrora.sim.FiniteStateMachine sleepState>;

        virtualinvoke $stack1.<avrora.sim.FiniteStateMachine: void transition(int)>(0);

        $stack3 = this.<avrora.sim.mcu.AtmelMicrocontroller: avrora.sim.FiniteStateMachine sleepState>;

        $stack2 = this.<avrora.sim.mcu.AtmelMicrocontroller: avrora.sim.FiniteStateMachine sleepState>;

        $stack4 = virtualinvoke $stack2.<avrora.sim.FiniteStateMachine: int getCurrentState()>();

        $stack5 = virtualinvoke $stack3.<avrora.sim.FiniteStateMachine: int getTransitionTime(int,int)>($stack4, 0);

        return $stack5;
    }

    protected void <init>(avrora.sim.clock.ClockDomain, avrora.arch.avr.AVRProperties, avrora.sim.FiniteStateMachine)
    {
        avrora.sim.mcu.AtmelMicrocontroller this;
        avrora.sim.clock.ClockDomain cd;
        avrora.arch.avr.AVRProperties p;
        int $stack4;
        avrora.sim.mcu.RegisterLayout $stack5;
        avrora.sim.mcu.RegisterSet $stack6;
        avrora.sim.FiniteStateMachine fsm;
        avrora.sim.clock.MainClock $stack7;
        java.util.HashMap $stack8;

        this := @this: avrora.sim.mcu.AtmelMicrocontroller;

        cd := @parameter0: avrora.sim.clock.ClockDomain;

        p := @parameter1: avrora.arch.avr.AVRProperties;

        fsm := @parameter2: avrora.sim.FiniteStateMachine;

        $stack4 = p.<avrora.arch.avr.AVRProperties: int num_pins>;

        $stack5 = virtualinvoke p.<avrora.arch.avr.AVRProperties: avrora.sim.mcu.RegisterLayout getRegisterLayout()>();

        $stack6 = virtualinvoke $stack5.<avrora.sim.mcu.RegisterLayout: avrora.sim.mcu.RegisterSet instantiate()>();

        specialinvoke this.<avrora.sim.mcu.DefaultMCU: void <init>(avrora.sim.clock.ClockDomain,int,avrora.sim.mcu.RegisterSet,avrora.sim.FiniteStateMachine)>(cd, $stack4, $stack6, fsm);

        $stack7 = virtualinvoke cd.<avrora.sim.clock.ClockDomain: avrora.sim.clock.MainClock getMainClock()>();

        this.<avrora.sim.mcu.AtmelMicrocontroller: avrora.sim.clock.MainClock mainClock> = $stack7;

        this.<avrora.sim.mcu.AtmelMicrocontroller: avrora.arch.avr.AVRProperties properties> = p;

        $stack8 = new java.util.HashMap;

        specialinvoke $stack8.<java.util.HashMap: void <init>()>();

        this.<avrora.sim.mcu.AtmelMicrocontroller: java.util.HashMap devices> = $stack8;

        return;
    }

    protected avrora.sim.ActiveRegister installIOReg(java.lang.String, avrora.sim.ActiveRegister)
    {
        avrora.sim.mcu.AtmelMicrocontroller this;
        java.lang.String name;
        avrora.arch.avr.AVRProperties $stack3;
        avrora.sim.AtmelInterpreter $stack4;
        int $stack5;
        avrora.sim.ActiveRegister reg;

        this := @this: avrora.sim.mcu.AtmelMicrocontroller;

        name := @parameter0: java.lang.String;

        reg := @parameter1: avrora.sim.ActiveRegister;

        $stack4 = this.<avrora.sim.mcu.AtmelMicrocontroller: avrora.sim.AtmelInterpreter interpreter>;

        $stack3 = this.<avrora.sim.mcu.AtmelMicrocontroller: avrora.arch.avr.AVRProperties properties>;

        $stack5 = virtualinvoke $stack3.<avrora.arch.avr.AVRProperties: int getIOReg(java.lang.String)>(name);

        virtualinvoke $stack4.<avrora.sim.AtmelInterpreter: void installIOReg(int,avrora.sim.ActiveRegister)>($stack5, reg);

        return reg;
    }

    protected avrora.sim.ActiveRegister getIOReg(java.lang.String)
    {
        avrora.sim.mcu.AtmelMicrocontroller this;
        java.lang.String name;
        avrora.arch.avr.AVRProperties $stack2;
        avrora.sim.AtmelInterpreter $stack3;
        int $stack4;
        avrora.sim.ActiveRegister $stack5;

        this := @this: avrora.sim.mcu.AtmelMicrocontroller;

        name := @parameter0: java.lang.String;

        $stack3 = this.<avrora.sim.mcu.AtmelMicrocontroller: avrora.sim.AtmelInterpreter interpreter>;

        $stack2 = this.<avrora.sim.mcu.AtmelMicrocontroller: avrora.arch.avr.AVRProperties properties>;

        $stack4 = virtualinvoke $stack2.<avrora.arch.avr.AVRProperties: int getIOReg(java.lang.String)>(name);

        $stack5 = virtualinvoke $stack3.<avrora.sim.AtmelInterpreter: avrora.sim.ActiveRegister getIOReg(int)>($stack4);

        return $stack5;
    }

    protected void addDevice(avrora.sim.mcu.AtmelInternalDevice)
    {
        avrora.sim.mcu.AtmelMicrocontroller this;
        avrora.sim.mcu.AtmelInternalDevice d;
        java.lang.String $stack2;
        java.util.HashMap $stack3;

        this := @this: avrora.sim.mcu.AtmelMicrocontroller;

        d := @parameter0: avrora.sim.mcu.AtmelInternalDevice;

        $stack3 = this.<avrora.sim.mcu.AtmelMicrocontroller: java.util.HashMap devices>;

        $stack2 = d.<avrora.sim.mcu.AtmelInternalDevice: java.lang.String name>;

        virtualinvoke $stack3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack2, d);

        return;
    }

    public avrora.sim.mcu.AtmelInternalDevice getDevice(java.lang.String)
    {
        avrora.sim.mcu.AtmelMicrocontroller this;
        java.lang.String name;
        java.util.HashMap $stack2;
        java.lang.Object $stack3;
        avrora.sim.mcu.AtmelInternalDevice $stack4;

        this := @this: avrora.sim.mcu.AtmelMicrocontroller;

        name := @parameter0: java.lang.String;

        $stack2 = this.<avrora.sim.mcu.AtmelMicrocontroller: java.util.HashMap devices>;

        $stack3 = virtualinvoke $stack2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(name);

        $stack4 = (avrora.sim.mcu.AtmelInternalDevice) $stack3;

        return $stack4;
    }

    public static void addPin(java.util.HashMap, int, java.lang.String)
    {
        java.util.HashMap pinMap;
        java.lang.String n;
        java.lang.Integer $stack3;
        int p;

        pinMap := @parameter0: java.util.HashMap;

        p := @parameter1: int;

        n := @parameter2: java.lang.String;

        $stack3 = new java.lang.Integer;

        specialinvoke $stack3.<java.lang.Integer: void <init>(int)>(p);

        virtualinvoke pinMap.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(n, $stack3);

        return;
    }

    public static void addPin(java.util.HashMap, int, java.lang.String, java.lang.String)
    {
        java.lang.Integer $stack5;
        int p;
        java.util.HashMap pinMap;
        java.lang.String n1, n2;

        pinMap := @parameter0: java.util.HashMap;

        p := @parameter1: int;

        n1 := @parameter2: java.lang.String;

        n2 := @parameter3: java.lang.String;

        $stack5 = new java.lang.Integer;

        specialinvoke $stack5.<java.lang.Integer: void <init>(int)>(p);

        virtualinvoke pinMap.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(n1, $stack5);

        virtualinvoke pinMap.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(n2, $stack5);

        return;
    }

    public static void addPin(java.util.HashMap, int, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.Integer $stack6;
        int p;
        java.util.HashMap pinMap;
        java.lang.String n1, n2, n3;

        pinMap := @parameter0: java.util.HashMap;

        p := @parameter1: int;

        n1 := @parameter2: java.lang.String;

        n2 := @parameter3: java.lang.String;

        n3 := @parameter4: java.lang.String;

        $stack6 = new java.lang.Integer;

        specialinvoke $stack6.<java.lang.Integer: void <init>(int)>(p);

        virtualinvoke pinMap.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(n1, $stack6);

        virtualinvoke pinMap.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(n2, $stack6);

        virtualinvoke pinMap.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(n3, $stack6);

        return;
    }

    public static void addPin(java.util.HashMap, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.Integer $stack7;
        int p;
        java.util.HashMap pinMap;
        java.lang.String n1, n2, n3, n4;

        pinMap := @parameter0: java.util.HashMap;

        p := @parameter1: int;

        n1 := @parameter2: java.lang.String;

        n2 := @parameter3: java.lang.String;

        n3 := @parameter4: java.lang.String;

        n4 := @parameter5: java.lang.String;

        $stack7 = new java.lang.Integer;

        specialinvoke $stack7.<java.lang.Integer: void <init>(int)>(p);

        virtualinvoke pinMap.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(n1, $stack7);

        virtualinvoke pinMap.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(n2, $stack7);

        virtualinvoke pinMap.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(n3, $stack7);

        virtualinvoke pinMap.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(n4, $stack7);

        return;
    }

    public static void addInterrupt(java.util.HashMap, java.lang.String, int)
    {
        java.util.HashMap iMap;
        java.lang.String n;
        java.lang.Integer $stack3;
        int i;

        iMap := @parameter0: java.util.HashMap;

        n := @parameter1: java.lang.String;

        i := @parameter2: int;

        $stack3 = new java.lang.Integer;

        specialinvoke $stack3.<java.lang.Integer: void <init>(int)>(i);

        virtualinvoke iMap.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(n, $stack3);

        return;
    }

    public avrora.sim.mcu.Microcontroller$Pin getPin(java.lang.String)
    {
        avrora.sim.mcu.AtmelMicrocontroller this;
        java.lang.String n;
        avrora.arch.avr.AVRProperties $stack2;
        avrora.sim.mcu.Microcontroller$Pin[] $stack3;
        int $stack4;
        avrora.sim.mcu.Microcontroller$Pin $stack5;

        this := @this: avrora.sim.mcu.AtmelMicrocontroller;

        n := @parameter0: java.lang.String;

        $stack3 = this.<avrora.sim.mcu.AtmelMicrocontroller: avrora.sim.mcu.Microcontroller$Pin[] pins>;

        $stack2 = this.<avrora.sim.mcu.AtmelMicrocontroller: avrora.arch.avr.AVRProperties properties>;

        $stack4 = virtualinvoke $stack2.<avrora.arch.avr.AVRProperties: int getPin(java.lang.String)>(n);

        $stack5 = $stack3[$stack4];

        return $stack5;
    }

    public avrora.sim.mcu.MCUProperties getProperties()
    {
        avrora.sim.mcu.AtmelMicrocontroller this;
        avrora.arch.avr.AVRProperties $stack1;

        this := @this: avrora.sim.mcu.AtmelMicrocontroller;

        $stack1 = this.<avrora.sim.mcu.AtmelMicrocontroller: avrora.arch.avr.AVRProperties properties>;

        return $stack1;
    }

    public static void <clinit>()
    {
        <avrora.sim.mcu.AtmelMicrocontroller: int MODE_ACTIVE> = 0;

        return;
    }
}
