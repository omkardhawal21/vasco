class avrora.sim.mcu.SPI$SPSReg extends avrora.sim.RWRegister
{
    static final int SPIF;
    static final int WCOL;
    final avrora.sim.state.BooleanView _spif;
    final avrora.sim.state.BooleanView _spi2x;
    byte prev_value;
    final avrora.sim.mcu.SPI this$0;

    void <init>(avrora.sim.mcu.SPI)
    {
        avrora.sim.mcu.SPI$SPSReg this;
        avrora.sim.mcu.SPI this$0;
        avrora.sim.state.BooleanView $stack2, $stack3;

        this := @this: avrora.sim.mcu.SPI$SPSReg;

        this$0 := @parameter0: avrora.sim.mcu.SPI;

        this.<avrora.sim.mcu.SPI$SPSReg: avrora.sim.mcu.SPI this$0> = this$0;

        specialinvoke this.<avrora.sim.RWRegister: void <init>()>();

        $stack2 = staticinvoke <avrora.sim.state.RegisterUtil: avrora.sim.state.BooleanView booleanView(avrora.sim.state.RegisterView,int)>(this, 7);

        this.<avrora.sim.mcu.SPI$SPSReg: avrora.sim.state.BooleanView _spif> = $stack2;

        $stack3 = staticinvoke <avrora.sim.state.RegisterUtil: avrora.sim.state.BooleanView booleanView(avrora.sim.state.RegisterView,int)>(this, 0);

        this.<avrora.sim.mcu.SPI$SPSReg: avrora.sim.state.BooleanView _spi2x> = $stack3;

        return;
    }

    public void write(byte)
    {
        avrora.sim.mcu.SPI$SPSReg this;
        avrora.sim.mcu.SPI $stack2, $stack4;
        avrora.sim.output.SimPrinter $stack3, $stack6;
        byte val;
        java.lang.StringBuilder $stack5, $stack7, $stack8, $stack9;
        java.lang.String $stack10;

        this := @this: avrora.sim.mcu.SPI$SPSReg;

        val := @parameter0: byte;

        $stack2 = this.<avrora.sim.mcu.SPI$SPSReg: avrora.sim.mcu.SPI this$0>;

        $stack3 = $stack2.<avrora.sim.mcu.SPI: avrora.sim.output.SimPrinter devicePrinter>;

        if $stack3 == null goto label1;

        $stack4 = this.<avrora.sim.mcu.SPI$SPSReg: avrora.sim.mcu.SPI this$0>;

        $stack6 = $stack4.<avrora.sim.mcu.SPI: avrora.sim.output.SimPrinter devicePrinter>;

        $stack5 = new java.lang.StringBuilder;

        specialinvoke $stack5.<java.lang.StringBuilder: void <init>()>();

        $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SPI: wrote ");

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(val);

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to SPSR");

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack6.<avrora.sim.output.SimPrinter: void println(java.lang.String)>($stack10);

     label1:
        specialinvoke this.<avrora.sim.RWRegister: void write(byte)>(val);

        virtualinvoke this.<avrora.sim.mcu.SPI$SPSReg: void decode(byte)>(val);

        return;
    }

    public byte read()
    {
        avrora.sim.mcu.SPI$SPSReg this;
        avrora.sim.state.BooleanView $stack1;
        boolean $stack2;
        byte $stack3;
        avrora.sim.mcu.SPI $stack4;

        this := @this: avrora.sim.mcu.SPI$SPSReg;

        $stack1 = this.<avrora.sim.mcu.SPI$SPSReg: avrora.sim.state.BooleanView _spif>;

        $stack2 = interfaceinvoke $stack1.<avrora.sim.state.BooleanView: boolean getValue()>();

        if $stack2 == 0 goto label1;

        $stack4 = this.<avrora.sim.mcu.SPI$SPSReg: avrora.sim.mcu.SPI this$0>;

        $stack4.<avrora.sim.mcu.SPI: boolean spifAccessed> = 1;

     label1:
        $stack3 = specialinvoke this.<avrora.sim.RWRegister: byte read()>();

        return $stack3;
    }

    protected void decode(byte)
    {
        avrora.sim.mcu.SPI$SPSReg this;
        byte $stack2, val;
        boolean $stack3, $stack5;
        avrora.sim.mcu.SPI $stack10, $stack4#4;

        this := @this: avrora.sim.mcu.SPI$SPSReg;

        val := @parameter0: byte;

        $stack2 = this.<avrora.sim.mcu.SPI$SPSReg: byte prev_value>;

        $stack3 = staticinvoke <cck.util.Arithmetic: boolean getBit(byte,int)>($stack2, 7);

        if $stack3 != 0 goto label1;

        $stack5 = staticinvoke <cck.util.Arithmetic: boolean getBit(byte,int)>(val, 7);

        if $stack5 == 0 goto label1;

        $stack10 = this.<avrora.sim.mcu.SPI$SPSReg: avrora.sim.mcu.SPI this$0>;

        staticinvoke <avrora.sim.mcu.SPI: void access$000(avrora.sim.mcu.SPI)>($stack10);

     label1:
        $stack4#4 = this.<avrora.sim.mcu.SPI$SPSReg: avrora.sim.mcu.SPI this$0>;

        $stack4#4.<avrora.sim.mcu.SPI: boolean spifAccessed> = 0;

        this.<avrora.sim.mcu.SPI$SPSReg: byte prev_value> = val;

        return;
    }

    public void setSPIF()
    {
        avrora.sim.mcu.SPI$SPSReg this;
        avrora.sim.state.BooleanView $stack1;
        avrora.sim.mcu.SPI $stack2;

        this := @this: avrora.sim.mcu.SPI$SPSReg;

        $stack1 = this.<avrora.sim.mcu.SPI$SPSReg: avrora.sim.state.BooleanView _spif>;

        interfaceinvoke $stack1.<avrora.sim.state.BooleanView: void setValue(boolean)>(1);

        $stack2 = this.<avrora.sim.mcu.SPI$SPSReg: avrora.sim.mcu.SPI this$0>;

        $stack2.<avrora.sim.mcu.SPI: boolean spifAccessed> = 0;

        return;
    }

    public void clearSPIF()
    {
        avrora.sim.mcu.SPI$SPSReg this;
        avrora.sim.state.BooleanView $stack1;
        avrora.sim.mcu.SPI $stack2;

        this := @this: avrora.sim.mcu.SPI$SPSReg;

        $stack1 = this.<avrora.sim.mcu.SPI$SPSReg: avrora.sim.state.BooleanView _spif>;

        interfaceinvoke $stack1.<avrora.sim.state.BooleanView: void setValue(boolean)>(0);

        $stack2 = this.<avrora.sim.mcu.SPI$SPSReg: avrora.sim.mcu.SPI this$0>;

        $stack2.<avrora.sim.mcu.SPI: boolean spifAccessed> = 0;

        return;
    }

    public static void <clinit>()
    {
        <avrora.sim.mcu.SPI$SPSReg: int WCOL> = 6;

        <avrora.sim.mcu.SPI$SPSReg: int SPIF> = 7;

        return;
    }
}
