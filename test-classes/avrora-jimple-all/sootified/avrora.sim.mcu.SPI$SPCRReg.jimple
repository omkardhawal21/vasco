public class avrora.sim.mcu.SPI$SPCRReg extends avrora.sim.RWRegister
{
    static final int SPIE;
    static final int SPE;
    static final int MSTR;
    static final int SPR1;
    static final int SPR0;
    boolean prev_spie;
    final avrora.sim.state.BooleanView _master;
    final avrora.sim.state.BooleanView _enabled;
    final avrora.sim.state.RegisterView _spr;
    final avrora.sim.mcu.SPI this$0;

    protected void <init>(avrora.sim.mcu.SPI)
    {
        avrora.sim.mcu.SPI$SPCRReg this;
        avrora.sim.mcu.SPI this$0;
        avrora.sim.state.BooleanView $stack2, $stack3;
        avrora.sim.state.RegisterView $stack4;

        this := @this: avrora.sim.mcu.SPI$SPCRReg;

        this$0 := @parameter0: avrora.sim.mcu.SPI;

        this.<avrora.sim.mcu.SPI$SPCRReg: avrora.sim.mcu.SPI this$0> = this$0;

        specialinvoke this.<avrora.sim.RWRegister: void <init>()>();

        $stack2 = staticinvoke <avrora.sim.state.RegisterUtil: avrora.sim.state.BooleanView booleanView(avrora.sim.state.RegisterView,int)>(this, 4);

        this.<avrora.sim.mcu.SPI$SPCRReg: avrora.sim.state.BooleanView _master> = $stack2;

        $stack3 = staticinvoke <avrora.sim.state.RegisterUtil: avrora.sim.state.BooleanView booleanView(avrora.sim.state.RegisterView,int)>(this, 6);

        this.<avrora.sim.mcu.SPI$SPCRReg: avrora.sim.state.BooleanView _enabled> = $stack3;

        $stack4 = staticinvoke <avrora.sim.state.RegisterUtil: avrora.sim.state.RegisterView bitRangeView(avrora.sim.state.RegisterView,int,int)>(this, 0, 1);

        this.<avrora.sim.mcu.SPI$SPCRReg: avrora.sim.state.RegisterView _spr> = $stack4;

        return;
    }

    public void write(byte)
    {
        avrora.sim.mcu.SPI$SPCRReg this;
        avrora.sim.mcu.SPI $stack2, $stack4;
        avrora.sim.output.SimPrinter $stack3, $stack6;
        byte val;
        java.lang.StringBuilder $stack5, $stack7, $stack9, $stack10;
        java.lang.String $stack8, $stack11;

        this := @this: avrora.sim.mcu.SPI$SPCRReg;

        val := @parameter0: byte;

        $stack2 = this.<avrora.sim.mcu.SPI$SPCRReg: avrora.sim.mcu.SPI this$0>;

        $stack3 = $stack2.<avrora.sim.mcu.SPI: avrora.sim.output.SimPrinter devicePrinter>;

        if $stack3 == null goto label1;

        $stack4 = this.<avrora.sim.mcu.SPI$SPCRReg: avrora.sim.mcu.SPI this$0>;

        $stack6 = $stack4.<avrora.sim.mcu.SPI: avrora.sim.output.SimPrinter devicePrinter>;

        $stack5 = new java.lang.StringBuilder;

        specialinvoke $stack5.<java.lang.StringBuilder: void <init>()>();

        $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SPI: wrote ");

        $stack8 = staticinvoke <cck.text.StringUtil: java.lang.String toMultirepString(int,int)>(val, 8);

        $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8);

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to SPCR");

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack6.<avrora.sim.output.SimPrinter: void println(java.lang.String)>($stack11);

     label1:
        specialinvoke this.<avrora.sim.RWRegister: void write(byte)>(val);

        virtualinvoke this.<avrora.sim.mcu.SPI$SPCRReg: void decode(byte)>(val);

        return;
    }

    protected void decode(byte)
    {
        byte val;
        boolean spie, $stack21, $stack24, $stack14#31;
        avrora.sim.mcu.SPI$SPCRReg this;
        avrora.sim.mcu.SPI $stack5, $stack6, $stack16, $stack26, $stack11#19;
        int $stack7, $stack15, divider#5, $stack10#11;
        avrora.sim.AtmelInterpreter $stack8;
        avrora.sim.mcu.SPI$SPSReg $stack27, $stack12#23;
        avrora.sim.state.RegisterView $stack9#9;
        avrora.sim.state.BooleanView $stack13#27;

        this := @this: avrora.sim.mcu.SPI$SPCRReg;

        val := @parameter0: byte;

        spie = staticinvoke <cck.util.Arithmetic: boolean getBit(byte,int)>(val, 7);

        $stack5 = this.<avrora.sim.mcu.SPI$SPCRReg: avrora.sim.mcu.SPI this$0>;

        $stack8 = $stack5.<avrora.sim.mcu.SPI: avrora.sim.AtmelInterpreter interpreter>;

        $stack6 = this.<avrora.sim.mcu.SPI$SPCRReg: avrora.sim.mcu.SPI this$0>;

        $stack7 = $stack6.<avrora.sim.mcu.SPI: int interruptNum>;

        virtualinvoke $stack8.<avrora.sim.AtmelInterpreter: void setEnabled(int,boolean)>($stack7, spie);

        if spie == 0 goto label1;

        $stack24 = this.<avrora.sim.mcu.SPI$SPCRReg: boolean prev_spie>;

        if $stack24 != 0 goto label1;

        this.<avrora.sim.mcu.SPI$SPCRReg: boolean prev_spie> = 1;

        $stack26 = this.<avrora.sim.mcu.SPI$SPCRReg: avrora.sim.mcu.SPI this$0>;

        $stack27 = $stack26.<avrora.sim.mcu.SPI: avrora.sim.mcu.SPI$SPSReg SPSR_reg>;

        virtualinvoke $stack27.<avrora.sim.mcu.SPI$SPSReg: void clearSPIF()>();

     label1:
        if spie != 0 goto label2;

        $stack21 = this.<avrora.sim.mcu.SPI$SPCRReg: boolean prev_spie>;

        if $stack21 == 0 goto label2;

        this.<avrora.sim.mcu.SPI$SPCRReg: boolean prev_spie> = 0;

     label2:
        divider#5 = 0;

        $stack9#9 = this.<avrora.sim.mcu.SPI$SPCRReg: avrora.sim.state.RegisterView _spr>;

        $stack10#11 = interfaceinvoke $stack9#9.<avrora.sim.state.RegisterView: int getValue()>();

        tableswitch($stack10#11)
        {
            case 0: goto label3;
            case 1: goto label4;
            case 2: goto label5;
            case 3: goto label6;
            default: goto label7;
        };

     label3:
        divider#5 = 4;

        goto label7;

     label4:
        divider#5 = 16;

        goto label7;

     label5:
        divider#5 = 64;

        goto label7;

     label6:
        divider#5 = 128;

     label7:
        $stack11#19 = this.<avrora.sim.mcu.SPI$SPCRReg: avrora.sim.mcu.SPI this$0>;

        $stack12#23 = $stack11#19.<avrora.sim.mcu.SPI: avrora.sim.mcu.SPI$SPSReg SPSR_reg>;

        $stack13#27 = $stack12#23.<avrora.sim.mcu.SPI$SPSReg: avrora.sim.state.BooleanView _spi2x>;

        $stack14#31 = interfaceinvoke $stack13#27.<avrora.sim.state.BooleanView: boolean getValue()>();

        if $stack14#31 == 0 goto label8;

        divider#5 = divider#5 / 2;

     label8:
        $stack16 = this.<avrora.sim.mcu.SPI$SPCRReg: avrora.sim.mcu.SPI this$0>;

        $stack15 = divider#5 * 8;

        $stack16.<avrora.sim.mcu.SPI: int period> = $stack15;

        return;
    }

    public static void <clinit>()
    {
        <avrora.sim.mcu.SPI$SPCRReg: int SPR0> = 0;

        <avrora.sim.mcu.SPI$SPCRReg: int SPR1> = 1;

        <avrora.sim.mcu.SPI$SPCRReg: int MSTR> = 4;

        <avrora.sim.mcu.SPI$SPCRReg: int SPE> = 6;

        <avrora.sim.mcu.SPI$SPCRReg: int SPIE> = 7;

        return;
    }
}
