public class org.dacapo.harness.TeeOutputStream extends java.io.FilterOutputStream
{
    private java.io.OutputStream log;
    private int version;
    private final java.io.File logFile;
    private boolean toScreen;

    public void <init>(java.io.OutputStream, java.io.File)
    {
        org.dacapo.harness.TeeOutputStream this;
        java.io.OutputStream stream;
        java.io.File logFile;

        this := @this: org.dacapo.harness.TeeOutputStream;

        stream := @parameter0: java.io.OutputStream;

        logFile := @parameter1: java.io.File;

        specialinvoke this.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>(stream);

        this.<org.dacapo.harness.TeeOutputStream: java.io.OutputStream log> = null;

        this.<org.dacapo.harness.TeeOutputStream: int version> = 0;

        this.<org.dacapo.harness.TeeOutputStream: boolean toScreen> = 0;

        this.<org.dacapo.harness.TeeOutputStream: java.io.File logFile> = logFile;

        specialinvoke this.<org.dacapo.harness.TeeOutputStream: void newLog()>();

        return;
    }

    public void enableOutput(boolean)
    {
        org.dacapo.harness.TeeOutputStream this;
        boolean enable;

        this := @this: org.dacapo.harness.TeeOutputStream;

        enable := @parameter0: boolean;

        this.<org.dacapo.harness.TeeOutputStream: boolean toScreen> = enable;

        return;
    }

    private void newLog()
    {
        org.dacapo.harness.TeeOutputStream this;
        java.io.FileOutputStream $stack2;
        java.io.File $stack3;
        java.io.FileNotFoundException $stack4;

        this := @this: org.dacapo.harness.TeeOutputStream;

     label1:
        $stack2 = new java.io.FileOutputStream;

        $stack3 = this.<org.dacapo.harness.TeeOutputStream: java.io.File logFile>;

        specialinvoke $stack2.<java.io.FileOutputStream: void <init>(java.io.File)>($stack3);

        this.<org.dacapo.harness.TeeOutputStream: java.io.OutputStream log> = $stack2;

     label2:
        goto label4;

     label3:
        $stack4 := @caughtexception;

        virtualinvoke $stack4.<java.io.FileNotFoundException: void printStackTrace()>();

     label4:
        return;

        catch java.io.FileNotFoundException from label1 to label2 with label3;
    }

    public void openLog()
    {
        org.dacapo.harness.TeeOutputStream this;

        this := @this: org.dacapo.harness.TeeOutputStream;

        specialinvoke this.<org.dacapo.harness.TeeOutputStream: void newLog()>();

        return;
    }

    public void closeLog()
    {
        org.dacapo.harness.TeeOutputStream this;
        java.io.OutputStream $stack2;
        java.io.IOException $stack3;

        this := @this: org.dacapo.harness.TeeOutputStream;

     label1:
        virtualinvoke this.<org.dacapo.harness.TeeOutputStream: void flush()>();

        $stack2 = this.<org.dacapo.harness.TeeOutputStream: java.io.OutputStream log>;

        virtualinvoke $stack2.<java.io.OutputStream: void close()>();

        this.<org.dacapo.harness.TeeOutputStream: java.io.OutputStream log> = null;

     label2:
        goto label4;

     label3:
        $stack3 := @caughtexception;

        virtualinvoke $stack3.<java.io.IOException: void printStackTrace()>();

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void close() throws java.io.IOException
    {
        org.dacapo.harness.TeeOutputStream this;
        java.io.OutputStream $stack1, $stack2;

        this := @this: org.dacapo.harness.TeeOutputStream;

        specialinvoke this.<java.io.FilterOutputStream: void close()>();

        $stack1 = this.<org.dacapo.harness.TeeOutputStream: java.io.OutputStream log>;

        if $stack1 == null goto label1;

        $stack2 = this.<org.dacapo.harness.TeeOutputStream: java.io.OutputStream log>;

        virtualinvoke $stack2.<java.io.OutputStream: void close()>();

     label1:
        return;
    }

    public void flush() throws java.io.IOException
    {
        org.dacapo.harness.TeeOutputStream this;
        java.io.OutputStream $stack1, $stack2;

        this := @this: org.dacapo.harness.TeeOutputStream;

        specialinvoke this.<java.io.FilterOutputStream: void flush()>();

        $stack1 = this.<org.dacapo.harness.TeeOutputStream: java.io.OutputStream log>;

        if $stack1 == null goto label1;

        $stack2 = this.<org.dacapo.harness.TeeOutputStream: java.io.OutputStream log>;

        virtualinvoke $stack2.<java.io.OutputStream: void flush()>();

     label1:
        return;
    }

    public void write(int) throws java.io.IOException
    {
        org.dacapo.harness.TeeOutputStream this;
        boolean $stack2;
        java.io.OutputStream $stack3, $stack4, $stack5;
        int b;

        this := @this: org.dacapo.harness.TeeOutputStream;

        b := @parameter0: int;

        $stack2 = this.<org.dacapo.harness.TeeOutputStream: boolean toScreen>;

        if $stack2 == 0 goto label1;

        specialinvoke this.<java.io.FilterOutputStream: void write(int)>(b);

        specialinvoke this.<java.io.FilterOutputStream: void flush()>();

     label1:
        $stack3 = this.<org.dacapo.harness.TeeOutputStream: java.io.OutputStream log>;

        if $stack3 == null goto label2;

        $stack4 = this.<org.dacapo.harness.TeeOutputStream: java.io.OutputStream log>;

        virtualinvoke $stack4.<java.io.OutputStream: void write(int)>(b);

        $stack5 = this.<org.dacapo.harness.TeeOutputStream: java.io.OutputStream log>;

        virtualinvoke $stack5.<java.io.OutputStream: void flush()>();

     label2:
        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        org.dacapo.harness.TeeOutputStream this;
        java.lang.Exception $stack2;

        this := @this: org.dacapo.harness.TeeOutputStream;

     label1:
        virtualinvoke this.<org.dacapo.harness.TeeOutputStream: void flush()>();

        virtualinvoke this.<org.dacapo.harness.TeeOutputStream: void close()>();

        specialinvoke this.<java.lang.Object: void finalize()>();

     label2:
        goto label4;

     label3:
        $stack2 := @caughtexception;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void version()
    {
        org.dacapo.harness.TeeOutputStream this;
        int $stack3, $stack4, $stack11;
        java.io.File $stack5, $stack7, $stack15#4;
        java.lang.StringBuilder $stack6, $stack9, $stack10, $stack12;
        java.lang.String $stack8, $stack13;
        java.io.OutputStream $stack14, $stack17;
        java.io.IOException $stack20;

        this := @this: org.dacapo.harness.TeeOutputStream;

        $stack3 = this.<org.dacapo.harness.TeeOutputStream: int version>;

        $stack4 = $stack3 + 1;

        this.<org.dacapo.harness.TeeOutputStream: int version> = $stack4;

        $stack5 = new java.io.File;

        $stack6 = new java.lang.StringBuilder;

        specialinvoke $stack6.<java.lang.StringBuilder: void <init>()>();

        $stack7 = this.<org.dacapo.harness.TeeOutputStream: java.io.File logFile>;

        $stack8 = virtualinvoke $stack7.<java.io.File: java.lang.String getAbsolutePath()>();

        $stack9 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8);

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $stack11 = this.<org.dacapo.harness.TeeOutputStream: int version>;

        $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack11);

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $stack5.<java.io.File: void <init>(java.lang.String)>($stack13);

        $stack14 = this.<org.dacapo.harness.TeeOutputStream: java.io.OutputStream log>;

        if $stack14 == null goto label4;

     label1:
        $stack17 = this.<org.dacapo.harness.TeeOutputStream: java.io.OutputStream log>;

        virtualinvoke $stack17.<java.io.OutputStream: void close()>();

     label2:
        goto label4;

     label3:
        $stack20 := @caughtexception;

     label4:
        $stack15#4 = this.<org.dacapo.harness.TeeOutputStream: java.io.File logFile>;

        virtualinvoke $stack15#4.<java.io.File: boolean renameTo(java.io.File)>($stack5);

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
