public class avrora.sim.platform.LED extends java.lang.Object implements avrora.sim.mcu.Microcontroller$Pin$Output
{
    public avrora.sim.Simulator sim;
    public final int colornum;
    public final java.lang.String color;
    public final avrora.sim.FiniteStateMachine state;
    protected final avrora.sim.platform.LED$LEDProbe probe;
    private static final java.lang.String[] modeName;
    private static final double[] modeAmpere;
    private static final int startMode;

    protected void <init>(avrora.sim.Simulator, int, java.lang.String)
    {
        avrora.sim.platform.LED this;
        avrora.sim.Simulator s, $stack5, $stack11;
        int n;
        java.lang.String c;
        avrora.sim.clock.MainClock clk;
        avrora.sim.FiniteStateMachine $stack7, $stack13;
        java.lang.String[] $stack8;
        avrora.sim.platform.LED$LEDProbe $stack9;
        avrora.sim.energy.Energy $stack10;
        double[] $stack12;
        avrora.sim.Simulation $stack14;
        avrora.sim.energy.EnergyControl $stack15;

        this := @this: avrora.sim.platform.LED;

        s := @parameter0: avrora.sim.Simulator;

        n := @parameter1: int;

        c := @parameter2: java.lang.String;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<avrora.sim.platform.LED: avrora.sim.Simulator sim> = s;

        this.<avrora.sim.platform.LED: int colornum> = n;

        this.<avrora.sim.platform.LED: java.lang.String color> = c;

        $stack5 = this.<avrora.sim.platform.LED: avrora.sim.Simulator sim>;

        clk = virtualinvoke $stack5.<avrora.sim.Simulator: avrora.sim.clock.MainClock getClock()>();

        $stack7 = new avrora.sim.FiniteStateMachine;

        $stack8 = <avrora.sim.platform.LED: java.lang.String[] modeName>;

        specialinvoke $stack7.<avrora.sim.FiniteStateMachine: void <init>(avrora.sim.clock.Clock,int,java.lang.String[],int)>(clk, 0, $stack8, 0);

        this.<avrora.sim.platform.LED: avrora.sim.FiniteStateMachine state> = $stack7;

        $stack9 = new avrora.sim.platform.LED$LEDProbe;

        specialinvoke $stack9.<avrora.sim.platform.LED$LEDProbe: void <init>(avrora.sim.platform.LED)>(this);

        this.<avrora.sim.platform.LED: avrora.sim.platform.LED$LEDProbe probe> = $stack9;

        $stack10 = new avrora.sim.energy.Energy;

        $stack12 = <avrora.sim.platform.LED: double[] modeAmpere>;

        $stack13 = this.<avrora.sim.platform.LED: avrora.sim.FiniteStateMachine state>;

        $stack11 = this.<avrora.sim.platform.LED: avrora.sim.Simulator sim>;

        $stack14 = virtualinvoke $stack11.<avrora.sim.Simulator: avrora.sim.Simulation getSimulation()>();

        $stack15 = virtualinvoke $stack14.<avrora.sim.Simulation: avrora.sim.energy.EnergyControl getEnergyControl()>();

        specialinvoke $stack10.<avrora.sim.energy.Energy: void <init>(java.lang.String,double[],avrora.sim.FiniteStateMachine,avrora.sim.energy.EnergyControl)>(c, $stack12, $stack13, $stack15);

        return;
    }

    public void write(boolean)
    {
        boolean level;
        avrora.sim.platform.LED this;
        avrora.sim.FiniteStateMachine $stack3;
        byte $stack4#1;

        this := @this: avrora.sim.platform.LED;

        level := @parameter0: boolean;

        if level == 0 goto label1;

        $stack4#1 = 0;

        goto label2;

     label1:
        $stack4#1 = 1;

     label2:
        $stack3 = this.<avrora.sim.platform.LED: avrora.sim.FiniteStateMachine state>;

        virtualinvoke $stack3.<avrora.sim.FiniteStateMachine: void transition(int)>($stack4#1);

        return;
    }

    public void enablePrinting()
    {
        avrora.sim.platform.LED this;
        avrora.sim.platform.LED$LEDProbe $stack1;
        avrora.sim.FiniteStateMachine $stack2;

        this := @this: avrora.sim.platform.LED;

        $stack2 = this.<avrora.sim.platform.LED: avrora.sim.FiniteStateMachine state>;

        $stack1 = this.<avrora.sim.platform.LED: avrora.sim.platform.LED$LEDProbe probe>;

        virtualinvoke $stack2.<avrora.sim.FiniteStateMachine: void insertProbe(avrora.sim.FiniteStateMachine$Probe)>($stack1);

        return;
    }

    public void disablePrinting()
    {
        avrora.sim.platform.LED this;
        avrora.sim.platform.LED$LEDProbe $stack1;
        avrora.sim.FiniteStateMachine $stack2;

        this := @this: avrora.sim.platform.LED;

        $stack2 = this.<avrora.sim.platform.LED: avrora.sim.FiniteStateMachine state>;

        $stack1 = this.<avrora.sim.platform.LED: avrora.sim.platform.LED$LEDProbe probe>;

        virtualinvoke $stack2.<avrora.sim.FiniteStateMachine: void removeProbe(avrora.sim.FiniteStateMachine$Probe)>($stack1);

        return;
    }

    public int getState()
    {
        avrora.sim.platform.LED this;
        avrora.sim.FiniteStateMachine $stack1;
        int $stack2;

        this := @this: avrora.sim.platform.LED;

        $stack1 = this.<avrora.sim.platform.LED: avrora.sim.FiniteStateMachine state>;

        $stack2 = virtualinvoke $stack1.<avrora.sim.FiniteStateMachine: int getCurrentState()>();

        return $stack2;
    }

    public avrora.sim.FiniteStateMachine getFSM()
    {
        avrora.sim.platform.LED this;
        avrora.sim.FiniteStateMachine $stack1;

        this := @this: avrora.sim.platform.LED;

        $stack1 = this.<avrora.sim.platform.LED: avrora.sim.FiniteStateMachine state>;

        return $stack1;
    }

    static java.lang.String[] access$000()
    {
        java.lang.String[] $stack0;

        $stack0 = <avrora.sim.platform.LED: java.lang.String[] modeName>;

        return $stack0;
    }

    static void <clinit>()
    {
        java.lang.String[] $stack0;
        double[] $stack1;

        <avrora.sim.platform.LED: int startMode> = 0;

        $stack0 = newarray (java.lang.String)[2];

        $stack0[0] = "off";

        $stack0[1] = "on";

        <avrora.sim.platform.LED: java.lang.String[] modeName> = $stack0;

        $stack1 = newarray (double)[2];

        $stack1[0] = 0.0;

        $stack1[1] = 0.0022;

        <avrora.sim.platform.LED: double[] modeAmpere> = $stack1;

        return;
    }
}
