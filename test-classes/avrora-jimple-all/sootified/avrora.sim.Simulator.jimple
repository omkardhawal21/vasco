public class avrora.sim.Simulator extends java.lang.Object
{
    protected final avrora.core.Program program;
    protected final avrora.sim.mcu.Microcontroller microcontroller;
    protected avrora.sim.Interpreter interpreter;
    protected avrora.sim.clock.MainClock clock;
    protected final int id;
    protected final avrora.sim.Simulation simulation;
    protected avrora.sim.output.EventBuffer events;

    void <init>(int, avrora.sim.Simulation, avrora.sim.InterpreterFactory, avrora.sim.mcu.Microcontroller, avrora.core.Program)
    {
        avrora.sim.Simulator this;
        int i;
        avrora.sim.mcu.Microcontroller mcu, $stack8;
        avrora.core.Program p, $stack9;
        avrora.sim.Simulation sim;
        avrora.sim.clock.ClockDomain $stack6;
        avrora.sim.clock.MainClock $stack7;
        avrora.sim.InterpreterFactory f;
        avrora.sim.mcu.MCUProperties $stack10;
        avrora.sim.Interpreter $stack11;
        avrora.sim.output.EventBuffer $stack12;

        this := @this: avrora.sim.Simulator;

        i := @parameter0: int;

        sim := @parameter1: avrora.sim.Simulation;

        f := @parameter2: avrora.sim.InterpreterFactory;

        mcu := @parameter3: avrora.sim.mcu.Microcontroller;

        p := @parameter4: avrora.core.Program;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<avrora.sim.Simulator: int id> = i;

        this.<avrora.sim.Simulator: avrora.sim.mcu.Microcontroller microcontroller> = mcu;

        this.<avrora.sim.Simulator: avrora.core.Program program> = p;

        this.<avrora.sim.Simulator: avrora.sim.Simulation simulation> = sim;

        $stack6 = interfaceinvoke mcu.<avrora.sim.mcu.Microcontroller: avrora.sim.clock.ClockDomain getClockDomain()>();

        $stack7 = virtualinvoke $stack6.<avrora.sim.clock.ClockDomain: avrora.sim.clock.MainClock getMainClock()>();

        this.<avrora.sim.Simulator: avrora.sim.clock.MainClock clock> = $stack7;

        $stack9 = this.<avrora.sim.Simulator: avrora.core.Program program>;

        $stack8 = this.<avrora.sim.Simulator: avrora.sim.mcu.Microcontroller microcontroller>;

        $stack10 = interfaceinvoke $stack8.<avrora.sim.mcu.Microcontroller: avrora.sim.mcu.MCUProperties getProperties()>();

        $stack11 = virtualinvoke f.<avrora.sim.InterpreterFactory: avrora.sim.Interpreter newInterpreter(avrora.sim.Simulator,avrora.core.Program,avrora.sim.mcu.MCUProperties)>(this, $stack9, $stack10);

        this.<avrora.sim.Simulator: avrora.sim.Interpreter interpreter> = $stack11;

        $stack12 = new avrora.sim.output.EventBuffer;

        specialinvoke $stack12.<avrora.sim.output.EventBuffer: void <init>(avrora.sim.Simulator)>(this);

        this.<avrora.sim.Simulator: avrora.sim.output.EventBuffer events> = $stack12;

        return;
    }

    public avrora.sim.mcu.Microcontroller getMicrocontroller()
    {
        avrora.sim.Simulator this;
        avrora.sim.mcu.Microcontroller $stack1;

        this := @this: avrora.sim.Simulator;

        $stack1 = this.<avrora.sim.Simulator: avrora.sim.mcu.Microcontroller microcontroller>;

        return $stack1;
    }

    public avrora.core.Program getProgram()
    {
        avrora.sim.Simulator this;
        avrora.core.Program $stack1;

        this := @this: avrora.sim.Simulator;

        $stack1 = this.<avrora.sim.Simulator: avrora.core.Program program>;

        return $stack1;
    }

    public avrora.sim.clock.MainClock getClock()
    {
        avrora.sim.Simulator this;
        avrora.sim.clock.MainClock $stack1;

        this := @this: avrora.sim.Simulator;

        $stack1 = this.<avrora.sim.Simulator: avrora.sim.clock.MainClock clock>;

        return $stack1;
    }

    public avrora.sim.output.EventBuffer getEventBuffer()
    {
        avrora.sim.Simulator this;
        avrora.sim.output.EventBuffer $stack1;

        this := @this: avrora.sim.Simulator;

        $stack1 = this.<avrora.sim.Simulator: avrora.sim.output.EventBuffer events>;

        return $stack1;
    }

    public int getID()
    {
        avrora.sim.Simulator this;
        int $stack1;

        this := @this: avrora.sim.Simulator;

        $stack1 = this.<avrora.sim.Simulator: int id>;

        return $stack1;
    }

    public avrora.sim.Interpreter getInterpreter()
    {
        avrora.sim.Simulator this;
        avrora.sim.Interpreter $stack1;

        this := @this: avrora.sim.Simulator;

        $stack1 = this.<avrora.sim.Simulator: avrora.sim.Interpreter interpreter>;

        return $stack1;
    }

    public avrora.sim.Simulation getSimulation()
    {
        avrora.sim.Simulator this;
        avrora.sim.Simulation $stack1;

        this := @this: avrora.sim.Simulator;

        $stack1 = this.<avrora.sim.Simulator: avrora.sim.Simulation simulation>;

        return $stack1;
    }

    public avrora.sim.output.SimPrinter getPrinter(java.lang.String)
    {
        avrora.sim.Simulator this;
        java.lang.String category;
        avrora.sim.Simulation $stack2;
        avrora.sim.output.SimPrinter $stack3;

        this := @this: avrora.sim.Simulator;

        category := @parameter0: java.lang.String;

        $stack2 = this.<avrora.sim.Simulator: avrora.sim.Simulation simulation>;

        $stack3 = virtualinvoke $stack2.<avrora.sim.Simulation: avrora.sim.output.SimPrinter getPrinter(avrora.sim.Simulator,java.lang.String)>(this, category);

        return $stack3;
    }

    public avrora.sim.output.SimPrinter getPrinter()
    {
        avrora.sim.Simulator this;
        avrora.sim.Simulation $stack1;
        avrora.sim.output.SimPrinter $stack2;

        this := @this: avrora.sim.Simulator;

        $stack1 = this.<avrora.sim.Simulator: avrora.sim.Simulation simulation>;

        $stack2 = virtualinvoke $stack1.<avrora.sim.Simulation: avrora.sim.output.SimPrinter getPrinter(avrora.sim.Simulator)>(this);

        return $stack2;
    }

    public avrora.sim.State getState()
    {
        avrora.sim.Simulator this;
        avrora.sim.Interpreter $stack1;
        avrora.sim.State $stack2;

        this := @this: avrora.sim.Simulator;

        $stack1 = this.<avrora.sim.Simulator: avrora.sim.Interpreter interpreter>;

        $stack2 = virtualinvoke $stack1.<avrora.sim.Interpreter: avrora.sim.State getState()>();

        return $stack2;
    }

    public void start()
    {
        avrora.sim.Simulator this;
        avrora.sim.Interpreter $stack1;

        this := @this: avrora.sim.Simulator;

        $stack1 = this.<avrora.sim.Simulator: avrora.sim.Interpreter interpreter>;

        virtualinvoke $stack1.<avrora.sim.Interpreter: void start()>();

        return;
    }

    public int step()
    {
        avrora.sim.Simulator this;
        avrora.sim.Interpreter $stack1;
        int $stack2;

        this := @this: avrora.sim.Simulator;

        $stack1 = this.<avrora.sim.Simulator: avrora.sim.Interpreter interpreter>;

        $stack2 = virtualinvoke $stack1.<avrora.sim.Interpreter: int step()>();

        return $stack2;
    }

    public void stop()
    {
        avrora.sim.Simulator this;
        avrora.sim.Interpreter $stack1;

        this := @this: avrora.sim.Simulator;

        $stack1 = this.<avrora.sim.Simulator: avrora.sim.Interpreter interpreter>;

        virtualinvoke $stack1.<avrora.sim.Interpreter: void stop()>();

        return;
    }

    public void insertProbe(avrora.sim.Simulator$Probe)
    {
        avrora.sim.Simulator this;
        avrora.sim.Simulator$Probe p;
        avrora.sim.Interpreter $stack2;

        this := @this: avrora.sim.Simulator;

        p := @parameter0: avrora.sim.Simulator$Probe;

        $stack2 = this.<avrora.sim.Simulator: avrora.sim.Interpreter interpreter>;

        virtualinvoke $stack2.<avrora.sim.Interpreter: void insertProbe(avrora.sim.Simulator$Probe)>(p);

        return;
    }

    public void insertProbe(avrora.sim.Simulator$Probe, int)
    {
        avrora.sim.Simulator this;
        avrora.sim.Simulator$Probe p;
        int addr;
        avrora.sim.Interpreter $stack3;

        this := @this: avrora.sim.Simulator;

        p := @parameter0: avrora.sim.Simulator$Probe;

        addr := @parameter1: int;

        $stack3 = this.<avrora.sim.Simulator: avrora.sim.Interpreter interpreter>;

        virtualinvoke $stack3.<avrora.sim.Interpreter: void insertProbe(avrora.sim.Simulator$Probe,int)>(p, addr);

        return;
    }

    public void removeProbe(avrora.sim.Simulator$Probe)
    {
        avrora.sim.Simulator this;
        avrora.sim.Simulator$Probe b;
        avrora.sim.Interpreter $stack2;

        this := @this: avrora.sim.Simulator;

        b := @parameter0: avrora.sim.Simulator$Probe;

        $stack2 = this.<avrora.sim.Simulator: avrora.sim.Interpreter interpreter>;

        virtualinvoke $stack2.<avrora.sim.Interpreter: void removeProbe(avrora.sim.Simulator$Probe)>(b);

        return;
    }

    public void removeProbe(avrora.sim.Simulator$Probe, int)
    {
        avrora.sim.Simulator this;
        avrora.sim.Simulator$Probe p;
        int addr;
        avrora.sim.Interpreter $stack3;

        this := @this: avrora.sim.Simulator;

        p := @parameter0: avrora.sim.Simulator$Probe;

        addr := @parameter1: int;

        $stack3 = this.<avrora.sim.Simulator: avrora.sim.Interpreter interpreter>;

        virtualinvoke $stack3.<avrora.sim.Interpreter: void removeProbe(avrora.sim.Simulator$Probe,int)>(p, addr);

        return;
    }

    public void insertWatch(avrora.sim.Simulator$Watch, int)
    {
        avrora.sim.Simulator this;
        avrora.sim.Simulator$Watch p;
        int data_addr;
        avrora.sim.Interpreter $stack3;

        this := @this: avrora.sim.Simulator;

        p := @parameter0: avrora.sim.Simulator$Watch;

        data_addr := @parameter1: int;

        $stack3 = this.<avrora.sim.Simulator: avrora.sim.Interpreter interpreter>;

        virtualinvoke $stack3.<avrora.sim.Interpreter: void insertWatch(avrora.sim.Simulator$Watch,int)>(p, data_addr);

        return;
    }

    public void removeWatch(avrora.sim.Simulator$Watch, int)
    {
        avrora.sim.Simulator this;
        avrora.sim.Simulator$Watch p;
        int data_addr;
        avrora.sim.Interpreter $stack3;

        this := @this: avrora.sim.Simulator;

        p := @parameter0: avrora.sim.Simulator$Watch;

        data_addr := @parameter1: int;

        $stack3 = this.<avrora.sim.Simulator: avrora.sim.Interpreter interpreter>;

        virtualinvoke $stack3.<avrora.sim.Interpreter: void removeWatch(avrora.sim.Simulator$Watch,int)>(p, data_addr);

        return;
    }

    public void forceInterrupt(int)
    {
        avrora.sim.Simulator this;
        avrora.sim.Interpreter $stack2;
        avrora.sim.InterruptTable $stack3;
        int num;

        this := @this: avrora.sim.Simulator;

        num := @parameter0: int;

        $stack2 = this.<avrora.sim.Simulator: avrora.sim.Interpreter interpreter>;

        $stack3 = virtualinvoke $stack2.<avrora.sim.Interpreter: avrora.sim.InterruptTable getInterruptTable()>();

        virtualinvoke $stack3.<avrora.sim.InterruptTable: void force(int)>(num);

        return;
    }

    public void insertEvent(avrora.sim.Simulator$Event, long)
    {
        avrora.sim.Simulator this;
        avrora.sim.Simulator$Event e;
        long cycles;
        avrora.sim.clock.MainClock $stack4;

        this := @this: avrora.sim.Simulator;

        e := @parameter0: avrora.sim.Simulator$Event;

        cycles := @parameter1: long;

        $stack4 = this.<avrora.sim.Simulator: avrora.sim.clock.MainClock clock>;

        virtualinvoke $stack4.<avrora.sim.clock.MainClock: void insertEvent(avrora.sim.Simulator$Event,long)>(e, cycles);

        return;
    }

    public void removeEvent(avrora.sim.Simulator$Event)
    {
        avrora.sim.Simulator this;
        avrora.sim.Simulator$Event e;
        avrora.sim.clock.MainClock $stack2;

        this := @this: avrora.sim.Simulator;

        e := @parameter0: avrora.sim.Simulator$Event;

        $stack2 = this.<avrora.sim.Simulator: avrora.sim.clock.MainClock clock>;

        virtualinvoke $stack2.<avrora.sim.clock.MainClock: void removeEvent(avrora.sim.Simulator$Event)>(e);

        return;
    }

    public void insertErrorWatch(avrora.sim.Simulator$Watch)
    {
        avrora.sim.Simulator this;
        avrora.sim.Simulator$Watch watch;
        avrora.sim.Interpreter $stack2;

        this := @this: avrora.sim.Simulator;

        watch := @parameter0: avrora.sim.Simulator$Watch;

        $stack2 = this.<avrora.sim.Simulator: avrora.sim.Interpreter interpreter>;

        virtualinvoke $stack2.<avrora.sim.Interpreter: void insertErrorWatch(avrora.sim.Simulator$Watch)>(watch);

        return;
    }

    public void delay(long)
    {
        avrora.sim.Simulator this;
        long cycles;
        avrora.sim.Interpreter $stack3;

        this := @this: avrora.sim.Simulator;

        cycles := @parameter0: long;

        $stack3 = this.<avrora.sim.Simulator: avrora.sim.Interpreter interpreter>;

        virtualinvoke $stack3.<avrora.sim.Interpreter: void delay(long)>(cycles);

        return;
    }
}
