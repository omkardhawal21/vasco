public class avrora.sim.mcu.ADC$ControlRegister extends avrora.sim.RWRegister implements avrora.sim.InterruptTable$Notification
{
    final avrora.sim.mcu.ADC$ControlRegister$ConversionEvent conversion;
    final avrora.sim.state.BooleanView _aden;
    final avrora.sim.state.BooleanView _adsc;
    final avrora.sim.state.BooleanView _adfr;
    final avrora.sim.state.BooleanView _adif;
    final avrora.sim.state.BooleanView _adie;
    final avrora.sim.state.RegisterView _prescaler;
    int cycles;
    boolean converting;
    final avrora.sim.mcu.ADC this$0;

    protected void <init>(avrora.sim.mcu.ADC)
    {
        avrora.sim.mcu.ADC$ControlRegister this;
        avrora.sim.mcu.ADC this$0;
        avrora.sim.mcu.ADC$ControlRegister$ConversionEvent $stack2;
        avrora.sim.state.BooleanView $stack3, $stack4, $stack5, $stack6, $stack7;
        avrora.sim.state.RegisterView $stack8;

        this := @this: avrora.sim.mcu.ADC$ControlRegister;

        this$0 := @parameter0: avrora.sim.mcu.ADC;

        this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0> = this$0;

        specialinvoke this.<avrora.sim.RWRegister: void <init>()>();

        $stack2 = new avrora.sim.mcu.ADC$ControlRegister$ConversionEvent;

        specialinvoke $stack2.<avrora.sim.mcu.ADC$ControlRegister$ConversionEvent: void <init>(avrora.sim.mcu.ADC$ControlRegister,avrora.sim.mcu.ADC$1)>(this, null);

        this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC$ControlRegister$ConversionEvent conversion> = $stack2;

        $stack3 = staticinvoke <avrora.sim.state.RegisterUtil: avrora.sim.state.BooleanView booleanView(avrora.sim.state.RegisterView,int)>(this, 7);

        this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.BooleanView _aden> = $stack3;

        $stack4 = staticinvoke <avrora.sim.state.RegisterUtil: avrora.sim.state.BooleanView booleanView(avrora.sim.state.RegisterView,int)>(this, 6);

        this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.BooleanView _adsc> = $stack4;

        $stack5 = staticinvoke <avrora.sim.state.RegisterUtil: avrora.sim.state.BooleanView booleanView(avrora.sim.state.RegisterView,int)>(this, 5);

        this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.BooleanView _adfr> = $stack5;

        $stack6 = staticinvoke <avrora.sim.state.RegisterUtil: avrora.sim.state.BooleanView booleanView(avrora.sim.state.RegisterView,int)>(this, 4);

        this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.BooleanView _adif> = $stack6;

        $stack7 = staticinvoke <avrora.sim.state.RegisterUtil: avrora.sim.state.BooleanView booleanView(avrora.sim.state.RegisterView,int)>(this, 3);

        this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.BooleanView _adie> = $stack7;

        $stack8 = staticinvoke <avrora.sim.state.RegisterUtil: avrora.sim.state.RegisterView bitRangeView(avrora.sim.state.RegisterView,int,int)>(this, 0, 2);

        this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.RegisterView _prescaler> = $stack8;

        this.<avrora.sim.mcu.ADC$ControlRegister: int cycles> = 25;

        return;
    }

    private void unpostADCInterrupt()
    {
        avrora.sim.mcu.ADC$ControlRegister this;
        avrora.sim.state.BooleanView $stack1;
        avrora.sim.mcu.ADC $stack2, $stack3;
        int $stack4;
        avrora.sim.AtmelInterpreter $stack5;

        this := @this: avrora.sim.mcu.ADC$ControlRegister;

        $stack1 = this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.BooleanView _adif>;

        interfaceinvoke $stack1.<avrora.sim.state.BooleanView: void setValue(boolean)>(0);

        $stack2 = this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack5 = $stack2.<avrora.sim.mcu.ADC: avrora.sim.AtmelInterpreter interpreter>;

        $stack3 = this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack4 = $stack3.<avrora.sim.mcu.ADC: int interruptNum>;

        virtualinvoke $stack5.<avrora.sim.AtmelInterpreter: void setPosted(int,boolean)>($stack4, 0);

        return;
    }

    public void write(byte)
    {
        avrora.sim.mcu.ADC$ControlRegister this;
        byte nval;
        avrora.sim.state.BooleanView $stack2, $stack8, $stack15, $stack4#4;
        boolean $stack3, $stack11, $stack16, $stack5#6;
        avrora.sim.mcu.ADC $stack6, $stack7;
        avrora.sim.AtmelInterpreter $stack9;
        int $stack10;

        this := @this: avrora.sim.mcu.ADC$ControlRegister;

        nval := @parameter0: byte;

        this.<avrora.sim.mcu.ADC$ControlRegister: byte value> = nval;

        $stack2 = this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.BooleanView _aden>;

        $stack3 = interfaceinvoke $stack2.<avrora.sim.state.BooleanView: boolean getValue()>();

        if $stack3 == 0 goto label1;

        $stack15 = this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.BooleanView _adsc>;

        $stack16 = interfaceinvoke $stack15.<avrora.sim.state.BooleanView: boolean getValue()>();

        if $stack16 == 0 goto label2;

        specialinvoke this.<avrora.sim.mcu.ADC$ControlRegister: void startConversion()>();

        goto label2;

     label1:
        specialinvoke this.<avrora.sim.mcu.ADC$ControlRegister: void stopConversion()>();

     label2:
        $stack4#4 = this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.BooleanView _adif>;

        $stack5#6 = interfaceinvoke $stack4#4.<avrora.sim.state.BooleanView: boolean getValue()>();

        if $stack5#6 == 0 goto label3;

        specialinvoke this.<avrora.sim.mcu.ADC$ControlRegister: void unpostADCInterrupt()>();

     label3:
        $stack6 = this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack9 = $stack6.<avrora.sim.mcu.ADC: avrora.sim.AtmelInterpreter interpreter>;

        $stack7 = this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack10 = $stack7.<avrora.sim.mcu.ADC: int interruptNum>;

        $stack8 = this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.BooleanView _adie>;

        $stack11 = interfaceinvoke $stack8.<avrora.sim.state.BooleanView: boolean getValue()>();

        virtualinvoke $stack9.<avrora.sim.AtmelInterpreter: void setEnabled(int,boolean)>($stack10, $stack11);

        return;
    }

    private void startConversion()
    {
        avrora.sim.mcu.ADC$ControlRegister this;
        boolean $stack1;

        this := @this: avrora.sim.mcu.ADC$ControlRegister;

        $stack1 = this.<avrora.sim.mcu.ADC$ControlRegister: boolean converting>;

        if $stack1 != 0 goto label1;

        this.<avrora.sim.mcu.ADC$ControlRegister: boolean converting> = 1;

        specialinvoke this.<avrora.sim.mcu.ADC$ControlRegister: void insertConversion()>();

     label1:
        return;
    }

    private void insertConversion()
    {
        avrora.sim.mcu.ADC$ControlRegister this;
        avrora.sim.mcu.ADC $stack1, $stack8, $stack11, $stack13, $stack17, $stack22, $stack29, $stack31, $stack35;
        avrora.sim.clock.Clock $stack2;
        avrora.sim.mcu.ADC$ControlRegister$ConversionEvent $stack3;
        int $stack4, $stack5, $stack6, $stack19, $stack24, $stack37;
        long $stack7;
        avrora.sim.mcu.ADC$MUXRegister $stack9, $stack18, $stack23, $stack36;
        boolean $stack10;
        avrora.sim.output.SimPrinter $stack12, $stack15, $stack30, $stack33;
        java.lang.StringBuilder $stack14, $stack16, $stack20, $stack21, $stack25, $stack32, $stack34, $stack38;
        java.lang.String $stack26, $stack39;

        this := @this: avrora.sim.mcu.ADC$ControlRegister;

        $stack1 = this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack2 = $stack1.<avrora.sim.mcu.ADC: avrora.sim.clock.Clock mainClock>;

        $stack3 = this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC$ControlRegister$ConversionEvent conversion>;

        $stack4 = specialinvoke this.<avrora.sim.mcu.ADC$ControlRegister: int getPrescaler()>();

        $stack5 = this.<avrora.sim.mcu.ADC$ControlRegister: int cycles>;

        $stack6 = $stack4 * $stack5;

        $stack7 = (long) $stack6;

        virtualinvoke $stack2.<avrora.sim.clock.Clock: void insertEvent(avrora.sim.Simulator$Event,long)>($stack3, $stack7);

        $stack8 = this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack9 = $stack8.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$MUXRegister ADMUX_reg>;

        $stack10 = virtualinvoke $stack9.<avrora.sim.mcu.ADC$MUXRegister: boolean isSingleEnded()>();

        if $stack10 == 0 goto label1;

        $stack29 = this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack30 = $stack29.<avrora.sim.mcu.ADC: avrora.sim.output.SimPrinter devicePrinter>;

        if $stack30 == null goto label2;

        $stack31 = this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack33 = $stack31.<avrora.sim.mcu.ADC: avrora.sim.output.SimPrinter devicePrinter>;

        $stack32 = new java.lang.StringBuilder;

        specialinvoke $stack32.<java.lang.StringBuilder: void <init>()>();

        $stack34 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ADC: beginning sample of channel ");

        $stack35 = this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack36 = $stack35.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$MUXRegister ADMUX_reg>;

        $stack37 = virtualinvoke $stack36.<avrora.sim.mcu.ADC$MUXRegister: int getSingleIndex()>();

        $stack38 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack37);

        $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack33.<avrora.sim.output.SimPrinter: void println(java.lang.String)>($stack39);

        goto label2;

     label1:
        $stack11 = this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack12 = $stack11.<avrora.sim.mcu.ADC: avrora.sim.output.SimPrinter devicePrinter>;

        if $stack12 == null goto label2;

        $stack13 = this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack15 = $stack13.<avrora.sim.mcu.ADC: avrora.sim.output.SimPrinter devicePrinter>;

        $stack14 = new java.lang.StringBuilder;

        specialinvoke $stack14.<java.lang.StringBuilder: void <init>()>();

        $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ADC: beginning sample of channels ");

        $stack17 = this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack18 = $stack17.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$MUXRegister ADMUX_reg>;

        $stack19 = virtualinvoke $stack18.<avrora.sim.mcu.ADC$MUXRegister: int getPosIndex()>();

        $stack20 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack19);

        $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $stack22 = this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack23 = $stack22.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$MUXRegister ADMUX_reg>;

        $stack24 = virtualinvoke $stack23.<avrora.sim.mcu.ADC$MUXRegister: int getNegIndex()>();

        $stack25 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack24);

        $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack15.<avrora.sim.output.SimPrinter: void println(java.lang.String)>($stack26);

     label2:
        this.<avrora.sim.mcu.ADC$ControlRegister: int cycles> = 13;

        return;
    }

    private void stopConversion()
    {
        avrora.sim.mcu.ADC$ControlRegister this;
        avrora.sim.state.BooleanView $stack1;
        boolean $stack2;
        avrora.sim.mcu.ADC $stack3;
        avrora.sim.mcu.ADC$ControlRegister$ConversionEvent $stack4;
        avrora.sim.clock.Clock $stack5;

        this := @this: avrora.sim.mcu.ADC$ControlRegister;

        $stack1 = this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.BooleanView _adsc>;

        interfaceinvoke $stack1.<avrora.sim.state.BooleanView: void setValue(boolean)>(0);

        $stack2 = this.<avrora.sim.mcu.ADC$ControlRegister: boolean converting>;

        if $stack2 == 0 goto label1;

        this.<avrora.sim.mcu.ADC$ControlRegister: boolean converting> = 0;

        $stack3 = this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack5 = $stack3.<avrora.sim.mcu.ADC: avrora.sim.clock.Clock mainClock>;

        $stack4 = this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC$ControlRegister$ConversionEvent conversion>;

        virtualinvoke $stack5.<avrora.sim.clock.Clock: void removeEvent(avrora.sim.Simulator$Event)>($stack4);

     label1:
        return;
    }

    private int getPrescaler()
    {
        avrora.sim.mcu.ADC$ControlRegister this;
        avrora.sim.state.RegisterView $stack1;
        short[] $stack2;
        int $stack3;
        short $stack4;

        this := @this: avrora.sim.mcu.ADC$ControlRegister;

        $stack2 = <avrora.sim.mcu.ADC: short[] PRESCALER>;

        $stack1 = this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.RegisterView _prescaler>;

        $stack3 = interfaceinvoke $stack1.<avrora.sim.state.RegisterView: int getValue()>();

        $stack4 = $stack2[$stack3];

        return $stack4;
    }

    private int convertVoltage()
    {
        avrora.sim.mcu.ADC$ControlRegister this;
        avrora.sim.mcu.ADC $stack7, $stack10, $stack11, $stack15, $stack16, $stack20, $stack21, $stack45, $stack46, $stack50;
        avrora.sim.mcu.ADC$MUXRegister $stack8, $stack12, $stack17, $stack22, $stack47;
        boolean $stack9;
        avrora.sim.mcu.ADC$ADCInput[] $stack13, $stack18, $stack48;
        int $stack14, $stack19, $stack24, $stack30, $stack31, $stack49, $stack54, $stack55;
        float vref, $stack23, $stack25, $stack26, $stack27, val, $stack52, $stack53, $stack56#2, vref#4, $stack43#7, vref#8, $stack32#9;
        byte $stack28, $stack29, $stack51;
        avrora.sim.mcu.ADC$ADCInput dev#1, dev#5, vin#6;

        this := @this: avrora.sim.mcu.ADC$ControlRegister;

        $stack7 = this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack8 = $stack7.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$MUXRegister ADMUX_reg>;

        $stack9 = virtualinvoke $stack8.<avrora.sim.mcu.ADC$MUXRegister: boolean isSingleEnded()>();

        if $stack9 == 0 goto label04;

        $stack45 = this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack48 = $stack45.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$ADCInput[] connectedDevices>;

        $stack46 = this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack47 = $stack46.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$MUXRegister ADMUX_reg>;

        $stack49 = virtualinvoke $stack47.<avrora.sim.mcu.ADC$MUXRegister: int getSingleIndex()>();

        dev#1 = $stack48[$stack49];

        if dev#1 == null goto label01;

        $stack56#2 = interfaceinvoke dev#1.<avrora.sim.mcu.ADC$ADCInput: float getVoltage()>();

        goto label02;

     label01:
        $stack56#2 = 0.0F;

     label02:
        $stack50 = this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        vref#4 = $stack50.<avrora.sim.mcu.ADC: float voltageRef>;

        $stack51 = $stack56#2 cmpl vref#4;

        if $stack51 < 0 goto label03;

        return 1023;

     label03:
        $stack52 = $stack56#2 * 1024.0F;

        $stack53 = $stack52 / vref#4;

        $stack54 = (int) $stack53;

        $stack55 = 1023 & $stack54;

        return $stack55;

     label04:
        $stack10 = this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack13 = $stack10.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$ADCInput[] connectedDevices>;

        $stack11 = this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack12 = $stack11.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$MUXRegister ADMUX_reg>;

        $stack14 = virtualinvoke $stack12.<avrora.sim.mcu.ADC$MUXRegister: int getPosIndex()>();

        dev#5 = $stack13[$stack14];

        $stack15 = this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack18 = $stack15.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$ADCInput[] connectedDevices>;

        $stack16 = this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack17 = $stack16.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$MUXRegister ADMUX_reg>;

        $stack19 = virtualinvoke $stack17.<avrora.sim.mcu.ADC$MUXRegister: int getNegIndex()>();

        vin#6 = $stack18[$stack19];

        if dev#5 == null goto label05;

        $stack43#7 = interfaceinvoke dev#5.<avrora.sim.mcu.ADC$ADCInput: float getVoltage()>();

        goto label06;

     label05:
        $stack43#7 = 0.0F;

     label06:
        vref#8 = $stack43#7;

        if vin#6 == null goto label07;

        $stack32#9 = interfaceinvoke vin#6.<avrora.sim.mcu.ADC$ADCInput: float getVoltage()>();

        goto label08;

     label07:
        $stack32#9 = 0.0F;

     label08:
        $stack20 = this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        vref = $stack20.<avrora.sim.mcu.ADC: float voltageRef>;

        $stack23 = vref#8 - $stack32#9;

        $stack21 = this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack22 = $stack21.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$MUXRegister ADMUX_reg>;

        $stack24 = virtualinvoke $stack22.<avrora.sim.mcu.ADC$MUXRegister: int getGain()>();

        $stack25 = (float) $stack24;

        $stack26 = $stack23 * $stack25;

        $stack27 = $stack26 * 512.0F;

        val = $stack27 / vref;

        $stack28 = val cmpg -512.0F;

        if $stack28 >= 0 goto label09;

        return 1023;

     label09:
        $stack29 = val cmpl 511.0F;

        if $stack29 <= 0 goto label10;

        return 511;

     label10:
        $stack30 = (int) val;

        $stack31 = 1023 & $stack30;

        return $stack31;
    }

    public void force(int)
    {
        avrora.sim.mcu.ADC$ControlRegister this;
        avrora.sim.state.BooleanView $stack2;
        int inum;

        this := @this: avrora.sim.mcu.ADC$ControlRegister;

        inum := @parameter0: int;

        $stack2 = this.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.BooleanView _adif>;

        interfaceinvoke $stack2.<avrora.sim.state.BooleanView: void setValue(boolean)>(1);

        return;
    }

    public void invoke(int)
    {
        avrora.sim.mcu.ADC$ControlRegister this;
        int inum;

        this := @this: avrora.sim.mcu.ADC$ControlRegister;

        inum := @parameter0: int;

        specialinvoke this.<avrora.sim.mcu.ADC$ControlRegister: void unpostADCInterrupt()>();

        return;
    }

    static int access$100(avrora.sim.mcu.ADC$ControlRegister)
    {
        avrora.sim.mcu.ADC$ControlRegister x0;
        int $stack1;

        x0 := @parameter0: avrora.sim.mcu.ADC$ControlRegister;

        $stack1 = specialinvoke x0.<avrora.sim.mcu.ADC$ControlRegister: int convertVoltage()>();

        return $stack1;
    }

    static void access$200(avrora.sim.mcu.ADC$ControlRegister)
    {
        avrora.sim.mcu.ADC$ControlRegister x0;

        x0 := @parameter0: avrora.sim.mcu.ADC$ControlRegister;

        specialinvoke x0.<avrora.sim.mcu.ADC$ControlRegister: void insertConversion()>();

        return;
    }

    static void access$300(avrora.sim.mcu.ADC$ControlRegister)
    {
        avrora.sim.mcu.ADC$ControlRegister x0;

        x0 := @parameter0: avrora.sim.mcu.ADC$ControlRegister;

        specialinvoke x0.<avrora.sim.mcu.ADC$ControlRegister: void stopConversion()>();

        return;
    }
}
