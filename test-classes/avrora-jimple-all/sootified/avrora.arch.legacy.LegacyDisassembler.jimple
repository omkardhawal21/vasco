public class avrora.arch.legacy.LegacyDisassembler extends java.lang.Object implements avrora.arch.AbstractDisassembler
{
    int pc;
    int index;
    byte[] code;
    static final avrora.arch.legacy.LegacyRegister[] GPR_table;
    static final avrora.arch.legacy.LegacyRegister[] HGPR_table;
    static final avrora.arch.legacy.LegacyRegister[] MGPR_table;
    static final avrora.arch.legacy.LegacyRegister[] YZ_table;
    static final avrora.arch.legacy.LegacyRegister[] Z_table;
    static final avrora.arch.legacy.LegacyRegister[] EGPR_table;
    static final avrora.arch.legacy.LegacyRegister[] RDL_table;
    static final avrora.arch.legacy.LegacyRegister[] XYZ_table;

    public void <init>()
    {
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public avrora.arch.AbstractInstr disassemble(int, int, byte[])
    {
        avrora.arch.legacy.LegacyDisassembler this;
        byte[] code;
        int base, index;
        avrora.arch.legacy.LegacyInstr $stack4;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        base := @parameter0: int;

        index := @parameter1: int;

        code := @parameter2: byte[];

        $stack4 = virtualinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr disassembleLegacy(byte[],int,int)>(code, base, index);

        return $stack4;
    }

    public avrora.arch.legacy.LegacyInstr disassembleLegacy(byte[], int, int)
    {
        byte[] code;
        int index, $stack5, base, $stack9;
        byte $stack6, $stack7;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyInstr $stack10;
        avrora.arch.legacy.LegacyInstr$InvalidImmediate $stack11;
        avrora.arch.legacy.LegacyDisassembler$InvalidInstruction $stack12;
        short word1#1;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        code := @parameter0: byte[];

        base := @parameter1: int;

        index := @parameter2: int;

     label1:
        $stack7 = code[index];

        $stack5 = index + 1;

        $stack6 = code[$stack5];

        word1#1 = staticinvoke <cck.util.Arithmetic: short word(byte,byte)>($stack7, $stack6);

        this.<avrora.arch.legacy.LegacyDisassembler: int index> = index;

        $stack9 = base + index;

        this.<avrora.arch.legacy.LegacyDisassembler: int pc> = $stack9;

        this.<avrora.arch.legacy.LegacyDisassembler: byte[] code> = code;

        $stack10 = virtualinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_root(int)>(word1#1);

     label2:
        return $stack10;

     label3:
        $stack12 := @caughtexception;

        return null;

     label4:
        $stack11 := @caughtexception;

        return null;

        catch avrora.arch.legacy.LegacyDisassembler$InvalidInstruction from label1 to label2 with label3;
        catch avrora.arch.legacy.LegacyInstr$InvalidImmediate from label1 to label2 with label4;
    }

    private avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[], int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int index, $stack5, $stack6, $stack7, $stack9, $stack10;
        avrora.arch.legacy.LegacyDisassembler$InvalidInstruction $stack4, $stack8;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] table;
        avrora.arch.legacy.LegacyRegister reg;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        table := @parameter0: avrora.arch.legacy.LegacyRegister[];

        index := @parameter1: int;

        if index < 0 goto label1;

        $stack7 = lengthof table;

        if index < $stack7 goto label2;

     label1:
        $stack4 = new avrora.arch.legacy.LegacyDisassembler$InvalidInstruction;

        $stack5 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: int getWord(int)>(0);

        $stack6 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        specialinvoke $stack4.<avrora.arch.legacy.LegacyDisassembler$InvalidInstruction: void <init>(avrora.arch.legacy.LegacyDisassembler,int,int)>(this, $stack5, $stack6);

        throw $stack4;

     label2:
        reg = table[index];

        if reg != null goto label3;

        $stack8 = new avrora.arch.legacy.LegacyDisassembler$InvalidInstruction;

        $stack9 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: int getWord(int)>(0);

        $stack10 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        specialinvoke $stack8.<avrora.arch.legacy.LegacyDisassembler$InvalidInstruction: void <init>(avrora.arch.legacy.LegacyDisassembler,int,int)>(this, $stack9, $stack10);

        throw $stack8;

     label3:
        return reg;
    }

    private int getWord(int)
    {
        avrora.arch.legacy.LegacyDisassembler this;
        int word, $stack2, $stack3, $stack4, $stack6, $stack7, $stack8, $stack9;
        byte[] $stack5, $stack10;
        byte $stack11, $stack12;
        short $stack13;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word := @parameter0: int;

        $stack5 = this.<avrora.arch.legacy.LegacyDisassembler: byte[] code>;

        $stack3 = this.<avrora.arch.legacy.LegacyDisassembler: int index>;

        $stack2 = word * 2;

        $stack4 = $stack3 + $stack2;

        $stack12 = $stack5[$stack4];

        $stack10 = this.<avrora.arch.legacy.LegacyDisassembler: byte[] code>;

        $stack7 = this.<avrora.arch.legacy.LegacyDisassembler: int index>;

        $stack6 = word * 2;

        $stack8 = $stack7 + $stack6;

        $stack9 = $stack8 + 1;

        $stack11 = $stack10[$stack9];

        $stack13 = staticinvoke <cck.util.Arithmetic: short word(byte,byte)>($stack12, $stack11);

        return $stack13;
    }

    private int getByte(int)
    {
        avrora.arch.legacy.LegacyDisassembler this;
        int word, $stack2, $stack5;
        byte[] $stack3;
        byte $stack4;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word := @parameter0: int;

        $stack3 = this.<avrora.arch.legacy.LegacyDisassembler: byte[] code>;

        $stack2 = word * 2;

        $stack4 = $stack3[$stack2];

        $stack5 = $stack4 & 255;

        return $stack5;
    }

    private int relative(int, int)
    {
        int signbit, $stack4, $stack5, $stack6, address#1, address#2;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        address#1 := @parameter0: int;

        signbit := @parameter1: int;

        address#2 = staticinvoke <cck.util.Arithmetic: int signExtend(int,int)>(address#1, signbit);

        $stack4 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack5 = address#2 + $stack4;

        $stack6 = $stack5 + 1;

        return $stack6;
    }

    private avrora.arch.legacy.LegacyInstr decode_BST_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack4, $stack5, $stack6, $stack7, $stack10, rr#3, bit#4;
        avrora.arch.legacy.LegacyInstr$BST $stack8;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack9;
        avrora.arch.legacy.LegacyRegister $stack11;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack4 = word1 & 8;

        if $stack4 == 0 goto label1;

        return null;

     label1:
        $stack5 = word1 >> 4;

        $stack6 = $stack5 & 31;

        rr#3 = 0 | $stack6;

        $stack7 = word1 & 7;

        bit#4 = 0 | $stack7;

        $stack8 = new avrora.arch.legacy.LegacyInstr$BST;

        $stack10 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack9 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack11 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack9, rr#3);

        specialinvoke $stack8.<avrora.arch.legacy.LegacyInstr$BST: void <init>(int,avrora.arch.legacy.LegacyRegister,int)>($stack10, $stack11, bit#4);

        return $stack8;
    }

    private avrora.arch.legacy.LegacyInstr decode_BLD_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack4, $stack5, $stack6, $stack7, $stack10, rr#3, bit#4;
        avrora.arch.legacy.LegacyInstr$BLD $stack8;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack9;
        avrora.arch.legacy.LegacyRegister $stack11;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack4 = word1 & 8;

        if $stack4 == 0 goto label1;

        return null;

     label1:
        $stack5 = word1 >> 4;

        $stack6 = $stack5 & 31;

        rr#3 = 0 | $stack6;

        $stack7 = word1 & 7;

        bit#4 = 0 | $stack7;

        $stack8 = new avrora.arch.legacy.LegacyInstr$BLD;

        $stack10 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack9 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack11 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack9, rr#3);

        specialinvoke $stack8.<avrora.arch.legacy.LegacyInstr$BLD: void <init>(int,avrora.arch.legacy.LegacyRegister,int)>($stack10, $stack11, bit#4);

        return $stack8;
    }

    private avrora.arch.legacy.LegacyInstr decode_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, value;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyInstr $stack4, $stack5;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 9;

        value = $stack3 & 1;

        lookupswitch(value)
        {
            case 0: goto label2;
            case 1: goto label1;
            default: goto label3;
        };

     label1:
        $stack4 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_BST_0(int)>(word1);

        return $stack4;

     label2:
        $stack5 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_BLD_0(int)>(word1);

        return $stack5;

     label3:
        return null;
    }

    private avrora.arch.legacy.LegacyInstr decode_BRPL_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack6, $stack7, target#2;
        avrora.arch.legacy.LegacyInstr$BRPL $stack5;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 3;

        $stack4 = $stack3 & 127;

        target#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$BRPL;

        $stack6 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack7 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: int relative(int,int)>(target#2, 6);

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$BRPL: void <init>(int,int)>($stack6, $stack7);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_BRGE_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack6, $stack7, target#2;
        avrora.arch.legacy.LegacyInstr$BRGE $stack5;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 3;

        $stack4 = $stack3 & 127;

        target#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$BRGE;

        $stack6 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack7 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: int relative(int,int)>(target#2, 6);

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$BRGE: void <init>(int,int)>($stack6, $stack7);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_BRTC_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack6, $stack7, target#2;
        avrora.arch.legacy.LegacyInstr$BRTC $stack5;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 3;

        $stack4 = $stack3 & 127;

        target#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$BRTC;

        $stack6 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack7 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: int relative(int,int)>(target#2, 6);

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$BRTC: void <init>(int,int)>($stack6, $stack7);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_BRNE_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack6, $stack7, target#2;
        avrora.arch.legacy.LegacyInstr$BRNE $stack5;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 3;

        $stack4 = $stack3 & 127;

        target#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$BRNE;

        $stack6 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack7 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: int relative(int,int)>(target#2, 6);

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$BRNE: void <init>(int,int)>($stack6, $stack7);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_BRVC_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack6, $stack7, target#2;
        avrora.arch.legacy.LegacyInstr$BRVC $stack5;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 3;

        $stack4 = $stack3 & 127;

        target#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$BRVC;

        $stack6 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack7 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: int relative(int,int)>(target#2, 6);

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$BRVC: void <init>(int,int)>($stack6, $stack7);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_BRID_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack6, $stack7, target#2;
        avrora.arch.legacy.LegacyInstr$BRID $stack5;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 3;

        $stack4 = $stack3 & 127;

        target#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$BRID;

        $stack6 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack7 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: int relative(int,int)>(target#2, 6);

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$BRID: void <init>(int,int)>($stack6, $stack7);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_BRHC_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack6, $stack7, target#2;
        avrora.arch.legacy.LegacyInstr$BRHC $stack5;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 3;

        $stack4 = $stack3 & 127;

        target#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$BRHC;

        $stack6 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack7 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: int relative(int,int)>(target#2, 6);

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$BRHC: void <init>(int,int)>($stack6, $stack7);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_BRCC_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack6, $stack7, target#2;
        avrora.arch.legacy.LegacyInstr$BRCC $stack5;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 3;

        $stack4 = $stack3 & 127;

        target#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$BRCC;

        $stack6 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack7 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: int relative(int,int)>(target#2, 6);

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$BRCC: void <init>(int,int)>($stack6, $stack7);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_1(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, value;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyInstr $stack3, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack10;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        value = word1 & 7;

        tableswitch(value)
        {
            case 0: goto label8;
            case 1: goto label4;
            case 2: goto label1;
            case 3: goto label5;
            case 4: goto label2;
            case 5: goto label7;
            case 6: goto label3;
            case 7: goto label6;
            default: goto label9;
        };

     label1:
        $stack8 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_BRPL_0(int)>(word1);

        return $stack8;

     label2:
        $stack6 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_BRGE_0(int)>(word1);

        return $stack6;

     label3:
        $stack4 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_BRTC_0(int)>(word1);

        return $stack4;

     label4:
        $stack9 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_BRNE_0(int)>(word1);

        return $stack9;

     label5:
        $stack7 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_BRVC_0(int)>(word1);

        return $stack7;

     label6:
        $stack3 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_BRID_0(int)>(word1);

        return $stack3;

     label7:
        $stack5 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_BRHC_0(int)>(word1);

        return $stack5;

     label8:
        $stack10 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_BRCC_0(int)>(word1);

        return $stack10;

     label9:
        return null;
    }

    private avrora.arch.legacy.LegacyInstr decode_SBRS_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack4, $stack5, $stack6, $stack7, $stack10, rr#3, bit#4;
        avrora.arch.legacy.LegacyInstr$SBRS $stack8;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack9;
        avrora.arch.legacy.LegacyRegister $stack11;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack4 = word1 & 8;

        if $stack4 == 0 goto label1;

        return null;

     label1:
        $stack5 = word1 >> 4;

        $stack6 = $stack5 & 31;

        rr#3 = 0 | $stack6;

        $stack7 = word1 & 7;

        bit#4 = 0 | $stack7;

        $stack8 = new avrora.arch.legacy.LegacyInstr$SBRS;

        $stack10 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack9 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack11 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack9, rr#3);

        specialinvoke $stack8.<avrora.arch.legacy.LegacyInstr$SBRS: void <init>(int,avrora.arch.legacy.LegacyRegister,int)>($stack10, $stack11, bit#4);

        return $stack8;
    }

    private avrora.arch.legacy.LegacyInstr decode_SBRC_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack4, $stack5, $stack6, $stack7, $stack10, rr#3, bit#4;
        avrora.arch.legacy.LegacyInstr$SBRC $stack8;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack9;
        avrora.arch.legacy.LegacyRegister $stack11;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack4 = word1 & 8;

        if $stack4 == 0 goto label1;

        return null;

     label1:
        $stack5 = word1 >> 4;

        $stack6 = $stack5 & 31;

        rr#3 = 0 | $stack6;

        $stack7 = word1 & 7;

        bit#4 = 0 | $stack7;

        $stack8 = new avrora.arch.legacy.LegacyInstr$SBRC;

        $stack10 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack9 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack11 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack9, rr#3);

        specialinvoke $stack8.<avrora.arch.legacy.LegacyInstr$SBRC: void <init>(int,avrora.arch.legacy.LegacyRegister,int)>($stack10, $stack11, bit#4);

        return $stack8;
    }

    private avrora.arch.legacy.LegacyInstr decode_2(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, value;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyInstr $stack4, $stack5;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 9;

        value = $stack3 & 1;

        lookupswitch(value)
        {
            case 0: goto label2;
            case 1: goto label1;
            default: goto label3;
        };

     label1:
        $stack4 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_SBRS_0(int)>(word1);

        return $stack4;

     label2:
        $stack5 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_SBRC_0(int)>(word1);

        return $stack5;

     label3:
        return null;
    }

    private avrora.arch.legacy.LegacyInstr decode_BRMI_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack6, $stack7, target#2;
        avrora.arch.legacy.LegacyInstr$BRMI $stack5;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 3;

        $stack4 = $stack3 & 127;

        target#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$BRMI;

        $stack6 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack7 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: int relative(int,int)>(target#2, 6);

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$BRMI: void <init>(int,int)>($stack6, $stack7);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_BRLT_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack6, $stack7, target#2;
        avrora.arch.legacy.LegacyInstr$BRLT $stack5;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 3;

        $stack4 = $stack3 & 127;

        target#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$BRLT;

        $stack6 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack7 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: int relative(int,int)>(target#2, 6);

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$BRLT: void <init>(int,int)>($stack6, $stack7);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_BRTS_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack6, $stack7, target#2;
        avrora.arch.legacy.LegacyInstr$BRTS $stack5;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 3;

        $stack4 = $stack3 & 127;

        target#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$BRTS;

        $stack6 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack7 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: int relative(int,int)>(target#2, 6);

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$BRTS: void <init>(int,int)>($stack6, $stack7);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_BREQ_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack6, $stack7, target#2;
        avrora.arch.legacy.LegacyInstr$BREQ $stack5;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 3;

        $stack4 = $stack3 & 127;

        target#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$BREQ;

        $stack6 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack7 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: int relative(int,int)>(target#2, 6);

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$BREQ: void <init>(int,int)>($stack6, $stack7);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_BRVS_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack6, $stack7, target#2;
        avrora.arch.legacy.LegacyInstr$BRVS $stack5;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 3;

        $stack4 = $stack3 & 127;

        target#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$BRVS;

        $stack6 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack7 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: int relative(int,int)>(target#2, 6);

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$BRVS: void <init>(int,int)>($stack6, $stack7);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_BRIE_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack6, $stack7, target#2;
        avrora.arch.legacy.LegacyInstr$BRIE $stack5;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 3;

        $stack4 = $stack3 & 127;

        target#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$BRIE;

        $stack6 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack7 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: int relative(int,int)>(target#2, 6);

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$BRIE: void <init>(int,int)>($stack6, $stack7);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_BRHS_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack6, $stack7, target#2;
        avrora.arch.legacy.LegacyInstr$BRHS $stack5;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 3;

        $stack4 = $stack3 & 127;

        target#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$BRHS;

        $stack6 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack7 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: int relative(int,int)>(target#2, 6);

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$BRHS: void <init>(int,int)>($stack6, $stack7);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_BRCS_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack6, $stack7, target#2;
        avrora.arch.legacy.LegacyInstr$BRCS $stack5;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 3;

        $stack4 = $stack3 & 127;

        target#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$BRCS;

        $stack6 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack7 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: int relative(int,int)>(target#2, 6);

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$BRCS: void <init>(int,int)>($stack6, $stack7);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_3(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, value;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyInstr $stack3, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack10;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        value = word1 & 7;

        tableswitch(value)
        {
            case 0: goto label8;
            case 1: goto label4;
            case 2: goto label1;
            case 3: goto label5;
            case 4: goto label2;
            case 5: goto label7;
            case 6: goto label3;
            case 7: goto label6;
            default: goto label9;
        };

     label1:
        $stack8 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_BRMI_0(int)>(word1);

        return $stack8;

     label2:
        $stack6 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_BRLT_0(int)>(word1);

        return $stack6;

     label3:
        $stack4 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_BRTS_0(int)>(word1);

        return $stack4;

     label4:
        $stack9 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_BREQ_0(int)>(word1);

        return $stack9;

     label5:
        $stack7 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_BRVS_0(int)>(word1);

        return $stack7;

     label6:
        $stack3 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_BRIE_0(int)>(word1);

        return $stack3;

     label7:
        $stack5 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_BRHS_0(int)>(word1);

        return $stack5;

     label8:
        $stack10 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_BRCS_0(int)>(word1);

        return $stack10;

     label9:
        return null;
    }

    private avrora.arch.legacy.LegacyInstr decode_4(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, value;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyInstr $stack4, $stack5, $stack6, $stack7;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 10;

        value = $stack3 & 3;

        tableswitch(value)
        {
            case 0: goto label4;
            case 1: goto label2;
            case 2: goto label1;
            case 3: goto label3;
            default: goto label5;
        };

     label1:
        $stack5 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_0(int)>(word1);

        return $stack5;

     label2:
        $stack6 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_1(int)>(word1);

        return $stack6;

     label3:
        $stack4 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_2(int)>(word1);

        return $stack4;

     label4:
        $stack7 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_3(int)>(word1);

        return $stack7;

     label5:
        return null;
    }

    private avrora.arch.legacy.LegacyInstr decode_SBCI_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack12, imm#3, rd#4, imm#5;
        avrora.arch.legacy.LegacyInstr$SBCI $stack10;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack11;
        avrora.arch.legacy.LegacyRegister $stack13;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack4 = word1 >> 8;

        $stack5 = $stack4 & 15;

        $stack6 = $stack5 << 4;

        imm#3 = 0 | $stack6;

        $stack7 = word1 >> 4;

        $stack8 = $stack7 & 15;

        rd#4 = 0 | $stack8;

        $stack9 = word1 & 15;

        imm#5 = imm#3 | $stack9;

        $stack10 = new avrora.arch.legacy.LegacyInstr$SBCI;

        $stack12 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack11 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] HGPR_table>;

        $stack13 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack11, rd#4);

        specialinvoke $stack10.<avrora.arch.legacy.LegacyInstr$SBCI: void <init>(int,avrora.arch.legacy.LegacyRegister,int)>($stack12, $stack13, imm#5);

        return $stack10;
    }

    private avrora.arch.legacy.LegacyInstr decode_ST_1(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack7, rr#2;
        avrora.arch.legacy.LegacyInstr$ST $stack5;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack6;
        avrora.arch.legacy.LegacyRegister $stack8, $stack9;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 4;

        $stack4 = $stack3 & 31;

        rr#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$ST;

        $stack7 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack8 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister Y>;

        $stack6 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack9 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack6, rr#2);

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$ST: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister)>($stack7, $stack8, $stack9);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_ST_2(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack7, rr#2;
        avrora.arch.legacy.LegacyInstr$ST $stack5;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack6;
        avrora.arch.legacy.LegacyRegister $stack8, $stack9;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 4;

        $stack4 = $stack3 & 31;

        rr#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$ST;

        $stack7 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack8 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister Z>;

        $stack6 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack9 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack6, rr#2);

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$ST: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister)>($stack7, $stack8, $stack9);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_5(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, value;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyInstr $stack3, $stack4;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        value = word1 & 15;

        lookupswitch(value)
        {
            case 0: goto label2;
            case 8: goto label1;
            default: goto label3;
        };

     label1:
        $stack3 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_ST_1(int)>(word1);

        return $stack3;

     label2:
        $stack4 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_ST_2(int)>(word1);

        return $stack4;

     label3:
        return null;
    }

    private avrora.arch.legacy.LegacyInstr decode_LD_1(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack7, rd#2;
        avrora.arch.legacy.LegacyInstr$LD $stack5;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack6;
        avrora.arch.legacy.LegacyRegister $stack8, $stack9;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 4;

        $stack4 = $stack3 & 31;

        rd#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$LD;

        $stack7 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack6 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack8 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack6, rd#2);

        $stack9 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister Y>;

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$LD: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister)>($stack7, $stack8, $stack9);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_LD_2(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack7, rd#2;
        avrora.arch.legacy.LegacyInstr$LD $stack5;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack6;
        avrora.arch.legacy.LegacyRegister $stack8, $stack9;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 4;

        $stack4 = $stack3 & 31;

        rd#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$LD;

        $stack7 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack6 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack8 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack6, rd#2);

        $stack9 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister Z>;

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$LD: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister)>($stack7, $stack8, $stack9);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_6(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, value;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyInstr $stack3, $stack4;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        value = word1 & 15;

        lookupswitch(value)
        {
            case 0: goto label2;
            case 8: goto label1;
            default: goto label3;
        };

     label1:
        $stack3 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_LD_1(int)>(word1);

        return $stack3;

     label2:
        $stack4 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_LD_2(int)>(word1);

        return $stack4;

     label3:
        return null;
    }

    private avrora.arch.legacy.LegacyInstr decode_7(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, value;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyInstr $stack4, $stack5;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 9;

        value = $stack3 & 7;

        lookupswitch(value)
        {
            case 0: goto label2;
            case 1: goto label1;
            default: goto label3;
        };

     label1:
        $stack4 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_5(int)>(word1);

        return $stack4;

     label2:
        $stack5 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_6(int)>(word1);

        return $stack5;

     label3:
        return null;
    }

    private avrora.arch.legacy.LegacyInstr decode_OUT_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack12, ior#3, rr#4, ior#5;
        avrora.arch.legacy.LegacyInstr$OUT $stack10;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack11;
        avrora.arch.legacy.LegacyRegister $stack13;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack4 = word1 >> 9;

        $stack5 = $stack4 & 3;

        $stack6 = $stack5 << 4;

        ior#3 = 0 | $stack6;

        $stack7 = word1 >> 4;

        $stack8 = $stack7 & 31;

        rr#4 = 0 | $stack8;

        $stack9 = word1 & 15;

        ior#5 = ior#3 | $stack9;

        $stack10 = new avrora.arch.legacy.LegacyInstr$OUT;

        $stack12 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack11 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack13 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack11, rr#4);

        specialinvoke $stack10.<avrora.arch.legacy.LegacyInstr$OUT: void <init>(int,int,avrora.arch.legacy.LegacyRegister)>($stack12, ior#5, $stack13);

        return $stack10;
    }

    private avrora.arch.legacy.LegacyInstr decode_IN_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack12, imm#3, rd#4, imm#5;
        avrora.arch.legacy.LegacyInstr$IN $stack10;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack11;
        avrora.arch.legacy.LegacyRegister $stack13;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack4 = word1 >> 9;

        $stack5 = $stack4 & 3;

        $stack6 = $stack5 << 4;

        imm#3 = 0 | $stack6;

        $stack7 = word1 >> 4;

        $stack8 = $stack7 & 31;

        rd#4 = 0 | $stack8;

        $stack9 = word1 & 15;

        imm#5 = imm#3 | $stack9;

        $stack10 = new avrora.arch.legacy.LegacyInstr$IN;

        $stack12 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack11 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack13 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack11, rd#4);

        specialinvoke $stack10.<avrora.arch.legacy.LegacyInstr$IN: void <init>(int,avrora.arch.legacy.LegacyRegister,int)>($stack12, $stack13, imm#5);

        return $stack10;
    }

    private avrora.arch.legacy.LegacyInstr decode_8(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, value;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyInstr $stack4, $stack5;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 11;

        value = $stack3 & 1;

        lookupswitch(value)
        {
            case 0: goto label2;
            case 1: goto label1;
            default: goto label3;
        };

     label1:
        $stack4 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_OUT_0(int)>(word1);

        return $stack4;

     label2:
        $stack5 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_IN_0(int)>(word1);

        return $stack5;

     label3:
        return null;
    }

    private avrora.arch.legacy.LegacyInstr decode_CPI_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack12, imm#3, rd#4, imm#5;
        avrora.arch.legacy.LegacyInstr$CPI $stack10;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack11;
        avrora.arch.legacy.LegacyRegister $stack13;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack4 = word1 >> 8;

        $stack5 = $stack4 & 15;

        $stack6 = $stack5 << 4;

        imm#3 = 0 | $stack6;

        $stack7 = word1 >> 4;

        $stack8 = $stack7 & 15;

        rd#4 = 0 | $stack8;

        $stack9 = word1 & 15;

        imm#5 = imm#3 | $stack9;

        $stack10 = new avrora.arch.legacy.LegacyInstr$CPI;

        $stack12 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack11 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] HGPR_table>;

        $stack13 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack11, rd#4);

        specialinvoke $stack10.<avrora.arch.legacy.LegacyInstr$CPI: void <init>(int,avrora.arch.legacy.LegacyRegister,int)>($stack12, $stack13, imm#5);

        return $stack10;
    }

    private avrora.arch.legacy.LegacyInstr decode_ANDI_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack12, imm#3, rd#4, imm#5;
        avrora.arch.legacy.LegacyInstr$ANDI $stack10;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack11;
        avrora.arch.legacy.LegacyRegister $stack13;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack4 = word1 >> 8;

        $stack5 = $stack4 & 15;

        $stack6 = $stack5 << 4;

        imm#3 = 0 | $stack6;

        $stack7 = word1 >> 4;

        $stack8 = $stack7 & 15;

        rd#4 = 0 | $stack8;

        $stack9 = word1 & 15;

        imm#5 = imm#3 | $stack9;

        $stack10 = new avrora.arch.legacy.LegacyInstr$ANDI;

        $stack12 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack11 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] HGPR_table>;

        $stack13 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack11, rd#4);

        specialinvoke $stack10.<avrora.arch.legacy.LegacyInstr$ANDI: void <init>(int,avrora.arch.legacy.LegacyRegister,int)>($stack12, $stack13, imm#5);

        return $stack10;
    }

    private avrora.arch.legacy.LegacyInstr decode_RJMP_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack5, $stack6, target#2;
        avrora.arch.legacy.LegacyInstr$RJMP $stack4;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 & 4095;

        target#2 = 0 | $stack3;

        $stack4 = new avrora.arch.legacy.LegacyInstr$RJMP;

        $stack5 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack6 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: int relative(int,int)>(target#2, 11);

        specialinvoke $stack4.<avrora.arch.legacy.LegacyInstr$RJMP: void <init>(int,int)>($stack5, $stack6);

        return $stack4;
    }

    private avrora.arch.legacy.LegacyInstr decode_OR_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $stack12, $stack15, rr#3, rd#4, rd#5, rr#6;
        avrora.arch.legacy.LegacyInstr$OR $stack13;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack14, $stack17;
        avrora.arch.legacy.LegacyRegister $stack16, $stack18;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack4 = word1 >> 9;

        $stack5 = $stack4 & 1;

        $stack6 = $stack5 << 4;

        rr#3 = 0 | $stack6;

        $stack7 = word1 >> 8;

        $stack8 = $stack7 & 1;

        $stack9 = $stack8 << 4;

        rd#4 = 0 | $stack9;

        $stack10 = word1 >> 4;

        $stack11 = $stack10 & 15;

        rd#5 = rd#4 | $stack11;

        $stack12 = word1 & 15;

        rr#6 = rr#3 | $stack12;

        $stack13 = new avrora.arch.legacy.LegacyInstr$OR;

        $stack15 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack14 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack16 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack14, rd#5);

        $stack17 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack18 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack17, rr#6);

        specialinvoke $stack13.<avrora.arch.legacy.LegacyInstr$OR: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister)>($stack15, $stack16, $stack18);

        return $stack13;
    }

    private avrora.arch.legacy.LegacyInstr decode_EOR_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $stack12, $stack15, rr#3, rd#4, rd#5, rr#6;
        avrora.arch.legacy.LegacyInstr$EOR $stack13;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack14, $stack17;
        avrora.arch.legacy.LegacyRegister $stack16, $stack18;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack4 = word1 >> 9;

        $stack5 = $stack4 & 1;

        $stack6 = $stack5 << 4;

        rr#3 = 0 | $stack6;

        $stack7 = word1 >> 8;

        $stack8 = $stack7 & 1;

        $stack9 = $stack8 << 4;

        rd#4 = 0 | $stack9;

        $stack10 = word1 >> 4;

        $stack11 = $stack10 & 15;

        rd#5 = rd#4 | $stack11;

        $stack12 = word1 & 15;

        rr#6 = rr#3 | $stack12;

        $stack13 = new avrora.arch.legacy.LegacyInstr$EOR;

        $stack15 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack14 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack16 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack14, rd#5);

        $stack17 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack18 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack17, rr#6);

        specialinvoke $stack13.<avrora.arch.legacy.LegacyInstr$EOR: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister)>($stack15, $stack16, $stack18);

        return $stack13;
    }

    private avrora.arch.legacy.LegacyInstr decode_MOV_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $stack12, $stack15, rr#3, rd#4, rd#5, rr#6;
        avrora.arch.legacy.LegacyInstr$MOV $stack13;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack14, $stack17;
        avrora.arch.legacy.LegacyRegister $stack16, $stack18;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack4 = word1 >> 9;

        $stack5 = $stack4 & 1;

        $stack6 = $stack5 << 4;

        rr#3 = 0 | $stack6;

        $stack7 = word1 >> 8;

        $stack8 = $stack7 & 1;

        $stack9 = $stack8 << 4;

        rd#4 = 0 | $stack9;

        $stack10 = word1 >> 4;

        $stack11 = $stack10 & 15;

        rd#5 = rd#4 | $stack11;

        $stack12 = word1 & 15;

        rr#6 = rr#3 | $stack12;

        $stack13 = new avrora.arch.legacy.LegacyInstr$MOV;

        $stack15 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack14 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack16 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack14, rd#5);

        $stack17 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack18 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack17, rr#6);

        specialinvoke $stack13.<avrora.arch.legacy.LegacyInstr$MOV: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister)>($stack15, $stack16, $stack18);

        return $stack13;
    }

    private avrora.arch.legacy.LegacyInstr decode_AND_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $stack12, $stack15, rr#3, rd#4, rd#5, rr#6;
        avrora.arch.legacy.LegacyInstr$AND $stack13;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack14, $stack17;
        avrora.arch.legacy.LegacyRegister $stack16, $stack18;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack4 = word1 >> 9;

        $stack5 = $stack4 & 1;

        $stack6 = $stack5 << 4;

        rr#3 = 0 | $stack6;

        $stack7 = word1 >> 8;

        $stack8 = $stack7 & 1;

        $stack9 = $stack8 << 4;

        rd#4 = 0 | $stack9;

        $stack10 = word1 >> 4;

        $stack11 = $stack10 & 15;

        rd#5 = rd#4 | $stack11;

        $stack12 = word1 & 15;

        rr#6 = rr#3 | $stack12;

        $stack13 = new avrora.arch.legacy.LegacyInstr$AND;

        $stack15 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack14 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack16 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack14, rd#5);

        $stack17 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack18 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack17, rr#6);

        specialinvoke $stack13.<avrora.arch.legacy.LegacyInstr$AND: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister)>($stack15, $stack16, $stack18);

        return $stack13;
    }

    private avrora.arch.legacy.LegacyInstr decode_9(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, value;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyInstr $stack4, $stack5, $stack6, $stack7;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 10;

        value = $stack3 & 3;

        tableswitch(value)
        {
            case 0: goto label4;
            case 1: goto label2;
            case 2: goto label1;
            case 3: goto label3;
            default: goto label5;
        };

     label1:
        $stack5 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_OR_0(int)>(word1);

        return $stack5;

     label2:
        $stack6 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_EOR_0(int)>(word1);

        return $stack6;

     label3:
        $stack4 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_MOV_0(int)>(word1);

        return $stack4;

     label4:
        $stack7 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_AND_0(int)>(word1);

        return $stack7;

     label5:
        return null;
    }

    private avrora.arch.legacy.LegacyInstr decode_RCALL_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack5, $stack6, target#2;
        avrora.arch.legacy.LegacyInstr$RCALL $stack4;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 & 4095;

        target#2 = 0 | $stack3;

        $stack4 = new avrora.arch.legacy.LegacyInstr$RCALL;

        $stack5 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack6 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: int relative(int,int)>(target#2, 11);

        specialinvoke $stack4.<avrora.arch.legacy.LegacyInstr$RCALL: void <init>(int,int)>($stack5, $stack6);

        return $stack4;
    }

    private avrora.arch.legacy.LegacyInstr decode_SBI_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack4, $stack5, $stack6, $stack8, ior#3, bit#4;
        avrora.arch.legacy.LegacyInstr$SBI $stack7;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack4 = word1 >> 3;

        $stack5 = $stack4 & 31;

        ior#3 = 0 | $stack5;

        $stack6 = word1 & 7;

        bit#4 = 0 | $stack6;

        $stack7 = new avrora.arch.legacy.LegacyInstr$SBI;

        $stack8 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        specialinvoke $stack7.<avrora.arch.legacy.LegacyInstr$SBI: void <init>(int,int,int)>($stack8, ior#3, bit#4);

        return $stack7;
    }

    private avrora.arch.legacy.LegacyInstr decode_SBIC_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack4, $stack5, $stack6, $stack8, ior#3, bit#4;
        avrora.arch.legacy.LegacyInstr$SBIC $stack7;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack4 = word1 >> 3;

        $stack5 = $stack4 & 31;

        ior#3 = 0 | $stack5;

        $stack6 = word1 & 7;

        bit#4 = 0 | $stack6;

        $stack7 = new avrora.arch.legacy.LegacyInstr$SBIC;

        $stack8 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        specialinvoke $stack7.<avrora.arch.legacy.LegacyInstr$SBIC: void <init>(int,int,int)>($stack8, ior#3, bit#4);

        return $stack7;
    }

    private avrora.arch.legacy.LegacyInstr decode_SBIS_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack4, $stack5, $stack6, $stack8, ior#3, bit#4;
        avrora.arch.legacy.LegacyInstr$SBIS $stack7;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack4 = word1 >> 3;

        $stack5 = $stack4 & 31;

        ior#3 = 0 | $stack5;

        $stack6 = word1 & 7;

        bit#4 = 0 | $stack6;

        $stack7 = new avrora.arch.legacy.LegacyInstr$SBIS;

        $stack8 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        specialinvoke $stack7.<avrora.arch.legacy.LegacyInstr$SBIS: void <init>(int,int,int)>($stack8, ior#3, bit#4);

        return $stack7;
    }

    private avrora.arch.legacy.LegacyInstr decode_CBI_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack4, $stack5, $stack6, $stack8, ior#3, bit#4;
        avrora.arch.legacy.LegacyInstr$CBI $stack7;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack4 = word1 >> 3;

        $stack5 = $stack4 & 31;

        ior#3 = 0 | $stack5;

        $stack6 = word1 & 7;

        bit#4 = 0 | $stack6;

        $stack7 = new avrora.arch.legacy.LegacyInstr$CBI;

        $stack8 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        specialinvoke $stack7.<avrora.arch.legacy.LegacyInstr$CBI: void <init>(int,int,int)>($stack8, ior#3, bit#4);

        return $stack7;
    }

    private avrora.arch.legacy.LegacyInstr decode_10(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, value;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyInstr $stack4, $stack5, $stack6, $stack7;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 8;

        value = $stack3 & 3;

        tableswitch(value)
        {
            case 0: goto label4;
            case 1: goto label2;
            case 2: goto label1;
            case 3: goto label3;
            default: goto label5;
        };

     label1:
        $stack5 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_SBI_0(int)>(word1);

        return $stack5;

     label2:
        $stack6 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_SBIC_0(int)>(word1);

        return $stack6;

     label3:
        $stack4 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_SBIS_0(int)>(word1);

        return $stack4;

     label4:
        $stack7 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_CBI_0(int)>(word1);

        return $stack7;

     label5:
        return null;
    }

    private avrora.arch.legacy.LegacyInstr decode_SBIW_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack12, imm#3, rd#4, imm#5;
        avrora.arch.legacy.LegacyInstr$SBIW $stack10;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack11;
        avrora.arch.legacy.LegacyRegister $stack13;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack4 = word1 >> 6;

        $stack5 = $stack4 & 3;

        $stack6 = $stack5 << 4;

        imm#3 = 0 | $stack6;

        $stack7 = word1 >> 4;

        $stack8 = $stack7 & 3;

        rd#4 = 0 | $stack8;

        $stack9 = word1 & 15;

        imm#5 = imm#3 | $stack9;

        $stack10 = new avrora.arch.legacy.LegacyInstr$SBIW;

        $stack12 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack11 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] RDL_table>;

        $stack13 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack11, rd#4);

        specialinvoke $stack10.<avrora.arch.legacy.LegacyInstr$SBIW: void <init>(int,avrora.arch.legacy.LegacyRegister,int)>($stack12, $stack13, imm#5);

        return $stack10;
    }

    private avrora.arch.legacy.LegacyInstr decode_ADIW_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack12, imm#3, rd#4, imm#5;
        avrora.arch.legacy.LegacyInstr$ADIW $stack10;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack11;
        avrora.arch.legacy.LegacyRegister $stack13;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack4 = word1 >> 6;

        $stack5 = $stack4 & 3;

        $stack6 = $stack5 << 4;

        imm#3 = 0 | $stack6;

        $stack7 = word1 >> 4;

        $stack8 = $stack7 & 3;

        rd#4 = 0 | $stack8;

        $stack9 = word1 & 15;

        imm#5 = imm#3 | $stack9;

        $stack10 = new avrora.arch.legacy.LegacyInstr$ADIW;

        $stack12 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack11 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] RDL_table>;

        $stack13 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack11, rd#4);

        specialinvoke $stack10.<avrora.arch.legacy.LegacyInstr$ADIW: void <init>(int,avrora.arch.legacy.LegacyRegister,int)>($stack12, $stack13, imm#5);

        return $stack10;
    }

    private avrora.arch.legacy.LegacyInstr decode_11(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, value;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyInstr $stack4, $stack5;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 8;

        value = $stack3 & 1;

        lookupswitch(value)
        {
            case 0: goto label2;
            case 1: goto label1;
            default: goto label3;
        };

     label1:
        $stack4 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_SBIW_0(int)>(word1);

        return $stack4;

     label2:
        $stack5 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_ADIW_0(int)>(word1);

        return $stack5;

     label3:
        return null;
    }

    private avrora.arch.legacy.LegacyInstr decode_ASR_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack5, $stack6, $stack7, $stack8, $stack11, rd#2, rd#3;
        avrora.arch.legacy.LegacyInstr$ASR $stack9;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack10;
        avrora.arch.legacy.LegacyRegister $stack12;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 & 1;

        if $stack3 == 1 goto label1;

        return null;

     label1:
        $stack4 = word1 >> 8;

        $stack5 = $stack4 & 1;

        $stack6 = $stack5 << 4;

        rd#2 = 0 | $stack6;

        $stack7 = word1 >> 4;

        $stack8 = $stack7 & 15;

        rd#3 = rd#2 | $stack8;

        $stack9 = new avrora.arch.legacy.LegacyInstr$ASR;

        $stack11 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack10 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack12 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack10, rd#3);

        specialinvoke $stack9.<avrora.arch.legacy.LegacyInstr$ASR: void <init>(int,avrora.arch.legacy.LegacyRegister)>($stack11, $stack12);

        return $stack9;
    }

    private avrora.arch.legacy.LegacyInstr decode_CLI_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack2, $stack4;
        avrora.arch.legacy.LegacyInstr$CLI $stack3;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack2 = word1 & 1;

        if $stack2 == 0 goto label1;

        return null;

     label1:
        $stack3 = new avrora.arch.legacy.LegacyInstr$CLI;

        $stack4 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        specialinvoke $stack3.<avrora.arch.legacy.LegacyInstr$CLI: void <init>(int)>($stack4);

        return $stack3;
    }

    private avrora.arch.legacy.LegacyInstr decode_SES_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack2, $stack4;
        avrora.arch.legacy.LegacyInstr$SES $stack3;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack2 = word1 & 1;

        if $stack2 == 0 goto label1;

        return null;

     label1:
        $stack3 = new avrora.arch.legacy.LegacyInstr$SES;

        $stack4 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        specialinvoke $stack3.<avrora.arch.legacy.LegacyInstr$SES: void <init>(int)>($stack4);

        return $stack3;
    }

    private avrora.arch.legacy.LegacyInstr decode_SPM_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack2, $stack4;
        avrora.arch.legacy.LegacyInstr$SPM $stack3;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack2 = word1 & 1;

        if $stack2 == 0 goto label1;

        return null;

     label1:
        $stack3 = new avrora.arch.legacy.LegacyInstr$SPM;

        $stack4 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        specialinvoke $stack3.<avrora.arch.legacy.LegacyInstr$SPM: void <init>(int)>($stack4);

        return $stack3;
    }

    private avrora.arch.legacy.LegacyInstr decode_CLC_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack2, $stack4;
        avrora.arch.legacy.LegacyInstr$CLC $stack3;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack2 = word1 & 1;

        if $stack2 == 0 goto label1;

        return null;

     label1:
        $stack3 = new avrora.arch.legacy.LegacyInstr$CLC;

        $stack4 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        specialinvoke $stack3.<avrora.arch.legacy.LegacyInstr$CLC: void <init>(int)>($stack4);

        return $stack3;
    }

    private avrora.arch.legacy.LegacyInstr decode_WDR_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack2, $stack4;
        avrora.arch.legacy.LegacyInstr$WDR $stack3;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack2 = word1 & 1;

        if $stack2 == 0 goto label1;

        return null;

     label1:
        $stack3 = new avrora.arch.legacy.LegacyInstr$WDR;

        $stack4 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        specialinvoke $stack3.<avrora.arch.legacy.LegacyInstr$WDR: void <init>(int)>($stack4);

        return $stack3;
    }

    private avrora.arch.legacy.LegacyInstr decode_CLV_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack2, $stack4;
        avrora.arch.legacy.LegacyInstr$CLV $stack3;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack2 = word1 & 1;

        if $stack2 == 0 goto label1;

        return null;

     label1:
        $stack3 = new avrora.arch.legacy.LegacyInstr$CLV;

        $stack4 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        specialinvoke $stack3.<avrora.arch.legacy.LegacyInstr$CLV: void <init>(int)>($stack4);

        return $stack3;
    }

    private avrora.arch.legacy.LegacyInstr decode_ICALL_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        avrora.arch.legacy.LegacyInstr$ICALL $stack2;
        avrora.arch.legacy.LegacyDisassembler this;
        int $stack3, word1;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack2 = new avrora.arch.legacy.LegacyInstr$ICALL;

        $stack3 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        specialinvoke $stack2.<avrora.arch.legacy.LegacyInstr$ICALL: void <init>(int)>($stack3);

        return $stack2;
    }

    private avrora.arch.legacy.LegacyInstr decode_RET_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        avrora.arch.legacy.LegacyInstr$RET $stack2;
        avrora.arch.legacy.LegacyDisassembler this;
        int $stack3, word1;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack2 = new avrora.arch.legacy.LegacyInstr$RET;

        $stack3 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        specialinvoke $stack2.<avrora.arch.legacy.LegacyInstr$RET: void <init>(int)>($stack3);

        return $stack2;
    }

    private avrora.arch.legacy.LegacyInstr decode_12(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, value;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyInstr $stack3, $stack4;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        value = word1 & 1;

        lookupswitch(value)
        {
            case 0: goto label2;
            case 1: goto label1;
            default: goto label3;
        };

     label1:
        $stack3 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_ICALL_0(int)>(word1);

        return $stack3;

     label2:
        $stack4 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_RET_0(int)>(word1);

        return $stack4;

     label3:
        return null;
    }

    private avrora.arch.legacy.LegacyInstr decode_SEV_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack2, $stack4;
        avrora.arch.legacy.LegacyInstr$SEV $stack3;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack2 = word1 & 1;

        if $stack2 == 0 goto label1;

        return null;

     label1:
        $stack3 = new avrora.arch.legacy.LegacyInstr$SEV;

        $stack4 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        specialinvoke $stack3.<avrora.arch.legacy.LegacyInstr$SEV: void <init>(int)>($stack4);

        return $stack3;
    }

    private avrora.arch.legacy.LegacyInstr decode_SEI_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack2, $stack4;
        avrora.arch.legacy.LegacyInstr$SEI $stack3;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack2 = word1 & 1;

        if $stack2 == 0 goto label1;

        return null;

     label1:
        $stack3 = new avrora.arch.legacy.LegacyInstr$SEI;

        $stack4 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        specialinvoke $stack3.<avrora.arch.legacy.LegacyInstr$SEI: void <init>(int)>($stack4);

        return $stack3;
    }

    private avrora.arch.legacy.LegacyInstr decode_CLS_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack2, $stack4;
        avrora.arch.legacy.LegacyInstr$CLS $stack3;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack2 = word1 & 1;

        if $stack2 == 0 goto label1;

        return null;

     label1:
        $stack3 = new avrora.arch.legacy.LegacyInstr$CLS;

        $stack4 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        specialinvoke $stack3.<avrora.arch.legacy.LegacyInstr$CLS: void <init>(int)>($stack4);

        return $stack3;
    }

    private avrora.arch.legacy.LegacyInstr decode_EICALL_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        avrora.arch.legacy.LegacyInstr$EICALL $stack2;
        avrora.arch.legacy.LegacyDisassembler this;
        int $stack3, word1;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack2 = new avrora.arch.legacy.LegacyInstr$EICALL;

        $stack3 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        specialinvoke $stack2.<avrora.arch.legacy.LegacyInstr$EICALL: void <init>(int)>($stack3);

        return $stack2;
    }

    private avrora.arch.legacy.LegacyInstr decode_RETI_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        avrora.arch.legacy.LegacyInstr$RETI $stack2;
        avrora.arch.legacy.LegacyDisassembler this;
        int $stack3, word1;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack2 = new avrora.arch.legacy.LegacyInstr$RETI;

        $stack3 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        specialinvoke $stack2.<avrora.arch.legacy.LegacyInstr$RETI: void <init>(int)>($stack3);

        return $stack2;
    }

    private avrora.arch.legacy.LegacyInstr decode_13(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, value;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyInstr $stack3, $stack4;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        value = word1 & 1;

        lookupswitch(value)
        {
            case 0: goto label2;
            case 1: goto label1;
            default: goto label3;
        };

     label1:
        $stack3 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_EICALL_0(int)>(word1);

        return $stack3;

     label2:
        $stack4 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_RETI_0(int)>(word1);

        return $stack4;

     label3:
        return null;
    }

    private avrora.arch.legacy.LegacyInstr decode_SEN_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack2, $stack4;
        avrora.arch.legacy.LegacyInstr$SEN $stack3;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack2 = word1 & 1;

        if $stack2 == 0 goto label1;

        return null;

     label1:
        $stack3 = new avrora.arch.legacy.LegacyInstr$SEN;

        $stack4 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        specialinvoke $stack3.<avrora.arch.legacy.LegacyInstr$SEN: void <init>(int)>($stack4);

        return $stack3;
    }

    private avrora.arch.legacy.LegacyInstr decode_CLH_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack2, $stack4;
        avrora.arch.legacy.LegacyInstr$CLH $stack3;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack2 = word1 & 1;

        if $stack2 == 0 goto label1;

        return null;

     label1:
        $stack3 = new avrora.arch.legacy.LegacyInstr$CLH;

        $stack4 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        specialinvoke $stack3.<avrora.arch.legacy.LegacyInstr$CLH: void <init>(int)>($stack4);

        return $stack3;
    }

    private avrora.arch.legacy.LegacyInstr decode_CLZ_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack2, $stack4;
        avrora.arch.legacy.LegacyInstr$CLZ $stack3;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack2 = word1 & 1;

        if $stack2 == 0 goto label1;

        return null;

     label1:
        $stack3 = new avrora.arch.legacy.LegacyInstr$CLZ;

        $stack4 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        specialinvoke $stack3.<avrora.arch.legacy.LegacyInstr$CLZ: void <init>(int)>($stack4);

        return $stack3;
    }

    private avrora.arch.legacy.LegacyInstr decode_LPM_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack2, $stack4;
        avrora.arch.legacy.LegacyInstr$LPM $stack3;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack2 = word1 & 1;

        if $stack2 == 0 goto label1;

        return null;

     label1:
        $stack3 = new avrora.arch.legacy.LegacyInstr$LPM;

        $stack4 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        specialinvoke $stack3.<avrora.arch.legacy.LegacyInstr$LPM: void <init>(int)>($stack4);

        return $stack3;
    }

    private avrora.arch.legacy.LegacyInstr decode_SET_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack2, $stack4;
        avrora.arch.legacy.LegacyInstr$SET $stack3;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack2 = word1 & 1;

        if $stack2 == 0 goto label1;

        return null;

     label1:
        $stack3 = new avrora.arch.legacy.LegacyInstr$SET;

        $stack4 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        specialinvoke $stack3.<avrora.arch.legacy.LegacyInstr$SET: void <init>(int)>($stack4);

        return $stack3;
    }

    private avrora.arch.legacy.LegacyInstr decode_EIJMP_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        avrora.arch.legacy.LegacyInstr$EIJMP $stack2;
        avrora.arch.legacy.LegacyDisassembler this;
        int $stack3, word1;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack2 = new avrora.arch.legacy.LegacyInstr$EIJMP;

        $stack3 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        specialinvoke $stack2.<avrora.arch.legacy.LegacyInstr$EIJMP: void <init>(int)>($stack3);

        return $stack2;
    }

    private avrora.arch.legacy.LegacyInstr decode_SEZ_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        avrora.arch.legacy.LegacyInstr$SEZ $stack2;
        avrora.arch.legacy.LegacyDisassembler this;
        int $stack3, word1;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack2 = new avrora.arch.legacy.LegacyInstr$SEZ;

        $stack3 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        specialinvoke $stack2.<avrora.arch.legacy.LegacyInstr$SEZ: void <init>(int)>($stack3);

        return $stack2;
    }

    private avrora.arch.legacy.LegacyInstr decode_14(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, value;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyInstr $stack3, $stack4;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        value = word1 & 1;

        lookupswitch(value)
        {
            case 0: goto label2;
            case 1: goto label1;
            default: goto label3;
        };

     label1:
        $stack3 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_EIJMP_0(int)>(word1);

        return $stack3;

     label2:
        $stack4 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_SEZ_0(int)>(word1);

        return $stack4;

     label3:
        return null;
    }

    private avrora.arch.legacy.LegacyInstr decode_ELPM_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack2, $stack4;
        avrora.arch.legacy.LegacyInstr$ELPM $stack3;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack2 = word1 & 1;

        if $stack2 == 0 goto label1;

        return null;

     label1:
        $stack3 = new avrora.arch.legacy.LegacyInstr$ELPM;

        $stack4 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        specialinvoke $stack3.<avrora.arch.legacy.LegacyInstr$ELPM: void <init>(int)>($stack4);

        return $stack3;
    }

    private avrora.arch.legacy.LegacyInstr decode_CLT_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack2, $stack4;
        avrora.arch.legacy.LegacyInstr$CLT $stack3;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack2 = word1 & 1;

        if $stack2 == 0 goto label1;

        return null;

     label1:
        $stack3 = new avrora.arch.legacy.LegacyInstr$CLT;

        $stack4 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        specialinvoke $stack3.<avrora.arch.legacy.LegacyInstr$CLT: void <init>(int)>($stack4);

        return $stack3;
    }

    private avrora.arch.legacy.LegacyInstr decode_BREAK_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack2, $stack4;
        avrora.arch.legacy.LegacyInstr$BREAK $stack3;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack2 = word1 & 1;

        if $stack2 == 0 goto label1;

        return null;

     label1:
        $stack3 = new avrora.arch.legacy.LegacyInstr$BREAK;

        $stack4 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        specialinvoke $stack3.<avrora.arch.legacy.LegacyInstr$BREAK: void <init>(int)>($stack4);

        return $stack3;
    }

    private avrora.arch.legacy.LegacyInstr decode_SLEEP_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack2, $stack4;
        avrora.arch.legacy.LegacyInstr$SLEEP $stack3;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack2 = word1 & 1;

        if $stack2 == 0 goto label1;

        return null;

     label1:
        $stack3 = new avrora.arch.legacy.LegacyInstr$SLEEP;

        $stack4 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        specialinvoke $stack3.<avrora.arch.legacy.LegacyInstr$SLEEP: void <init>(int)>($stack4);

        return $stack3;
    }

    private avrora.arch.legacy.LegacyInstr decode_CLN_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack2, $stack4;
        avrora.arch.legacy.LegacyInstr$CLN $stack3;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack2 = word1 & 1;

        if $stack2 == 0 goto label1;

        return null;

     label1:
        $stack3 = new avrora.arch.legacy.LegacyInstr$CLN;

        $stack4 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        specialinvoke $stack3.<avrora.arch.legacy.LegacyInstr$CLN: void <init>(int)>($stack4);

        return $stack3;
    }

    private avrora.arch.legacy.LegacyInstr decode_SEH_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack2, $stack4;
        avrora.arch.legacy.LegacyInstr$SEH $stack3;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack2 = word1 & 1;

        if $stack2 == 0 goto label1;

        return null;

     label1:
        $stack3 = new avrora.arch.legacy.LegacyInstr$SEH;

        $stack4 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        specialinvoke $stack3.<avrora.arch.legacy.LegacyInstr$SEH: void <init>(int)>($stack4);

        return $stack3;
    }

    private avrora.arch.legacy.LegacyInstr decode_IJMP_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        avrora.arch.legacy.LegacyInstr$IJMP $stack2;
        avrora.arch.legacy.LegacyDisassembler this;
        int $stack3, word1;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack2 = new avrora.arch.legacy.LegacyInstr$IJMP;

        $stack3 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        specialinvoke $stack2.<avrora.arch.legacy.LegacyInstr$IJMP: void <init>(int)>($stack3);

        return $stack2;
    }

    private avrora.arch.legacy.LegacyInstr decode_SEC_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        avrora.arch.legacy.LegacyInstr$SEC $stack2;
        avrora.arch.legacy.LegacyDisassembler this;
        int $stack3, word1;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack2 = new avrora.arch.legacy.LegacyInstr$SEC;

        $stack3 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        specialinvoke $stack2.<avrora.arch.legacy.LegacyInstr$SEC: void <init>(int)>($stack3);

        return $stack2;
    }

    private avrora.arch.legacy.LegacyInstr decode_15(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, value;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyInstr $stack3, $stack4;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        value = word1 & 1;

        lookupswitch(value)
        {
            case 0: goto label2;
            case 1: goto label1;
            default: goto label3;
        };

     label1:
        $stack3 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_IJMP_0(int)>(word1);

        return $stack3;

     label2:
        $stack4 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_SEC_0(int)>(word1);

        return $stack4;

     label3:
        return null;
    }

    private avrora.arch.legacy.LegacyInstr decode_16(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, value;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyInstr $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $stack12, $stack13, $stack14, $stack15, $stack16, $stack17, $stack18, $stack19, $stack20, $stack21, $stack22, $stack23, $stack24, $stack25, $stack26, $stack27;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 4;

        value = $stack3 & 31;

        tableswitch(value)
        {
            case 0: goto label24;
            case 1: goto label17;
            case 2: goto label12;
            case 3: goto label08;
            case 4: goto label02;
            case 5: goto label23;
            case 6: goto label16;
            case 7: goto label09;
            case 8: goto label04;
            case 9: goto label14;
            case 10: goto label22;
            case 11: goto label06;
            case 12: goto label10;
            case 13: goto label13;
            case 14: goto label19;
            case 15: goto label01;
            case 16: goto label07;
            case 17: goto label11;
            case 18: goto label25;
            case 19: goto label25;
            case 20: goto label25;
            case 21: goto label25;
            case 22: goto label25;
            case 23: goto label25;
            case 24: goto label21;
            case 25: goto label20;
            case 26: goto label05;
            case 27: goto label25;
            case 28: goto label15;
            case 29: goto label18;
            case 30: goto label03;
            default: goto label25;
        };

     label01:
        $stack12 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_CLI_0(int)>(word1);

        return $stack12;

     label02:
        $stack23 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_SES_0(int)>(word1);

        return $stack23;

     label03:
        $stack4 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_SPM_0(int)>(word1);

        return $stack4;

     label04:
        $stack19 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_CLC_0(int)>(word1);

        return $stack19;

     label05:
        $stack7 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_WDR_0(int)>(word1);

        return $stack7;

     label06:
        $stack16 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_CLV_0(int)>(word1);

        return $stack16;

     label07:
        $stack11 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_12(int)>(word1);

        return $stack11;

     label08:
        $stack24 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_SEV_0(int)>(word1);

        return $stack24;

     label09:
        $stack20 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_SEI_0(int)>(word1);

        return $stack20;

     label10:
        $stack15 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_CLS_0(int)>(word1);

        return $stack15;

     label11:
        $stack10 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_13(int)>(word1);

        return $stack10;

     label12:
        $stack25 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_SEN_0(int)>(word1);

        return $stack25;

     label13:
        $stack14 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_CLH_0(int)>(word1);

        return $stack14;

     label14:
        $stack18 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_CLZ_0(int)>(word1);

        return $stack18;

     label15:
        $stack6 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_LPM_0(int)>(word1);

        return $stack6;

     label16:
        $stack21 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_SET_0(int)>(word1);

        return $stack21;

     label17:
        $stack26 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_14(int)>(word1);

        return $stack26;

     label18:
        $stack5 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_ELPM_0(int)>(word1);

        return $stack5;

     label19:
        $stack13 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_CLT_0(int)>(word1);

        return $stack13;

     label20:
        $stack8 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_BREAK_0(int)>(word1);

        return $stack8;

     label21:
        $stack9 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_SLEEP_0(int)>(word1);

        return $stack9;

     label22:
        $stack17 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_CLN_0(int)>(word1);

        return $stack17;

     label23:
        $stack22 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_SEH_0(int)>(word1);

        return $stack22;

     label24:
        $stack27 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_15(int)>(word1);

        return $stack27;

     label25:
        return null;
    }

    private avrora.arch.legacy.LegacyInstr decode_JMP_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        avrora.arch.legacy.LegacyDisassembler this;
        int word2, word1, $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack12, target#2, target#3, target#4;
        avrora.arch.legacy.LegacyInstr$JMP $stack11;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        word2 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: int getWord(int)>(1);

        $stack5 = word1 >> 4;

        $stack6 = $stack5 & 31;

        $stack7 = $stack6 << 17;

        target#2 = 0 | $stack7;

        $stack8 = word1 & 1;

        $stack9 = $stack8 << 16;

        target#3 = target#2 | $stack9;

        $stack10 = word2 & 65535;

        target#4 = target#3 | $stack10;

        $stack11 = new avrora.arch.legacy.LegacyInstr$JMP;

        $stack12 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        specialinvoke $stack11.<avrora.arch.legacy.LegacyInstr$JMP: void <init>(int,int)>($stack12, target#4);

        return $stack11;
    }

    private avrora.arch.legacy.LegacyInstr decode_INC_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack7, rd#2;
        avrora.arch.legacy.LegacyInstr$INC $stack5;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack6;
        avrora.arch.legacy.LegacyRegister $stack8;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 4;

        $stack4 = $stack3 & 31;

        rd#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$INC;

        $stack7 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack6 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack8 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack6, rd#2);

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$INC: void <init>(int,avrora.arch.legacy.LegacyRegister)>($stack7, $stack8);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_SWAP_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack7, rd#2;
        avrora.arch.legacy.LegacyInstr$SWAP $stack5;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack6;
        avrora.arch.legacy.LegacyRegister $stack8;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 4;

        $stack4 = $stack3 & 31;

        rd#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$SWAP;

        $stack7 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack6 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack8 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack6, rd#2);

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$SWAP: void <init>(int,avrora.arch.legacy.LegacyRegister)>($stack7, $stack8);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_17(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, value;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyInstr $stack3, $stack4;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        value = word1 & 1;

        lookupswitch(value)
        {
            case 0: goto label2;
            case 1: goto label1;
            default: goto label3;
        };

     label1:
        $stack3 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_INC_0(int)>(word1);

        return $stack3;

     label2:
        $stack4 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_SWAP_0(int)>(word1);

        return $stack4;

     label3:
        return null;
    }

    private avrora.arch.legacy.LegacyInstr decode_ROR_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack7, rd#2;
        avrora.arch.legacy.LegacyInstr$ROR $stack5;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack6;
        avrora.arch.legacy.LegacyRegister $stack8;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 4;

        $stack4 = $stack3 & 31;

        rd#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$ROR;

        $stack7 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack6 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack8 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack6, rd#2);

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$ROR: void <init>(int,avrora.arch.legacy.LegacyRegister)>($stack7, $stack8);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_LSR_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack7, rd#2;
        avrora.arch.legacy.LegacyInstr$LSR $stack5;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack6;
        avrora.arch.legacy.LegacyRegister $stack8;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 4;

        $stack4 = $stack3 & 31;

        rd#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$LSR;

        $stack7 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack6 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack8 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack6, rd#2);

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$LSR: void <init>(int,avrora.arch.legacy.LegacyRegister)>($stack7, $stack8);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_18(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, value;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyInstr $stack3, $stack4;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        value = word1 & 1;

        lookupswitch(value)
        {
            case 0: goto label2;
            case 1: goto label1;
            default: goto label3;
        };

     label1:
        $stack3 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_ROR_0(int)>(word1);

        return $stack3;

     label2:
        $stack4 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_LSR_0(int)>(word1);

        return $stack4;

     label3:
        return null;
    }

    private avrora.arch.legacy.LegacyInstr decode_CALL_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        avrora.arch.legacy.LegacyDisassembler this;
        int word2, word1, $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack12, target#2, target#3, target#4;
        avrora.arch.legacy.LegacyInstr$CALL $stack11;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        word2 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: int getWord(int)>(1);

        $stack5 = word1 >> 4;

        $stack6 = $stack5 & 31;

        $stack7 = $stack6 << 17;

        target#2 = 0 | $stack7;

        $stack8 = word1 & 1;

        $stack9 = $stack8 << 16;

        target#3 = target#2 | $stack9;

        $stack10 = word2 & 65535;

        target#4 = target#3 | $stack10;

        $stack11 = new avrora.arch.legacy.LegacyInstr$CALL;

        $stack12 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        specialinvoke $stack11.<avrora.arch.legacy.LegacyInstr$CALL: void <init>(int,int)>($stack12, target#4);

        return $stack11;
    }

    private avrora.arch.legacy.LegacyInstr decode_DEC_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack5, $stack8, rd#2;
        avrora.arch.legacy.LegacyInstr$DEC $stack6;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack7;
        avrora.arch.legacy.LegacyRegister $stack9;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 & 1;

        if $stack3 == 0 goto label1;

        return null;

     label1:
        $stack4 = word1 >> 4;

        $stack5 = $stack4 & 31;

        rd#2 = 0 | $stack5;

        $stack6 = new avrora.arch.legacy.LegacyInstr$DEC;

        $stack8 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack7 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack9 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack7, rd#2);

        specialinvoke $stack6.<avrora.arch.legacy.LegacyInstr$DEC: void <init>(int,avrora.arch.legacy.LegacyRegister)>($stack8, $stack9);

        return $stack6;
    }

    private avrora.arch.legacy.LegacyInstr decode_NEG_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack7, rd#2;
        avrora.arch.legacy.LegacyInstr$NEG $stack5;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack6;
        avrora.arch.legacy.LegacyRegister $stack8;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 4;

        $stack4 = $stack3 & 31;

        rd#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$NEG;

        $stack7 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack6 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack8 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack6, rd#2);

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$NEG: void <init>(int,avrora.arch.legacy.LegacyRegister)>($stack7, $stack8);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_COM_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack7, rd#2;
        avrora.arch.legacy.LegacyInstr$COM $stack5;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack6;
        avrora.arch.legacy.LegacyRegister $stack8;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 4;

        $stack4 = $stack3 & 31;

        rd#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$COM;

        $stack7 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack6 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack8 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack6, rd#2);

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$COM: void <init>(int,avrora.arch.legacy.LegacyRegister)>($stack7, $stack8);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_19(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, value;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyInstr $stack3, $stack4;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        value = word1 & 1;

        lookupswitch(value)
        {
            case 0: goto label2;
            case 1: goto label1;
            default: goto label3;
        };

     label1:
        $stack3 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_NEG_0(int)>(word1);

        return $stack3;

     label2:
        $stack4 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_COM_0(int)>(word1);

        return $stack4;

     label3:
        return null;
    }

    private avrora.arch.legacy.LegacyInstr decode_20(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, value;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyInstr $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 1;

        value = $stack3 & 7;

        tableswitch(value)
        {
            case 0: goto label8;
            case 1: goto label4;
            case 2: goto label1;
            case 3: goto label5;
            case 4: goto label2;
            case 5: goto label7;
            case 6: goto label3;
            case 7: goto label6;
            default: goto label9;
        };

     label1:
        $stack9 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_ASR_0(int)>(word1);

        return $stack9;

     label2:
        $stack7 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_16(int)>(word1);

        return $stack7;

     label3:
        $stack5 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_JMP_0(int)>(word1);

        return $stack5;

     label4:
        $stack10 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_17(int)>(word1);

        return $stack10;

     label5:
        $stack8 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_18(int)>(word1);

        return $stack8;

     label6:
        $stack4 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_CALL_0(int)>(word1);

        return $stack4;

     label7:
        $stack6 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_DEC_0(int)>(word1);

        return $stack6;

     label8:
        $stack11 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_19(int)>(word1);

        return $stack11;

     label9:
        return null;
    }

    private avrora.arch.legacy.LegacyInstr decode_21(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, value;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyInstr $stack4, $stack5;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 9;

        value = $stack3 & 1;

        lookupswitch(value)
        {
            case 0: goto label2;
            case 1: goto label1;
            default: goto label3;
        };

     label1:
        $stack4 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_11(int)>(word1);

        return $stack4;

     label2:
        $stack5 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_20(int)>(word1);

        return $stack5;

     label3:
        return null;
    }

    private avrora.arch.legacy.LegacyInstr decode_MUL_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $stack12, $stack15, rr#3, rd#4, rd#5, rr#6;
        avrora.arch.legacy.LegacyInstr$MUL $stack13;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack14, $stack17;
        avrora.arch.legacy.LegacyRegister $stack16, $stack18;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack4 = word1 >> 9;

        $stack5 = $stack4 & 1;

        $stack6 = $stack5 << 4;

        rr#3 = 0 | $stack6;

        $stack7 = word1 >> 8;

        $stack8 = $stack7 & 1;

        $stack9 = $stack8 << 4;

        rd#4 = 0 | $stack9;

        $stack10 = word1 >> 4;

        $stack11 = $stack10 & 15;

        rd#5 = rd#4 | $stack11;

        $stack12 = word1 & 15;

        rr#6 = rr#3 | $stack12;

        $stack13 = new avrora.arch.legacy.LegacyInstr$MUL;

        $stack15 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack14 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack16 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack14, rd#5);

        $stack17 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack18 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack17, rr#6);

        specialinvoke $stack13.<avrora.arch.legacy.LegacyInstr$MUL: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister)>($stack15, $stack16, $stack18);

        return $stack13;
    }

    private avrora.arch.legacy.LegacyInstr decode_STPD_2(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack7, rr#2;
        avrora.arch.legacy.LegacyInstr$STPD $stack5;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack6;
        avrora.arch.legacy.LegacyRegister $stack8, $stack9;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 4;

        $stack4 = $stack3 & 31;

        rr#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$STPD;

        $stack7 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack8 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister Z>;

        $stack6 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack9 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack6, rr#2);

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$STPD: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister)>($stack7, $stack8, $stack9);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_PUSH_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack7, rr#2;
        avrora.arch.legacy.LegacyInstr$PUSH $stack5;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack6;
        avrora.arch.legacy.LegacyRegister $stack8;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 4;

        $stack4 = $stack3 & 31;

        rr#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$PUSH;

        $stack7 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack6 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack8 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack6, rr#2);

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$PUSH: void <init>(int,avrora.arch.legacy.LegacyRegister)>($stack7, $stack8);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_STPI_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack7, rr#2;
        avrora.arch.legacy.LegacyInstr$STPI $stack5;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack6;
        avrora.arch.legacy.LegacyRegister $stack8, $stack9;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 4;

        $stack4 = $stack3 & 31;

        rr#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$STPI;

        $stack7 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack8 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister X>;

        $stack6 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack9 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack6, rr#2);

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$STPI: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister)>($stack7, $stack8, $stack9);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_STPI_1(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack7, rr#2;
        avrora.arch.legacy.LegacyInstr$STPI $stack5;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack6;
        avrora.arch.legacy.LegacyRegister $stack8, $stack9;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 4;

        $stack4 = $stack3 & 31;

        rr#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$STPI;

        $stack7 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack8 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister Y>;

        $stack6 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack9 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack6, rr#2);

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$STPI: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister)>($stack7, $stack8, $stack9);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_STPI_2(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack7, rr#2;
        avrora.arch.legacy.LegacyInstr$STPI $stack5;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack6;
        avrora.arch.legacy.LegacyRegister $stack8, $stack9;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 4;

        $stack4 = $stack3 & 31;

        rr#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$STPI;

        $stack7 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack8 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister Z>;

        $stack6 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack9 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack6, rr#2);

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$STPI: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister)>($stack7, $stack8, $stack9);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_STPD_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack7, rr#2;
        avrora.arch.legacy.LegacyInstr$STPD $stack5;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack6;
        avrora.arch.legacy.LegacyRegister $stack8, $stack9;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 4;

        $stack4 = $stack3 & 31;

        rr#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$STPD;

        $stack7 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack8 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister X>;

        $stack6 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack9 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack6, rr#2);

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$STPD: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister)>($stack7, $stack8, $stack9);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_STPD_1(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack7, rr#2;
        avrora.arch.legacy.LegacyInstr$STPD $stack5;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack6;
        avrora.arch.legacy.LegacyRegister $stack8, $stack9;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 4;

        $stack4 = $stack3 & 31;

        rr#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$STPD;

        $stack7 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack8 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister Y>;

        $stack6 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack9 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack6, rr#2);

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$STPD: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister)>($stack7, $stack8, $stack9);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_ST_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack7, rr#2;
        avrora.arch.legacy.LegacyInstr$ST $stack5;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack6;
        avrora.arch.legacy.LegacyRegister $stack8, $stack9;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 4;

        $stack4 = $stack3 & 31;

        rr#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$ST;

        $stack7 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack8 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister X>;

        $stack6 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack9 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack6, rr#2);

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$ST: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister)>($stack7, $stack8, $stack9);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_STS_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        avrora.arch.legacy.LegacyDisassembler this;
        int word2, word1, $stack6, $stack7, $stack8, $stack11, rr#3, addr#4;
        avrora.arch.legacy.LegacyInstr$STS $stack9;
        avrora.arch.legacy.LegacyRegister[] $stack10;
        avrora.arch.legacy.LegacyRegister $stack12;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        word2 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: int getWord(int)>(1);

        $stack6 = word1 >> 4;

        $stack7 = $stack6 & 31;

        rr#3 = 0 | $stack7;

        $stack8 = word2 & 65535;

        addr#4 = 0 | $stack8;

        $stack9 = new avrora.arch.legacy.LegacyInstr$STS;

        $stack11 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack10 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack12 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack10, rr#3);

        specialinvoke $stack9.<avrora.arch.legacy.LegacyInstr$STS: void <init>(int,int,avrora.arch.legacy.LegacyRegister)>($stack11, addr#4, $stack12);

        return $stack9;
    }

    private avrora.arch.legacy.LegacyInstr decode_22(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, value;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyInstr $stack3, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        value = word1 & 15;

        tableswitch(value)
        {
            case 0: goto label09;
            case 1: goto label05;
            case 2: goto label01;
            case 3: goto label10;
            case 4: goto label10;
            case 5: goto label10;
            case 6: goto label10;
            case 7: goto label10;
            case 8: goto label10;
            case 9: goto label04;
            case 10: goto label07;
            case 11: goto label10;
            case 12: goto label08;
            case 13: goto label03;
            case 14: goto label06;
            case 15: goto label02;
            default: goto label10;
        };

     label01:
        $stack9 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_STPD_2(int)>(word1);

        return $stack9;

     label02:
        $stack3 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_PUSH_0(int)>(word1);

        return $stack3;

     label03:
        $stack5 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_STPI_0(int)>(word1);

        return $stack5;

     label04:
        $stack8 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_STPI_1(int)>(word1);

        return $stack8;

     label05:
        $stack10 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_STPI_2(int)>(word1);

        return $stack10;

     label06:
        $stack4 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_STPD_0(int)>(word1);

        return $stack4;

     label07:
        $stack7 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_STPD_1(int)>(word1);

        return $stack7;

     label08:
        $stack6 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_ST_0(int)>(word1);

        return $stack6;

     label09:
        $stack11 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_STS_0(int)>(word1);

        return $stack11;

     label10:
        return null;
    }

    private avrora.arch.legacy.LegacyInstr decode_POP_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack7, rd#2;
        avrora.arch.legacy.LegacyInstr$POP $stack5;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack6;
        avrora.arch.legacy.LegacyRegister $stack8;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 4;

        $stack4 = $stack3 & 31;

        rd#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$POP;

        $stack7 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack6 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack8 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack6, rd#2);

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$POP: void <init>(int,avrora.arch.legacy.LegacyRegister)>($stack7, $stack8);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_LPMD_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack4, $stack5, $stack8, rd#2;
        avrora.arch.legacy.LegacyInstr$LPMD $stack6;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack7, $stack10;
        avrora.arch.legacy.LegacyRegister $stack9, $stack11;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack4 = word1 >> 4;

        $stack5 = $stack4 & 31;

        rd#2 = 0 | $stack5;

        $stack6 = new avrora.arch.legacy.LegacyInstr$LPMD;

        $stack8 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack7 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack9 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack7, rd#2);

        $stack10 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] Z_table>;

        $stack11 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack10, 0);

        specialinvoke $stack6.<avrora.arch.legacy.LegacyInstr$LPMD: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister)>($stack8, $stack9, $stack11);

        return $stack6;
    }

    private avrora.arch.legacy.LegacyInstr decode_ELPMPI_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack4, $stack5, $stack8, rd#2;
        avrora.arch.legacy.LegacyInstr$ELPMPI $stack6;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack7, $stack10;
        avrora.arch.legacy.LegacyRegister $stack9, $stack11;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack4 = word1 >> 4;

        $stack5 = $stack4 & 31;

        rd#2 = 0 | $stack5;

        $stack6 = new avrora.arch.legacy.LegacyInstr$ELPMPI;

        $stack8 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack7 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack9 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack7, rd#2);

        $stack10 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] Z_table>;

        $stack11 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack10, 0);

        specialinvoke $stack6.<avrora.arch.legacy.LegacyInstr$ELPMPI: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister)>($stack8, $stack9, $stack11);

        return $stack6;
    }

    private avrora.arch.legacy.LegacyInstr decode_LD_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack7, rd#2;
        avrora.arch.legacy.LegacyInstr$LD $stack5;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack6;
        avrora.arch.legacy.LegacyRegister $stack8, $stack9;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 4;

        $stack4 = $stack3 & 31;

        rd#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$LD;

        $stack7 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack6 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack8 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack6, rd#2);

        $stack9 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister X>;

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$LD: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister)>($stack7, $stack8, $stack9);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_LDPD_2(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack7, rd#2;
        avrora.arch.legacy.LegacyInstr$LDPD $stack5;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack6;
        avrora.arch.legacy.LegacyRegister $stack8, $stack9;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 4;

        $stack4 = $stack3 & 31;

        rd#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$LDPD;

        $stack7 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack6 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack8 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack6, rd#2);

        $stack9 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister Z>;

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$LDPD: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister)>($stack7, $stack8, $stack9);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_LDPI_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack7, rd#2;
        avrora.arch.legacy.LegacyInstr$LDPI $stack5;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack6;
        avrora.arch.legacy.LegacyRegister $stack8, $stack9;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 4;

        $stack4 = $stack3 & 31;

        rd#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$LDPI;

        $stack7 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack6 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack8 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack6, rd#2);

        $stack9 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister X>;

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$LDPI: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister)>($stack7, $stack8, $stack9);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_LDPI_1(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack7, rd#2;
        avrora.arch.legacy.LegacyInstr$LDPI $stack5;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack6;
        avrora.arch.legacy.LegacyRegister $stack8, $stack9;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 4;

        $stack4 = $stack3 & 31;

        rd#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$LDPI;

        $stack7 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack6 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack8 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack6, rd#2);

        $stack9 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister Y>;

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$LDPI: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister)>($stack7, $stack8, $stack9);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_ELPMD_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack4, $stack5, $stack8, rd#2;
        avrora.arch.legacy.LegacyInstr$ELPMD $stack6;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack7, $stack10;
        avrora.arch.legacy.LegacyRegister $stack9, $stack11;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack4 = word1 >> 4;

        $stack5 = $stack4 & 31;

        rd#2 = 0 | $stack5;

        $stack6 = new avrora.arch.legacy.LegacyInstr$ELPMD;

        $stack8 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack7 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack9 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack7, rd#2);

        $stack10 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] Z_table>;

        $stack11 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack10, 0);

        specialinvoke $stack6.<avrora.arch.legacy.LegacyInstr$ELPMD: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister)>($stack8, $stack9, $stack11);

        return $stack6;
    }

    private avrora.arch.legacy.LegacyInstr decode_LDPI_2(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack7, rd#2;
        avrora.arch.legacy.LegacyInstr$LDPI $stack5;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack6;
        avrora.arch.legacy.LegacyRegister $stack8, $stack9;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 4;

        $stack4 = $stack3 & 31;

        rd#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$LDPI;

        $stack7 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack6 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack8 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack6, rd#2);

        $stack9 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister Z>;

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$LDPI: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister)>($stack7, $stack8, $stack9);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_LDPD_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack7, rd#2;
        avrora.arch.legacy.LegacyInstr$LDPD $stack5;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack6;
        avrora.arch.legacy.LegacyRegister $stack8, $stack9;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 4;

        $stack4 = $stack3 & 31;

        rd#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$LDPD;

        $stack7 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack6 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack8 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack6, rd#2);

        $stack9 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister X>;

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$LDPD: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister)>($stack7, $stack8, $stack9);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_LDPD_1(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, $stack4, $stack7, rd#2;
        avrora.arch.legacy.LegacyInstr$LDPD $stack5;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack6;
        avrora.arch.legacy.LegacyRegister $stack8, $stack9;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 4;

        $stack4 = $stack3 & 31;

        rd#2 = 0 | $stack4;

        $stack5 = new avrora.arch.legacy.LegacyInstr$LDPD;

        $stack7 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack6 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack8 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack6, rd#2);

        $stack9 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister Y>;

        specialinvoke $stack5.<avrora.arch.legacy.LegacyInstr$LDPD: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister)>($stack7, $stack8, $stack9);

        return $stack5;
    }

    private avrora.arch.legacy.LegacyInstr decode_LPMPI_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack4, $stack5, $stack8, rd#2;
        avrora.arch.legacy.LegacyInstr$LPMPI $stack6;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack7, $stack10;
        avrora.arch.legacy.LegacyRegister $stack9, $stack11;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack4 = word1 >> 4;

        $stack5 = $stack4 & 31;

        rd#2 = 0 | $stack5;

        $stack6 = new avrora.arch.legacy.LegacyInstr$LPMPI;

        $stack8 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack7 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack9 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack7, rd#2);

        $stack10 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] Z_table>;

        $stack11 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack10, 0);

        specialinvoke $stack6.<avrora.arch.legacy.LegacyInstr$LPMPI: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister)>($stack8, $stack9, $stack11);

        return $stack6;
    }

    private avrora.arch.legacy.LegacyInstr decode_LDS_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        avrora.arch.legacy.LegacyDisassembler this;
        int word2, word1, $stack6, $stack7, $stack8, $stack11, rd#3, addr#4;
        avrora.arch.legacy.LegacyInstr$LDS $stack9;
        avrora.arch.legacy.LegacyRegister[] $stack10;
        avrora.arch.legacy.LegacyRegister $stack12;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        word2 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: int getWord(int)>(1);

        $stack6 = word1 >> 4;

        $stack7 = $stack6 & 31;

        rd#3 = 0 | $stack7;

        $stack8 = word2 & 65535;

        addr#4 = 0 | $stack8;

        $stack9 = new avrora.arch.legacy.LegacyInstr$LDS;

        $stack11 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack10 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack12 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack10, rd#3);

        specialinvoke $stack9.<avrora.arch.legacy.LegacyInstr$LDS: void <init>(int,avrora.arch.legacy.LegacyRegister,int)>($stack11, $stack12, addr#4);

        return $stack9;
    }

    private avrora.arch.legacy.LegacyInstr decode_23(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, value;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyInstr $stack3, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $stack12, $stack13, $stack14, $stack15;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        value = word1 & 15;

        tableswitch(value)
        {
            case 0: goto label13;
            case 1: goto label09;
            case 2: goto label05;
            case 3: goto label14;
            case 4: goto label02;
            case 5: goto label12;
            case 6: goto label08;
            case 7: goto label03;
            case 8: goto label14;
            case 9: goto label07;
            case 10: goto label11;
            case 11: goto label14;
            case 12: goto label04;
            case 13: goto label06;
            case 14: goto label10;
            case 15: goto label01;
            default: goto label14;
        };

     label01:
        $stack3 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_POP_0(int)>(word1);

        return $stack3;

     label02:
        $stack12 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_LPMD_0(int)>(word1);

        return $stack12;

     label03:
        $stack9 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_ELPMPI_0(int)>(word1);

        return $stack9;

     label04:
        $stack6 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_LD_0(int)>(word1);

        return $stack6;

     label05:
        $stack13 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_LDPD_2(int)>(word1);

        return $stack13;

     label06:
        $stack5 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_LDPI_0(int)>(word1);

        return $stack5;

     label07:
        $stack8 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_LDPI_1(int)>(word1);

        return $stack8;

     label08:
        $stack10 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_ELPMD_0(int)>(word1);

        return $stack10;

     label09:
        $stack14 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_LDPI_2(int)>(word1);

        return $stack14;

     label10:
        $stack4 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_LDPD_0(int)>(word1);

        return $stack4;

     label11:
        $stack7 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_LDPD_1(int)>(word1);

        return $stack7;

     label12:
        $stack11 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_LPMPI_0(int)>(word1);

        return $stack11;

     label13:
        $stack15 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_LDS_0(int)>(word1);

        return $stack15;

     label14:
        return null;
    }

    private avrora.arch.legacy.LegacyInstr decode_24(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, value;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyInstr $stack4, $stack5;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 9;

        value = $stack3 & 1;

        lookupswitch(value)
        {
            case 0: goto label2;
            case 1: goto label1;
            default: goto label3;
        };

     label1:
        $stack4 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_22(int)>(word1);

        return $stack4;

     label2:
        $stack5 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_23(int)>(word1);

        return $stack5;

     label3:
        return null;
    }

    private avrora.arch.legacy.LegacyInstr decode_25(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, value;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyInstr $stack4, $stack5, $stack6, $stack7;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 10;

        value = $stack3 & 3;

        tableswitch(value)
        {
            case 0: goto label4;
            case 1: goto label2;
            case 2: goto label1;
            case 3: goto label3;
            default: goto label5;
        };

     label1:
        $stack5 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_10(int)>(word1);

        return $stack5;

     label2:
        $stack6 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_21(int)>(word1);

        return $stack6;

     label3:
        $stack4 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_MUL_0(int)>(word1);

        return $stack4;

     label4:
        $stack7 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_24(int)>(word1);

        return $stack7;

     label5:
        return null;
    }

    private avrora.arch.legacy.LegacyInstr decode_ORI_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack12, imm#3, rd#4, imm#5;
        avrora.arch.legacy.LegacyInstr$ORI $stack10;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack11;
        avrora.arch.legacy.LegacyRegister $stack13;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack4 = word1 >> 8;

        $stack5 = $stack4 & 15;

        $stack6 = $stack5 << 4;

        imm#3 = 0 | $stack6;

        $stack7 = word1 >> 4;

        $stack8 = $stack7 & 15;

        rd#4 = 0 | $stack8;

        $stack9 = word1 & 15;

        imm#5 = imm#3 | $stack9;

        $stack10 = new avrora.arch.legacy.LegacyInstr$ORI;

        $stack12 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack11 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] HGPR_table>;

        $stack13 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack11, rd#4);

        specialinvoke $stack10.<avrora.arch.legacy.LegacyInstr$ORI: void <init>(int,avrora.arch.legacy.LegacyRegister,int)>($stack12, $stack13, imm#5);

        return $stack10;
    }

    private avrora.arch.legacy.LegacyInstr decode_SUB_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $stack12, $stack15, rr#3, rd#4, rd#5, rr#6;
        avrora.arch.legacy.LegacyInstr$SUB $stack13;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack14, $stack17;
        avrora.arch.legacy.LegacyRegister $stack16, $stack18;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack4 = word1 >> 9;

        $stack5 = $stack4 & 1;

        $stack6 = $stack5 << 4;

        rr#3 = 0 | $stack6;

        $stack7 = word1 >> 8;

        $stack8 = $stack7 & 1;

        $stack9 = $stack8 << 4;

        rd#4 = 0 | $stack9;

        $stack10 = word1 >> 4;

        $stack11 = $stack10 & 15;

        rd#5 = rd#4 | $stack11;

        $stack12 = word1 & 15;

        rr#6 = rr#3 | $stack12;

        $stack13 = new avrora.arch.legacy.LegacyInstr$SUB;

        $stack15 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack14 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack16 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack14, rd#5);

        $stack17 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack18 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack17, rr#6);

        specialinvoke $stack13.<avrora.arch.legacy.LegacyInstr$SUB: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister)>($stack15, $stack16, $stack18);

        return $stack13;
    }

    private avrora.arch.legacy.LegacyInstr decode_CP_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $stack12, $stack15, rr#3, rd#4, rd#5, rr#6;
        avrora.arch.legacy.LegacyInstr$CP $stack13;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack14, $stack17;
        avrora.arch.legacy.LegacyRegister $stack16, $stack18;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack4 = word1 >> 9;

        $stack5 = $stack4 & 1;

        $stack6 = $stack5 << 4;

        rr#3 = 0 | $stack6;

        $stack7 = word1 >> 8;

        $stack8 = $stack7 & 1;

        $stack9 = $stack8 << 4;

        rd#4 = 0 | $stack9;

        $stack10 = word1 >> 4;

        $stack11 = $stack10 & 15;

        rd#5 = rd#4 | $stack11;

        $stack12 = word1 & 15;

        rr#6 = rr#3 | $stack12;

        $stack13 = new avrora.arch.legacy.LegacyInstr$CP;

        $stack15 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack14 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack16 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack14, rd#5);

        $stack17 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack18 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack17, rr#6);

        specialinvoke $stack13.<avrora.arch.legacy.LegacyInstr$CP: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister)>($stack15, $stack16, $stack18);

        return $stack13;
    }

    private avrora.arch.legacy.LegacyInstr decode_ADC_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $stack12, $stack15, rr#3, rd#4, rd#5, rr#6;
        avrora.arch.legacy.LegacyInstr$ADC $stack13;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack14, $stack17;
        avrora.arch.legacy.LegacyRegister $stack16, $stack18;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack4 = word1 >> 9;

        $stack5 = $stack4 & 1;

        $stack6 = $stack5 << 4;

        rr#3 = 0 | $stack6;

        $stack7 = word1 >> 8;

        $stack8 = $stack7 & 1;

        $stack9 = $stack8 << 4;

        rd#4 = 0 | $stack9;

        $stack10 = word1 >> 4;

        $stack11 = $stack10 & 15;

        rd#5 = rd#4 | $stack11;

        $stack12 = word1 & 15;

        rr#6 = rr#3 | $stack12;

        $stack13 = new avrora.arch.legacy.LegacyInstr$ADC;

        $stack15 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack14 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack16 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack14, rd#5);

        $stack17 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack18 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack17, rr#6);

        specialinvoke $stack13.<avrora.arch.legacy.LegacyInstr$ADC: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister)>($stack15, $stack16, $stack18);

        return $stack13;
    }

    private avrora.arch.legacy.LegacyInstr decode_CPSE_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $stack12, $stack15, rr#3, rd#4, rd#5, rr#6;
        avrora.arch.legacy.LegacyInstr$CPSE $stack13;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack14, $stack17;
        avrora.arch.legacy.LegacyRegister $stack16, $stack18;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack4 = word1 >> 9;

        $stack5 = $stack4 & 1;

        $stack6 = $stack5 << 4;

        rr#3 = 0 | $stack6;

        $stack7 = word1 >> 8;

        $stack8 = $stack7 & 1;

        $stack9 = $stack8 << 4;

        rd#4 = 0 | $stack9;

        $stack10 = word1 >> 4;

        $stack11 = $stack10 & 15;

        rd#5 = rd#4 | $stack11;

        $stack12 = word1 & 15;

        rr#6 = rr#3 | $stack12;

        $stack13 = new avrora.arch.legacy.LegacyInstr$CPSE;

        $stack15 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack14 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack16 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack14, rd#5);

        $stack17 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack18 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack17, rr#6);

        specialinvoke $stack13.<avrora.arch.legacy.LegacyInstr$CPSE: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister)>($stack15, $stack16, $stack18);

        return $stack13;
    }

    private avrora.arch.legacy.LegacyInstr decode_26(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, value;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyInstr $stack4, $stack5, $stack6, $stack7;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 10;

        value = $stack3 & 3;

        tableswitch(value)
        {
            case 0: goto label4;
            case 1: goto label2;
            case 2: goto label1;
            case 3: goto label3;
            default: goto label5;
        };

     label1:
        $stack5 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_SUB_0(int)>(word1);

        return $stack5;

     label2:
        $stack6 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_CP_0(int)>(word1);

        return $stack6;

     label3:
        $stack4 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_ADC_0(int)>(word1);

        return $stack4;

     label4:
        $stack7 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_CPSE_0(int)>(word1);

        return $stack7;

     label5:
        return null;
    }

    private avrora.arch.legacy.LegacyInstr decode_LDI_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack12, imm#3, rd#4, imm#5;
        avrora.arch.legacy.LegacyInstr$LDI $stack10;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack11;
        avrora.arch.legacy.LegacyRegister $stack13;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack4 = word1 >> 8;

        $stack5 = $stack4 & 15;

        $stack6 = $stack5 << 4;

        imm#3 = 0 | $stack6;

        $stack7 = word1 >> 4;

        $stack8 = $stack7 & 15;

        rd#4 = 0 | $stack8;

        $stack9 = word1 & 15;

        imm#5 = imm#3 | $stack9;

        $stack10 = new avrora.arch.legacy.LegacyInstr$LDI;

        $stack12 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack11 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] HGPR_table>;

        $stack13 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack11, rd#4);

        specialinvoke $stack10.<avrora.arch.legacy.LegacyInstr$LDI: void <init>(int,avrora.arch.legacy.LegacyRegister,int)>($stack12, $stack13, imm#5);

        return $stack10;
    }

    private avrora.arch.legacy.LegacyInstr decode_SUBI_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack12, imm#3, rd#4, imm#5;
        avrora.arch.legacy.LegacyInstr$SUBI $stack10;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack11;
        avrora.arch.legacy.LegacyRegister $stack13;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack4 = word1 >> 8;

        $stack5 = $stack4 & 15;

        $stack6 = $stack5 << 4;

        imm#3 = 0 | $stack6;

        $stack7 = word1 >> 4;

        $stack8 = $stack7 & 15;

        rd#4 = 0 | $stack8;

        $stack9 = word1 & 15;

        imm#5 = imm#3 | $stack9;

        $stack10 = new avrora.arch.legacy.LegacyInstr$SUBI;

        $stack12 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack11 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] HGPR_table>;

        $stack13 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack11, rd#4);

        specialinvoke $stack10.<avrora.arch.legacy.LegacyInstr$SUBI: void <init>(int,avrora.arch.legacy.LegacyRegister,int)>($stack12, $stack13, imm#5);

        return $stack10;
    }

    private avrora.arch.legacy.LegacyInstr decode_SBC_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $stack12, $stack15, rr#3, rd#4, rd#5, rr#6;
        avrora.arch.legacy.LegacyInstr$SBC $stack13;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack14, $stack17;
        avrora.arch.legacy.LegacyRegister $stack16, $stack18;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack4 = word1 >> 9;

        $stack5 = $stack4 & 1;

        $stack6 = $stack5 << 4;

        rr#3 = 0 | $stack6;

        $stack7 = word1 >> 8;

        $stack8 = $stack7 & 1;

        $stack9 = $stack8 << 4;

        rd#4 = 0 | $stack9;

        $stack10 = word1 >> 4;

        $stack11 = $stack10 & 15;

        rd#5 = rd#4 | $stack11;

        $stack12 = word1 & 15;

        rr#6 = rr#3 | $stack12;

        $stack13 = new avrora.arch.legacy.LegacyInstr$SBC;

        $stack15 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack14 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack16 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack14, rd#5);

        $stack17 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack18 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack17, rr#6);

        specialinvoke $stack13.<avrora.arch.legacy.LegacyInstr$SBC: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister)>($stack15, $stack16, $stack18);

        return $stack13;
    }

    private avrora.arch.legacy.LegacyInstr decode_CPC_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $stack12, $stack15, rr#3, rd#4, rd#5, rr#6;
        avrora.arch.legacy.LegacyInstr$CPC $stack13;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack14, $stack17;
        avrora.arch.legacy.LegacyRegister $stack16, $stack18;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack4 = word1 >> 9;

        $stack5 = $stack4 & 1;

        $stack6 = $stack5 << 4;

        rr#3 = 0 | $stack6;

        $stack7 = word1 >> 8;

        $stack8 = $stack7 & 1;

        $stack9 = $stack8 << 4;

        rd#4 = 0 | $stack9;

        $stack10 = word1 >> 4;

        $stack11 = $stack10 & 15;

        rd#5 = rd#4 | $stack11;

        $stack12 = word1 & 15;

        rr#6 = rr#3 | $stack12;

        $stack13 = new avrora.arch.legacy.LegacyInstr$CPC;

        $stack15 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack14 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack16 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack14, rd#5);

        $stack17 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack18 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack17, rr#6);

        specialinvoke $stack13.<avrora.arch.legacy.LegacyInstr$CPC: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister)>($stack15, $stack16, $stack18);

        return $stack13;
    }

    private avrora.arch.legacy.LegacyInstr decode_ADD_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $stack12, $stack15, rr#3, rd#4, rd#5, rr#6;
        avrora.arch.legacy.LegacyInstr$ADD $stack13;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack14, $stack17;
        avrora.arch.legacy.LegacyRegister $stack16, $stack18;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack4 = word1 >> 9;

        $stack5 = $stack4 & 1;

        $stack6 = $stack5 << 4;

        rr#3 = 0 | $stack6;

        $stack7 = word1 >> 8;

        $stack8 = $stack7 & 1;

        $stack9 = $stack8 << 4;

        rd#4 = 0 | $stack9;

        $stack10 = word1 >> 4;

        $stack11 = $stack10 & 15;

        rd#5 = rd#4 | $stack11;

        $stack12 = word1 & 15;

        rr#6 = rr#3 | $stack12;

        $stack13 = new avrora.arch.legacy.LegacyInstr$ADD;

        $stack15 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack14 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack16 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack14, rd#5);

        $stack17 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack18 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack17, rr#6);

        specialinvoke $stack13.<avrora.arch.legacy.LegacyInstr$ADD: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister)>($stack15, $stack16, $stack18);

        return $stack13;
    }

    private avrora.arch.legacy.LegacyInstr decode_MULS_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack4, $stack5, $stack6, $stack9, rd#3, rr#4;
        avrora.arch.legacy.LegacyInstr$MULS $stack7;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack8, $stack11;
        avrora.arch.legacy.LegacyRegister $stack10, $stack12;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack4 = word1 >> 4;

        $stack5 = $stack4 & 15;

        rd#3 = 0 | $stack5;

        $stack6 = word1 & 15;

        rr#4 = 0 | $stack6;

        $stack7 = new avrora.arch.legacy.LegacyInstr$MULS;

        $stack9 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack8 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] HGPR_table>;

        $stack10 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack8, rd#3);

        $stack11 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] HGPR_table>;

        $stack12 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack11, rr#4);

        specialinvoke $stack7.<avrora.arch.legacy.LegacyInstr$MULS: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister)>($stack9, $stack10, $stack12);

        return $stack7;
    }

    private avrora.arch.legacy.LegacyInstr decode_MOVW_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack4, $stack5, $stack6, $stack9, rd#3, rr#4;
        avrora.arch.legacy.LegacyInstr$MOVW $stack7;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack8, $stack11;
        avrora.arch.legacy.LegacyRegister $stack10, $stack12;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack4 = word1 >> 4;

        $stack5 = $stack4 & 15;

        rd#3 = 0 | $stack5;

        $stack6 = word1 & 15;

        rr#4 = 0 | $stack6;

        $stack7 = new avrora.arch.legacy.LegacyInstr$MOVW;

        $stack9 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack8 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] EGPR_table>;

        $stack10 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack8, rd#3);

        $stack11 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] EGPR_table>;

        $stack12 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack11, rr#4);

        specialinvoke $stack7.<avrora.arch.legacy.LegacyInstr$MOVW: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister)>($stack9, $stack10, $stack12);

        return $stack7;
    }

    private avrora.arch.legacy.LegacyInstr decode_FMULSU_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack4, $stack5, $stack6, $stack9, rd#3, rr#4;
        avrora.arch.legacy.LegacyInstr$FMULSU $stack7;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack8, $stack11;
        avrora.arch.legacy.LegacyRegister $stack10, $stack12;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack4 = word1 >> 4;

        $stack5 = $stack4 & 7;

        rd#3 = 0 | $stack5;

        $stack6 = word1 & 7;

        rr#4 = 0 | $stack6;

        $stack7 = new avrora.arch.legacy.LegacyInstr$FMULSU;

        $stack9 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack8 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] MGPR_table>;

        $stack10 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack8, rd#3);

        $stack11 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] MGPR_table>;

        $stack12 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack11, rr#4);

        specialinvoke $stack7.<avrora.arch.legacy.LegacyInstr$FMULSU: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister)>($stack9, $stack10, $stack12);

        return $stack7;
    }

    private avrora.arch.legacy.LegacyInstr decode_FMULS_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack4, $stack5, $stack6, $stack9, rd#3, rr#4;
        avrora.arch.legacy.LegacyInstr$FMULS $stack7;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack8, $stack11;
        avrora.arch.legacy.LegacyRegister $stack10, $stack12;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack4 = word1 >> 4;

        $stack5 = $stack4 & 7;

        rd#3 = 0 | $stack5;

        $stack6 = word1 & 7;

        rr#4 = 0 | $stack6;

        $stack7 = new avrora.arch.legacy.LegacyInstr$FMULS;

        $stack9 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack8 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] MGPR_table>;

        $stack10 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack8, rd#3);

        $stack11 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] MGPR_table>;

        $stack12 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack11, rr#4);

        specialinvoke $stack7.<avrora.arch.legacy.LegacyInstr$FMULS: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister)>($stack9, $stack10, $stack12);

        return $stack7;
    }

    private avrora.arch.legacy.LegacyInstr decode_27(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, value;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyInstr $stack4, $stack5;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 3;

        value = $stack3 & 1;

        lookupswitch(value)
        {
            case 0: goto label2;
            case 1: goto label1;
            default: goto label3;
        };

     label1:
        $stack4 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_FMULSU_0(int)>(word1);

        return $stack4;

     label2:
        $stack5 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_FMULS_0(int)>(word1);

        return $stack5;

     label3:
        return null;
    }

    private avrora.arch.legacy.LegacyInstr decode_FMUL_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack4, $stack5, $stack6, $stack9, rd#3, rr#4;
        avrora.arch.legacy.LegacyInstr$FMUL $stack7;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack8, $stack11;
        avrora.arch.legacy.LegacyRegister $stack10, $stack12;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack4 = word1 >> 4;

        $stack5 = $stack4 & 7;

        rd#3 = 0 | $stack5;

        $stack6 = word1 & 7;

        rr#4 = 0 | $stack6;

        $stack7 = new avrora.arch.legacy.LegacyInstr$FMUL;

        $stack9 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack8 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] MGPR_table>;

        $stack10 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack8, rd#3);

        $stack11 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] MGPR_table>;

        $stack12 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack11, rr#4);

        specialinvoke $stack7.<avrora.arch.legacy.LegacyInstr$FMUL: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister)>($stack9, $stack10, $stack12);

        return $stack7;
    }

    private avrora.arch.legacy.LegacyInstr decode_MULSU_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack4, $stack5, $stack6, $stack9, rd#3, rr#4;
        avrora.arch.legacy.LegacyInstr$MULSU $stack7;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack8, $stack11;
        avrora.arch.legacy.LegacyRegister $stack10, $stack12;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack4 = word1 >> 4;

        $stack5 = $stack4 & 7;

        rd#3 = 0 | $stack5;

        $stack6 = word1 & 7;

        rr#4 = 0 | $stack6;

        $stack7 = new avrora.arch.legacy.LegacyInstr$MULSU;

        $stack9 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack8 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] MGPR_table>;

        $stack10 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack8, rd#3);

        $stack11 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] MGPR_table>;

        $stack12 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack11, rr#4);

        specialinvoke $stack7.<avrora.arch.legacy.LegacyInstr$MULSU: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister)>($stack9, $stack10, $stack12);

        return $stack7;
    }

    private avrora.arch.legacy.LegacyInstr decode_28(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, value;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyInstr $stack4, $stack5;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 3;

        value = $stack3 & 1;

        lookupswitch(value)
        {
            case 0: goto label2;
            case 1: goto label1;
            default: goto label3;
        };

     label1:
        $stack4 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_FMUL_0(int)>(word1);

        return $stack4;

     label2:
        $stack5 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_MULSU_0(int)>(word1);

        return $stack5;

     label3:
        return null;
    }

    private avrora.arch.legacy.LegacyInstr decode_29(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, value;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyInstr $stack4, $stack5;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 7;

        value = $stack3 & 1;

        lookupswitch(value)
        {
            case 0: goto label2;
            case 1: goto label1;
            default: goto label3;
        };

     label1:
        $stack4 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_27(int)>(word1);

        return $stack4;

     label2:
        $stack5 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_28(int)>(word1);

        return $stack5;

     label3:
        return null;
    }

    private avrora.arch.legacy.LegacyInstr decode_NOP_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack2, $stack4;
        avrora.arch.legacy.LegacyInstr$NOP $stack3;
        avrora.arch.legacy.LegacyDisassembler this;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack2 = word1 & 255;

        if $stack2 == 0 goto label1;

        return null;

     label1:
        $stack3 = new avrora.arch.legacy.LegacyInstr$NOP;

        $stack4 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        specialinvoke $stack3.<avrora.arch.legacy.LegacyInstr$NOP: void <init>(int)>($stack4);

        return $stack3;
    }

    private avrora.arch.legacy.LegacyInstr decode_30(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, value;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyInstr $stack4, $stack5, $stack6, $stack7;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 8;

        value = $stack3 & 3;

        tableswitch(value)
        {
            case 0: goto label4;
            case 1: goto label2;
            case 2: goto label1;
            case 3: goto label3;
            default: goto label5;
        };

     label1:
        $stack5 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_MULS_0(int)>(word1);

        return $stack5;

     label2:
        $stack6 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_MOVW_0(int)>(word1);

        return $stack6;

     label3:
        $stack4 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_29(int)>(word1);

        return $stack4;

     label4:
        $stack7 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_NOP_0(int)>(word1);

        return $stack7;

     label5:
        return null;
    }

    private avrora.arch.legacy.LegacyInstr decode_31(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, value;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyInstr $stack4, $stack5, $stack6, $stack7;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 10;

        value = $stack3 & 3;

        tableswitch(value)
        {
            case 0: goto label4;
            case 1: goto label2;
            case 2: goto label1;
            case 3: goto label3;
            default: goto label5;
        };

     label1:
        $stack5 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_SBC_0(int)>(word1);

        return $stack5;

     label2:
        $stack6 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_CPC_0(int)>(word1);

        return $stack6;

     label3:
        $stack4 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_ADD_0(int)>(word1);

        return $stack4;

     label4:
        $stack7 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_30(int)>(word1);

        return $stack7;

     label5:
        return null;
    }

    private avrora.arch.legacy.LegacyInstr decode_root0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, value;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyInstr $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $stack12, $stack13, $stack14, $stack15, $stack16, $stack17, $stack18;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 12;

        value = $stack3 & 15;

        tableswitch(value)
        {
            case 0: goto label15;
            case 1: goto label12;
            case 2: goto label08;
            case 3: goto label05;
            case 4: goto label02;
            case 5: goto label14;
            case 6: goto label11;
            case 7: goto label06;
            case 8: goto label03;
            case 9: goto label10;
            case 10: goto label16;
            case 11: goto label04;
            case 12: goto label07;
            case 13: goto label09;
            case 14: goto label13;
            case 15: goto label01;
            default: goto label16;
        };

     label01:
        $stack4 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_4(int)>(word1);

        return $stack4;

     label02:
        $stack14 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_SBCI_0(int)>(word1);

        return $stack14;

     label03:
        $stack10 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_7(int)>(word1);

        return $stack10;

     label04:
        $stack8 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_8(int)>(word1);

        return $stack8;

     label05:
        $stack15 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_CPI_0(int)>(word1);

        return $stack15;

     label06:
        $stack11 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_ANDI_0(int)>(word1);

        return $stack11;

     label07:
        $stack7 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_RJMP_0(int)>(word1);

        return $stack7;

     label08:
        $stack16 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_9(int)>(word1);

        return $stack16;

     label09:
        $stack6 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_RCALL_0(int)>(word1);

        return $stack6;

     label10:
        $stack9 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_25(int)>(word1);

        return $stack9;

     label11:
        $stack12 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_ORI_0(int)>(word1);

        return $stack12;

     label12:
        $stack17 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_26(int)>(word1);

        return $stack17;

     label13:
        $stack5 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_LDI_0(int)>(word1);

        return $stack5;

     label14:
        $stack13 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_SUBI_0(int)>(word1);

        return $stack13;

     label15:
        $stack18 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_31(int)>(word1);

        return $stack18;

     label16:
        return null;
    }

    private avrora.arch.legacy.LegacyInstr decode_STD_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack8, $stack9, $stack10, $stack11, $stack12, $stack16, $stack19, imm#4, imm#5, rr#6, ar#7, imm#8;
        boolean $stack6, $stack14;
        avrora.arch.legacy.LegacyInstr$STD $stack17;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack18, $stack21;
        avrora.arch.legacy.LegacyRegister $stack20, $stack22;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack6 = staticinvoke <cck.util.Arithmetic: boolean getBit(int,int)>(word1, 13);

        imm#4 = staticinvoke <cck.util.Arithmetic: int setBit(int,int,boolean)>(0, 5, $stack6);

        $stack8 = word1 >> 10;

        $stack9 = $stack8 & 3;

        $stack10 = $stack9 << 3;

        imm#5 = imm#4 | $stack10;

        $stack11 = word1 >> 4;

        $stack12 = $stack11 & 31;

        rr#6 = 0 | $stack12;

        $stack14 = staticinvoke <cck.util.Arithmetic: boolean getBit(int,int)>(word1, 3);

        ar#7 = staticinvoke <cck.util.Arithmetic: int setBit(int,int,boolean)>(0, 0, $stack14);

        $stack16 = word1 & 7;

        imm#8 = imm#5 | $stack16;

        $stack17 = new avrora.arch.legacy.LegacyInstr$STD;

        $stack19 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack18 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] YZ_table>;

        $stack20 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack18, ar#7);

        $stack21 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack22 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack21, rr#6);

        specialinvoke $stack17.<avrora.arch.legacy.LegacyInstr$STD: void <init>(int,avrora.arch.legacy.LegacyRegister,int,avrora.arch.legacy.LegacyRegister)>($stack19, $stack20, imm#8, $stack22);

        return $stack17;
    }

    private avrora.arch.legacy.LegacyInstr decode_LDD_0(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack8, $stack9, $stack10, $stack11, $stack12, $stack16, $stack19, imm#4, imm#5, rd#6, ar#7, imm#8;
        boolean $stack6, $stack14;
        avrora.arch.legacy.LegacyInstr$LDD $stack17;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyRegister[] $stack18, $stack21;
        avrora.arch.legacy.LegacyRegister $stack20, $stack22;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack6 = staticinvoke <cck.util.Arithmetic: boolean getBit(int,int)>(word1, 13);

        imm#4 = staticinvoke <cck.util.Arithmetic: int setBit(int,int,boolean)>(0, 5, $stack6);

        $stack8 = word1 >> 10;

        $stack9 = $stack8 & 3;

        $stack10 = $stack9 << 3;

        imm#5 = imm#4 | $stack10;

        $stack11 = word1 >> 4;

        $stack12 = $stack11 & 31;

        rd#6 = 0 | $stack12;

        $stack14 = staticinvoke <cck.util.Arithmetic: boolean getBit(int,int)>(word1, 3);

        ar#7 = staticinvoke <cck.util.Arithmetic: int setBit(int,int,boolean)>(0, 0, $stack14);

        $stack16 = word1 & 7;

        imm#8 = imm#5 | $stack16;

        $stack17 = new avrora.arch.legacy.LegacyInstr$LDD;

        $stack19 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        $stack18 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table>;

        $stack20 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack18, rd#6);

        $stack21 = <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] YZ_table>;

        $stack22 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister getReg(avrora.arch.legacy.LegacyRegister[],int)>($stack21, ar#7);

        specialinvoke $stack17.<avrora.arch.legacy.LegacyInstr$LDD: void <init>(int,avrora.arch.legacy.LegacyRegister,avrora.arch.legacy.LegacyRegister,int)>($stack19, $stack20, $stack22, imm#8);

        return $stack17;
    }

    private avrora.arch.legacy.LegacyInstr decode_32(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, value;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyInstr $stack4, $stack5;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 9;

        value = $stack3 & 1;

        lookupswitch(value)
        {
            case 0: goto label2;
            case 1: goto label1;
            default: goto label3;
        };

     label1:
        $stack4 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_STD_0(int)>(word1);

        return $stack4;

     label2:
        $stack5 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_LDD_0(int)>(word1);

        return $stack5;

     label3:
        return null;
    }

    private avrora.arch.legacy.LegacyInstr decode_33(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, value;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyInstr $stack4;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 12;

        value = $stack3 & 1;

        lookupswitch(value)
        {
            case 0: goto label1;
            default: goto label2;
        };

     label1:
        $stack4 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_32(int)>(word1);

        return $stack4;

     label2:
        return null;
    }

    private avrora.arch.legacy.LegacyInstr decode_root1(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        int word1, $stack3, value;
        avrora.arch.legacy.LegacyDisassembler this;
        avrora.arch.legacy.LegacyInstr $stack4;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        $stack3 = word1 >> 14;

        value = $stack3 & 3;

        lookupswitch(value)
        {
            case 2: goto label1;
            default: goto label2;
        };

     label1:
        $stack4 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_33(int)>(word1);

        return $stack4;

     label2:
        return null;
    }

    avrora.arch.legacy.LegacyInstr decode_root(int) throws avrora.arch.legacy.LegacyDisassembler$InvalidInstruction
    {
        avrora.arch.legacy.LegacyDisassembler this;
        int word1, $stack6;
        avrora.arch.legacy.LegacyDisassembler$InvalidInstruction $stack5;
        avrora.arch.legacy.LegacyInstr i#2, i#3;

        this := @this: avrora.arch.legacy.LegacyDisassembler;

        word1 := @parameter0: int;

        i#2 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_root0(int)>(word1);

        if i#2 == null goto label1;

        return i#2;

     label1:
        i#3 = specialinvoke this.<avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyInstr decode_root1(int)>(word1);

        if i#3 == null goto label2;

        return i#3;

     label2:
        $stack5 = new avrora.arch.legacy.LegacyDisassembler$InvalidInstruction;

        $stack6 = this.<avrora.arch.legacy.LegacyDisassembler: int pc>;

        specialinvoke $stack5.<avrora.arch.legacy.LegacyDisassembler$InvalidInstruction: void <init>(avrora.arch.legacy.LegacyDisassembler,int,int)>(this, word1, $stack6);

        throw $stack5;
    }

    static void <clinit>()
    {
        avrora.arch.legacy.LegacyRegister[] $stack0, $stack33, $stack50, $stack59, $stack62, $stack64, $stack81, $stack86;
        avrora.arch.legacy.LegacyRegister $stack1, $stack2, $stack3, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $stack12, $stack13, $stack14, $stack15, $stack16, $stack17, $stack18, $stack19, $stack20, $stack21, $stack22, $stack23, $stack24, $stack25, $stack26, $stack27, $stack28, $stack29, $stack30, $stack31, $stack32, $stack34, $stack35, $stack36, $stack37, $stack38, $stack39, $stack40, $stack41, $stack42, $stack43, $stack44, $stack45, $stack46, $stack47, $stack48, $stack49, $stack51, $stack52, $stack53, $stack54, $stack55, $stack56, $stack57, $stack58, $stack60, $stack61, $stack63, $stack65, $stack66, $stack67, $stack68, $stack69, $stack70, $stack71, $stack72, $stack73, $stack74, $stack75, $stack76, $stack77, $stack78, $stack79, $stack80, $stack82, $stack83, $stack84, $stack85, $stack87, $stack88, $stack89;

        $stack0 = newarray (avrora.arch.legacy.LegacyRegister)[32];

        $stack1 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R0>;

        $stack0[0] = $stack1;

        $stack2 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R1>;

        $stack0[1] = $stack2;

        $stack3 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R2>;

        $stack0[2] = $stack3;

        $stack4 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R3>;

        $stack0[3] = $stack4;

        $stack5 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R4>;

        $stack0[4] = $stack5;

        $stack6 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R5>;

        $stack0[5] = $stack6;

        $stack7 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R6>;

        $stack0[6] = $stack7;

        $stack8 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R7>;

        $stack0[7] = $stack8;

        $stack9 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R8>;

        $stack0[8] = $stack9;

        $stack10 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R9>;

        $stack0[9] = $stack10;

        $stack11 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R10>;

        $stack0[10] = $stack11;

        $stack12 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R11>;

        $stack0[11] = $stack12;

        $stack13 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R12>;

        $stack0[12] = $stack13;

        $stack14 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R13>;

        $stack0[13] = $stack14;

        $stack15 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R14>;

        $stack0[14] = $stack15;

        $stack16 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R15>;

        $stack0[15] = $stack16;

        $stack17 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R16>;

        $stack0[16] = $stack17;

        $stack18 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R17>;

        $stack0[17] = $stack18;

        $stack19 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R18>;

        $stack0[18] = $stack19;

        $stack20 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R19>;

        $stack0[19] = $stack20;

        $stack21 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R20>;

        $stack0[20] = $stack21;

        $stack22 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R21>;

        $stack0[21] = $stack22;

        $stack23 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R22>;

        $stack0[22] = $stack23;

        $stack24 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R23>;

        $stack0[23] = $stack24;

        $stack25 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R24>;

        $stack0[24] = $stack25;

        $stack26 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R25>;

        $stack0[25] = $stack26;

        $stack27 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R26>;

        $stack0[26] = $stack27;

        $stack28 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R27>;

        $stack0[27] = $stack28;

        $stack29 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R28>;

        $stack0[28] = $stack29;

        $stack30 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R29>;

        $stack0[29] = $stack30;

        $stack31 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R30>;

        $stack0[30] = $stack31;

        $stack32 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R31>;

        $stack0[31] = $stack32;

        <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] GPR_table> = $stack0;

        $stack33 = newarray (avrora.arch.legacy.LegacyRegister)[16];

        $stack34 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R16>;

        $stack33[0] = $stack34;

        $stack35 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R17>;

        $stack33[1] = $stack35;

        $stack36 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R18>;

        $stack33[2] = $stack36;

        $stack37 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R19>;

        $stack33[3] = $stack37;

        $stack38 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R20>;

        $stack33[4] = $stack38;

        $stack39 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R21>;

        $stack33[5] = $stack39;

        $stack40 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R22>;

        $stack33[6] = $stack40;

        $stack41 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R23>;

        $stack33[7] = $stack41;

        $stack42 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R24>;

        $stack33[8] = $stack42;

        $stack43 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R25>;

        $stack33[9] = $stack43;

        $stack44 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R26>;

        $stack33[10] = $stack44;

        $stack45 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R27>;

        $stack33[11] = $stack45;

        $stack46 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R28>;

        $stack33[12] = $stack46;

        $stack47 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R29>;

        $stack33[13] = $stack47;

        $stack48 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R30>;

        $stack33[14] = $stack48;

        $stack49 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R31>;

        $stack33[15] = $stack49;

        <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] HGPR_table> = $stack33;

        $stack50 = newarray (avrora.arch.legacy.LegacyRegister)[8];

        $stack51 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R16>;

        $stack50[0] = $stack51;

        $stack52 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R17>;

        $stack50[1] = $stack52;

        $stack53 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R18>;

        $stack50[2] = $stack53;

        $stack54 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R19>;

        $stack50[3] = $stack54;

        $stack55 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R20>;

        $stack50[4] = $stack55;

        $stack56 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R21>;

        $stack50[5] = $stack56;

        $stack57 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R22>;

        $stack50[6] = $stack57;

        $stack58 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R23>;

        $stack50[7] = $stack58;

        <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] MGPR_table> = $stack50;

        $stack59 = newarray (avrora.arch.legacy.LegacyRegister)[2];

        $stack60 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister Z>;

        $stack59[0] = $stack60;

        $stack61 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister Y>;

        $stack59[1] = $stack61;

        <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] YZ_table> = $stack59;

        $stack62 = newarray (avrora.arch.legacy.LegacyRegister)[1];

        $stack63 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister Z>;

        $stack62[0] = $stack63;

        <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] Z_table> = $stack62;

        $stack64 = newarray (avrora.arch.legacy.LegacyRegister)[16];

        $stack65 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R0>;

        $stack64[0] = $stack65;

        $stack66 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R2>;

        $stack64[1] = $stack66;

        $stack67 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R4>;

        $stack64[2] = $stack67;

        $stack68 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R6>;

        $stack64[3] = $stack68;

        $stack69 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R8>;

        $stack64[4] = $stack69;

        $stack70 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R10>;

        $stack64[5] = $stack70;

        $stack71 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R12>;

        $stack64[6] = $stack71;

        $stack72 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R14>;

        $stack64[7] = $stack72;

        $stack73 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R16>;

        $stack64[8] = $stack73;

        $stack74 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R18>;

        $stack64[9] = $stack74;

        $stack75 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R20>;

        $stack64[10] = $stack75;

        $stack76 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R22>;

        $stack64[11] = $stack76;

        $stack77 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R24>;

        $stack64[12] = $stack77;

        $stack78 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R26>;

        $stack64[13] = $stack78;

        $stack79 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R28>;

        $stack64[14] = $stack79;

        $stack80 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R30>;

        $stack64[15] = $stack80;

        <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] EGPR_table> = $stack64;

        $stack81 = newarray (avrora.arch.legacy.LegacyRegister)[4];

        $stack82 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R24>;

        $stack81[0] = $stack82;

        $stack83 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R26>;

        $stack81[1] = $stack83;

        $stack84 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R28>;

        $stack81[2] = $stack84;

        $stack85 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R30>;

        $stack81[3] = $stack85;

        <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] RDL_table> = $stack81;

        $stack86 = newarray (avrora.arch.legacy.LegacyRegister)[4];

        $stack87 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister X>;

        $stack86[0] = $stack87;

        $stack88 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister Y>;

        $stack86[1] = $stack88;

        $stack89 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister Z>;

        $stack86[2] = $stack89;

        $stack86[3] = null;

        <avrora.arch.legacy.LegacyDisassembler: avrora.arch.legacy.LegacyRegister[] XYZ_table> = $stack86;

        return;
    }
}
