public class org.dacapo.parser.ParseException extends java.lang.Exception
{
    private static final long serialVersionUID;
    public org.dacapo.parser.Token currentToken;
    public int[][] expectedTokenSequences;
    public java.lang.String[] tokenImage;
    protected java.lang.String eol;

    public void <init>(org.dacapo.parser.Token, int[][], java.lang.String[])
    {
        org.dacapo.parser.ParseException this;
        org.dacapo.parser.Token currentTokenVal;
        int[][] expectedTokenSequencesVal;
        java.lang.String[] tokenImageVal;
        java.lang.String $stack4, $stack5;

        this := @this: org.dacapo.parser.ParseException;

        currentTokenVal := @parameter0: org.dacapo.parser.Token;

        expectedTokenSequencesVal := @parameter1: int[][];

        tokenImageVal := @parameter2: java.lang.String[];

        $stack4 = staticinvoke <org.dacapo.parser.ParseException: java.lang.String initialise(org.dacapo.parser.Token,int[][],java.lang.String[])>(currentTokenVal, expectedTokenSequencesVal, tokenImageVal);

        specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>($stack4);

        $stack5 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("line.separator", "\n");

        this.<org.dacapo.parser.ParseException: java.lang.String eol> = $stack5;

        this.<org.dacapo.parser.ParseException: org.dacapo.parser.Token currentToken> = currentTokenVal;

        this.<org.dacapo.parser.ParseException: int[][] expectedTokenSequences> = expectedTokenSequencesVal;

        this.<org.dacapo.parser.ParseException: java.lang.String[] tokenImage> = tokenImageVal;

        return;
    }

    public void <init>()
    {
        org.dacapo.parser.ParseException this;
        java.lang.String $stack1;

        this := @this: org.dacapo.parser.ParseException;

        specialinvoke this.<java.lang.Exception: void <init>()>();

        $stack1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("line.separator", "\n");

        this.<org.dacapo.parser.ParseException: java.lang.String eol> = $stack1;

        return;
    }

    public void <init>(java.lang.String)
    {
        org.dacapo.parser.ParseException this;
        java.lang.String message, $stack2;

        this := @this: org.dacapo.parser.ParseException;

        message := @parameter0: java.lang.String;

        specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(message);

        $stack2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("line.separator", "\n");

        this.<org.dacapo.parser.ParseException: java.lang.String eol> = $stack2;

        return;
    }

    private static java.lang.String initialise(org.dacapo.parser.Token, int[][], java.lang.String[])
    {
        java.lang.String eol, $stack37, $stack54, $stack63, $stack64, $stack75, $stack112, i#14, i#17, i#18, i#19, i#20, i#21, i#22, i#23;
        java.lang.StringBuffer $stack10, $stack102, $stack113;
        int[][] expectedTokenSequences;
        int $stack11, $stack16, $stack20, $stack28, $stack49, $stack53, $stack94, $stack98, $stack99, $stack101, $stack111, maxSize#1, i#2, j#3, $stack96#13, i#16;
        org.dacapo.parser.Token currentToken, $stack15, $stack19, j#15;
        java.lang.StringBuilder $stack12, $stack13, $stack14, $stack17, $stack18, $stack21, $stack23, $stack24, $stack25, $stack26, $stack29, $stack30, $stack31, $stack32, $stack33, $stack35, $stack36, $stack38, $stack40, $stack41, $stack42, $stack43, $stack44, $stack50, $stack51, $stack52, $stack55, $stack57, $stack58, $stack59, $stack61, $stack62, $stack65, $stack67, $stack68, $stack69, $stack73, $stack74, $stack76, $stack88, $stack89, $stack90;
        java.lang.String[] tokenImage;
        int[] $stack93, $stack97, $stack100, $stack110, $stack118, $stack95#11;

        currentToken := @parameter0: org.dacapo.parser.Token;

        expectedTokenSequences := @parameter1: int[][];

        tokenImage := @parameter2: java.lang.String[];

        eol = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("line.separator", "\n");

        $stack10 = new java.lang.StringBuffer;

        specialinvoke $stack10.<java.lang.StringBuffer: void <init>()>();

        maxSize#1 = 0;

        i#2 = 0;

     label01:
        $stack11 = lengthof expectedTokenSequences;

        if i#2 >= $stack11 goto label06;

        $stack93 = expectedTokenSequences[i#2];

        $stack94 = lengthof $stack93;

        if maxSize#1 >= $stack94 goto label02;

        $stack118 = expectedTokenSequences[i#2];

        maxSize#1 = lengthof $stack118;

     label02:
        j#3 = 0;

     label03:
        $stack95#11 = expectedTokenSequences[i#2];

        $stack96#13 = lengthof $stack95#11;

        if j#3 >= $stack96#13 goto label04;

        $stack110 = expectedTokenSequences[i#2];

        $stack111 = $stack110[j#3];

        $stack112 = tokenImage[$stack111];

        $stack113 = virtualinvoke $stack10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack112);

        virtualinvoke $stack113.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        j#3 = j#3 + 1;

        goto label03;

     label04:
        $stack100 = expectedTokenSequences[i#2];

        $stack97 = expectedTokenSequences[i#2];

        $stack98 = lengthof $stack97;

        $stack99 = $stack98 - 1;

        $stack101 = $stack100[$stack99];

        if $stack101 == 0 goto label05;

        virtualinvoke $stack10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("...");

     label05:
        $stack102 = virtualinvoke $stack10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(eol);

        virtualinvoke $stack102.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    ");

        i#2 = i#2 + 1;

        goto label01;

     label06:
        i#14 = "Encountered \"";

        j#15 = currentToken.<org.dacapo.parser.Token: org.dacapo.parser.Token next>;

        i#16 = 0;

     label07:
        if i#16 >= maxSize#1 goto label10;

        if i#16 == 0 goto label08;

        $stack88 = new java.lang.StringBuilder;

        specialinvoke $stack88.<java.lang.StringBuilder: void <init>()>();

        $stack89 = virtualinvoke $stack88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(i#14);

        $stack90 = virtualinvoke $stack89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        i#14 = virtualinvoke $stack90.<java.lang.StringBuilder: java.lang.String toString()>();

     label08:
        $stack49 = j#15.<org.dacapo.parser.Token: int kind>;

        if $stack49 != 0 goto label09;

        $stack73 = new java.lang.StringBuilder;

        specialinvoke $stack73.<java.lang.StringBuilder: void <init>()>();

        $stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(i#14);

        $stack75 = tokenImage[0];

        $stack76 = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack75);

        i#14 = virtualinvoke $stack76.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label10;

     label09:
        $stack50 = new java.lang.StringBuilder;

        specialinvoke $stack50.<java.lang.StringBuilder: void <init>()>();

        $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(i#14);

        $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $stack53 = j#15.<org.dacapo.parser.Token: int kind>;

        $stack54 = tokenImage[$stack53];

        $stack55 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack54);

        i#17 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack57 = new java.lang.StringBuilder;

        specialinvoke $stack57.<java.lang.StringBuilder: void <init>()>();

        $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(i#17);

        $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \"");

        i#18 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack61 = new java.lang.StringBuilder;

        specialinvoke $stack61.<java.lang.StringBuilder: void <init>()>();

        $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(i#18);

        $stack63 = j#15.<org.dacapo.parser.Token: java.lang.String image>;

        $stack64 = staticinvoke <org.dacapo.parser.ParseException: java.lang.String add_escapes(java.lang.String)>($stack63);

        $stack65 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack64);

        i#19 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack67 = new java.lang.StringBuilder;

        specialinvoke $stack67.<java.lang.StringBuilder: void <init>()>();

        $stack68 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(i#19);

        $stack69 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \"");

        i#14 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.String toString()>();

        j#15 = j#15.<org.dacapo.parser.Token: org.dacapo.parser.Token next>;

        i#16 = i#16 + 1;

        goto label07;

     label10:
        $stack12 = new java.lang.StringBuilder;

        specialinvoke $stack12.<java.lang.StringBuilder: void <init>()>();

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(i#14);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" at line ");

        $stack15 = currentToken.<org.dacapo.parser.Token: org.dacapo.parser.Token next>;

        $stack16 = $stack15.<org.dacapo.parser.Token: int beginLine>;

        $stack17 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack16);

        $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", column ");

        $stack19 = currentToken.<org.dacapo.parser.Token: org.dacapo.parser.Token next>;

        $stack20 = $stack19.<org.dacapo.parser.Token: int beginColumn>;

        $stack21 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack20);

        i#20 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack23 = new java.lang.StringBuilder;

        specialinvoke $stack23.<java.lang.StringBuilder: void <init>()>();

        $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(i#20);

        $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(eol);

        i#21 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack28 = lengthof expectedTokenSequences;

        if $stack28 != 1 goto label11;

        $stack40 = new java.lang.StringBuilder;

        specialinvoke $stack40.<java.lang.StringBuilder: void <init>()>();

        $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(i#21);

        $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Was expecting:");

        $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(eol);

        $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        i#22 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label12;

     label11:
        $stack29 = new java.lang.StringBuilder;

        specialinvoke $stack29.<java.lang.StringBuilder: void <init>()>();

        $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(i#21);

        $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Was expecting one of:");

        $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(eol);

        $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        i#22 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>();

     label12:
        $stack35 = new java.lang.StringBuilder;

        specialinvoke $stack35.<java.lang.StringBuilder: void <init>()>();

        $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(i#22);

        $stack37 = virtualinvoke $stack10.<java.lang.StringBuffer: java.lang.String toString()>();

        $stack38 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack37);

        i#23 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.String toString()>();

        return i#23;
    }

    static java.lang.String add_escapes(java.lang.String)
    {
        java.lang.StringBuffer $stack5;
        java.lang.String str, $stack7, $stack22, s, $stack30, $stack32;
        int $stack6, $stack27, $stack28, $stack29, i#1;
        char $stack8, $stack19;
        java.lang.StringBuilder $stack20, $stack21, $stack23, $stack25, $stack26, $stack31;

        str := @parameter0: java.lang.String;

        $stack5 = new java.lang.StringBuffer;

        specialinvoke $stack5.<java.lang.StringBuffer: void <init>()>();

        i#1 = 0;

     label01:
        $stack6 = virtualinvoke str.<java.lang.String: int length()>();

        if i#1 >= $stack6 goto label15;

        $stack8 = virtualinvoke str.<java.lang.String: char charAt(int)>(i#1);

        lookupswitch($stack8)
        {
            case 0: goto label02;
            case 8: goto label03;
            case 9: goto label04;
            case 10: goto label05;
            case 12: goto label06;
            case 13: goto label07;
            case 34: goto label08;
            case 39: goto label09;
            case 92: goto label10;
            default: goto label11;
        };

     label02:
        goto label14;

     label03:
        virtualinvoke $stack5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\b");

        goto label14;

     label04:
        virtualinvoke $stack5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\t");

        goto label14;

     label05:
        virtualinvoke $stack5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\n");

        goto label14;

     label06:
        virtualinvoke $stack5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\f");

        goto label14;

     label07:
        virtualinvoke $stack5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\r");

        goto label14;

     label08:
        virtualinvoke $stack5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\\"");

        goto label14;

     label09:
        virtualinvoke $stack5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\\'");

        goto label14;

     label10:
        virtualinvoke $stack5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\\\");

        goto label14;

     label11:
        $stack19 = virtualinvoke str.<java.lang.String: char charAt(int)>(i#1);

        if $stack19 < 32 goto label12;

        if $stack19 <= 126 goto label13;

     label12:
        $stack20 = new java.lang.StringBuilder;

        specialinvoke $stack20.<java.lang.StringBuilder: void <init>()>();

        $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0000");

        $stack22 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>($stack19, 16);

        $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack22);

        s = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack25 = new java.lang.StringBuilder;

        specialinvoke $stack25.<java.lang.StringBuilder: void <init>()>();

        $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\u");

        $stack27 = virtualinvoke s.<java.lang.String: int length()>();

        $stack28 = $stack27 - 4;

        $stack29 = virtualinvoke s.<java.lang.String: int length()>();

        $stack30 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack28, $stack29);

        $stack31 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack30);

        $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack32);

        goto label14;

     label13:
        virtualinvoke $stack5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($stack19);

     label14:
        i#1 = i#1 + 1;

        goto label01;

     label15:
        $stack7 = virtualinvoke $stack5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $stack7;
    }

    public static void <clinit>()
    {
        <org.dacapo.parser.ParseException: long serialVersionUID> = 1L;

        return;
    }
}
