public class Harness extends java.lang.Object
{
    private static final java.lang.String HARNESS_PATH;
    private static final java.lang.String HARNESS_CLASS;
    private static final java.lang.String HARNESS_METHOD;
    private static final java.lang.String CALLBACK_CLASSPATH_PROPERTY;

    public void <init>()
    {
        Harness l0;

        l0 := @this: Harness;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.lang.ClassLoader $stack3;
        java.lang.Thread $stack4;
        java.lang.Class $stack5;
        java.lang.Class[] $stack6;
        java.lang.reflect.Method $stack7;
        java.lang.Object[] l2;
        java.lang.String[] l0;
        boolean $stack8;

        l0 := @parameter0: java.lang.String[];

        $stack3 = staticinvoke <Harness: java.lang.ClassLoader makeHarnessClassLoader()>();

        $stack4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $stack4.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>($stack3);

        $stack5 = virtualinvoke $stack3.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>("org.dacapo.harness.TestHarness");

        $stack6 = newarray (java.lang.Class)[1];

        $stack6[0] = class "[Ljava/lang/String;";

        $stack7 = virtualinvoke $stack5.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("main", $stack6);

        l2 = newarray (java.lang.Object)[1];

        l2[0] = l0;

        staticinvoke <soot.rtlib.tamiflex.ReflectiveCalls: void knownMethodInvoke(int,java.lang.Object,java.lang.reflect.Method)>(12, null, $stack7);

        $stack8 = staticinvoke <soot.rtlib.tamiflex.OpaquePredicate: boolean getFalse()>();

        if $stack8 == 0 goto label1;

        staticinvoke <soot.rtlib.tamiflex.ReflectiveCallsWrapper: java.lang.Object reflectiveCall25(java.lang.Object,java.lang.Object[])>(null, l2);

        goto label2;

     label1:
        virtualinvoke $stack7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, l2);

     label2:
        staticinvoke <java.lang.System: void exit(int)>(0);

        return;
    }

    private static java.lang.ClassLoader makeHarnessClassLoader() throws java.net.MalformedURLException, java.net.URISyntaxException
    {
        java.lang.Thread $stack4;
        java.lang.ClassLoader $stack5;
        java.lang.String $stack6;
        java.net.URL $stack7, $stack13;
        java.net.URL[] $stack8, l1#5, l2#6;
        java.net.URLClassLoader $stack9;
        boolean $stack10;
        java.net.URI $stack11, $stack18, l3#4;
        java.net.URISyntaxException $stack16;
        java.io.File $stack17, l3#3;

        $stack4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $stack5 = virtualinvoke $stack4.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        $stack6 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("dacapo.callback.classpath");

        $stack7 = virtualinvoke $stack5.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>("org/dacapo/harness");

        if $stack6 == null goto label4;

        l3#3 = new java.io.File;

        specialinvoke l3#3.<java.io.File: void <init>(java.lang.String)>($stack6);

        $stack10 = virtualinvoke l3#3.<java.io.File: boolean isDirectory()>();

        if $stack10 == 0 goto label1;

        $stack17 = virtualinvoke l3#3.<java.io.File: java.io.File getAbsoluteFile()>();

        $stack18 = virtualinvoke $stack17.<java.io.File: java.net.URI toURI()>();

        l3#4 = $stack18;

        goto label2;

     label1:
        $stack11 = new java.net.URI;

        specialinvoke $stack11.<java.net.URI: void <init>(java.lang.String)>($stack6);

        l3#4 = $stack11;

     label2:
        if l3#4 != null goto label3;

        $stack16 = new java.net.URISyntaxException;

        specialinvoke $stack16.<java.net.URISyntaxException: void <init>(java.lang.String,java.lang.String)>($stack6, "is not a URI nor a directory nor a class file");

        throw $stack16;

     label3:
        l1#5 = newarray (java.net.URL)[2];

        l1#5[0] = $stack7;

        $stack13 = virtualinvoke l3#4.<java.net.URI: java.net.URL toURL()>();

        l1#5[1] = $stack13;

        l2#6 = l1#5;

        goto label5;

     label4:
        $stack8 = newarray (java.net.URL)[1];

        $stack8[0] = $stack7;

        l2#6 = $stack8;

     label5:
        $stack9 = staticinvoke <java.net.URLClassLoader: java.net.URLClassLoader newInstance(java.net.URL[],java.lang.ClassLoader)>(l2#6, $stack5);

        return $stack9;
    }

    public static void <clinit>()
    {
        <Harness: java.lang.String CALLBACK_CLASSPATH_PROPERTY> = "dacapo.callback.classpath";

        <Harness: java.lang.String HARNESS_METHOD> = "main";

        <Harness: java.lang.String HARNESS_CLASS> = "org.dacapo.harness.TestHarness";

        <Harness: java.lang.String HARNESS_PATH> = "org/dacapo/harness";

        return;
    }
}
