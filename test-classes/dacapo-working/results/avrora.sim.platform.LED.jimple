public class avrora.sim.platform.LED extends java.lang.Object implements avrora.sim.mcu.Microcontroller$Pin$Output
{
    public avrora.sim.Simulator sim;
    public final int colornum;
    public final java.lang.String color;
    public final avrora.sim.FiniteStateMachine state;
    protected final avrora.sim.platform.LED$LEDProbe probe;
    private static final java.lang.String[] modeName;
    private static final double[] modeAmpere;
    private static final int startMode;

    static void <clinit>()
    {
        java.lang.String[] l0#1;
        double[] l0#2;

        <avrora.sim.platform.LED: int startMode> = 0;

        l0#1 = newarray (java.lang.String)[2];

        l0#1[0] = "off";

        l0#1[1] = "on";

        <avrora.sim.platform.LED: java.lang.String[] modeName> = l0#1;

        l0#2 = newarray (double)[2];

        l0#2[0] = 0.0;

        l0#2[1] = 0.0022;

        <avrora.sim.platform.LED: double[] modeAmpere> = l0#2;

        return;
    }

    protected void <init>(avrora.sim.Simulator, int, java.lang.String)
    {
        avrora.sim.platform.LED l0;
        avrora.sim.Simulator l1, $stack5, $stack9;
        int l2;
        java.lang.String l3;
        avrora.sim.FiniteStateMachine $stack4, $stack12;
        avrora.sim.clock.MainClock $stack6;
        java.lang.String[] $stack7;
        avrora.sim.platform.LED$LEDProbe $stack8;
        avrora.sim.energy.Energy $stack10;
        double[] $stack11;
        avrora.sim.energy.EnergyControl $stack13;

        l0 := @this: avrora.sim.platform.LED;

        l1 := @parameter0: avrora.sim.Simulator;

        l2 := @parameter1: int;

        l3 := @parameter2: java.lang.String;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        l0.<avrora.sim.platform.LED: avrora.sim.Simulator sim> = l1;

        l0.<avrora.sim.platform.LED: int colornum> = l2;

        l0.<avrora.sim.platform.LED: java.lang.String color> = l3;

        $stack4 = new avrora.sim.FiniteStateMachine;

        $stack5 = l0.<avrora.sim.platform.LED: avrora.sim.Simulator sim>;

        $stack6 = virtualinvoke $stack5.<avrora.sim.Simulator: avrora.sim.clock.MainClock getClock()>();

        $stack7 = <avrora.sim.platform.LED: java.lang.String[] modeName>;

        specialinvoke $stack4.<avrora.sim.FiniteStateMachine: void <init>(avrora.sim.clock.Clock,int,java.lang.String[],int)>($stack6, 0, $stack7, 0);

        l0.<avrora.sim.platform.LED: avrora.sim.FiniteStateMachine state> = $stack4;

        $stack8 = new avrora.sim.platform.LED$LEDProbe;

        specialinvoke $stack8.<avrora.sim.platform.LED$LEDProbe: void <init>(avrora.sim.platform.LED)>(l0);

        l0.<avrora.sim.platform.LED: avrora.sim.platform.LED$LEDProbe probe> = $stack8;

        $stack10 = new avrora.sim.energy.Energy;

        $stack11 = <avrora.sim.platform.LED: double[] modeAmpere>;

        $stack12 = l0.<avrora.sim.platform.LED: avrora.sim.FiniteStateMachine state>;

        $stack9 = l0.<avrora.sim.platform.LED: avrora.sim.Simulator sim>;

        $stack13 = virtualinvoke $stack9.<avrora.sim.Simulator: avrora.sim.energy.EnergyControl getEnergyControl()>();

        specialinvoke $stack10.<avrora.sim.energy.Energy: void <init>(java.lang.String,double[],avrora.sim.FiniteStateMachine,avrora.sim.energy.EnergyControl)>(l3, $stack11, $stack12, $stack13);

        return;
    }

    static java.lang.String[] access$000()
    {
        java.lang.String[] $stack0;

        $stack0 = <avrora.sim.platform.LED: java.lang.String[] modeName>;

        return $stack0;
    }

    public void disablePrinting()
    {
        avrora.sim.platform.LED l0;
        avrora.sim.platform.LED$LEDProbe $stack1;
        avrora.sim.FiniteStateMachine $stack2;

        l0 := @this: avrora.sim.platform.LED;

        $stack2 = l0.<avrora.sim.platform.LED: avrora.sim.FiniteStateMachine state>;

        $stack1 = l0.<avrora.sim.platform.LED: avrora.sim.platform.LED$LEDProbe probe>;

        virtualinvoke $stack2.<avrora.sim.FiniteStateMachine: void removeProbe(avrora.sim.FiniteStateMachine$Probe)>($stack1);

        return;
    }

    public void enablePrinting()
    {
        avrora.sim.platform.LED l0;
        avrora.sim.platform.LED$LEDProbe $stack1;
        avrora.sim.FiniteStateMachine $stack2;

        l0 := @this: avrora.sim.platform.LED;

        $stack2 = l0.<avrora.sim.platform.LED: avrora.sim.FiniteStateMachine state>;

        $stack1 = l0.<avrora.sim.platform.LED: avrora.sim.platform.LED$LEDProbe probe>;

        virtualinvoke $stack2.<avrora.sim.FiniteStateMachine: void insertProbe(avrora.sim.FiniteStateMachine$Probe)>($stack1);

        return;
    }

    public avrora.sim.FiniteStateMachine getFSM()
    {
        avrora.sim.platform.LED l0;
        avrora.sim.FiniteStateMachine $stack1;

        l0 := @this: avrora.sim.platform.LED;

        $stack1 = l0.<avrora.sim.platform.LED: avrora.sim.FiniteStateMachine state>;

        return $stack1;
    }

    public int getState()
    {
        avrora.sim.platform.LED l0;
        avrora.sim.FiniteStateMachine $stack1;
        int $stack2;

        l0 := @this: avrora.sim.platform.LED;

        $stack1 = l0.<avrora.sim.platform.LED: avrora.sim.FiniteStateMachine state>;

        $stack2 = virtualinvoke $stack1.<avrora.sim.FiniteStateMachine: int getCurrentState()>();

        return $stack2;
    }

    public void write(boolean)
    {
        avrora.sim.platform.LED l0;
        avrora.sim.FiniteStateMachine $stack2;
        boolean l1#1;
        byte l1#2;

        l0 := @this: avrora.sim.platform.LED;

        l1#1 := @parameter0: boolean;

        if l1#1 == 0 goto label1;

        l1#2 = 0;

        goto label2;

     label1:
        l1#2 = 1;

     label2:
        $stack2 = l0.<avrora.sim.platform.LED: avrora.sim.FiniteStateMachine state>;

        virtualinvoke $stack2.<avrora.sim.FiniteStateMachine: void transition(int)>(l1#2);

        return;
    }
}
