public class avrora.sim.mcu.Timer16Bit$BufferedRegister extends avrora.sim.RWRegister
{
    final avrora.sim.RWRegister register;
    final avrora.sim.mcu.Timer16Bit this$0;

    protected void <init>(avrora.sim.mcu.Timer16Bit)
    {
        avrora.sim.mcu.Timer16Bit$BufferedRegister l0;
        avrora.sim.mcu.Timer16Bit l1;
        avrora.sim.RWRegister $stack2;

        l0 := @this: avrora.sim.mcu.Timer16Bit$BufferedRegister;

        l1 := @parameter0: avrora.sim.mcu.Timer16Bit;

        l0.<avrora.sim.mcu.Timer16Bit$BufferedRegister: avrora.sim.mcu.Timer16Bit this$0> = l1;

        specialinvoke l0.<avrora.sim.RWRegister: void <init>()>();

        $stack2 = new avrora.sim.RWRegister;

        specialinvoke $stack2.<avrora.sim.RWRegister: void <init>()>();

        l0.<avrora.sim.mcu.Timer16Bit$BufferedRegister: avrora.sim.RWRegister register> = $stack2;

        return;
    }

    protected void flush()
    {
        avrora.sim.mcu.Timer16Bit$BufferedRegister l0;
        byte $stack1;
        avrora.sim.RWRegister $stack2;

        l0 := @this: avrora.sim.mcu.Timer16Bit$BufferedRegister;

        $stack2 = l0.<avrora.sim.mcu.Timer16Bit$BufferedRegister: avrora.sim.RWRegister register>;

        $stack1 = l0.<avrora.sim.mcu.Timer16Bit$BufferedRegister: byte value>;

        virtualinvoke $stack2.<avrora.sim.RWRegister: void write(byte)>($stack1);

        return;
    }

    public byte read()
    {
        avrora.sim.mcu.Timer16Bit$BufferedRegister l0;
        avrora.sim.RWRegister $stack1;
        byte $stack2;

        l0 := @this: avrora.sim.mcu.Timer16Bit$BufferedRegister;

        $stack1 = l0.<avrora.sim.mcu.Timer16Bit$BufferedRegister: avrora.sim.RWRegister register>;

        $stack2 = virtualinvoke $stack1.<avrora.sim.RWRegister: byte read()>();

        return $stack2;
    }

    public byte readBuffer()
    {
        avrora.sim.mcu.Timer16Bit$BufferedRegister l0;
        byte $stack1;

        l0 := @this: avrora.sim.mcu.Timer16Bit$BufferedRegister;

        $stack1 = specialinvoke l0.<avrora.sim.RWRegister: byte read()>();

        return $stack1;
    }

    public void write(byte)
    {
        avrora.sim.mcu.Timer16Bit$BufferedRegister l0;
        avrora.sim.mcu.Timer16Bit $stack2;
        avrora.sim.mcu.RegisterSet$Field $stack3;
        byte l1#1;
        int l1#2;

        l0 := @this: avrora.sim.mcu.Timer16Bit$BufferedRegister;

        l1#1 := @parameter0: byte;

        specialinvoke l0.<avrora.sim.RWRegister: void write(byte)>(l1#1);

        $stack2 = l0.<avrora.sim.mcu.Timer16Bit$BufferedRegister: avrora.sim.mcu.Timer16Bit this$0>;

        $stack3 = $stack2.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.RegisterSet$Field WGMn>;

        l1#2 = $stack3.<avrora.sim.mcu.RegisterSet$Field: int value>;

        if l1#2 == 0 goto label1;

        if l1#2 == 4 goto label1;

        if l1#2 != 12 goto label2;

     label1:
        virtualinvoke l0.<avrora.sim.mcu.Timer16Bit$BufferedRegister: void flush()>();

     label2:
        return;
    }
}
