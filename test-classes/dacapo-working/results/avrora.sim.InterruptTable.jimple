public class avrora.sim.InterruptTable extends java.lang.Object
{
    protected final int numInterrupts;
    protected long posted;
    protected long pending;
    protected long enabled;
    protected avrora.sim.util.MulticastInterruptProbe globalProbe;
    protected final avrora.sim.util.MulticastInterruptProbe[] probes;
    protected final avrora.sim.InterruptTable$Notification[] notify;
    protected final avrora.sim.Interpreter interpreter;
    protected final avrora.sim.State state;

    public void <init>(avrora.sim.Interpreter, int)
    {
        avrora.sim.InterruptTable l0;
        avrora.sim.Interpreter l1, $stack5;
        int l2;
        avrora.sim.util.MulticastInterruptProbe[] $stack3;
        avrora.sim.InterruptTable$Notification[] $stack4;
        avrora.sim.State $stack6;

        l0 := @this: avrora.sim.InterruptTable;

        l1 := @parameter0: avrora.sim.Interpreter;

        l2 := @parameter1: int;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        l0.<avrora.sim.InterruptTable: avrora.sim.Interpreter interpreter> = l1;

        $stack3 = newarray (avrora.sim.util.MulticastInterruptProbe)[l2];

        l0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe[] probes> = $stack3;

        $stack4 = newarray (avrora.sim.InterruptTable$Notification)[l2];

        l0.<avrora.sim.InterruptTable: avrora.sim.InterruptTable$Notification[] notify> = $stack4;

        $stack5 = l0.<avrora.sim.InterruptTable: avrora.sim.Interpreter interpreter>;

        $stack6 = virtualinvoke $stack5.<avrora.sim.Interpreter: avrora.sim.State getState()>();

        l0.<avrora.sim.InterruptTable: avrora.sim.State state> = $stack6;

        l0.<avrora.sim.InterruptTable: int numInterrupts> = l2;

        return;
    }

    public void afterInvoke(int)
    {
        avrora.sim.InterruptTable l0;
        int l1;
        avrora.sim.util.MulticastInterruptProbe[] $stack3;
        avrora.sim.util.MulticastInterruptProbe l2, $stack4, $stack7;
        avrora.sim.State $stack5, $stack6;

        l0 := @this: avrora.sim.InterruptTable;

        l1 := @parameter0: int;

        $stack3 = l0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe[] probes>;

        l2 = $stack3[l1];

        $stack4 = l0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe>;

        if $stack4 == null goto label1;

        $stack7 = l0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe>;

        $stack6 = l0.<avrora.sim.InterruptTable: avrora.sim.State state>;

        virtualinvoke $stack7.<avrora.sim.util.MulticastInterruptProbe: void fireAfterInvoke(avrora.sim.State,int)>($stack6, l1);

     label1:
        if l2 == null goto label2;

        $stack5 = l0.<avrora.sim.InterruptTable: avrora.sim.State state>;

        virtualinvoke l2.<avrora.sim.util.MulticastInterruptProbe: void fireAfterInvoke(avrora.sim.State,int)>($stack5, l1);

     label2:
        return;
    }

    public void beforeInvoke(int)
    {
        int l1;
        avrora.sim.util.MulticastInterruptProbe[] $stack3;
        avrora.sim.util.MulticastInterruptProbe l2, $stack4, $stack12;
        avrora.sim.InterruptTable$Notification[] $stack5;
        avrora.sim.State $stack6, $stack11;
        avrora.sim.InterruptTable$Notification $stack9;
        avrora.sim.InterruptTable l0#1;

        l0#1 := @this: avrora.sim.InterruptTable;

        l1 := @parameter0: int;

        $stack3 = l0#1.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe[] probes>;

        l2 = $stack3[l1];

        $stack4 = l0#1.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe>;

        if $stack4 == null goto label1;

        $stack12 = l0#1.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe>;

        $stack11 = l0#1.<avrora.sim.InterruptTable: avrora.sim.State state>;

        virtualinvoke $stack12.<avrora.sim.util.MulticastInterruptProbe: void fireBeforeInvoke(avrora.sim.State,int)>($stack11, l1);

     label1:
        if l2 == null goto label2;

        $stack6 = l0#1.<avrora.sim.InterruptTable: avrora.sim.State state>;

        virtualinvoke l2.<avrora.sim.util.MulticastInterruptProbe: void fireBeforeInvoke(avrora.sim.State,int)>($stack6, l1);

     label2:
        $stack5 = l0#1.<avrora.sim.InterruptTable: avrora.sim.InterruptTable$Notification[] notify>;

        $stack9 = $stack5[l1];

        if $stack9 == null goto label3;

        interfaceinvoke $stack9.<avrora.sim.InterruptTable$Notification: void invoke(int)>(l1);

     label3:
        return;
    }

    public void disable(int)
    {
        avrora.sim.InterruptTable l0;
        int l1;
        long $stack3, $stack4, $stack5, $stack6, $stack7;
        avrora.sim.util.MulticastInterruptProbe[] $stack8;
        avrora.sim.util.MulticastInterruptProbe l2, $stack9, $stack12;
        avrora.sim.State $stack10, $stack11;

        l0 := @this: avrora.sim.InterruptTable;

        l1 := @parameter0: int;

        $stack3 = l0.<avrora.sim.InterruptTable: long enabled>;

        $stack4 = staticinvoke <cck.util.Arithmetic: long setBit(long,int,boolean)>($stack3, l1, 0);

        l0.<avrora.sim.InterruptTable: long enabled> = $stack4;

        $stack6 = l0.<avrora.sim.InterruptTable: long posted>;

        $stack5 = l0.<avrora.sim.InterruptTable: long enabled>;

        $stack7 = $stack6 & $stack5;

        l0.<avrora.sim.InterruptTable: long pending> = $stack7;

        $stack8 = l0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe[] probes>;

        l2 = $stack8[l1];

        $stack9 = l0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe>;

        if $stack9 == null goto label1;

        $stack12 = l0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe>;

        $stack11 = l0.<avrora.sim.InterruptTable: avrora.sim.State state>;

        virtualinvoke $stack12.<avrora.sim.util.MulticastInterruptProbe: void fireWhenDisabled(avrora.sim.State,int)>($stack11, l1);

     label1:
        if l2 == null goto label2;

        $stack10 = l0.<avrora.sim.InterruptTable: avrora.sim.State state>;

        virtualinvoke l2.<avrora.sim.util.MulticastInterruptProbe: void fireWhenDisabled(avrora.sim.State,int)>($stack10, l1);

     label2:
        return;
    }

    public void disableAll()
    {
        avrora.sim.InterruptTable l0;
        avrora.sim.util.MulticastInterruptProbe $stack1, $stack3;
        avrora.sim.State $stack2;

        l0 := @this: avrora.sim.InterruptTable;

        $stack1 = l0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe>;

        if $stack1 == null goto label1;

        $stack3 = l0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe>;

        $stack2 = l0.<avrora.sim.InterruptTable: avrora.sim.State state>;

        virtualinvoke $stack3.<avrora.sim.util.MulticastInterruptProbe: void fireWhenDisabled(avrora.sim.State,int)>($stack2, 0);

     label1:
        return;
    }

    void enable(int)
    {
        avrora.sim.InterruptTable l0;
        int l1;
        long $stack3, $stack4, $stack5, $stack6, $stack7;
        avrora.sim.util.MulticastInterruptProbe[] $stack8;
        avrora.sim.util.MulticastInterruptProbe l2, $stack9, $stack12;
        avrora.sim.State $stack10, $stack11;

        l0 := @this: avrora.sim.InterruptTable;

        l1 := @parameter0: int;

        $stack3 = l0.<avrora.sim.InterruptTable: long enabled>;

        $stack4 = staticinvoke <cck.util.Arithmetic: long setBit(long,int,boolean)>($stack3, l1, 1);

        l0.<avrora.sim.InterruptTable: long enabled> = $stack4;

        $stack6 = l0.<avrora.sim.InterruptTable: long posted>;

        $stack5 = l0.<avrora.sim.InterruptTable: long enabled>;

        $stack7 = $stack6 & $stack5;

        l0.<avrora.sim.InterruptTable: long pending> = $stack7;

        $stack8 = l0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe[] probes>;

        l2 = $stack8[l1];

        $stack9 = l0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe>;

        if $stack9 == null goto label1;

        $stack12 = l0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe>;

        $stack11 = l0.<avrora.sim.InterruptTable: avrora.sim.State state>;

        virtualinvoke $stack12.<avrora.sim.util.MulticastInterruptProbe: void fireWhenEnabled(avrora.sim.State,int)>($stack11, l1);

     label1:
        if l2 == null goto label2;

        $stack10 = l0.<avrora.sim.InterruptTable: avrora.sim.State state>;

        virtualinvoke l2.<avrora.sim.util.MulticastInterruptProbe: void fireWhenEnabled(avrora.sim.State,int)>($stack10, l1);

     label2:
        return;
    }

    public void enableAll()
    {
        avrora.sim.InterruptTable l0;
        avrora.sim.util.MulticastInterruptProbe $stack1, $stack3;
        avrora.sim.State $stack2;

        l0 := @this: avrora.sim.InterruptTable;

        $stack1 = l0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe>;

        if $stack1 == null goto label1;

        $stack3 = l0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe>;

        $stack2 = l0.<avrora.sim.InterruptTable: avrora.sim.State state>;

        virtualinvoke $stack3.<avrora.sim.util.MulticastInterruptProbe: void fireWhenEnabled(avrora.sim.State,int)>($stack2, 0);

     label1:
        return;
    }

    void force(int)
    {
        int l1;
        avrora.sim.InterruptTable$Notification[] $stack2;
        avrora.sim.InterruptTable l0#1;
        avrora.sim.InterruptTable$Notification l0#2;

        l0#1 := @this: avrora.sim.InterruptTable;

        l1 := @parameter0: int;

        virtualinvoke l0#1.<avrora.sim.InterruptTable: void post(int)>(l1);

        $stack2 = l0#1.<avrora.sim.InterruptTable: avrora.sim.InterruptTable$Notification[] notify>;

        l0#2 = $stack2[l1];

        if l0#2 == null goto label1;

        interfaceinvoke l0#2.<avrora.sim.InterruptTable$Notification: void force(int)>(l1);

     label1:
        return;
    }

    public long getEnabledInterrupts()
    {
        avrora.sim.InterruptTable l0;
        long $stack1;

        l0 := @this: avrora.sim.InterruptTable;

        $stack1 = l0.<avrora.sim.InterruptTable: long enabled>;

        return $stack1;
    }

    public avrora.sim.InterruptTable$Notification getInternalNotification(int)
    {
        avrora.sim.InterruptTable l0;
        int l1;
        avrora.sim.InterruptTable$Notification[] $stack2;
        avrora.sim.InterruptTable$Notification $stack3;

        l0 := @this: avrora.sim.InterruptTable;

        l1 := @parameter0: int;

        $stack2 = l0.<avrora.sim.InterruptTable: avrora.sim.InterruptTable$Notification[] notify>;

        $stack3 = $stack2[l1];

        return $stack3;
    }

    public int getNumberOfInterrupts()
    {
        avrora.sim.InterruptTable l0;
        int $stack1;

        l0 := @this: avrora.sim.InterruptTable;

        $stack1 = l0.<avrora.sim.InterruptTable: int numInterrupts>;

        return $stack1;
    }

    public long getPendingInterrupts()
    {
        avrora.sim.InterruptTable l0;
        long $stack1;

        l0 := @this: avrora.sim.InterruptTable;

        $stack1 = l0.<avrora.sim.InterruptTable: long pending>;

        return $stack1;
    }

    public long getPostedInterrupts()
    {
        avrora.sim.InterruptTable l0;
        long $stack1;

        l0 := @this: avrora.sim.InterruptTable;

        $stack1 = l0.<avrora.sim.InterruptTable: long posted>;

        return $stack1;
    }

    public void insertProbe(avrora.sim.Simulator$InterruptProbe, int)
    {
        int l2;
        avrora.sim.util.MulticastInterruptProbe[] $stack4, $stack5;
        avrora.sim.Simulator$InterruptProbe l1;
        avrora.sim.InterruptTable l0#1;
        avrora.sim.util.MulticastInterruptProbe l3#2, l0#3;

        l0#1 := @this: avrora.sim.InterruptTable;

        l1 := @parameter0: avrora.sim.Simulator$InterruptProbe;

        l2 := @parameter1: int;

        $stack4 = l0#1.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe[] probes>;

        l3#2 = $stack4[l2];

        if l3#2 != null goto label1;

        $stack5 = l0#1.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe[] probes>;

        l0#3 = new avrora.sim.util.MulticastInterruptProbe;

        specialinvoke l0#3.<avrora.sim.util.MulticastInterruptProbe: void <init>()>();

        l3#2 = l0#3;

        $stack5[l2] = l0#3;

     label1:
        virtualinvoke l3#2.<avrora.sim.util.MulticastInterruptProbe: void add(java.lang.Object)>(l1);

        return;
    }

    public void insertProbe(avrora.sim.Simulator$InterruptProbe)
    {
        avrora.sim.InterruptTable l0;
        avrora.sim.util.MulticastInterruptProbe $stack2, $stack3, $stack4;
        avrora.sim.Simulator$InterruptProbe l1;

        l0 := @this: avrora.sim.InterruptTable;

        l1 := @parameter0: avrora.sim.Simulator$InterruptProbe;

        $stack2 = l0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe>;

        if $stack2 != null goto label1;

        $stack4 = new avrora.sim.util.MulticastInterruptProbe;

        specialinvoke $stack4.<avrora.sim.util.MulticastInterruptProbe: void <init>()>();

        l0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe> = $stack4;

     label1:
        $stack3 = l0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe>;

        virtualinvoke $stack3.<avrora.sim.util.MulticastInterruptProbe: void add(java.lang.Object)>(l1);

        return;
    }

    public boolean isEnabled(int)
    {
        avrora.sim.InterruptTable l0;
        int l1;
        long $stack2;
        boolean $stack3;

        l0 := @this: avrora.sim.InterruptTable;

        l1 := @parameter0: int;

        $stack2 = l0.<avrora.sim.InterruptTable: long enabled>;

        $stack3 = staticinvoke <cck.util.Arithmetic: boolean getBit(long,int)>($stack2, l1);

        return $stack3;
    }

    public boolean isPending(int)
    {
        avrora.sim.InterruptTable l0;
        int l1;
        long $stack2;
        boolean $stack3;

        l0 := @this: avrora.sim.InterruptTable;

        l1 := @parameter0: int;

        $stack2 = l0.<avrora.sim.InterruptTable: long pending>;

        $stack3 = staticinvoke <cck.util.Arithmetic: boolean getBit(long,int)>($stack2, l1);

        return $stack3;
    }

    public boolean isPosted(int)
    {
        avrora.sim.InterruptTable l0;
        int l1;
        long $stack2;
        boolean $stack3;

        l0 := @this: avrora.sim.InterruptTable;

        l1 := @parameter0: int;

        $stack2 = l0.<avrora.sim.InterruptTable: long posted>;

        $stack3 = staticinvoke <cck.util.Arithmetic: boolean getBit(long,int)>($stack2, l1);

        return $stack3;
    }

    public void post(int)
    {
        avrora.sim.InterruptTable l0;
        avrora.sim.Interpreter $stack3;
        int l1;
        long $stack4, $stack5, $stack6, $stack7, $stack8;
        avrora.sim.util.MulticastInterruptProbe[] $stack9;
        avrora.sim.util.MulticastInterruptProbe l2, $stack10, $stack13;
        avrora.sim.State $stack11, $stack12;

        l0 := @this: avrora.sim.InterruptTable;

        l1 := @parameter0: int;

        $stack3 = l0.<avrora.sim.InterruptTable: avrora.sim.Interpreter interpreter>;

        $stack3.<avrora.sim.Interpreter: boolean innerLoop> = 0;

        $stack4 = l0.<avrora.sim.InterruptTable: long posted>;

        $stack5 = staticinvoke <cck.util.Arithmetic: long setBit(long,int,boolean)>($stack4, l1, 1);

        l0.<avrora.sim.InterruptTable: long posted> = $stack5;

        $stack7 = l0.<avrora.sim.InterruptTable: long posted>;

        $stack6 = l0.<avrora.sim.InterruptTable: long enabled>;

        $stack8 = $stack7 & $stack6;

        l0.<avrora.sim.InterruptTable: long pending> = $stack8;

        $stack9 = l0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe[] probes>;

        l2 = $stack9[l1];

        $stack10 = l0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe>;

        if $stack10 == null goto label1;

        $stack13 = l0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe>;

        $stack12 = l0.<avrora.sim.InterruptTable: avrora.sim.State state>;

        virtualinvoke $stack13.<avrora.sim.util.MulticastInterruptProbe: void fireWhenPosted(avrora.sim.State,int)>($stack12, l1);

     label1:
        if l2 == null goto label2;

        $stack11 = l0.<avrora.sim.InterruptTable: avrora.sim.State state>;

        virtualinvoke l2.<avrora.sim.util.MulticastInterruptProbe: void fireWhenPosted(avrora.sim.State,int)>($stack11, l1);

     label2:
        return;
    }

    public void registerInternalNotification(avrora.sim.InterruptTable$Notification, int)
    {
        avrora.sim.InterruptTable l0;
        int l2;
        avrora.sim.InterruptTable$Notification l1;
        avrora.sim.InterruptTable$Notification[] $stack3;

        l0 := @this: avrora.sim.InterruptTable;

        l1 := @parameter0: avrora.sim.InterruptTable$Notification;

        l2 := @parameter1: int;

        $stack3 = l0.<avrora.sim.InterruptTable: avrora.sim.InterruptTable$Notification[] notify>;

        $stack3[l2] = l1;

        return;
    }

    public void removeProbe(avrora.sim.Simulator$InterruptProbe, int)
    {
        int l2;
        avrora.sim.util.MulticastInterruptProbe[] $stack3;
        avrora.sim.Simulator$InterruptProbe l1;
        avrora.sim.InterruptTable l0#1;
        avrora.sim.util.MulticastInterruptProbe l0#2;

        l0#1 := @this: avrora.sim.InterruptTable;

        l1 := @parameter0: avrora.sim.Simulator$InterruptProbe;

        l2 := @parameter1: int;

        $stack3 = l0#1.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe[] probes>;

        l0#2 = $stack3[l2];

        if l0#2 == null goto label1;

        virtualinvoke l0#2.<avrora.sim.util.MulticastInterruptProbe: void remove(java.lang.Object)>(l1);

     label1:
        return;
    }

    public void removeProbe(avrora.sim.Simulator$InterruptProbe)
    {
        avrora.sim.InterruptTable l0;
        avrora.sim.util.MulticastInterruptProbe $stack2, $stack3;
        avrora.sim.Simulator$InterruptProbe l1;

        l0 := @this: avrora.sim.InterruptTable;

        l1 := @parameter0: avrora.sim.Simulator$InterruptProbe;

        $stack2 = l0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe>;

        if $stack2 == null goto label1;

        $stack3 = l0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe>;

        virtualinvoke $stack3.<avrora.sim.util.MulticastInterruptProbe: void remove(java.lang.Object)>(l1);

     label1:
        return;
    }

    public void unpost(int)
    {
        avrora.sim.InterruptTable l0;
        int l1;
        long $stack3, $stack4, $stack5, $stack6, $stack7;
        avrora.sim.util.MulticastInterruptProbe[] $stack8;
        avrora.sim.util.MulticastInterruptProbe l2, $stack9, $stack12;
        avrora.sim.State $stack10, $stack11;

        l0 := @this: avrora.sim.InterruptTable;

        l1 := @parameter0: int;

        $stack3 = l0.<avrora.sim.InterruptTable: long posted>;

        $stack4 = staticinvoke <cck.util.Arithmetic: long setBit(long,int,boolean)>($stack3, l1, 0);

        l0.<avrora.sim.InterruptTable: long posted> = $stack4;

        $stack6 = l0.<avrora.sim.InterruptTable: long posted>;

        $stack5 = l0.<avrora.sim.InterruptTable: long enabled>;

        $stack7 = $stack6 & $stack5;

        l0.<avrora.sim.InterruptTable: long pending> = $stack7;

        $stack8 = l0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe[] probes>;

        l2 = $stack8[l1];

        $stack9 = l0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe>;

        if $stack9 == null goto label1;

        $stack12 = l0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe>;

        $stack11 = l0.<avrora.sim.InterruptTable: avrora.sim.State state>;

        virtualinvoke $stack12.<avrora.sim.util.MulticastInterruptProbe: void fireWhenUnposted(avrora.sim.State,int)>($stack11, l1);

     label1:
        if l2 == null goto label2;

        $stack10 = l0.<avrora.sim.InterruptTable: avrora.sim.State state>;

        virtualinvoke l2.<avrora.sim.util.MulticastInterruptProbe: void fireWhenUnposted(avrora.sim.State,int)>($stack10, l1);

     label2:
        return;
    }
}
