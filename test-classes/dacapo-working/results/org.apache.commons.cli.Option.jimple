public class org.apache.commons.cli.Option extends java.lang.Object implements java.lang.Cloneable, java.io.Serializable
{
    private static final long serialVersionUID;
    public static final int UNINITIALIZED;
    public static final int UNLIMITED_VALUES;
    private java.lang.String opt;
    private java.lang.String longOpt;
    private java.lang.String argName;
    private java.lang.String description;
    private boolean required;
    private boolean optionalArg;
    private int numberOfArgs;
    private java.lang.Object type;
    private java.util.List values;
    private char valuesep;

    public void <init>(java.lang.String, java.lang.String) throws java.lang.IllegalArgumentException
    {
        org.apache.commons.cli.Option l0;
        java.lang.String l1, l2;

        l0 := @this: org.apache.commons.cli.Option;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: java.lang.String;

        specialinvoke l0.<org.apache.commons.cli.Option: void <init>(java.lang.String,java.lang.String,boolean,java.lang.String)>(l1, null, 0, l2);

        return;
    }

    public void <init>(java.lang.String, boolean, java.lang.String) throws java.lang.IllegalArgumentException
    {
        org.apache.commons.cli.Option l0;
        java.lang.String l1, l3;
        boolean l2;

        l0 := @this: org.apache.commons.cli.Option;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: boolean;

        l3 := @parameter2: java.lang.String;

        specialinvoke l0.<org.apache.commons.cli.Option: void <init>(java.lang.String,java.lang.String,boolean,java.lang.String)>(l1, null, l2, l3);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, boolean, java.lang.String) throws java.lang.IllegalArgumentException
    {
        org.apache.commons.cli.Option l0;
        java.util.ArrayList $stack5;
        java.lang.String l1, l2, l4;
        boolean l3;

        l0 := @this: org.apache.commons.cli.Option;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: boolean;

        l4 := @parameter3: java.lang.String;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        l0.<org.apache.commons.cli.Option: java.lang.String argName> = "arg";

        l0.<org.apache.commons.cli.Option: int numberOfArgs> = -1;

        $stack5 = new java.util.ArrayList;

        specialinvoke $stack5.<java.util.ArrayList: void <init>()>();

        l0.<org.apache.commons.cli.Option: java.util.List values> = $stack5;

        staticinvoke <org.apache.commons.cli.OptionValidator: void validateOption(java.lang.String)>(l1);

        l0.<org.apache.commons.cli.Option: java.lang.String opt> = l1;

        l0.<org.apache.commons.cli.Option: java.lang.String longOpt> = l2;

        if l3 == 0 goto label1;

        l0.<org.apache.commons.cli.Option: int numberOfArgs> = 1;

     label1:
        l0.<org.apache.commons.cli.Option: java.lang.String description> = l4;

        return;
    }

    private void add(java.lang.String)
    {
        org.apache.commons.cli.Option l0;
        int $stack2, $stack6, $stack7, $stack8;
        java.lang.String l1;
        java.util.List $stack3, $stack5;
        java.lang.RuntimeException $stack11;

        l0 := @this: org.apache.commons.cli.Option;

        l1 := @parameter0: java.lang.String;

        $stack2 = l0.<org.apache.commons.cli.Option: int numberOfArgs>;

        if $stack2 <= 0 goto label1;

        $stack5 = l0.<org.apache.commons.cli.Option: java.util.List values>;

        $stack6 = interfaceinvoke $stack5.<java.util.List: int size()>();

        $stack7 = l0.<org.apache.commons.cli.Option: int numberOfArgs>;

        $stack8 = $stack7 - 1;

        if $stack6 <= $stack8 goto label1;

        $stack11 = new java.lang.RuntimeException;

        specialinvoke $stack11.<java.lang.RuntimeException: void <init>(java.lang.String)>("Cannot add value, list full.");

        throw $stack11;

     label1:
        $stack3 = l0.<org.apache.commons.cli.Option: java.util.List values>;

        interfaceinvoke $stack3.<java.util.List: boolean add(java.lang.Object)>(l1);

        return;
    }

    public boolean addValue(java.lang.String)
    {
        java.lang.UnsupportedOperationException $stack2;
        org.apache.commons.cli.Option l0;
        java.lang.String l1;

        l0 := @this: org.apache.commons.cli.Option;

        l1 := @parameter0: java.lang.String;

        $stack2 = new java.lang.UnsupportedOperationException;

        specialinvoke $stack2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");

        throw $stack2;
    }

    void addValueForProcessing(java.lang.String)
    {
        org.apache.commons.cli.Option l0;
        int $stack2;
        java.lang.RuntimeException $stack3;
        java.lang.String l1;

        l0 := @this: org.apache.commons.cli.Option;

        l1 := @parameter0: java.lang.String;

        $stack2 = l0.<org.apache.commons.cli.Option: int numberOfArgs>;

        lookupswitch($stack2)
        {
            case -1: goto label1;
            default: goto label2;
        };

     label1:
        $stack3 = new java.lang.RuntimeException;

        specialinvoke $stack3.<java.lang.RuntimeException: void <init>(java.lang.String)>("NO_ARGS_ALLOWED");

        throw $stack3;

     label2:
        specialinvoke l0.<org.apache.commons.cli.Option: void processValue(java.lang.String)>(l1);

        return;
    }

    void clearValues()
    {
        org.apache.commons.cli.Option l0;
        java.util.List $stack1;

        l0 := @this: org.apache.commons.cli.Option;

        $stack1 = l0.<org.apache.commons.cli.Option: java.util.List values>;

        interfaceinvoke $stack1.<java.util.List: void clear()>();

        return;
    }

    public java.lang.Object clone()
    {
        java.lang.Object $stack2;
        java.util.ArrayList $stack3;
        java.util.List $stack4;
        java.lang.CloneNotSupportedException $stack5;
        java.lang.StringBuffer $stack6, $stack7, $stack10;
        java.lang.String $stack8, $stack11;
        java.lang.RuntimeException $stack9;
        org.apache.commons.cli.Option l0#1, l1#2;

        l0#1 := @this: org.apache.commons.cli.Option;

     label1:
        $stack2 = specialinvoke l0#1.<java.lang.Object: java.lang.Object clone()>();

        l1#2 = (org.apache.commons.cli.Option) $stack2;

        $stack3 = new java.util.ArrayList;

        $stack4 = l0#1.<org.apache.commons.cli.Option: java.util.List values>;

        specialinvoke $stack3.<java.util.ArrayList: void <init>(java.util.Collection)>($stack4);

        l1#2.<org.apache.commons.cli.Option: java.util.List values> = $stack3;

     label2:
        return l1#2;

     label3:
        $stack5 := @caughtexception;

        $stack6 = new java.lang.StringBuffer;

        specialinvoke $stack6.<java.lang.StringBuffer: void <init>()>();

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("A CloneNotSupportedException was thrown: ");

        $stack8 = virtualinvoke $stack5.<java.lang.CloneNotSupportedException: java.lang.String getMessage()>();

        $stack9 = new java.lang.RuntimeException;

        $stack10 = virtualinvoke $stack7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack8);

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $stack9.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack11);

        throw $stack9;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.cli.Option l0, l1#2;
        java.lang.Class $stack2, $stack3;
        java.lang.String $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack13, $stack14;
        boolean $stack10, $stack15;
        java.lang.Object l1#1;

        l0 := @this: org.apache.commons.cli.Option;

        l1#1 := @parameter0: java.lang.Object;

        if l0 != l1#1 goto label1;

        return 1;

     label1:
        if l1#1 == null goto label2;

        $stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>();

        $stack3 = virtualinvoke l1#1.<java.lang.Object: java.lang.Class getClass()>();

        if $stack2 == $stack3 goto label3;

     label2:
        return 0;

     label3:
        l1#2 = (org.apache.commons.cli.Option) l1#1;

        $stack4 = l0.<org.apache.commons.cli.Option: java.lang.String opt>;

        if $stack4 == null goto label4;

        $stack14 = l0.<org.apache.commons.cli.Option: java.lang.String opt>;

        $stack13 = l1#2.<org.apache.commons.cli.Option: java.lang.String opt>;

        $stack15 = virtualinvoke $stack14.<java.lang.String: boolean equals(java.lang.Object)>($stack13);

        if $stack15 != 0 goto label6;

        goto label5;

     label4:
        $stack5 = l1#2.<org.apache.commons.cli.Option: java.lang.String opt>;

        if $stack5 == null goto label6;

     label5:
        return 0;

     label6:
        $stack6 = l0.<org.apache.commons.cli.Option: java.lang.String longOpt>;

        if $stack6 == null goto label7;

        $stack9 = l0.<org.apache.commons.cli.Option: java.lang.String longOpt>;

        $stack8 = l1#2.<org.apache.commons.cli.Option: java.lang.String longOpt>;

        $stack10 = virtualinvoke $stack9.<java.lang.String: boolean equals(java.lang.Object)>($stack8);

        if $stack10 != 0 goto label9;

        goto label8;

     label7:
        $stack7 = l1#2.<org.apache.commons.cli.Option: java.lang.String longOpt>;

        if $stack7 == null goto label9;

     label8:
        return 0;

     label9:
        return 1;
    }

    public java.lang.String getArgName()
    {
        org.apache.commons.cli.Option l0;
        java.lang.String $stack1;

        l0 := @this: org.apache.commons.cli.Option;

        $stack1 = l0.<org.apache.commons.cli.Option: java.lang.String argName>;

        return $stack1;
    }

    public int getArgs()
    {
        org.apache.commons.cli.Option l0;
        int $stack1;

        l0 := @this: org.apache.commons.cli.Option;

        $stack1 = l0.<org.apache.commons.cli.Option: int numberOfArgs>;

        return $stack1;
    }

    public java.lang.String getDescription()
    {
        org.apache.commons.cli.Option l0;
        java.lang.String $stack1;

        l0 := @this: org.apache.commons.cli.Option;

        $stack1 = l0.<org.apache.commons.cli.Option: java.lang.String description>;

        return $stack1;
    }

    public int getId()
    {
        org.apache.commons.cli.Option l0;
        java.lang.String $stack1;
        char $stack2;

        l0 := @this: org.apache.commons.cli.Option;

        $stack1 = virtualinvoke l0.<org.apache.commons.cli.Option: java.lang.String getKey()>();

        $stack2 = virtualinvoke $stack1.<java.lang.String: char charAt(int)>(0);

        return $stack2;
    }

    java.lang.String getKey()
    {
        org.apache.commons.cli.Option l0;
        java.lang.String $stack1, $stack2, $stack3;

        l0 := @this: org.apache.commons.cli.Option;

        $stack1 = l0.<org.apache.commons.cli.Option: java.lang.String opt>;

        if $stack1 != null goto label1;

        $stack3 = l0.<org.apache.commons.cli.Option: java.lang.String longOpt>;

        return $stack3;

     label1:
        $stack2 = l0.<org.apache.commons.cli.Option: java.lang.String opt>;

        return $stack2;
    }

    public java.lang.String getLongOpt()
    {
        org.apache.commons.cli.Option l0;
        java.lang.String $stack1;

        l0 := @this: org.apache.commons.cli.Option;

        $stack1 = l0.<org.apache.commons.cli.Option: java.lang.String longOpt>;

        return $stack1;
    }

    public java.lang.String getOpt()
    {
        org.apache.commons.cli.Option l0;
        java.lang.String $stack1;

        l0 := @this: org.apache.commons.cli.Option;

        $stack1 = l0.<org.apache.commons.cli.Option: java.lang.String opt>;

        return $stack1;
    }

    public java.lang.Object getType()
    {
        org.apache.commons.cli.Option l0;
        java.lang.Object $stack1;

        l0 := @this: org.apache.commons.cli.Option;

        $stack1 = l0.<org.apache.commons.cli.Option: java.lang.Object type>;

        return $stack1;
    }

    public java.lang.String getValue()
    {
        boolean $stack1;
        java.util.List $stack2;
        java.lang.Object $stack3;
        org.apache.commons.cli.Option l0#1;
        java.lang.String l0#2;

        l0#1 := @this: org.apache.commons.cli.Option;

        $stack1 = specialinvoke l0#1.<org.apache.commons.cli.Option: boolean hasNoValues()>();

        if $stack1 == 0 goto label1;

        l0#2 = null;

        goto label2;

     label1:
        $stack2 = l0#1.<org.apache.commons.cli.Option: java.util.List values>;

        $stack3 = interfaceinvoke $stack2.<java.util.List: java.lang.Object get(int)>(0);

        l0#2 = (java.lang.String) $stack3;

     label2:
        return l0#2;
    }

    public java.lang.String getValue(int) throws java.lang.IndexOutOfBoundsException
    {
        boolean $stack2;
        int l1;
        java.util.List $stack3;
        java.lang.Object $stack4;
        org.apache.commons.cli.Option l0#1;
        java.lang.String l0#2;

        l0#1 := @this: org.apache.commons.cli.Option;

        l1 := @parameter0: int;

        $stack2 = specialinvoke l0#1.<org.apache.commons.cli.Option: boolean hasNoValues()>();

        if $stack2 == 0 goto label1;

        l0#2 = null;

        goto label2;

     label1:
        $stack3 = l0#1.<org.apache.commons.cli.Option: java.util.List values>;

        $stack4 = interfaceinvoke $stack3.<java.util.List: java.lang.Object get(int)>(l1);

        l0#2 = (java.lang.String) $stack4;

     label2:
        return l0#2;
    }

    public java.lang.String getValue(java.lang.String)
    {
        java.lang.String $stack2, l1, l0#3;
        org.apache.commons.cli.Option l0#1;

        l0#1 := @this: org.apache.commons.cli.Option;

        l1 := @parameter0: java.lang.String;

        $stack2 = virtualinvoke l0#1.<org.apache.commons.cli.Option: java.lang.String getValue()>();

        if $stack2 == null goto label1;

        l0#3 = $stack2;

        goto label2;

     label1:
        l0#3 = l1;

     label2:
        return l0#3;
    }

    public char getValueSeparator()
    {
        org.apache.commons.cli.Option l0;
        char $stack1;

        l0 := @this: org.apache.commons.cli.Option;

        $stack1 = l0.<org.apache.commons.cli.Option: char valuesep>;

        return $stack1;
    }

    public java.lang.String[] getValues()
    {
        boolean $stack1;
        java.util.List $stack2, $stack3;
        int $stack4;
        java.lang.String[] $stack5, $stack7, l0#2;
        java.lang.Object[] $stack6;
        org.apache.commons.cli.Option l0#1;

        l0#1 := @this: org.apache.commons.cli.Option;

        $stack1 = specialinvoke l0#1.<org.apache.commons.cli.Option: boolean hasNoValues()>();

        if $stack1 == 0 goto label1;

        l0#2 = null;

        goto label2;

     label1:
        $stack3 = l0#1.<org.apache.commons.cli.Option: java.util.List values>;

        $stack2 = l0#1.<org.apache.commons.cli.Option: java.util.List values>;

        $stack4 = interfaceinvoke $stack2.<java.util.List: int size()>();

        $stack5 = newarray (java.lang.String)[$stack4];

        $stack6 = interfaceinvoke $stack3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($stack5);

        $stack7 = (java.lang.String[]) $stack6;

        l0#2 = (java.lang.String[]) $stack7;

     label2:
        return l0#2;
    }

    public java.util.List getValuesList()
    {
        org.apache.commons.cli.Option l0;
        java.util.List $stack1;

        l0 := @this: org.apache.commons.cli.Option;

        $stack1 = l0.<org.apache.commons.cli.Option: java.util.List values>;

        return $stack1;
    }

    public boolean hasArg()
    {
        int $stack1, $stack2;
        org.apache.commons.cli.Option l0#1;
        boolean l0#2;

        l0#1 := @this: org.apache.commons.cli.Option;

        $stack1 = l0#1.<org.apache.commons.cli.Option: int numberOfArgs>;

        if $stack1 > 0 goto label1;

        $stack2 = l0#1.<org.apache.commons.cli.Option: int numberOfArgs>;

        if $stack2 != -2 goto label2;

     label1:
        l0#2 = 1;

        goto label3;

     label2:
        l0#2 = 0;

     label3:
        return l0#2;
    }

    public boolean hasArgName()
    {
        java.lang.String $stack1, $stack2;
        int $stack3;
        org.apache.commons.cli.Option l0#1;
        boolean l0#2;

        l0#1 := @this: org.apache.commons.cli.Option;

        $stack1 = l0#1.<org.apache.commons.cli.Option: java.lang.String argName>;

        if $stack1 == null goto label1;

        $stack2 = l0#1.<org.apache.commons.cli.Option: java.lang.String argName>;

        $stack3 = virtualinvoke $stack2.<java.lang.String: int length()>();

        if $stack3 <= 0 goto label1;

        l0#2 = 1;

        goto label2;

     label1:
        l0#2 = 0;

     label2:
        return l0#2;
    }

    public boolean hasArgs()
    {
        int $stack1, $stack2;
        org.apache.commons.cli.Option l0#1;
        boolean l0#2;

        l0#1 := @this: org.apache.commons.cli.Option;

        $stack1 = l0#1.<org.apache.commons.cli.Option: int numberOfArgs>;

        if $stack1 > 1 goto label1;

        $stack2 = l0#1.<org.apache.commons.cli.Option: int numberOfArgs>;

        if $stack2 != -2 goto label2;

     label1:
        l0#2 = 1;

        goto label3;

     label2:
        l0#2 = 0;

     label3:
        return l0#2;
    }

    public boolean hasLongOpt()
    {
        java.lang.String $stack1;
        org.apache.commons.cli.Option l0#1;
        boolean l0#2;

        l0#1 := @this: org.apache.commons.cli.Option;

        $stack1 = l0#1.<org.apache.commons.cli.Option: java.lang.String longOpt>;

        if $stack1 == null goto label1;

        l0#2 = 1;

        goto label2;

     label1:
        l0#2 = 0;

     label2:
        return l0#2;
    }

    private boolean hasNoValues()
    {
        org.apache.commons.cli.Option l0;
        java.util.List $stack1;
        boolean $stack2;

        l0 := @this: org.apache.commons.cli.Option;

        $stack1 = l0.<org.apache.commons.cli.Option: java.util.List values>;

        $stack2 = interfaceinvoke $stack1.<java.util.List: boolean isEmpty()>();

        return $stack2;
    }

    public boolean hasOptionalArg()
    {
        org.apache.commons.cli.Option l0;
        boolean $stack1;

        l0 := @this: org.apache.commons.cli.Option;

        $stack1 = l0.<org.apache.commons.cli.Option: boolean optionalArg>;

        return $stack1;
    }

    public boolean hasValueSeparator()
    {
        char $stack1;
        org.apache.commons.cli.Option l0#1;
        boolean l0#2;

        l0#1 := @this: org.apache.commons.cli.Option;

        $stack1 = l0#1.<org.apache.commons.cli.Option: char valuesep>;

        if $stack1 <= 0 goto label1;

        l0#2 = 1;

        goto label2;

     label1:
        l0#2 = 0;

     label2:
        return l0#2;
    }

    public int hashCode()
    {
        java.lang.String $stack2, $stack3, $stack5, $stack9;
        int $stack4, $stack6, $stack10, $stack13, l1#2, l0#4;
        org.apache.commons.cli.Option l0#1;

        l0#1 := @this: org.apache.commons.cli.Option;

        $stack2 = l0#1.<org.apache.commons.cli.Option: java.lang.String opt>;

        if $stack2 == null goto label1;

        $stack9 = l0#1.<org.apache.commons.cli.Option: java.lang.String opt>;

        $stack10 = virtualinvoke $stack9.<java.lang.String: int hashCode()>();

        l1#2 = $stack10;

        goto label2;

     label1:
        l1#2 = 0;

     label2:
        $stack13 = 31 * l1#2;

        $stack3 = l0#1.<org.apache.commons.cli.Option: java.lang.String longOpt>;

        if $stack3 == null goto label3;

        $stack5 = l0#1.<org.apache.commons.cli.Option: java.lang.String longOpt>;

        $stack6 = virtualinvoke $stack5.<java.lang.String: int hashCode()>();

        l0#4 = $stack6;

        goto label4;

     label3:
        l0#4 = 0;

     label4:
        $stack4 = $stack13 + l0#4;

        return $stack4;
    }

    public boolean isRequired()
    {
        org.apache.commons.cli.Option l0;
        boolean $stack1;

        l0 := @this: org.apache.commons.cli.Option;

        $stack1 = l0.<org.apache.commons.cli.Option: boolean required>;

        return $stack1;
    }

    private void processValue(java.lang.String)
    {
        org.apache.commons.cli.Option l0;
        boolean $stack4;
        char $stack5;
        int $stack6, $stack10, $stack11, $stack12, $stack14, $stack16, l3#2;
        java.util.List $stack9;
        java.lang.String $stack13, $stack15, l1#1;

        l0 := @this: org.apache.commons.cli.Option;

        l1#1 := @parameter0: java.lang.String;

        $stack4 = virtualinvoke l0.<org.apache.commons.cli.Option: boolean hasValueSeparator()>();

        if $stack4 == 0 goto label3;

        $stack5 = virtualinvoke l0.<org.apache.commons.cli.Option: char getValueSeparator()>();

        $stack6 = virtualinvoke l1#1.<java.lang.String: int indexOf(int)>($stack5);

        l3#2 = $stack6;

     label1:
        if l3#2 == -1 goto label3;

        $stack9 = l0.<org.apache.commons.cli.Option: java.util.List values>;

        $stack10 = interfaceinvoke $stack9.<java.util.List: int size()>();

        $stack11 = l0.<org.apache.commons.cli.Option: int numberOfArgs>;

        $stack12 = $stack11 - 1;

        if $stack10 != $stack12 goto label2;

        goto label3;

     label2:
        $stack13 = virtualinvoke l1#1.<java.lang.String: java.lang.String substring(int,int)>(0, l3#2);

        specialinvoke l0.<org.apache.commons.cli.Option: void add(java.lang.String)>($stack13);

        $stack14 = l3#2 + 1;

        $stack15 = virtualinvoke l1#1.<java.lang.String: java.lang.String substring(int)>($stack14);

        l1#1 = $stack15;

        $stack16 = virtualinvoke $stack15.<java.lang.String: int indexOf(int)>($stack5);

        l3#2 = $stack16;

        goto label1;

     label3:
        specialinvoke l0.<org.apache.commons.cli.Option: void add(java.lang.String)>(l1#1);

        return;
    }

    public void setArgName(java.lang.String)
    {
        org.apache.commons.cli.Option l0;
        java.lang.String l1;

        l0 := @this: org.apache.commons.cli.Option;

        l1 := @parameter0: java.lang.String;

        l0.<org.apache.commons.cli.Option: java.lang.String argName> = l1;

        return;
    }

    public void setArgs(int)
    {
        org.apache.commons.cli.Option l0;
        int l1;

        l0 := @this: org.apache.commons.cli.Option;

        l1 := @parameter0: int;

        l0.<org.apache.commons.cli.Option: int numberOfArgs> = l1;

        return;
    }

    public void setDescription(java.lang.String)
    {
        org.apache.commons.cli.Option l0;
        java.lang.String l1;

        l0 := @this: org.apache.commons.cli.Option;

        l1 := @parameter0: java.lang.String;

        l0.<org.apache.commons.cli.Option: java.lang.String description> = l1;

        return;
    }

    public void setLongOpt(java.lang.String)
    {
        org.apache.commons.cli.Option l0;
        java.lang.String l1;

        l0 := @this: org.apache.commons.cli.Option;

        l1 := @parameter0: java.lang.String;

        l0.<org.apache.commons.cli.Option: java.lang.String longOpt> = l1;

        return;
    }

    public void setOptionalArg(boolean)
    {
        org.apache.commons.cli.Option l0;
        boolean l1;

        l0 := @this: org.apache.commons.cli.Option;

        l1 := @parameter0: boolean;

        l0.<org.apache.commons.cli.Option: boolean optionalArg> = l1;

        return;
    }

    public void setRequired(boolean)
    {
        org.apache.commons.cli.Option l0;
        boolean l1;

        l0 := @this: org.apache.commons.cli.Option;

        l1 := @parameter0: boolean;

        l0.<org.apache.commons.cli.Option: boolean required> = l1;

        return;
    }

    public void setType(java.lang.Object)
    {
        org.apache.commons.cli.Option l0;
        java.lang.Object l1;

        l0 := @this: org.apache.commons.cli.Option;

        l1 := @parameter0: java.lang.Object;

        l0.<org.apache.commons.cli.Option: java.lang.Object type> = l1;

        return;
    }

    public void setValueSeparator(char)
    {
        org.apache.commons.cli.Option l0;
        char l1;

        l0 := @this: org.apache.commons.cli.Option;

        l1 := @parameter0: char;

        l0.<org.apache.commons.cli.Option: char valuesep> = l1;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuffer $stack2, $stack3, $stack16, $stack28, $stack10#5;
        org.apache.commons.cli.Option l0;
        java.lang.String $stack4, $stack6, $stack15, $stack29, $stack11#9;
        boolean $stack8, $stack9;
        java.lang.Object $stack17, $stack13#13;

        l0 := @this: org.apache.commons.cli.Option;

        $stack2 = new java.lang.StringBuffer;

        specialinvoke $stack2.<java.lang.StringBuffer: void <init>()>();

        $stack3 = virtualinvoke $stack2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[ option: ");

        $stack4 = l0.<org.apache.commons.cli.Option: java.lang.String opt>;

        virtualinvoke $stack3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack4);

        $stack6 = l0.<org.apache.commons.cli.Option: java.lang.String longOpt>;

        if $stack6 == null goto label1;

        $stack28 = virtualinvoke $stack3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $stack29 = l0.<org.apache.commons.cli.Option: java.lang.String longOpt>;

        virtualinvoke $stack28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack29);

     label1:
        virtualinvoke $stack3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $stack8 = virtualinvoke l0.<org.apache.commons.cli.Option: boolean hasArgs()>();

        if $stack8 == 0 goto label2;

        virtualinvoke $stack3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[ARG...]");

        goto label3;

     label2:
        $stack9 = virtualinvoke l0.<org.apache.commons.cli.Option: boolean hasArg()>();

        if $stack9 == 0 goto label3;

        virtualinvoke $stack3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" [ARG]");

     label3:
        $stack10#5 = virtualinvoke $stack3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" :: ");

        $stack11#9 = l0.<org.apache.commons.cli.Option: java.lang.String description>;

        virtualinvoke $stack10#5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack11#9);

        $stack13#13 = l0.<org.apache.commons.cli.Option: java.lang.Object type>;

        if $stack13#13 == null goto label4;

        $stack16 = virtualinvoke $stack3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" :: ");

        $stack17 = l0.<org.apache.commons.cli.Option: java.lang.Object type>;

        virtualinvoke $stack16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($stack17);

     label4:
        virtualinvoke $stack3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ]");

        $stack15 = virtualinvoke $stack3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $stack15;
    }

    public static void <clinit>()
    {
        <org.apache.commons.cli.Option: int UNLIMITED_VALUES> = -2;

        <org.apache.commons.cli.Option: int UNINITIALIZED> = -1;

        <org.apache.commons.cli.Option: long serialVersionUID> = 1L;

        return;
    }
}
