public class avrora.Defaults$AutoProgramReader extends avrora.core.ProgramReader
{

    public void <init>()
    {
        avrora.Defaults$AutoProgramReader l0;

        l0 := @this: avrora.Defaults$AutoProgramReader;

        specialinvoke l0.<avrora.core.ProgramReader: void <init>(java.lang.String)>("The \"auto\" input format reads a program from a single file at a time. It uses the extension of the filename as a clue to decide what input reader to use for that file. For example, an extension of \".asm\" is considered to be a program in Atmel assembly syntax.");

        return;
    }

    public avrora.core.Program read(java.lang.String[]) throws java.lang.Exception
    {
        java.lang.String[] l1;
        int $stack4, $stack5, $stack6;
        java.lang.String $stack7, $stack8, $stack9, $stack11, $stack13, $stack15, $stack19, $stack22, $stack28, $stack31, $stack39, $stack42, $stack49;
        boolean $stack10, $stack12, $stack14, $stack16;
        avrora.Defaults$AutoProgramReader l0;
        cck.util.Option$List $stack17, $stack18;
        cck.util.Option$Str $stack20, $stack21;
        cck.util.Options $stack23, $stack24;
        avrora.core.Program $stack25;
        java.lang.StringBuilder $stack26, $stack27, $stack29, $stack30, $stack37, $stack38, $stack40, $stack41;
        avrora.syntax.elf.ELFParser $stack32;
        avrora.syntax.objdump.ObjDump2ProgramReader $stack34;
        avrora.syntax.objdump.ObjDumpProgramReader $stack35;
        avrora.syntax.atmel.AtmelProgramReader $stack36;
        avrora.core.ProgramReader l3#4;

        l0 := @this: avrora.Defaults$AutoProgramReader;

        l1 := @parameter0: java.lang.String[];

        $stack4 = lengthof l1;

        if $stack4 != 0 goto label1;

        staticinvoke <cck.util.Util: void userError(java.lang.String)>("no input files");

     label1:
        $stack5 = lengthof l1;

        if $stack5 == 1 goto label2;

        staticinvoke <cck.util.Util: void userError(java.lang.String)>("input type \"auto\" accepts only one file at a time.");

     label2:
        $stack49 = l1[0];

        $stack6 = virtualinvoke $stack49.<java.lang.String: int lastIndexOf(int)>(46);

        if $stack6 >= 0 goto label3;

        $stack37 = new java.lang.StringBuilder;

        specialinvoke $stack37.<java.lang.StringBuilder: void <init>()>();

        $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file ");

        $stack39 = staticinvoke <cck.text.StringUtil: java.lang.String quote(java.lang.Object)>($stack49);

        $stack40 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack39);

        $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have an extension");

        $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <cck.util.Util: void userError(java.lang.String)>($stack42);

     label3:
        $stack7 = virtualinvoke $stack49.<java.lang.String: java.lang.String substring(int)>($stack6);

        $stack8 = virtualinvoke $stack7.<java.lang.String: java.lang.String toLowerCase()>();

        l3#4 = null;

        $stack9 = ".asm";

        $stack10 = virtualinvoke $stack9.<java.lang.String: boolean equals(java.lang.Object)>($stack8);

        if $stack10 == 0 goto label4;

        $stack36 = new avrora.syntax.atmel.AtmelProgramReader;

        specialinvoke $stack36.<avrora.syntax.atmel.AtmelProgramReader: void <init>()>();

        l3#4 = $stack36;

        goto label7;

     label4:
        $stack11 = ".od";

        $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>($stack8);

        if $stack12 == 0 goto label5;

        $stack35 = new avrora.syntax.objdump.ObjDumpProgramReader;

        specialinvoke $stack35.<avrora.syntax.objdump.ObjDumpProgramReader: void <init>()>();

        l3#4 = $stack35;

        goto label7;

     label5:
        $stack13 = ".odpp";

        $stack14 = virtualinvoke $stack13.<java.lang.String: boolean equals(java.lang.Object)>($stack8);

        if $stack14 == 0 goto label6;

        $stack34 = new avrora.syntax.objdump.ObjDump2ProgramReader;

        specialinvoke $stack34.<avrora.syntax.objdump.ObjDump2ProgramReader: void <init>()>();

        l3#4 = $stack34;

        goto label7;

     label6:
        $stack15 = ".elf";

        $stack16 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack8);

        if $stack16 == 0 goto label7;

        $stack32 = new avrora.syntax.elf.ELFParser;

        specialinvoke $stack32.<avrora.syntax.elf.ELFParser: void <init>()>();

        l3#4 = $stack32;

     label7:
        if l3#4 != null goto label8;

        $stack26 = new java.lang.StringBuilder;

        specialinvoke $stack26.<java.lang.StringBuilder: void <init>()>();

        $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file extension ");

        $stack28 = staticinvoke <cck.text.StringUtil: java.lang.String quote(java.lang.Object)>($stack8);

        $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack28);

        $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" unknown");

        $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <cck.util.Util: void userError(java.lang.String)>($stack31);

        return null;

     label8:
        $stack18 = l3#4.<avrora.core.ProgramReader: cck.util.Option$List INDIRECT_EDGES>;

        $stack17 = l0.<avrora.Defaults$AutoProgramReader: cck.util.Option$List INDIRECT_EDGES>;

        $stack19 = virtualinvoke $stack17.<cck.util.Option$List: java.lang.String stringValue()>();

        virtualinvoke $stack18.<cck.util.Option$List: void set(java.lang.String)>($stack19);

        $stack21 = l3#4.<avrora.core.ProgramReader: cck.util.Option$Str ARCH>;

        $stack20 = l0.<avrora.Defaults$AutoProgramReader: cck.util.Option$Str ARCH>;

        $stack22 = virtualinvoke $stack20.<cck.util.Option$Str: java.lang.String stringValue()>();

        virtualinvoke $stack21.<cck.util.Option$Str: void set(java.lang.String)>($stack22);

        $stack24 = l3#4.<avrora.core.ProgramReader: cck.util.Options options>;

        $stack23 = l0.<avrora.Defaults$AutoProgramReader: cck.util.Options options>;

        virtualinvoke $stack24.<cck.util.Options: void process(cck.util.Options)>($stack23);

        $stack25 = virtualinvoke l3#4.<avrora.core.ProgramReader: avrora.core.Program read(java.lang.String[])>(l1);

        return $stack25;
    }
}
