public class avrora.sim.radio.CC1000Radio$SerialConfigurationInterface extends java.lang.Object
{
    public final avrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PCLKOutput PCLK_in;
    public final avrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PDATAOutput PDATA_in;
    public final avrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PDATAInput PDATA_out;
    public final avrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PALEOutput PALE_in;
    byte address;
    boolean writeCommand;
    int writeValue;
    boolean inputPin;
    byte readData;
    int bitsRead;
    avrora.sim.output.SimPrinter readerPrinter;
    final avrora.sim.radio.CC1000Radio this$0;

    void <init>(avrora.sim.radio.CC1000Radio)
    {
        avrora.sim.radio.CC1000Radio$SerialConfigurationInterface l0;
        avrora.sim.radio.CC1000Radio l1;
        avrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PCLKOutput $stack2;
        avrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PDATAOutput $stack3;
        avrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PDATAInput $stack4;
        avrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PALEOutput $stack5;
        avrora.sim.Simulator $stack6;
        avrora.sim.output.SimPrinter $stack7;

        l0 := @this: avrora.sim.radio.CC1000Radio$SerialConfigurationInterface;

        l1 := @parameter0: avrora.sim.radio.CC1000Radio;

        l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: avrora.sim.radio.CC1000Radio this$0> = l1;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        $stack2 = new avrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PCLKOutput;

        specialinvoke $stack2.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PCLKOutput: void <init>(avrora.sim.radio.CC1000Radio$SerialConfigurationInterface)>(l0);

        l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: avrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PCLKOutput PCLK_in> = $stack2;

        $stack3 = new avrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PDATAOutput;

        specialinvoke $stack3.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PDATAOutput: void <init>(avrora.sim.radio.CC1000Radio$SerialConfigurationInterface)>(l0);

        l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: avrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PDATAOutput PDATA_in> = $stack3;

        $stack4 = new avrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PDATAInput;

        specialinvoke $stack4.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PDATAInput: void <init>(avrora.sim.radio.CC1000Radio$SerialConfigurationInterface)>(l0);

        l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: avrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PDATAInput PDATA_out> = $stack4;

        $stack5 = new avrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PALEOutput;

        specialinvoke $stack5.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PALEOutput: void <init>(avrora.sim.radio.CC1000Radio$SerialConfigurationInterface)>(l0);

        l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: avrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PALEOutput PALE_in> = $stack5;

        $stack6 = l1.<avrora.sim.radio.CC1000Radio: avrora.sim.Simulator sim>;

        $stack7 = virtualinvoke $stack6.<avrora.sim.Simulator: avrora.sim.output.SimPrinter getPrinter(java.lang.String)>("radio.cc1000.pinconfig");

        l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: avrora.sim.output.SimPrinter readerPrinter> = $stack7;

        return;
    }

    static void access$200(avrora.sim.radio.CC1000Radio$SerialConfigurationInterface)
    {
        avrora.sim.radio.CC1000Radio$SerialConfigurationInterface l0;

        l0 := @parameter0: avrora.sim.radio.CC1000Radio$SerialConfigurationInterface;

        specialinvoke l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: void clockInBit()>();

        return;
    }

    static void access$300(avrora.sim.radio.CC1000Radio$SerialConfigurationInterface)
    {
        avrora.sim.radio.CC1000Radio$SerialConfigurationInterface l0;

        l0 := @parameter0: avrora.sim.radio.CC1000Radio$SerialConfigurationInterface;

        specialinvoke l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: void outputReadBit()>();

        return;
    }

    private void clockInBit()
    {
        avrora.sim.radio.CC1000Radio$SerialConfigurationInterface l0;
        int $stack3, $stack4, $stack5, $stack30, $stack42, $stack60, $stack63, $stack6#12, $stack7#22, $stack8#32;
        boolean $stack9, $stack46, $stack52, $stack53, $stack62;
        avrora.sim.output.SimPrinter $stack10, $stack12, $stack33, $stack35;
        java.lang.StringBuilder $stack11, $stack13, $stack17, $stack18, $stack21, $stack34, $stack36, $stack40, $stack41, $stack44;
        byte $stack14, $stack19, $stack28, $stack31, $stack37, $stack55, $stack58, $stack59, $stack61, l1, $stack64, l2#1;
        long $stack15, $stack38;
        java.lang.String $stack16, $stack20, $stack22, $stack39, $stack43, $stack45;
        avrora.sim.radio.CC1000Radio $stack27, $stack54;
        avrora.sim.radio.CC1000Radio$RadioRegister[] $stack29, $stack56;
        avrora.sim.radio.CC1000Radio$RadioRegister $stack32, $stack57;

        l0 := @this: avrora.sim.radio.CC1000Radio$SerialConfigurationInterface;

        $stack3 = l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: int bitsRead>;

        if $stack3 >= 7 goto label3;

        $stack59 = l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: byte address>;

        $stack60 = $stack59 << 1;

        $stack61 = (byte) $stack60;

        l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: byte address> = $stack61;

        l1 = l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: byte address>;

        $stack62 = l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: boolean inputPin>;

        if $stack62 == 0 goto label1;

        l2#1 = 1;

        goto label2;

     label1:
        l2#1 = 0;

     label2:
        $stack63 = l1 | l2#1;

        $stack64 = (byte) $stack63;

        l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: byte address> = $stack64;

        goto label6;

     label3:
        $stack4 = l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: int bitsRead>;

        if $stack4 != 7 goto label4;

        $stack52 = l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: boolean inputPin>;

        l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: boolean writeCommand> = $stack52;

        $stack53 = l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: boolean writeCommand>;

        if $stack53 != 0 goto label6;

        $stack54 = l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: avrora.sim.radio.CC1000Radio this$0>;

        $stack56 = $stack54.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$RadioRegister[] registers>;

        $stack55 = l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: byte address>;

        $stack57 = $stack56[$stack55];

        $stack58 = $stack57.<avrora.sim.radio.CC1000Radio$RadioRegister: byte value>;

        l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: byte readData> = $stack58;

        goto label6;

     label4:
        $stack5 = l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: int bitsRead>;

        if $stack5 >= 16 goto label6;

        $stack46 = l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: boolean writeCommand>;

        if $stack46 == 0 goto label5;

        specialinvoke l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: void inputWriteBit()>();

        goto label6;

     label5:
        specialinvoke l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: void outputReadBit()>();

     label6:
        $stack6#12 = l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: int bitsRead>;

        $stack7#22 = $stack6#12 + 1;

        l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: int bitsRead> = $stack7#22;

        $stack8#32 = l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: int bitsRead>;

        if $stack8#32 != 16 goto label9;

        $stack9 = l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: boolean writeCommand>;

        if $stack9 == 0 goto label7;

        $stack27 = l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: avrora.sim.radio.CC1000Radio this$0>;

        $stack29 = $stack27.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$RadioRegister[] registers>;

        $stack28 = l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: byte address>;

        $stack32 = $stack29[$stack28];

        $stack30 = l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: int writeValue>;

        $stack31 = (byte) $stack30;

        virtualinvoke $stack32.<avrora.sim.radio.CC1000Radio$RadioRegister: void write(byte)>($stack31);

        $stack33 = l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: avrora.sim.output.SimPrinter readerPrinter>;

        if $stack33 == null goto label8;

        $stack35 = l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: avrora.sim.output.SimPrinter readerPrinter>;

        $stack34 = new java.lang.StringBuilder;

        specialinvoke $stack34.<java.lang.StringBuilder: void <init>()>();

        $stack36 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CC1000.Reg[");

        $stack37 = l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: byte address>;

        $stack38 = (long) $stack37;

        $stack39 = staticinvoke <cck.text.StringUtil: java.lang.String toHex(long,int)>($stack38, 2);

        $stack40 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack39);

        $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] <= ");

        $stack42 = l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: int writeValue>;

        $stack43 = staticinvoke <cck.text.StringUtil: java.lang.String toMultirepString(int,int)>($stack42, 8);

        $stack44 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack43);

        $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack35.<avrora.sim.output.SimPrinter: void println(java.lang.String)>($stack45);

        goto label8;

     label7:
        $stack10 = l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: avrora.sim.output.SimPrinter readerPrinter>;

        if $stack10 == null goto label8;

        $stack12 = l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: avrora.sim.output.SimPrinter readerPrinter>;

        $stack11 = new java.lang.StringBuilder;

        specialinvoke $stack11.<java.lang.StringBuilder: void <init>()>();

        $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CC1000.Reg[");

        $stack14 = l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: byte address>;

        $stack15 = (long) $stack14;

        $stack16 = staticinvoke <cck.text.StringUtil: java.lang.String toHex(long,int)>($stack15, 2);

        $stack17 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack16);

        $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] -> ");

        $stack19 = l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: byte readData>;

        $stack20 = staticinvoke <cck.text.StringUtil: java.lang.String toMultirepString(int,int)>($stack19, 8);

        $stack21 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack20);

        $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack12.<avrora.sim.output.SimPrinter: void println(java.lang.String)>($stack22);

     label8:
        l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: int bitsRead> = 0;

        l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: byte address> = 0;

     label9:
        return;
    }

    private void inputWriteBit()
    {
        avrora.sim.radio.CC1000Radio$SerialConfigurationInterface l0;
        int $stack3, l1, $stack5;
        boolean $stack4;
        byte l2#1;

        l0 := @this: avrora.sim.radio.CC1000Radio$SerialConfigurationInterface;

        $stack3 = l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: int writeValue>;

        l1 = $stack3 << 1;

        $stack4 = l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: boolean inputPin>;

        if $stack4 == 0 goto label1;

        l2#1 = 1;

        goto label2;

     label1:
        l2#1 = 0;

     label2:
        $stack5 = l1 | l2#1;

        l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: int writeValue> = $stack5;

        return;
    }

    private void outputReadBit()
    {
        avrora.sim.radio.CC1000Radio$SerialConfigurationInterface l0;
        int $stack1, $stack2;
        byte $stack3;
        avrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PDATAInput $stack4;
        boolean $stack5;

        l0 := @this: avrora.sim.radio.CC1000Radio$SerialConfigurationInterface;

        $stack4 = l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: avrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PDATAInput PDATA_out>;

        $stack3 = l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: byte readData>;

        $stack1 = l0.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: int bitsRead>;

        $stack2 = 14 - $stack1;

        $stack5 = staticinvoke <cck.util.Arithmetic: boolean getBit(byte,int)>($stack3, $stack2);

        virtualinvoke $stack4.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PDATAInput: void setLevel(boolean)>($stack5);

        return;
    }
}
