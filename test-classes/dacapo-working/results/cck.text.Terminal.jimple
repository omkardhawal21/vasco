public class cck.text.Terminal extends java.lang.Object
{
    public static boolean useColors;
    public static boolean htmlColors;
    public static final int MAXLINE;
    private static java.io.PrintStream out;
    public static final int COLOR_BLACK;
    public static final int COLOR_RED;
    public static final int COLOR_GREEN;
    public static final int COLOR_BROWN;
    public static final int COLOR_BLUE;
    public static final int COLOR_PURPLE;
    public static final int COLOR_CYAN;
    public static final int COLOR_LIGHTGRAY;
    public static final int COLOR_DARKGRAY;
    public static final int COLOR_BRIGHT_RED;
    public static final int COLOR_BRIGHT_GREEN;
    public static final int COLOR_YELLOW;
    public static final int COLOR_BRIGHT_BLUE;
    public static final int COLOR_MAGENTA;
    public static final int COLOR_BRIGHT_CYAN;
    public static final int COLOR_WHITE;
    public static final int COLOR_DEFAULT;
    public static final int MAXCOLORS;
    private static final java.lang.String CTRL_BLACK;
    private static final java.lang.String CTRL_RED;
    private static final java.lang.String CTRL_GREEN;
    private static final java.lang.String CTRL_BROWN;
    private static final java.lang.String CTRL_BLUE;
    private static final java.lang.String CTRL_PURPLE;
    private static final java.lang.String CTRL_CYAN;
    private static final java.lang.String CTRL_LIGHTGRAY;
    private static final java.lang.String CTRL_DARKGRAY;
    private static final java.lang.String CTRL_BRIGHT_RED;
    private static final java.lang.String CTRL_BRIGHT_GREEN;
    private static final java.lang.String CTRL_YELLOW;
    private static final java.lang.String CTRL_BRIGHT_BLUE;
    private static final java.lang.String CTRL_MAGENTA;
    private static final java.lang.String CTRL_BRIGHT_CYAN;
    private static final java.lang.String CTRL_WHITE;
    private static final java.lang.String CTRL_DEFAULT;
    private static final java.lang.String[] COLORS;
    private static final java.lang.String[] HTML_COLORS;
    private static final java.lang.String[] HTML_STRINGS;
    public static final int ERROR_COLOR;
    public static final int WARN_COLOR;

    static void <clinit>()
    {
        java.io.PrintStream $stack1;
        java.lang.String[] $stack2, $stack4, $stack5, $stack8, $stack10, l0#1, l0#2;
        int $stack3, $stack6, l0#3;
        java.lang.StringBuilder $stack7, $stack9, $stack12, $stack13;
        java.lang.String $stack11, $stack14;

        <cck.text.Terminal: int WARN_COLOR> = 11;

        <cck.text.Terminal: int ERROR_COLOR> = 1;

        <cck.text.Terminal: java.lang.String CTRL_DEFAULT> = "\u001b[1;00m";

        <cck.text.Terminal: java.lang.String CTRL_WHITE> = "\u001b[1;37m";

        <cck.text.Terminal: java.lang.String CTRL_BRIGHT_CYAN> = "\u001b[1;36m";

        <cck.text.Terminal: java.lang.String CTRL_MAGENTA> = "\u001b[1;35m";

        <cck.text.Terminal: java.lang.String CTRL_BRIGHT_BLUE> = "\u001b[1;34m";

        <cck.text.Terminal: java.lang.String CTRL_YELLOW> = "\u001b[1;33m";

        <cck.text.Terminal: java.lang.String CTRL_BRIGHT_GREEN> = "\u001b[1;32m";

        <cck.text.Terminal: java.lang.String CTRL_BRIGHT_RED> = "\u001b[1;31m";

        <cck.text.Terminal: java.lang.String CTRL_DARKGRAY> = "\u001b[1;30m";

        <cck.text.Terminal: java.lang.String CTRL_LIGHTGRAY> = "\u001b[0;37m";

        <cck.text.Terminal: java.lang.String CTRL_CYAN> = "\u001b[0;36m";

        <cck.text.Terminal: java.lang.String CTRL_PURPLE> = "\u001b[0;35m";

        <cck.text.Terminal: java.lang.String CTRL_BLUE> = "\u001b[0;34m";

        <cck.text.Terminal: java.lang.String CTRL_BROWN> = "\u001b[0;33m";

        <cck.text.Terminal: java.lang.String CTRL_GREEN> = "\u001b[0;32m";

        <cck.text.Terminal: java.lang.String CTRL_RED> = "\u001b[0;31m";

        <cck.text.Terminal: java.lang.String CTRL_BLACK> = "\u001b[0;30m";

        <cck.text.Terminal: int MAXCOLORS> = 16;

        <cck.text.Terminal: int COLOR_DEFAULT> = 16;

        <cck.text.Terminal: int COLOR_WHITE> = 15;

        <cck.text.Terminal: int COLOR_BRIGHT_CYAN> = 14;

        <cck.text.Terminal: int COLOR_MAGENTA> = 13;

        <cck.text.Terminal: int COLOR_BRIGHT_BLUE> = 12;

        <cck.text.Terminal: int COLOR_YELLOW> = 11;

        <cck.text.Terminal: int COLOR_BRIGHT_GREEN> = 10;

        <cck.text.Terminal: int COLOR_BRIGHT_RED> = 9;

        <cck.text.Terminal: int COLOR_DARKGRAY> = 8;

        <cck.text.Terminal: int COLOR_LIGHTGRAY> = 7;

        <cck.text.Terminal: int COLOR_CYAN> = 6;

        <cck.text.Terminal: int COLOR_PURPLE> = 5;

        <cck.text.Terminal: int COLOR_BLUE> = 4;

        <cck.text.Terminal: int COLOR_BROWN> = 3;

        <cck.text.Terminal: int COLOR_GREEN> = 2;

        <cck.text.Terminal: int COLOR_RED> = 1;

        <cck.text.Terminal: int COLOR_BLACK> = 0;

        <cck.text.Terminal: int MAXLINE> = 78;

        <cck.text.Terminal: boolean useColors> = 1;

        $stack1 = <java.lang.System: java.io.PrintStream out>;

        <cck.text.Terminal: java.io.PrintStream out> = $stack1;

        l0#1 = newarray (java.lang.String)[17];

        l0#1[0] = "\u001b[0;30m";

        l0#1[1] = "\u001b[0;31m";

        l0#1[2] = "\u001b[0;32m";

        l0#1[3] = "\u001b[0;33m";

        l0#1[4] = "\u001b[0;34m";

        l0#1[5] = "\u001b[0;35m";

        l0#1[6] = "\u001b[0;36m";

        l0#1[7] = "\u001b[0;37m";

        l0#1[8] = "\u001b[1;30m";

        l0#1[9] = "\u001b[1;31m";

        l0#1[10] = "\u001b[1;32m";

        l0#1[11] = "\u001b[1;33m";

        l0#1[12] = "\u001b[1;34m";

        l0#1[13] = "\u001b[1;35m";

        l0#1[14] = "\u001b[1;36m";

        l0#1[15] = "\u001b[1;37m";

        l0#1[16] = "\u001b[1;00m";

        <cck.text.Terminal: java.lang.String[] COLORS> = l0#1;

        l0#2 = newarray (java.lang.String)[16];

        l0#2[0] = "black";

        l0#2[1] = "red";

        l0#2[2] = "green";

        l0#2[3] = "brown";

        l0#2[4] = "blue";

        l0#2[5] = "purple";

        l0#2[6] = "cyan";

        l0#2[7] = "lightgray";

        l0#2[8] = "gray";

        l0#2[9] = "pink";

        l0#2[10] = "green";

        l0#2[11] = "yellow";

        l0#2[12] = "blue";

        l0#2[13] = "magenta";

        l0#2[14] = "cyan";

        l0#2[15] = "white";

        <cck.text.Terminal: java.lang.String[] HTML_COLORS> = l0#2;

        $stack2 = <cck.text.Terminal: java.lang.String[] HTML_COLORS>;

        $stack3 = lengthof $stack2;

        $stack4 = newarray (java.lang.String)[$stack3];

        <cck.text.Terminal: java.lang.String[] HTML_STRINGS> = $stack4;

        l0#3 = 0;

     label1:
        $stack5 = <cck.text.Terminal: java.lang.String[] HTML_STRINGS>;

        $stack6 = lengthof $stack5;

        if l0#3 >= $stack6 goto label2;

        $stack8 = <cck.text.Terminal: java.lang.String[] HTML_STRINGS>;

        $stack7 = new java.lang.StringBuilder;

        specialinvoke $stack7.<java.lang.StringBuilder: void <init>()>();

        $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<font color=");

        $stack10 = <cck.text.Terminal: java.lang.String[] HTML_COLORS>;

        $stack11 = $stack10[l0#3];

        $stack12 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11);

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(62);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack8[l0#3] = $stack14;

        l0#3 = l0#3 + 1;

        goto label1;

     label2:
        return;
    }

    public void <init>()
    {
        cck.text.Terminal l0;

        l0 := @this: cck.text.Terminal;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void append(int, java.lang.StringBuffer, java.lang.String)
    {
        boolean $stack3, $stack7;
        java.lang.StringBuffer l1;
        java.lang.String l2, $stack9, $stack13, $stack16;
        int l0;
        java.lang.String[] $stack8, $stack12, $stack15;

        l0 := @parameter0: int;

        l1 := @parameter1: java.lang.StringBuffer;

        l2 := @parameter2: java.lang.String;

        $stack3 = <cck.text.Terminal: boolean useColors>;

        if $stack3 == 0 goto label2;

        if l0 >= 16 goto label2;

        if l0 < 0 goto label2;

        $stack7 = <cck.text.Terminal: boolean htmlColors>;

        if $stack7 == 0 goto label1;

        $stack15 = <cck.text.Terminal: java.lang.String[] HTML_STRINGS>;

        $stack16 = $stack15[l0];

        virtualinvoke l1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack16);

        virtualinvoke l1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(l2);

        virtualinvoke l1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</font>");

        return;

     label1:
        if l0 == 16 goto label2;

        $stack8 = <cck.text.Terminal: java.lang.String[] COLORS>;

        $stack9 = $stack8[l0];

        virtualinvoke l1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack9);

        virtualinvoke l1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(l2);

        $stack12 = <cck.text.Terminal: java.lang.String[] COLORS>;

        $stack13 = $stack12[16];

        virtualinvoke l1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack13);

        return;

     label2:
        virtualinvoke l1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(l2);

        return;
    }

    public static void flush()
    {
        java.io.PrintStream $stack0;

        $stack0 = <cck.text.Terminal: java.io.PrintStream out>;

        virtualinvoke $stack0.<java.io.PrintStream: void flush()>();

        return;
    }

    public static void nextln()
    {
        java.io.PrintStream $stack0;

        $stack0 = <cck.text.Terminal: java.io.PrintStream out>;

        virtualinvoke $stack0.<java.io.PrintStream: void print(java.lang.String)>("\n");

        return;
    }

    private static void outputColor(int, java.lang.String)
    {
        boolean $stack2, $stack4;
        java.lang.String l1, $stack7, $stack11, $stack14;
        java.io.PrintStream $stack3, $stack8, $stack9, $stack12, $stack15, $stack16, $stack17;
        java.lang.String[] $stack6, $stack10, $stack13;
        int l0#1;

        l0#1 := @parameter0: int;

        l1 := @parameter1: java.lang.String;

        if l0#1 >= 0 goto label1;

        l0#1 = 16;

     label1:
        $stack2 = <cck.text.Terminal: boolean useColors>;

        if $stack2 == 0 goto label3;

        $stack4 = <cck.text.Terminal: boolean htmlColors>;

        if $stack4 == 0 goto label2;

        $stack15 = <cck.text.Terminal: java.io.PrintStream out>;

        $stack13 = <cck.text.Terminal: java.lang.String[] HTML_STRINGS>;

        $stack14 = $stack13[l0#1];

        virtualinvoke $stack15.<java.io.PrintStream: void print(java.lang.String)>($stack14);

        $stack16 = <cck.text.Terminal: java.io.PrintStream out>;

        virtualinvoke $stack16.<java.io.PrintStream: void print(java.lang.String)>(l1);

        $stack17 = <cck.text.Terminal: java.io.PrintStream out>;

        virtualinvoke $stack17.<java.io.PrintStream: void print(java.lang.String)>("</font>");

        return;

     label2:
        if l0#1 == 16 goto label3;

        $stack8 = <cck.text.Terminal: java.io.PrintStream out>;

        $stack6 = <cck.text.Terminal: java.lang.String[] COLORS>;

        $stack7 = $stack6[l0#1];

        virtualinvoke $stack8.<java.io.PrintStream: void print(java.lang.String)>($stack7);

        $stack9 = <cck.text.Terminal: java.io.PrintStream out>;

        virtualinvoke $stack9.<java.io.PrintStream: void print(java.lang.String)>(l1);

        $stack12 = <cck.text.Terminal: java.io.PrintStream out>;

        $stack10 = <cck.text.Terminal: java.lang.String[] COLORS>;

        $stack11 = $stack10[16];

        virtualinvoke $stack12.<java.io.PrintStream: void print(java.lang.String)>($stack11);

        return;

     label3:
        $stack3 = <cck.text.Terminal: java.io.PrintStream out>;

        virtualinvoke $stack3.<java.io.PrintStream: void print(java.lang.String)>(l1);

        return;
    }

    public static void print(int[], java.lang.String[])
    {
        java.lang.String[] l1;
        int $stack3, $stack4, $stack9, l2#1;
        int[] l0;
        java.lang.String $stack5, $stack8;

        l0 := @parameter0: int[];

        l1 := @parameter1: java.lang.String[];

        l2#1 = 0;

     label1:
        $stack3 = lengthof l1;

        if l2#1 >= $stack3 goto label4;

        $stack4 = lengthof l0;

        if l2#1 >= $stack4 goto label2;

        $stack9 = l0[l2#1];

        $stack8 = l1[l2#1];

        staticinvoke <cck.text.Terminal: void print(int,java.lang.String)>($stack9, $stack8);

        goto label3;

     label2:
        $stack5 = l1[l2#1];

        staticinvoke <cck.text.Terminal: void print(java.lang.String)>($stack5);

     label3:
        l2#1 = l2#1 + 1;

        goto label1;

     label4:
        return;
    }

    public static void print(int, java.lang.String)
    {
        int l0;
        java.lang.String l1;

        l0 := @parameter0: int;

        l1 := @parameter1: java.lang.String;

        if l0 >= 16 goto label1;

        if l0 >= 0 goto label2;

     label1:
        staticinvoke <cck.text.Terminal: void print(java.lang.String)>(l1);

        goto label3;

     label2:
        staticinvoke <cck.text.Terminal: void outputColor(int,java.lang.String)>(l0, l1);

     label3:
        return;
    }

    public static void print(java.lang.String)
    {
        java.lang.String l0;
        java.io.PrintStream $stack1;

        l0 := @parameter0: java.lang.String;

        $stack1 = <cck.text.Terminal: java.io.PrintStream out>;

        virtualinvoke $stack1.<java.io.PrintStream: void print(java.lang.String)>(l0);

        return;
    }

    public static void printBlue(java.lang.String)
    {
        java.lang.String l0;

        l0 := @parameter0: java.lang.String;

        staticinvoke <cck.text.Terminal: void outputColor(int,java.lang.String)>(4, l0);

        return;
    }

    public static void printBrightBlue(java.lang.String)
    {
        java.lang.String l0;

        l0 := @parameter0: java.lang.String;

        staticinvoke <cck.text.Terminal: void outputColor(int,java.lang.String)>(12, l0);

        return;
    }

    public static void printBrightCyan(java.lang.String)
    {
        java.lang.String l0;

        l0 := @parameter0: java.lang.String;

        staticinvoke <cck.text.Terminal: void outputColor(int,java.lang.String)>(14, l0);

        return;
    }

    public static void printBrightGreen(java.lang.String)
    {
        java.lang.String l0;

        l0 := @parameter0: java.lang.String;

        staticinvoke <cck.text.Terminal: void outputColor(int,java.lang.String)>(10, l0);

        return;
    }

    public static void printBrightRed(java.lang.String)
    {
        java.lang.String l0;

        l0 := @parameter0: java.lang.String;

        staticinvoke <cck.text.Terminal: void outputColor(int,java.lang.String)>(9, l0);

        return;
    }

    public static void printCyan(java.lang.String)
    {
        java.lang.String l0;

        l0 := @parameter0: java.lang.String;

        staticinvoke <cck.text.Terminal: void outputColor(int,java.lang.String)>(6, l0);

        return;
    }

    public static void printGreen(java.lang.String)
    {
        java.lang.String l0;

        l0 := @parameter0: java.lang.String;

        staticinvoke <cck.text.Terminal: void outputColor(int,java.lang.String)>(2, l0);

        return;
    }

    public static void printPair(int, int, java.lang.String, java.lang.String, java.lang.String)
    {
        int l0, l1;
        java.lang.String l2, l3, l4;

        l0 := @parameter0: int;

        l1 := @parameter1: int;

        l2 := @parameter2: java.lang.String;

        l3 := @parameter3: java.lang.String;

        l4 := @parameter4: java.lang.String;

        staticinvoke <cck.text.Terminal: void print(int,java.lang.String)>(l0, l2);

        staticinvoke <cck.text.Terminal: void print(java.lang.String)>(l3);

        staticinvoke <cck.text.Terminal: void print(int,java.lang.String)>(l1, l4);

        return;
    }

    public static void printRed(java.lang.String)
    {
        java.lang.String l0;

        l0 := @parameter0: java.lang.String;

        staticinvoke <cck.text.Terminal: void outputColor(int,java.lang.String)>(1, l0);

        return;
    }

    public static void printTriple(int, int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        int l0, l1, l2;
        java.lang.String l3, l4, l5, l6, l7;

        l0 := @parameter0: int;

        l1 := @parameter1: int;

        l2 := @parameter2: int;

        l3 := @parameter3: java.lang.String;

        l4 := @parameter4: java.lang.String;

        l5 := @parameter5: java.lang.String;

        l6 := @parameter6: java.lang.String;

        l7 := @parameter7: java.lang.String;

        staticinvoke <cck.text.Terminal: void print(int,java.lang.String)>(l0, l3);

        staticinvoke <cck.text.Terminal: void print(java.lang.String)>(l4);

        staticinvoke <cck.text.Terminal: void print(int,java.lang.String)>(l1, l5);

        staticinvoke <cck.text.Terminal: void print(java.lang.String)>(l6);

        staticinvoke <cck.text.Terminal: void print(int,java.lang.String)>(l2, l7);

        return;
    }

    public static void printYellow(java.lang.String)
    {
        java.lang.String l0;

        l0 := @parameter0: java.lang.String;

        staticinvoke <cck.text.Terminal: void outputColor(int,java.lang.String)>(11, l0);

        return;
    }

    public static void println(int, java.lang.String)
    {
        int l0;
        java.lang.String l1;
        java.io.PrintStream $stack2;

        l0 := @parameter0: int;

        l1 := @parameter1: java.lang.String;

        staticinvoke <cck.text.Terminal: void print(int,java.lang.String)>(l0, l1);

        $stack2 = <cck.text.Terminal: java.io.PrintStream out>;

        virtualinvoke $stack2.<java.io.PrintStream: void print(char)>(10);

        return;
    }

    public static void println(java.lang.String)
    {
        java.lang.String l0;
        java.io.PrintStream $stack1;

        l0 := @parameter0: java.lang.String;

        $stack1 = <cck.text.Terminal: java.io.PrintStream out>;

        virtualinvoke $stack1.<java.io.PrintStream: void println(java.lang.String)>(l0);

        return;
    }

    public static void setOutput(java.io.PrintStream)
    {
        java.io.PrintStream l0;

        l0 := @parameter0: java.io.PrintStream;

        <cck.text.Terminal: java.io.PrintStream out> = l0;

        return;
    }
}
