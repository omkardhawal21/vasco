class avrora.sim.radio.CC1000Radio$SPITicker extends java.lang.Object implements avrora.sim.Simulator$Event
{
    protected avrora.sim.mcu.SPIDevice spiDevice;
    protected boolean activated;
    final avrora.sim.radio.CC1000Radio this$0;

    private void <init>(avrora.sim.radio.CC1000Radio)
    {
        avrora.sim.radio.CC1000Radio$SPITicker l0;
        avrora.sim.radio.CC1000Radio l1;

        l0 := @this: avrora.sim.radio.CC1000Radio$SPITicker;

        l1 := @parameter0: avrora.sim.radio.CC1000Radio;

        l0.<avrora.sim.radio.CC1000Radio$SPITicker: avrora.sim.radio.CC1000Radio this$0> = l1;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(avrora.sim.radio.CC1000Radio, avrora.sim.radio.CC1000Radio$1)
    {
        avrora.sim.radio.CC1000Radio$SPITicker l0;
        avrora.sim.radio.CC1000Radio l1;
        avrora.sim.radio.CC1000Radio$1 l2;

        l0 := @this: avrora.sim.radio.CC1000Radio$SPITicker;

        l1 := @parameter0: avrora.sim.radio.CC1000Radio;

        l2 := @parameter1: avrora.sim.radio.CC1000Radio$1;

        specialinvoke l0.<avrora.sim.radio.CC1000Radio$SPITicker: void <init>(avrora.sim.radio.CC1000Radio)>(l1);

        return;
    }

    protected void activate()
    {
        avrora.sim.radio.CC1000Radio$SPITicker l0;
        boolean $stack1;
        avrora.sim.radio.CC1000Radio $stack2, $stack3;
        avrora.sim.radio.CC1000Radio$Receiver $stack4;
        long $stack5;
        avrora.sim.clock.Clock $stack6;

        l0 := @this: avrora.sim.radio.CC1000Radio$SPITicker;

        $stack1 = l0.<avrora.sim.radio.CC1000Radio$SPITicker: boolean activated>;

        if $stack1 != 0 goto label1;

        l0.<avrora.sim.radio.CC1000Radio$SPITicker: boolean activated> = 1;

        $stack2 = l0.<avrora.sim.radio.CC1000Radio$SPITicker: avrora.sim.radio.CC1000Radio this$0>;

        $stack6 = $stack2.<avrora.sim.radio.CC1000Radio: avrora.sim.clock.Clock clock>;

        $stack3 = l0.<avrora.sim.radio.CC1000Radio$SPITicker: avrora.sim.radio.CC1000Radio this$0>;

        $stack4 = $stack3.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$Receiver receiver>;

        $stack5 = $stack4.<avrora.sim.radio.CC1000Radio$Receiver: long cyclesPerByte>;

        virtualinvoke $stack6.<avrora.sim.clock.Clock: void insertEvent(avrora.sim.Simulator$Event,long)>(l0, $stack5);

     label1:
        return;
    }

    protected void deactivate()
    {
        avrora.sim.radio.CC1000Radio$SPITicker l0;
        boolean $stack1;
        avrora.sim.radio.CC1000Radio $stack2;
        avrora.sim.clock.Clock $stack3;

        l0 := @this: avrora.sim.radio.CC1000Radio$SPITicker;

        $stack1 = l0.<avrora.sim.radio.CC1000Radio$SPITicker: boolean activated>;

        if $stack1 == 0 goto label1;

        l0.<avrora.sim.radio.CC1000Radio$SPITicker: boolean activated> = 0;

        $stack2 = l0.<avrora.sim.radio.CC1000Radio$SPITicker: avrora.sim.radio.CC1000Radio this$0>;

        $stack3 = $stack2.<avrora.sim.radio.CC1000Radio: avrora.sim.clock.Clock clock>;

        virtualinvoke $stack3.<avrora.sim.clock.Clock: void removeEvent(avrora.sim.Simulator$Event)>(l0);

     label1:
        return;
    }

    public void fire()
    {
        avrora.sim.radio.CC1000Radio$SPITicker l0;
        avrora.sim.radio.CC1000Radio $stack2, $stack4, $stack6, $stack13, $stack14, $stack15;
        avrora.sim.clock.Clock $stack3, $stack18;
        long $stack5, $stack17;
        int $stack7, $stack8;
        byte $stack9, l1;
        avrora.sim.mcu.SPIDevice $stack10;
        avrora.sim.mcu.SPI$Frame $stack11, $stack12;
        avrora.sim.radio.CC1000Radio$Receiver $stack16;

        l0 := @this: avrora.sim.radio.CC1000Radio$SPITicker;

        $stack4 = l0.<avrora.sim.radio.CC1000Radio$SPITicker: avrora.sim.radio.CC1000Radio this$0>;

        $stack2 = l0.<avrora.sim.radio.CC1000Radio$SPITicker: avrora.sim.radio.CC1000Radio this$0>;

        $stack3 = $stack2.<avrora.sim.radio.CC1000Radio: avrora.sim.clock.Clock clock>;

        $stack5 = virtualinvoke $stack3.<avrora.sim.clock.Clock: long getCount()>();

        $stack4.<avrora.sim.radio.CC1000Radio: long spiTick> = $stack5;

        $stack10 = l0.<avrora.sim.radio.CC1000Radio$SPITicker: avrora.sim.mcu.SPIDevice spiDevice>;

        $stack6 = l0.<avrora.sim.radio.CC1000Radio$SPITicker: avrora.sim.radio.CC1000Radio this$0>;

        $stack7 = $stack6.<avrora.sim.radio.CC1000Radio: int rxBuffer>;

        $stack8 = $stack7 >> 8;

        $stack9 = (byte) $stack8;

        $stack11 = staticinvoke <avrora.sim.mcu.SPI: avrora.sim.mcu.SPI$Frame newFrame(byte)>($stack9);

        $stack12 = interfaceinvoke $stack10.<avrora.sim.mcu.SPIDevice: avrora.sim.mcu.SPI$Frame exchange(avrora.sim.mcu.SPI$Frame)>($stack11);

        l1 = $stack12.<avrora.sim.mcu.SPI$Frame: byte data>;

        $stack13 = l0.<avrora.sim.radio.CC1000Radio$SPITicker: avrora.sim.radio.CC1000Radio this$0>;

        $stack13.<avrora.sim.radio.CC1000Radio: byte txBuffer> = l1;

        $stack14 = l0.<avrora.sim.radio.CC1000Radio$SPITicker: avrora.sim.radio.CC1000Radio this$0>;

        $stack18 = $stack14.<avrora.sim.radio.CC1000Radio: avrora.sim.clock.Clock clock>;

        $stack15 = l0.<avrora.sim.radio.CC1000Radio$SPITicker: avrora.sim.radio.CC1000Radio this$0>;

        $stack16 = $stack15.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$Receiver receiver>;

        $stack17 = $stack16.<avrora.sim.radio.CC1000Radio$Receiver: long cyclesPerByte>;

        virtualinvoke $stack18.<avrora.sim.clock.Clock: void insertEvent(avrora.sim.Simulator$Event,long)>(l0, $stack17);

        return;
    }
}
