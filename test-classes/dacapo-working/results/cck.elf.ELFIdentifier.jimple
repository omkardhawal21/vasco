public class cck.elf.ELFIdentifier extends java.lang.Object
{
    public static final int EM_NUM;
    public static final java.lang.String[] EM_names;
    public static final java.lang.String[] EM_help;
    public static final int EM_NONE;
    public static final int EM_M32;
    public static final int EM_SPARC;
    public static final int EM_386;
    public static final int EM_68K;
    public static final int EM_88K;
    public static final int EM_486;
    public static final int EM_860;
    public static final int EM_MIPS;
    public static final int EM_S370;
    public static final int EM_MIPS_RS3_LE;
    public static final int EM_SPARC64;
    public static final int EM_PARISC;
    public static final int EM_VPP500;
    public static final int EM_SPARC32PLUS;
    public static final int EM_960;
    public static final int EM_PPC;
    public static final int EM_PPC64;
    public static final int EM_S390;
    public static final int EM_V800;
    public static final int EM_FR20;
    public static final int EM_RH32;
    public static final int EM_RCE;
    public static final int EM_ARM;
    public static final int EM_ALPHA;
    public static final int EM_SH;
    public static final int EM_SPARCV9;
    public static final int EM_TRICORE;
    public static final int EM_ARC;
    public static final int EM_H8_300;
    public static final int EM_H8_300H;
    public static final int EM_H8S;
    public static final int EM_H8_500;
    public static final int EM_IA_64;
    public static final int EM_MIPS_X;
    public static final int EM_COLDFIRE;
    public static final int EM_68HC12;
    public static final int EM_MMA;
    public static final int EM_PCP;
    public static final int EM_NCPU;
    public static final int EM_NDR1;
    public static final int EM_STARCORE;
    public static final int EM_ME16;
    public static final int EM_ST100;
    public static final int EM_TINYJ;
    public static final int EM_X86_64;
    public static final int EM_PDSP;
    public static final int EM_FX66;
    public static final int EM_ST9PLUS;
    public static final int EM_ST7;
    public static final int EM_68HC16;
    public static final int EM_68HC11;
    public static final int EM_68HC08;
    public static final int EM_68HC05;
    public static final int EM_SVX;
    public static final int EM_ST19;
    public static final int EM_VAX;
    public static final int EM_CRIS;
    public static final int EM_JAVELIN;
    public static final int EM_FIREPATH;
    public static final int EM_ZSP;
    public static final int EM_MMIX;
    public static final int EM_HUANY;
    public static final int EM_PRISM;
    public static final int EM_AVR;
    public static final int EM_FR30;
    public static final int EM_D10V;
    public static final int EM_D30V;
    public static final int EM_V850;
    public static final int EM_M32R;
    public static final int EM_MN10300;
    public static final int EM_MN10200;
    public static final int EM_PJ;
    public static final int EM_OPENRISC;
    public static final int EM_ARC_A5;
    public static final int EM_XTENSA;
    public static final int EM_VIDEOCORE;
    public static final int EM_TMM_GPP;
    public static final int EM_NS32K;
    public static final int EM_TPC;
    public static final int EM_SNP1K;
    public static final int EM_ST200;
    public static final int EM_IP2K;
    public static final int EM_MAX;
    public static final int EM_CR;
    public static final int EM_F2MC16;
    public static final int EM_MSP430;
    public static final int EM_BLACKFIN;
    public static final int EM_SE_C33;
    public static final int EM_SEP;
    public static final int EM_ARCA;
    public static final int EM_UNICORE;

    static void <clinit>()
    {
        java.lang.String[] $stack0, $stack1;
        int $stack2, $stack3, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $stack12, $stack13, $stack14, $stack15, $stack16, $stack17, $stack18, $stack19, $stack20, $stack21, $stack22, $stack23, $stack24, $stack25, $stack26, $stack27, $stack28, $stack29, $stack30, $stack31, $stack32, $stack33, $stack34, $stack35, $stack36, $stack37, $stack38, $stack39, $stack40, $stack41, $stack42, $stack43, $stack44, $stack45, $stack46, $stack47, $stack48, $stack49, $stack50, $stack51, $stack52, $stack53, $stack54, $stack55, $stack56, $stack57, $stack58, $stack59, $stack60, $stack61, $stack62, $stack63, $stack64, $stack65, $stack66, $stack67, $stack68, $stack69, $stack70, $stack71, $stack72, $stack73, $stack74, $stack75, $stack76, $stack77, $stack78, $stack79, $stack80, $stack81, $stack82, $stack83, $stack84, $stack85, $stack86, $stack87, $stack88, $stack89, $stack90, $stack91, $stack92, $stack93;

        <cck.elf.ELFIdentifier: int EM_NUM> = 111;

        $stack0 = newarray (java.lang.String)[111];

        <cck.elf.ELFIdentifier: java.lang.String[] EM_names> = $stack0;

        $stack1 = newarray (java.lang.String)[111];

        <cck.elf.ELFIdentifier: java.lang.String[] EM_help> = $stack1;

        $stack2 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(0, null, "No machine");

        <cck.elf.ELFIdentifier: int EM_NONE> = $stack2;

        $stack3 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(1, "m32", "AT&T WE 32100");

        <cck.elf.ELFIdentifier: int EM_M32> = $stack3;

        $stack4 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(2, "sparc", "SPARC");

        <cck.elf.ELFIdentifier: int EM_SPARC> = $stack4;

        $stack5 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(3, "i386", "Intel 80386");

        <cck.elf.ELFIdentifier: int EM_386> = $stack5;

        $stack6 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(4, "m68000", "Motorola 68000");

        <cck.elf.ELFIdentifier: int EM_68K> = $stack6;

        $stack7 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(5, "m88000", "Motorola 88000");

        <cck.elf.ELFIdentifier: int EM_88K> = $stack7;

        $stack8 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(6, "i486", "Intel i486");

        <cck.elf.ELFIdentifier: int EM_486> = $stack8;

        $stack9 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(7, "i860", "Intel 80860");

        <cck.elf.ELFIdentifier: int EM_860> = $stack9;

        $stack10 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(8, "mips", "MIPS I Architecture");

        <cck.elf.ELFIdentifier: int EM_MIPS> = $stack10;

        $stack11 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(9, "s370", "IBM System/370 Processor");

        <cck.elf.ELFIdentifier: int EM_S370> = $stack11;

        $stack12 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(10, "rs3000", "MIPS RS3000 Little-endian");

        <cck.elf.ELFIdentifier: int EM_MIPS_RS3_LE> = $stack12;

        $stack13 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(11, "sparc64", "SPARC 64-bit");

        <cck.elf.ELFIdentifier: int EM_SPARC64> = $stack13;

        $stack14 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(15, "pa-risc", "Hewlett-Packard PA-RISC");

        <cck.elf.ELFIdentifier: int EM_PARISC> = $stack14;

        $stack15 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(17, "vpp500", "Fujitsu VPP500");

        <cck.elf.ELFIdentifier: int EM_VPP500> = $stack15;

        $stack16 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(18, "sparc+", "Enhanced instruction set SPARC");

        <cck.elf.ELFIdentifier: int EM_SPARC32PLUS> = $stack16;

        $stack17 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(19, "i960", "Intel 80960");

        <cck.elf.ELFIdentifier: int EM_960> = $stack17;

        $stack18 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(20, "ppc", "PowerPC");

        <cck.elf.ELFIdentifier: int EM_PPC> = $stack18;

        $stack19 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(21, "ppc64", "64-bit PowerPC");

        <cck.elf.ELFIdentifier: int EM_PPC64> = $stack19;

        $stack20 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(22, "s390", "IBM System/390 Processor");

        <cck.elf.ELFIdentifier: int EM_S390> = $stack20;

        $stack21 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(36, "v800", "NEC V800");

        <cck.elf.ELFIdentifier: int EM_V800> = $stack21;

        $stack22 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(37, "fr20", "Fujitsu FR20");

        <cck.elf.ELFIdentifier: int EM_FR20> = $stack22;

        $stack23 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(38, "rh-32", "TRW RH-32");

        <cck.elf.ELFIdentifier: int EM_RH32> = $stack23;

        $stack24 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(39, "rce", "Motorola RCE");

        <cck.elf.ELFIdentifier: int EM_RCE> = $stack24;

        $stack25 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(40, "arm", "Advanced RISC Machines ARM");

        <cck.elf.ELFIdentifier: int EM_ARM> = $stack25;

        $stack26 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(41, "alpha", "Digital Alpha");

        <cck.elf.ELFIdentifier: int EM_ALPHA> = $stack26;

        $stack27 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(42, "sh", "Hitachi SH");

        <cck.elf.ELFIdentifier: int EM_SH> = $stack27;

        $stack28 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(43, "sparcv9", "SPARC Version 9");

        <cck.elf.ELFIdentifier: int EM_SPARCV9> = $stack28;

        $stack29 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(44, "tricore", "Siemens TriCore embedded processor");

        <cck.elf.ELFIdentifier: int EM_TRICORE> = $stack29;

        $stack30 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(45, "arc", "Argonaut RISC Core, Argonaut Technologies Inc.");

        <cck.elf.ELFIdentifier: int EM_ARC> = $stack30;

        $stack31 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(46, "h8/300", "Hitachi H8/300");

        <cck.elf.ELFIdentifier: int EM_H8_300> = $stack31;

        $stack32 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(47, "h8/300h", "Hitachi H8/300H");

        <cck.elf.ELFIdentifier: int EM_H8_300H> = $stack32;

        $stack33 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(48, "h8s", "Hitachi H8S");

        <cck.elf.ELFIdentifier: int EM_H8S> = $stack33;

        $stack34 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(49, "h8/500", "Hitachi H8/500");

        <cck.elf.ELFIdentifier: int EM_H8_500> = $stack34;

        $stack35 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(50, "ia64", "Intel IA-64 processor architecture");

        <cck.elf.ELFIdentifier: int EM_IA_64> = $stack35;

        $stack36 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(51, "mips-x", "Stanford MIPS-X");

        <cck.elf.ELFIdentifier: int EM_MIPS_X> = $stack36;

        $stack37 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(52, "coldfire", "Motorola ColdFire");

        <cck.elf.ELFIdentifier: int EM_COLDFIRE> = $stack37;

        $stack38 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(53, "m68hc12", "Motorola M68HC12");

        <cck.elf.ELFIdentifier: int EM_68HC12> = $stack38;

        $stack39 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(54, "mma", "Fujitsu MMA Multimedia Accelerator");

        <cck.elf.ELFIdentifier: int EM_MMA> = $stack39;

        $stack40 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(55, "pcp", "Siemens PCP");

        <cck.elf.ELFIdentifier: int EM_PCP> = $stack40;

        $stack41 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(56, "ncpu", "Sony nCPU embedded RISC processor");

        <cck.elf.ELFIdentifier: int EM_NCPU> = $stack41;

        $stack42 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(57, "ndr1", "Denso NDR1 microprocessor");

        <cck.elf.ELFIdentifier: int EM_NDR1> = $stack42;

        $stack43 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(58, "starcore", "Motorola Star*Core processor");

        <cck.elf.ELFIdentifier: int EM_STARCORE> = $stack43;

        $stack44 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(59, "me16", "Toyota ME16 processor");

        <cck.elf.ELFIdentifier: int EM_ME16> = $stack44;

        $stack45 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(60, "st100", "STMicroelectronics ST100 processor");

        <cck.elf.ELFIdentifier: int EM_ST100> = $stack45;

        $stack46 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(61, "tinyj", "Advanced Logic Corp. TinyJ embedded processor family");

        <cck.elf.ELFIdentifier: int EM_TINYJ> = $stack46;

        $stack47 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(62, "x86-64", "AMD x86-64 architecture");

        <cck.elf.ELFIdentifier: int EM_X86_64> = $stack47;

        $stack48 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(63, "pdsp", "Sony DSP Processor");

        <cck.elf.ELFIdentifier: int EM_PDSP> = $stack48;

        $stack49 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(66, "fx66", "Siemens FX66 microcontroller");

        <cck.elf.ELFIdentifier: int EM_FX66> = $stack49;

        $stack50 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(67, "st9+", "STMicroelectronics ST9+ 8/16 bit microcontroller");

        <cck.elf.ELFIdentifier: int EM_ST9PLUS> = $stack50;

        $stack51 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(68, "st7", "STMicroelectronics ST7 8-bit microcontroller");

        <cck.elf.ELFIdentifier: int EM_ST7> = $stack51;

        $stack52 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(69, "m68hc16", "Motorola MC68HC16 Microcontroller");

        <cck.elf.ELFIdentifier: int EM_68HC16> = $stack52;

        $stack53 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(70, "m68hc11", "Motorola MC68HC11 Microcontroller");

        <cck.elf.ELFIdentifier: int EM_68HC11> = $stack53;

        $stack54 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(71, "m68hc08", "Motorola MC68HC08 Microcontroller");

        <cck.elf.ELFIdentifier: int EM_68HC08> = $stack54;

        $stack55 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(72, "m68hc05", "Motorola MC68HC05 Microcontroller");

        <cck.elf.ELFIdentifier: int EM_68HC05> = $stack55;

        $stack56 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(73, "svx", "Silicon Graphics SVx");

        <cck.elf.ELFIdentifier: int EM_SVX> = $stack56;

        $stack57 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(74, "st19", "STMicroelectronics ST19 8-bit microcontroller");

        <cck.elf.ELFIdentifier: int EM_ST19> = $stack57;

        $stack58 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(75, "vax", "Digital VAX");

        <cck.elf.ELFIdentifier: int EM_VAX> = $stack58;

        $stack59 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(76, "cris", "Axis Communications 32-bit embedded processor");

        <cck.elf.ELFIdentifier: int EM_CRIS> = $stack59;

        $stack60 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(77, "javelin", "Infineon Technologies 32-bit embedded processor");

        <cck.elf.ELFIdentifier: int EM_JAVELIN> = $stack60;

        $stack61 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(78, "firepath", "Element 14 64-bit DSP Processor");

        <cck.elf.ELFIdentifier: int EM_FIREPATH> = $stack61;

        $stack62 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(79, "zsp", "LSI Logic 16-bit DSP Processor");

        <cck.elf.ELFIdentifier: int EM_ZSP> = $stack62;

        $stack63 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(80, "mmix", "Donald Knuth\'s educational 64-bit processor");

        <cck.elf.ELFIdentifier: int EM_MMIX> = $stack63;

        $stack64 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(81, "huany", "Harvard University machine-independent object files");

        <cck.elf.ELFIdentifier: int EM_HUANY> = $stack64;

        $stack65 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(82, "prism", "SiTera Prism");

        <cck.elf.ELFIdentifier: int EM_PRISM> = $stack65;

        $stack66 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(83, "avr", "Atmel AVR 8-bit microcontroller");

        <cck.elf.ELFIdentifier: int EM_AVR> = $stack66;

        $stack67 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(84, "fr30", "Fujitsu FR30");

        <cck.elf.ELFIdentifier: int EM_FR30> = $stack67;

        $stack68 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(85, "d10v", "Mitsubishi D10V");

        <cck.elf.ELFIdentifier: int EM_D10V> = $stack68;

        $stack69 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(86, "d30v", "Mitsubishi D30V");

        <cck.elf.ELFIdentifier: int EM_D30V> = $stack69;

        $stack70 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(87, "v850", "NEC v850");

        <cck.elf.ELFIdentifier: int EM_V850> = $stack70;

        $stack71 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(88, "m32r", "Mitsubishi M32R");

        <cck.elf.ELFIdentifier: int EM_M32R> = $stack71;

        $stack72 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(89, "mn10300", "Matsushita MN10300");

        <cck.elf.ELFIdentifier: int EM_MN10300> = $stack72;

        $stack73 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(90, "mn10200", "Matsushita MN10200");

        <cck.elf.ELFIdentifier: int EM_MN10200> = $stack73;

        $stack74 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(91, "pj", "picoJava");

        <cck.elf.ELFIdentifier: int EM_PJ> = $stack74;

        $stack75 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(92, "openrisc", "OpenRISC 32-bit embedded processor");

        <cck.elf.ELFIdentifier: int EM_OPENRISC> = $stack75;

        $stack76 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(93, "arc-a5", "ARC Cores Tangent-A5");

        <cck.elf.ELFIdentifier: int EM_ARC_A5> = $stack76;

        $stack77 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(94, "xtensa", "Tensilica Xtensa Architecture");

        <cck.elf.ELFIdentifier: int EM_XTENSA> = $stack77;

        $stack78 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(95, "videocore", "Alphamosaic VideoCore processor");

        <cck.elf.ELFIdentifier: int EM_VIDEOCORE> = $stack78;

        $stack79 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(96, "tmm-gpp", "Thompson Multimedia General Purpose Processor");

        <cck.elf.ELFIdentifier: int EM_TMM_GPP> = $stack79;

        $stack80 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(97, "ns32000", "National Semiconductor 32000 series");

        <cck.elf.ELFIdentifier: int EM_NS32K> = $stack80;

        $stack81 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(98, "tpc", "Tenor Network TPC processor");

        <cck.elf.ELFIdentifier: int EM_TPC> = $stack81;

        $stack82 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(99, "snp1000", "Trebia SNP 1000 processor");

        <cck.elf.ELFIdentifier: int EM_SNP1K> = $stack82;

        $stack83 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(100, "st200", "STMicroelectronics (www.st.com) ST200 microcontroller");

        <cck.elf.ELFIdentifier: int EM_ST200> = $stack83;

        $stack84 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(101, "ip2000", "Ubicom IP2xxx microcontroller family");

        <cck.elf.ELFIdentifier: int EM_IP2K> = $stack84;

        $stack85 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(102, "max", "MAX Processor");

        <cck.elf.ELFIdentifier: int EM_MAX> = $stack85;

        $stack86 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(103, "cr", "National Semiconductor CompactRISC microprocessor");

        <cck.elf.ELFIdentifier: int EM_CR> = $stack86;

        $stack87 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(104, "f2mc16", "Fujitsu F2MC16");

        <cck.elf.ELFIdentifier: int EM_F2MC16> = $stack87;

        $stack88 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(105, "msp430", "Texas Instruments embedded microcontroller msp430");

        <cck.elf.ELFIdentifier: int EM_MSP430> = $stack88;

        $stack89 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(106, "blackfin", "Analog Devices Blackfin (DSP) processor");

        <cck.elf.ELFIdentifier: int EM_BLACKFIN> = $stack89;

        $stack90 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(107, "s1c33", "S1C33 Family of Seiko Epson processors");

        <cck.elf.ELFIdentifier: int EM_SE_C33> = $stack90;

        $stack91 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(108, "sep", "Sharp embedded microprocessor");

        <cck.elf.ELFIdentifier: int EM_SEP> = $stack91;

        $stack92 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(109, "arca", "Arca RISC Microprocessor");

        <cck.elf.ELFIdentifier: int EM_ARCA> = $stack92;

        $stack93 = staticinvoke <cck.elf.ELFIdentifier: int nm(int,java.lang.String,java.lang.String)>(110, "unicore", "Microprocessor series from PKU-Unity Ltd. and MPRC of Peking University");

        <cck.elf.ELFIdentifier: int EM_UNICORE> = $stack93;

        return;
    }

    public void <init>()
    {
        cck.elf.ELFIdentifier l0;

        l0 := @this: cck.elf.ELFIdentifier;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getArchitecture(int)
    {
        int l0, $stack2;
        java.lang.String[] $stack1, $stack3;
        java.lang.String $stack4;

        l0 := @parameter0: int;

        $stack1 = <cck.elf.ELFIdentifier: java.lang.String[] EM_names>;

        $stack2 = lengthof $stack1;

        if l0 >= $stack2 goto label1;

        $stack3 = <cck.elf.ELFIdentifier: java.lang.String[] EM_names>;

        $stack4 = $stack3[l0];

        return $stack4;

     label1:
        return null;
    }

    public static java.lang.String getDescription(int)
    {
        int l0, $stack2;
        java.lang.String[] $stack1, $stack3;
        java.lang.String $stack4;

        l0 := @parameter0: int;

        $stack1 = <cck.elf.ELFIdentifier: java.lang.String[] EM_help>;

        $stack2 = lengthof $stack1;

        if l0 >= $stack2 goto label1;

        $stack3 = <cck.elf.ELFIdentifier: java.lang.String[] EM_help>;

        $stack4 = $stack3[l0];

        return $stack4;

     label1:
        return null;
    }

    static int nm(int, java.lang.String, java.lang.String)
    {
        int l0;
        java.lang.String l1, l2;
        java.lang.String[] $stack3, $stack4;

        l0 := @parameter0: int;

        l1 := @parameter1: java.lang.String;

        l2 := @parameter2: java.lang.String;

        $stack3 = <cck.elf.ELFIdentifier: java.lang.String[] EM_names>;

        $stack3[l0] = l1;

        $stack4 = <cck.elf.ELFIdentifier: java.lang.String[] EM_help>;

        $stack4[l0] = l2;

        return l0;
    }
}
