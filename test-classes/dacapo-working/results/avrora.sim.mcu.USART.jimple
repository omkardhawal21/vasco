public class avrora.sim.mcu.USART extends avrora.sim.mcu.AtmelInternalDevice
{
    static final int RXCn;
    static final int TXCn;
    static final int UDREn;
    static final int FEn;
    static final int DORn;
    static final int UPEn;
    static final int U2Xn;
    static final int MPCMn;
    static final int RXCIEn;
    static final int TXCIEn;
    static final int UDRIEn;
    static final int RXENn;
    static final int TXENn;
    static final int UCSZn2;
    static final int RXB8n;
    static final int TXB8n;
    static final int UMSELn;
    static final int UPMn1;
    static final int UPMn0;
    static final int USBSn;
    static final int UCSZn1;
    static final int UCSZn0;
    static final int UCPOLn;
    static final int PARITY_DISABLED;
    static final int PARITY_EVEN;
    static final int PARITY_ODD;
    static final int[] FRAME_SIZE;
    final avrora.sim.mcu.USART$DataRegister UDRn_reg;
    final avrora.sim.mcu.USART$ControlRegisterA UCSRnA_reg;
    final avrora.sim.mcu.USART$ControlRegisterB UCSRnB_reg;
    final avrora.sim.mcu.USART$ControlRegisterC UCSRnC_reg;
    final avrora.sim.mcu.USART$UBRRnLReg UBRRnL_reg;
    final avrora.sim.mcu.USART$UBRRnHReg UBRRnH_reg;
    final avrora.sim.mcu.USART$Transmitter transmitter;
    final avrora.sim.mcu.USART$Receiver receiver;
    final avrora.sim.mcu.USART$USARTProperties properties;
    public avrora.sim.mcu.USART$USARTDevice connectedDevice;
    int period;
    int UBRRMultiplier;

    static void <clinit>()
    {
        int[] l0;

        <avrora.sim.mcu.USART: int PARITY_ODD> = 3;

        <avrora.sim.mcu.USART: int PARITY_EVEN> = 2;

        <avrora.sim.mcu.USART: int PARITY_DISABLED> = 0;

        <avrora.sim.mcu.USART: int UCPOLn> = 0;

        <avrora.sim.mcu.USART: int UCSZn0> = 1;

        <avrora.sim.mcu.USART: int UCSZn1> = 2;

        <avrora.sim.mcu.USART: int USBSn> = 3;

        <avrora.sim.mcu.USART: int UPMn0> = 4;

        <avrora.sim.mcu.USART: int UPMn1> = 5;

        <avrora.sim.mcu.USART: int UMSELn> = 6;

        <avrora.sim.mcu.USART: int TXB8n> = 0;

        <avrora.sim.mcu.USART: int RXB8n> = 1;

        <avrora.sim.mcu.USART: int UCSZn2> = 2;

        <avrora.sim.mcu.USART: int TXENn> = 3;

        <avrora.sim.mcu.USART: int RXENn> = 4;

        <avrora.sim.mcu.USART: int UDRIEn> = 5;

        <avrora.sim.mcu.USART: int TXCIEn> = 6;

        <avrora.sim.mcu.USART: int RXCIEn> = 7;

        <avrora.sim.mcu.USART: int MPCMn> = 0;

        <avrora.sim.mcu.USART: int U2Xn> = 1;

        <avrora.sim.mcu.USART: int UPEn> = 2;

        <avrora.sim.mcu.USART: int DORn> = 3;

        <avrora.sim.mcu.USART: int FEn> = 4;

        <avrora.sim.mcu.USART: int UDREn> = 5;

        <avrora.sim.mcu.USART: int TXCn> = 6;

        <avrora.sim.mcu.USART: int RXCn> = 7;

        l0 = newarray (int)[8];

        l0[0] = 5;

        l0[1] = 6;

        l0[2] = 7;

        l0[3] = 8;

        l0[4] = 8;

        l0[5] = 8;

        l0[6] = 8;

        l0[7] = 9;

        <avrora.sim.mcu.USART: int[] FRAME_SIZE> = l0;

        return;
    }

    public void <init>(java.lang.String, avrora.sim.mcu.AtmelMicrocontroller)
    {
        avrora.sim.mcu.USART l0;
        java.lang.StringBuilder $stack3, $stack4, $stack5, $stack19, $stack22, $stack23, $stack26, $stack29, $stack30, $stack33, $stack36, $stack37, $stack40, $stack43, $stack44, $stack47, $stack50, $stack51;
        java.lang.String l1, $stack6, $stack18, $stack21, $stack24, $stack28, $stack31, $stack35, $stack38, $stack42, $stack45, $stack49, $stack52;
        avrora.sim.mcu.AtmelMicrocontroller l2;
        avrora.sim.mcu.USART$USARTProperties $stack7, $stack16, $stack20, $stack27, $stack34, $stack41, $stack48;
        avrora.sim.mcu.USART$DataRegister $stack8, $stack17;
        avrora.sim.mcu.USART$ControlRegisterA $stack9, $stack25;
        avrora.sim.mcu.USART$ControlRegisterB $stack10, $stack32;
        avrora.sim.mcu.USART$ControlRegisterC $stack11, $stack39;
        avrora.sim.mcu.USART$UBRRnLReg $stack12, $stack46;
        avrora.sim.mcu.USART$UBRRnHReg $stack13, $stack53;
        avrora.sim.mcu.USART$Transmitter $stack14;
        avrora.sim.mcu.USART$Receiver $stack15;
        avrora.sim.mcu.USART$SerialPrinter $stack54;

        l0 := @this: avrora.sim.mcu.USART;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: avrora.sim.mcu.AtmelMicrocontroller;

        $stack3 = new java.lang.StringBuilder;

        specialinvoke $stack3.<java.lang.StringBuilder: void <init>()>();

        $stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("usart");

        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l1);

        $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke l0.<avrora.sim.mcu.AtmelInternalDevice: void <init>(java.lang.String,avrora.sim.mcu.AtmelMicrocontroller)>($stack6, l2);

        l0.<avrora.sim.mcu.USART: int UBRRMultiplier> = 16;

        $stack7 = staticinvoke <avrora.sim.mcu.USART: avrora.sim.mcu.USART$USARTProperties getUSARTProperties(java.lang.String,avrora.sim.mcu.Microcontroller)>(l1, l2);

        l0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$USARTProperties properties> = $stack7;

        $stack8 = new avrora.sim.mcu.USART$DataRegister;

        specialinvoke $stack8.<avrora.sim.mcu.USART$DataRegister: void <init>(avrora.sim.mcu.USART)>(l0);

        l0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$DataRegister UDRn_reg> = $stack8;

        $stack9 = new avrora.sim.mcu.USART$ControlRegisterA;

        specialinvoke $stack9.<avrora.sim.mcu.USART$ControlRegisterA: void <init>(avrora.sim.mcu.USART)>(l0);

        l0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$ControlRegisterA UCSRnA_reg> = $stack9;

        $stack10 = new avrora.sim.mcu.USART$ControlRegisterB;

        specialinvoke $stack10.<avrora.sim.mcu.USART$ControlRegisterB: void <init>(avrora.sim.mcu.USART)>(l0);

        l0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$ControlRegisterB UCSRnB_reg> = $stack10;

        $stack11 = new avrora.sim.mcu.USART$ControlRegisterC;

        specialinvoke $stack11.<avrora.sim.mcu.USART$ControlRegisterC: void <init>(avrora.sim.mcu.USART)>(l0);

        l0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$ControlRegisterC UCSRnC_reg> = $stack11;

        $stack12 = new avrora.sim.mcu.USART$UBRRnLReg;

        specialinvoke $stack12.<avrora.sim.mcu.USART$UBRRnLReg: void <init>(avrora.sim.mcu.USART)>(l0);

        l0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$UBRRnLReg UBRRnL_reg> = $stack12;

        $stack13 = new avrora.sim.mcu.USART$UBRRnHReg;

        specialinvoke $stack13.<avrora.sim.mcu.USART$UBRRnHReg: void <init>(avrora.sim.mcu.USART)>(l0);

        l0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$UBRRnHReg UBRRnH_reg> = $stack13;

        $stack14 = new avrora.sim.mcu.USART$Transmitter;

        specialinvoke $stack14.<avrora.sim.mcu.USART$Transmitter: void <init>(avrora.sim.mcu.USART)>(l0);

        l0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$Transmitter transmitter> = $stack14;

        $stack15 = new avrora.sim.mcu.USART$Receiver;

        specialinvoke $stack15.<avrora.sim.mcu.USART$Receiver: void <init>(avrora.sim.mcu.USART)>(l0);

        l0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$Receiver receiver> = $stack15;

        $stack16 = l0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$USARTProperties properties>;

        $stack18 = $stack16.<avrora.sim.mcu.USART$USARTProperties: java.lang.String UDR_name>;

        $stack17 = l0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$DataRegister UDRn_reg>;

        virtualinvoke l0.<avrora.sim.mcu.USART: void installIOReg(java.lang.String,avrora.sim.ActiveRegister)>($stack18, $stack17);

        $stack19 = new java.lang.StringBuilder;

        specialinvoke $stack19.<java.lang.StringBuilder: void <init>()>();

        $stack20 = l0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$USARTProperties properties>;

        $stack21 = $stack20.<avrora.sim.mcu.USART$USARTProperties: java.lang.String UCSR_name>;

        $stack22 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack21);

        $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("A");

        $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack25 = l0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$ControlRegisterA UCSRnA_reg>;

        virtualinvoke l0.<avrora.sim.mcu.USART: void installIOReg(java.lang.String,avrora.sim.ActiveRegister)>($stack24, $stack25);

        $stack26 = new java.lang.StringBuilder;

        specialinvoke $stack26.<java.lang.StringBuilder: void <init>()>();

        $stack27 = l0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$USARTProperties properties>;

        $stack28 = $stack27.<avrora.sim.mcu.USART$USARTProperties: java.lang.String UCSR_name>;

        $stack29 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack28);

        $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("B");

        $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack32 = l0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$ControlRegisterB UCSRnB_reg>;

        virtualinvoke l0.<avrora.sim.mcu.USART: void installIOReg(java.lang.String,avrora.sim.ActiveRegister)>($stack31, $stack32);

        $stack33 = new java.lang.StringBuilder;

        specialinvoke $stack33.<java.lang.StringBuilder: void <init>()>();

        $stack34 = l0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$USARTProperties properties>;

        $stack35 = $stack34.<avrora.sim.mcu.USART$USARTProperties: java.lang.String UCSR_name>;

        $stack36 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack35);

        $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("C");

        $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack39 = l0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$ControlRegisterC UCSRnC_reg>;

        virtualinvoke l0.<avrora.sim.mcu.USART: void installIOReg(java.lang.String,avrora.sim.ActiveRegister)>($stack38, $stack39);

        $stack40 = new java.lang.StringBuilder;

        specialinvoke $stack40.<java.lang.StringBuilder: void <init>()>();

        $stack41 = l0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$USARTProperties properties>;

        $stack42 = $stack41.<avrora.sim.mcu.USART$USARTProperties: java.lang.String UBRR_name>;

        $stack43 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack42);

        $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("L");

        $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack46 = l0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$UBRRnLReg UBRRnL_reg>;

        virtualinvoke l0.<avrora.sim.mcu.USART: void installIOReg(java.lang.String,avrora.sim.ActiveRegister)>($stack45, $stack46);

        $stack47 = new java.lang.StringBuilder;

        specialinvoke $stack47.<java.lang.StringBuilder: void <init>()>();

        $stack48 = l0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$USARTProperties properties>;

        $stack49 = $stack48.<avrora.sim.mcu.USART$USARTProperties: java.lang.String UBRR_name>;

        $stack50 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack49);

        $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("H");

        $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack53 = l0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$UBRRnHReg UBRRnH_reg>;

        virtualinvoke l0.<avrora.sim.mcu.USART: void installIOReg(java.lang.String,avrora.sim.ActiveRegister)>($stack52, $stack53);

        $stack54 = new avrora.sim.mcu.USART$SerialPrinter;

        specialinvoke $stack54.<avrora.sim.mcu.USART$SerialPrinter: void <init>(avrora.sim.mcu.USART)>(l0);

        virtualinvoke l0.<avrora.sim.mcu.USART: void connect(avrora.sim.mcu.USART$USARTDevice)>($stack54);

        return;
    }

    public void connect(avrora.sim.mcu.USART$USARTDevice)
    {
        avrora.sim.mcu.USART l0;
        avrora.sim.mcu.USART$USARTDevice l1;

        l0 := @this: avrora.sim.mcu.USART;

        l1 := @parameter0: avrora.sim.mcu.USART$USARTDevice;

        l0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$USARTDevice connectedDevice> = l1;

        return;
    }

    static avrora.sim.mcu.USART$USARTProperties getUSARTProperties(java.lang.String, avrora.sim.mcu.Microcontroller)
    {
        avrora.sim.mcu.MCUProperties $stack3;
        java.lang.StringBuilder $stack4, $stack5, $stack6, $stack8, $stack9, $stack10, $stack12, $stack13, $stack14, $stack16, $stack17, $stack18, $stack20, $stack22, $stack23, $stack26, $stack28, $stack29, $stack32, $stack34, $stack35;
        java.lang.String $stack7, $stack11, $stack15, $stack19, $stack21, $stack24, $stack27, $stack30, $stack33, $stack36, l0#1;
        int $stack25, $stack31, $stack37, $stack38, $stack39, $stack40;
        avrora.sim.mcu.Microcontroller l1#2;
        avrora.sim.mcu.USART$USARTProperties l1#3;
        int[] l0#4;

        l0#1 := @parameter0: java.lang.String;

        l1#2 := @parameter1: avrora.sim.mcu.Microcontroller;

        $stack3 = interfaceinvoke l1#2.<avrora.sim.mcu.Microcontroller: avrora.sim.mcu.MCUProperties getProperties()>();

        l1#3 = new avrora.sim.mcu.USART$USARTProperties;

        specialinvoke l1#3.<avrora.sim.mcu.USART$USARTProperties: void <init>()>();

        l1#3.<avrora.sim.mcu.USART$USARTProperties: java.lang.String subID> = l0#1;

        $stack4 = new java.lang.StringBuilder;

        specialinvoke $stack4.<java.lang.StringBuilder: void <init>()>();

        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("USART");

        $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l0#1);

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.String toString()>();

        l1#3.<avrora.sim.mcu.USART$USARTProperties: java.lang.String USART_name> = $stack7;

        $stack8 = new java.lang.StringBuilder;

        specialinvoke $stack8.<java.lang.StringBuilder: void <init>()>();

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UDR");

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l0#1);

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>();

        l1#3.<avrora.sim.mcu.USART$USARTProperties: java.lang.String UDR_name> = $stack11;

        $stack12 = new java.lang.StringBuilder;

        specialinvoke $stack12.<java.lang.StringBuilder: void <init>()>();

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UCSR");

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l0#1);

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>();

        l1#3.<avrora.sim.mcu.USART$USARTProperties: java.lang.String UCSR_name> = $stack15;

        $stack16 = new java.lang.StringBuilder;

        specialinvoke $stack16.<java.lang.StringBuilder: void <init>()>();

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UBRR");

        $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l0#1);

        $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>();

        l1#3.<avrora.sim.mcu.USART$USARTProperties: java.lang.String UBRR_name> = $stack19;

        $stack20 = new java.lang.StringBuilder;

        specialinvoke $stack20.<java.lang.StringBuilder: void <init>()>();

        $stack21 = l1#3.<avrora.sim.mcu.USART$USARTProperties: java.lang.String USART_name>;

        $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack21);

        $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", RX");

        $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack25 = virtualinvoke $stack3.<avrora.sim.mcu.MCUProperties: int getInterrupt(java.lang.String)>($stack24);

        l1#3.<avrora.sim.mcu.USART$USARTProperties: int USART_RX_inum> = $stack25;

        $stack26 = new java.lang.StringBuilder;

        specialinvoke $stack26.<java.lang.StringBuilder: void <init>()>();

        $stack27 = l1#3.<avrora.sim.mcu.USART$USARTProperties: java.lang.String USART_name>;

        $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack27);

        $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", UDRE");

        $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack31 = virtualinvoke $stack3.<avrora.sim.mcu.MCUProperties: int getInterrupt(java.lang.String)>($stack30);

        l1#3.<avrora.sim.mcu.USART$USARTProperties: int USART_UDRE_inum> = $stack31;

        $stack32 = new java.lang.StringBuilder;

        specialinvoke $stack32.<java.lang.StringBuilder: void <init>()>();

        $stack33 = l1#3.<avrora.sim.mcu.USART$USARTProperties: java.lang.String USART_name>;

        $stack34 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack33);

        $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", TX");

        $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack37 = virtualinvoke $stack3.<avrora.sim.mcu.MCUProperties: int getInterrupt(java.lang.String)>($stack36);

        l1#3.<avrora.sim.mcu.USART$USARTProperties: int USART_TX_inum> = $stack37;

        l0#4 = newarray (int)[8];

        l0#4[0] = -1;

        l0#4[1] = -1;

        l0#4[2] = -1;

        l0#4[3] = -1;

        l0#4[4] = -1;

        $stack38 = l1#3.<avrora.sim.mcu.USART$USARTProperties: int USART_UDRE_inum>;

        l0#4[5] = $stack38;

        $stack39 = l1#3.<avrora.sim.mcu.USART$USARTProperties: int USART_TX_inum>;

        l0#4[6] = $stack39;

        $stack40 = l1#3.<avrora.sim.mcu.USART$USARTProperties: int USART_RX_inum>;

        l0#4[7] = $stack40;

        l1#3.<avrora.sim.mcu.USART$USARTProperties: int[] interruptMapping> = l0#4;

        return l1#3;
    }

    public void receiveFrame(avrora.sim.mcu.USART$Frame)
    {
        avrora.sim.mcu.USART l0;
        avrora.sim.mcu.USART$DataRegister $stack2;
        avrora.sim.mcu.USART$Frame l1;
        avrora.sim.mcu.USART$DataRegister$TwoLevelFIFO $stack3;

        l0 := @this: avrora.sim.mcu.USART;

        l1 := @parameter0: avrora.sim.mcu.USART$Frame;

        $stack2 = l0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$DataRegister UDRn_reg>;

        $stack3 = $stack2.<avrora.sim.mcu.USART$DataRegister: avrora.sim.mcu.USART$DataRegister$TwoLevelFIFO receiveRegister>;

        virtualinvoke $stack3.<avrora.sim.mcu.USART$DataRegister$TwoLevelFIFO: void writeFrame(avrora.sim.mcu.USART$Frame)>(l1);

        return;
    }

    public void startReceive()
    {
        avrora.sim.mcu.USART l0;
        avrora.sim.mcu.USART$Receiver $stack1;

        l0 := @this: avrora.sim.mcu.USART;

        $stack1 = l0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$Receiver receiver>;

        virtualinvoke $stack1.<avrora.sim.mcu.USART$Receiver: void enableReceive()>();

        return;
    }

    public avrora.sim.mcu.USART$Frame transmitFrame()
    {
        avrora.sim.mcu.USART$Frame $stack1;
        avrora.sim.mcu.USART l0;
        avrora.sim.mcu.USART$DataRegister $stack2;
        avrora.sim.RWRegister $stack3;
        byte $stack4;
        avrora.sim.mcu.USART$ControlRegisterB $stack5;
        boolean $stack6;
        avrora.sim.mcu.USART$ControlRegisterC $stack7;
        int $stack8;

        l0 := @this: avrora.sim.mcu.USART;

        $stack1 = new avrora.sim.mcu.USART$Frame;

        $stack2 = l0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$DataRegister UDRn_reg>;

        $stack3 = $stack2.<avrora.sim.mcu.USART$DataRegister: avrora.sim.RWRegister transmitRegister>;

        $stack4 = virtualinvoke $stack3.<avrora.sim.RWRegister: byte read()>();

        $stack5 = l0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$ControlRegisterB UCSRnB_reg>;

        $stack6 = virtualinvoke $stack5.<avrora.sim.mcu.USART$ControlRegisterB: boolean readBit(int)>(0);

        $stack7 = l0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$ControlRegisterC UCSRnC_reg>;

        $stack8 = virtualinvoke $stack7.<avrora.sim.mcu.USART$ControlRegisterC: int getFrameSize()>();

        specialinvoke $stack1.<avrora.sim.mcu.USART$Frame: void <init>(byte,boolean,int)>($stack4, $stack6, $stack8);

        return $stack1;
    }

    void updatePeriod()
    {
        avrora.sim.mcu.USART l0;
        avrora.sim.mcu.USART$UBRRnLReg $stack1;
        avrora.sim.mcu.USART$UBRRnHReg $stack2;
        int $stack3, $stack4, $stack6, $stack7, $stack8, $stack15;
        avrora.sim.output.SimPrinter $stack5, $stack10;
        java.lang.StringBuilder $stack9, $stack13, $stack14, $stack16;
        avrora.sim.mcu.USART$USARTProperties $stack11;
        java.lang.String $stack12, $stack17;

        l0 := @this: avrora.sim.mcu.USART;

        $stack2 = l0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$UBRRnHReg UBRRnH_reg>;

        $stack1 = l0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$UBRRnLReg UBRRnL_reg>;

        $stack3 = staticinvoke <avrora.sim.mcu.USART: int read16(avrora.sim.RWRegister,avrora.sim.RWRegister)>($stack2, $stack1);

        $stack4 = $stack3 + 1;

        l0.<avrora.sim.mcu.USART: int period> = $stack4;

        $stack5 = l0.<avrora.sim.mcu.USART: avrora.sim.output.SimPrinter devicePrinter>;

        if $stack5 == null goto label1;

        $stack10 = l0.<avrora.sim.mcu.USART: avrora.sim.output.SimPrinter devicePrinter>;

        $stack9 = new java.lang.StringBuilder;

        specialinvoke $stack9.<java.lang.StringBuilder: void <init>()>();

        $stack11 = l0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$USARTProperties properties>;

        $stack12 = $stack11.<avrora.sim.mcu.USART$USARTProperties: java.lang.String USART_name>;

        $stack13 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": period set to ");

        $stack15 = l0.<avrora.sim.mcu.USART: int period>;

        $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack15);

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack10.<avrora.sim.output.SimPrinter: void println(java.lang.String)>($stack17);

     label1:
        $stack7 = l0.<avrora.sim.mcu.USART: int period>;

        $stack6 = l0.<avrora.sim.mcu.USART: int UBRRMultiplier>;

        $stack8 = $stack7 * $stack6;

        l0.<avrora.sim.mcu.USART: int period> = $stack8;

        return;
    }
}
