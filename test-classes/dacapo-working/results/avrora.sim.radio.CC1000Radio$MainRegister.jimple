public class avrora.sim.radio.CC1000Radio$MainRegister extends avrora.sim.radio.CC1000Radio$RadioRegister
{
    public static final int RXTX;
    public static final int F_REG;
    public static final int RX_PD;
    public static final int TX_PD;
    public static final int FS_PD;
    public static final int CORE_PD;
    public static final int BIAS_PD;
    public static final int RESET_N;
    boolean rxtx;
    boolean fReg;
    boolean rxPd;
    boolean txPd;
    boolean fsPd;
    boolean corePd;
    boolean biasPd;
    boolean resetN;
    byte oldVal;
    boolean transmit_activated;
    boolean receive_activated;
    final avrora.sim.radio.CC1000Radio this$0;

    void <init>(avrora.sim.radio.CC1000Radio)
    {
        avrora.sim.radio.CC1000Radio$MainRegister l0;
        avrora.sim.radio.CC1000Radio l1;

        l0 := @this: avrora.sim.radio.CC1000Radio$MainRegister;

        l1 := @parameter0: avrora.sim.radio.CC1000Radio;

        l0.<avrora.sim.radio.CC1000Radio$MainRegister: avrora.sim.radio.CC1000Radio this$0> = l1;

        specialinvoke l0.<avrora.sim.radio.CC1000Radio$RadioRegister: void <init>(avrora.sim.radio.CC1000Radio,java.lang.String,byte)>(l1, "MAIN", 62);

        return;
    }

    protected void decode(byte)
    {
        avrora.sim.radio.CC1000Radio$MainRegister l0;
        byte l1, $stack25, $stack32, $stack62;
        boolean $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $stack12, $stack15, $stack22, $stack26, $stack27, $stack28, $stack31, $stack33, $stack34, $stack42, $stack45, $stack46, $stack47, $stack51, $stack53, $stack54, $stack55, $stack56, $stack58, $stack59, $stack63, $stack82, $stack29#18, $stack35#27, $stack36#32, $stack37#40;
        avrora.sim.radio.CC1000Radio $stack13, $stack16, $stack17, $stack20, $stack23, $stack30, $stack48, $stack66, $stack73, $stack75, $stack78, $stack80, $stack83, $stack89, $stack92, $stack71#7, $stack38#50;
        avrora.sim.radio.CC1000Radio$Receiver $stack14, $stack93;
        avrora.sim.radio.CC1000Radio$Transmitter $stack18, $stack90;
        double $stack19, $stack21;
        avrora.sim.radio.CC1000Radio$SPITicker $stack24, $stack84;
        avrora.sim.radio.CC1000Radio$PA_POWRegister $stack49;
        int $stack50, l2#24;
        avrora.sim.output.SimPrinter $stack74, $stack76, $stack79, $stack81;
        avrora.sim.radio.CC1000Radio$FrequencyRegister l3#23;
        avrora.sim.FiniteStateMachine $stack39#55;

        l0 := @this: avrora.sim.radio.CC1000Radio$MainRegister;

        l1 := @parameter0: byte;

        $stack4 = staticinvoke <cck.util.Arithmetic: boolean getBit(byte,int)>(l1, 7);

        l0.<avrora.sim.radio.CC1000Radio$MainRegister: boolean rxtx> = $stack4;

        $stack5 = staticinvoke <cck.util.Arithmetic: boolean getBit(byte,int)>(l1, 6);

        l0.<avrora.sim.radio.CC1000Radio$MainRegister: boolean fReg> = $stack5;

        $stack6 = staticinvoke <cck.util.Arithmetic: boolean getBit(byte,int)>(l1, 5);

        l0.<avrora.sim.radio.CC1000Radio$MainRegister: boolean rxPd> = $stack6;

        $stack7 = staticinvoke <cck.util.Arithmetic: boolean getBit(byte,int)>(l1, 4);

        l0.<avrora.sim.radio.CC1000Radio$MainRegister: boolean txPd> = $stack7;

        $stack8 = staticinvoke <cck.util.Arithmetic: boolean getBit(byte,int)>(l1, 3);

        l0.<avrora.sim.radio.CC1000Radio$MainRegister: boolean fsPd> = $stack8;

        $stack9 = staticinvoke <cck.util.Arithmetic: boolean getBit(byte,int)>(l1, 2);

        l0.<avrora.sim.radio.CC1000Radio$MainRegister: boolean corePd> = $stack9;

        $stack10 = staticinvoke <cck.util.Arithmetic: boolean getBit(byte,int)>(l1, 1);

        l0.<avrora.sim.radio.CC1000Radio$MainRegister: boolean biasPd> = $stack10;

        $stack11 = staticinvoke <cck.util.Arithmetic: boolean getBit(byte,int)>(l1, 0);

        l0.<avrora.sim.radio.CC1000Radio$MainRegister: boolean resetN> = $stack11;

        $stack12 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: boolean rxPd>;

        if $stack12 == 0 goto label01;

        $stack92 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: avrora.sim.radio.CC1000Radio this$0>;

        $stack93 = $stack92.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$Receiver receiver>;

        virtualinvoke $stack93.<avrora.sim.radio.CC1000Radio$Receiver: void endReceive()>();

        goto label02;

     label01:
        $stack13 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: avrora.sim.radio.CC1000Radio this$0>;

        $stack14 = $stack13.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$Receiver receiver>;

        virtualinvoke $stack14.<avrora.sim.radio.CC1000Radio$Receiver: void beginReceive(double)>(2.4);

     label02:
        $stack15 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: boolean txPd>;

        if $stack15 == 0 goto label03;

        $stack89 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: avrora.sim.radio.CC1000Radio this$0>;

        $stack90 = $stack89.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$Transmitter transmitter>;

        virtualinvoke $stack90.<avrora.sim.radio.CC1000Radio$Transmitter: void endTransmit()>();

        goto label04;

     label03:
        $stack16 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: avrora.sim.radio.CC1000Radio this$0>;

        $stack18 = $stack16.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$Transmitter transmitter>;

        $stack17 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: avrora.sim.radio.CC1000Radio this$0>;

        $stack19 = virtualinvoke $stack17.<avrora.sim.radio.CC1000Radio: double getPower()>();

        $stack20 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: avrora.sim.radio.CC1000Radio this$0>;

        $stack21 = virtualinvoke $stack20.<avrora.sim.radio.CC1000Radio: double getFrequency()>();

        virtualinvoke $stack18.<avrora.sim.radio.CC1000Radio$Transmitter: void beginTransmit(double,double)>($stack19, $stack21);

     label04:
        $stack22 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: boolean rxPd>;

        if $stack22 == 0 goto label05;

        $stack82 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: boolean txPd>;

        if $stack82 != 0 goto label06;

     label05:
        $stack23 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: avrora.sim.radio.CC1000Radio this$0>;

        $stack24 = $stack23.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$SPITicker ticker>;

        virtualinvoke $stack24.<avrora.sim.radio.CC1000Radio$SPITicker: void activate()>();

        goto label07;

     label06:
        $stack83 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: avrora.sim.radio.CC1000Radio this$0>;

        $stack84 = $stack83.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$SPITicker ticker>;

        virtualinvoke $stack84.<avrora.sim.radio.CC1000Radio$SPITicker: void deactivate()>();

     label07:
        $stack25 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: byte oldVal>;

        $stack26 = staticinvoke <cck.util.Arithmetic: boolean getBit(byte,int)>($stack25, 7);

        $stack27 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: boolean rxtx>;

        if $stack27 == 0 goto label08;

        if $stack26 != 0 goto label08;

        $stack78 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: avrora.sim.radio.CC1000Radio this$0>;

        $stack79 = $stack78.<avrora.sim.radio.CC1000Radio: avrora.sim.output.SimPrinter radioPrinter>;

        if $stack79 == null goto label09;

        $stack80 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: avrora.sim.radio.CC1000Radio this$0>;

        $stack81 = $stack80.<avrora.sim.radio.CC1000Radio: avrora.sim.output.SimPrinter radioPrinter>;

        virtualinvoke $stack81.<avrora.sim.output.SimPrinter: void println(java.lang.String)>("CC1000: RX end receiving -> begin transmitting");

        goto label09;

     label08:
        $stack28 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: boolean rxtx>;

        if $stack28 != 0 goto label09;

        if $stack26 == 0 goto label09;

        $stack73 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: avrora.sim.radio.CC1000Radio this$0>;

        $stack74 = $stack73.<avrora.sim.radio.CC1000Radio: avrora.sim.output.SimPrinter radioPrinter>;

        if $stack74 == null goto label09;

        $stack75 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: avrora.sim.radio.CC1000Radio this$0>;

        $stack76 = $stack75.<avrora.sim.radio.CC1000Radio: avrora.sim.output.SimPrinter radioPrinter>;

        virtualinvoke $stack76.<avrora.sim.output.SimPrinter: void println(java.lang.String)>("CC1000: TX end transmitting -> begin receiving");

     label09:
        $stack71#7 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: avrora.sim.radio.CC1000Radio this$0>;

        $stack29#18 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: boolean fReg>;

        if $stack29#18 == 0 goto label10;

        $stack66 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: avrora.sim.radio.CC1000Radio this$0>;

        l3#23 = $stack66.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$FrequencyRegister FREQ_B_reg>;

        goto label11;

     label10:
        $stack30 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: avrora.sim.radio.CC1000Radio this$0>;

        l3#23 = $stack30.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$FrequencyRegister FREQ_A_reg>;

     label11:
        $stack71#7.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$FrequencyRegister currentFrequencyRegister> = l3#23;

        $stack31 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: boolean resetN>;

        if $stack31 == 0 goto label12;

        $stack62 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: byte oldVal>;

        $stack63 = staticinvoke <cck.util.Arithmetic: boolean getBit(byte,int)>($stack62, 0);

        if $stack63 != 0 goto label12;

        l0.<avrora.sim.radio.CC1000Radio$MainRegister: byte oldVal> = l1;

        return;

     label12:
        $stack32 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: byte oldVal>;

        if l1 == $stack32 goto label19;

        $stack33 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: boolean corePd>;

        if $stack33 == 0 goto label13;

        l2#24 = 1;

        goto label14;

     label13:
        l2#24 = 2;

     label14:
        $stack34 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: boolean corePd>;

        if $stack34 != 0 goto label15;

        $stack59 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: boolean biasPd>;

        if $stack59 != 0 goto label15;

        l2#24 = 3;

     label15:
        $stack35#27 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: boolean corePd>;

        if $stack35#27 != 0 goto label16;

        $stack56 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: boolean biasPd>;

        if $stack56 != 0 goto label16;

        $stack58 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: boolean fsPd>;

        if $stack58 != 0 goto label16;

        l2#24 = 4;

     label16:
        $stack36#32 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: boolean corePd>;

        if $stack36#32 != 0 goto label17;

        $stack51 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: boolean biasPd>;

        if $stack51 != 0 goto label17;

        $stack53 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: boolean fsPd>;

        if $stack53 != 0 goto label17;

        $stack54 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: boolean rxtx>;

        if $stack54 != 0 goto label17;

        $stack55 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: boolean rxPd>;

        if $stack55 != 0 goto label17;

        l2#24 = 5;

     label17:
        $stack37#40 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: boolean corePd>;

        if $stack37#40 != 0 goto label18;

        $stack42 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: boolean biasPd>;

        if $stack42 != 0 goto label18;

        $stack45 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: boolean fsPd>;

        if $stack45 != 0 goto label18;

        $stack46 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: boolean rxtx>;

        if $stack46 == 0 goto label18;

        $stack47 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: boolean txPd>;

        if $stack47 != 0 goto label18;

        $stack48 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: avrora.sim.radio.CC1000Radio this$0>;

        $stack49 = $stack48.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$PA_POWRegister PA_POW_reg>;

        $stack50 = virtualinvoke $stack49.<avrora.sim.radio.CC1000Radio$PA_POWRegister: int getPower()>();

        l2#24 = $stack50 + 6;

     label18:
        $stack38#50 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: avrora.sim.radio.CC1000Radio this$0>;

        $stack39#55 = $stack38#50.<avrora.sim.radio.CC1000Radio: avrora.sim.FiniteStateMachine stateMachine>;

        virtualinvoke $stack39#55.<avrora.sim.FiniteStateMachine: void transition(int)>(l2#24);

     label19:
        l0.<avrora.sim.radio.CC1000Radio$MainRegister: byte oldVal> = l1;

        return;
    }

    protected void printStatus()
    {
        avrora.sim.radio.CC1000Radio$MainRegister l0;
        boolean $stack4, $stack5, $stack11, $stack15, $stack19, $stack23, $stack27, $stack31;
        char $stack12, $stack16, $stack20, $stack24, $stack28, $stack32;
        avrora.sim.radio.CC1000Radio $stack34;
        avrora.sim.output.SimPrinter $stack35;
        java.lang.String $stack36, l1#1, l1#2, l3#3;
        java.lang.StringBuffer $stack37;

        l0 := @this: avrora.sim.radio.CC1000Radio$MainRegister;

        $stack4 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: boolean rxtx>;

        if $stack4 == 0 goto label1;

        l1#1 = "TX";

        goto label2;

     label1:
        l1#1 = "RX";

     label2:
        l1#2 = l1#1;

        $stack5 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: boolean fReg>;

        if $stack5 == 0 goto label3;

        l3#3 = "B";

        goto label4;

     label3:
        l3#3 = "A";

     label4:
        $stack37 = new java.lang.StringBuffer;

        specialinvoke $stack37.<java.lang.StringBuffer: void <init>(int)>(100);

        virtualinvoke $stack37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("CC1000[MAIN]: ");

        virtualinvoke $stack37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(l1#2);

        virtualinvoke $stack37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", freg: ");

        virtualinvoke $stack37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(l3#3);

        virtualinvoke $stack37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", rx pd: ");

        $stack11 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: boolean rxPd>;

        $stack12 = staticinvoke <cck.text.StringUtil: char toBit(boolean)>($stack11);

        virtualinvoke $stack37.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($stack12);

        virtualinvoke $stack37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", tx pd: ");

        $stack15 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: boolean txPd>;

        $stack16 = staticinvoke <cck.text.StringUtil: char toBit(boolean)>($stack15);

        virtualinvoke $stack37.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($stack16);

        virtualinvoke $stack37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", fs pd: ");

        $stack19 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: boolean fsPd>;

        $stack20 = staticinvoke <cck.text.StringUtil: char toBit(boolean)>($stack19);

        virtualinvoke $stack37.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($stack20);

        virtualinvoke $stack37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", core pd: ");

        $stack23 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: boolean corePd>;

        $stack24 = staticinvoke <cck.text.StringUtil: char toBit(boolean)>($stack23);

        virtualinvoke $stack37.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($stack24);

        virtualinvoke $stack37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", bias pd: ");

        $stack27 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: boolean biasPd>;

        $stack28 = staticinvoke <cck.text.StringUtil: char toBit(boolean)>($stack27);

        virtualinvoke $stack37.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($stack28);

        virtualinvoke $stack37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", reset: ");

        $stack31 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: boolean resetN>;

        $stack32 = staticinvoke <cck.text.StringUtil: char toBit(boolean)>($stack31);

        virtualinvoke $stack37.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($stack32);

        $stack34 = l0.<avrora.sim.radio.CC1000Radio$MainRegister: avrora.sim.radio.CC1000Radio this$0>;

        $stack35 = $stack34.<avrora.sim.radio.CC1000Radio: avrora.sim.output.SimPrinter radioPrinter>;

        $stack36 = virtualinvoke $stack37.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $stack35.<avrora.sim.output.SimPrinter: void println(java.lang.String)>($stack36);

        return;
    }

    public static void <clinit>()
    {
        <avrora.sim.radio.CC1000Radio$MainRegister: int RESET_N> = 0;

        <avrora.sim.radio.CC1000Radio$MainRegister: int BIAS_PD> = 1;

        <avrora.sim.radio.CC1000Radio$MainRegister: int CORE_PD> = 2;

        <avrora.sim.radio.CC1000Radio$MainRegister: int FS_PD> = 3;

        <avrora.sim.radio.CC1000Radio$MainRegister: int TX_PD> = 4;

        <avrora.sim.radio.CC1000Radio$MainRegister: int RX_PD> = 5;

        <avrora.sim.radio.CC1000Radio$MainRegister: int F_REG> = 6;

        <avrora.sim.radio.CC1000Radio$MainRegister: int RXTX> = 7;

        return;
    }
}
