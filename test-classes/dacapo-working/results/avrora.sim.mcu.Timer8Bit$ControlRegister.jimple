public class avrora.sim.mcu.Timer8Bit$ControlRegister extends avrora.sim.RWRegister
{
    public static final int FOCn;
    public static final int WGMn0;
    public static final int COMn1;
    public static final int COMn0;
    public static final int WGMn1;
    public static final int CSn2;
    public static final int CSn1;
    public static final int CSn0;
    final avrora.sim.state.RegisterView CSn;
    final avrora.sim.state.RegisterView COMn;
    final avrora.sim.state.RegisterView WGMn;
    int mode;
    int scale;
    final avrora.sim.mcu.Timer8Bit this$0;

    protected void <init>(avrora.sim.mcu.Timer8Bit)
    {
        avrora.sim.mcu.Timer8Bit$ControlRegister l0;
        avrora.sim.state.RegisterUtil$BitRangeView $stack2, $stack3;
        avrora.sim.state.RegisterView $stack4;
        avrora.sim.mcu.Timer8Bit l1#1;
        byte[] l1#2;

        l0 := @this: avrora.sim.mcu.Timer8Bit$ControlRegister;

        l1#1 := @parameter0: avrora.sim.mcu.Timer8Bit;

        l0.<avrora.sim.mcu.Timer8Bit$ControlRegister: avrora.sim.mcu.Timer8Bit this$0> = l1#1;

        specialinvoke l0.<avrora.sim.RWRegister: void <init>()>();

        $stack2 = staticinvoke <avrora.sim.state.RegisterUtil: avrora.sim.state.RegisterUtil$BitRangeView bitRangeView(avrora.sim.state.RegisterView,int,int)>(l0, 0, 2);

        l0.<avrora.sim.mcu.Timer8Bit$ControlRegister: avrora.sim.state.RegisterView CSn> = $stack2;

        $stack3 = staticinvoke <avrora.sim.state.RegisterUtil: avrora.sim.state.RegisterUtil$BitRangeView bitRangeView(avrora.sim.state.RegisterView,int,int)>(l0, 4, 5);

        l0.<avrora.sim.mcu.Timer8Bit$ControlRegister: avrora.sim.state.RegisterView COMn> = $stack3;

        l1#2 = newarray (byte)[2];

        l1#2[0] = 6;

        l1#2[1] = 3;

        $stack4 = staticinvoke <avrora.sim.state.RegisterUtil: avrora.sim.state.RegisterView permutedView(avrora.sim.state.RegisterView,byte[])>(l0, l1#2);

        l0.<avrora.sim.mcu.Timer8Bit$ControlRegister: avrora.sim.state.RegisterView WGMn> = $stack4;

        l0.<avrora.sim.mcu.Timer8Bit$ControlRegister: int mode> = -1;

        l0.<avrora.sim.mcu.Timer8Bit$ControlRegister: int scale> = -1;

        return;
    }

    private void forcedOutputCompare()
    {
        avrora.sim.mcu.Timer8Bit $stack2, $stack5, $stack12, $stack14, $stack18, $stack19;
        avrora.sim.mcu.Timer8Bit$TCNTnRegister $stack3;
        byte $stack4, $stack8;
        avrora.sim.mcu.Timer8Bit$BufferedRegister $stack6;
        int $stack7, $stack9, $stack11, $stack17, $stack25;
        avrora.sim.state.RegisterView $stack10, $stack16, $stack24;
        avrora.sim.mcu.DefaultMCU$Pin $stack13, $stack15, $stack20, $stack27;
        boolean $stack21, l0#2;
        avrora.sim.mcu.Timer8Bit$ControlRegister l0#1;

        l0#1 := @this: avrora.sim.mcu.Timer8Bit$ControlRegister;

        $stack2 = l0#1.<avrora.sim.mcu.Timer8Bit$ControlRegister: avrora.sim.mcu.Timer8Bit this$0>;

        $stack3 = $stack2.<avrora.sim.mcu.Timer8Bit: avrora.sim.mcu.Timer8Bit$TCNTnRegister TCNTn_reg>;

        $stack4 = virtualinvoke $stack3.<avrora.sim.mcu.Timer8Bit$TCNTnRegister: byte read()>();

        $stack7 = $stack4 & 255;

        $stack5 = l0#1.<avrora.sim.mcu.Timer8Bit$ControlRegister: avrora.sim.mcu.Timer8Bit this$0>;

        $stack6 = $stack5.<avrora.sim.mcu.Timer8Bit: avrora.sim.mcu.Timer8Bit$BufferedRegister OCRn_reg>;

        $stack8 = virtualinvoke $stack6.<avrora.sim.mcu.Timer8Bit$BufferedRegister: byte read()>();

        $stack9 = $stack8 & 255;

        if $stack7 != $stack9 goto label7;

        $stack10 = l0#1.<avrora.sim.mcu.Timer8Bit$ControlRegister: avrora.sim.state.RegisterView COMn>;

        $stack11 = interfaceinvoke $stack10.<avrora.sim.state.RegisterView: int getValue()>();

        tableswitch($stack11)
        {
            case 1: goto label1;
            case 2: goto label5;
            case 3: goto label6;
            default: goto label7;
        };

     label1:
        $stack16 = l0#1.<avrora.sim.mcu.Timer8Bit$ControlRegister: avrora.sim.state.RegisterView WGMn>;

        $stack17 = interfaceinvoke $stack16.<avrora.sim.state.RegisterView: int getValue()>();

        if $stack17 == 0 goto label2;

        $stack24 = l0#1.<avrora.sim.mcu.Timer8Bit$ControlRegister: avrora.sim.state.RegisterView WGMn>;

        $stack25 = interfaceinvoke $stack24.<avrora.sim.state.RegisterView: int getValue()>();

        if $stack25 != 2 goto label7;

     label2:
        $stack18 = l0#1.<avrora.sim.mcu.Timer8Bit$ControlRegister: avrora.sim.mcu.Timer8Bit this$0>;

        $stack27 = $stack18.<avrora.sim.mcu.Timer8Bit: avrora.sim.mcu.DefaultMCU$Pin outputComparePin>;

        $stack19 = l0#1.<avrora.sim.mcu.Timer8Bit$ControlRegister: avrora.sim.mcu.Timer8Bit this$0>;

        $stack20 = $stack19.<avrora.sim.mcu.Timer8Bit: avrora.sim.mcu.DefaultMCU$Pin outputComparePin>;

        $stack21 = virtualinvoke $stack20.<avrora.sim.mcu.DefaultMCU$Pin: boolean read()>();

        if $stack21 != 0 goto label3;

        l0#2 = 1;

        goto label4;

     label3:
        l0#2 = 0;

     label4:
        virtualinvoke $stack27.<avrora.sim.mcu.DefaultMCU$Pin: void write(boolean)>(l0#2);

        goto label7;

     label5:
        $stack14 = l0#1.<avrora.sim.mcu.Timer8Bit$ControlRegister: avrora.sim.mcu.Timer8Bit this$0>;

        $stack15 = $stack14.<avrora.sim.mcu.Timer8Bit: avrora.sim.mcu.DefaultMCU$Pin outputComparePin>;

        virtualinvoke $stack15.<avrora.sim.mcu.DefaultMCU$Pin: void write(boolean)>(0);

        goto label7;

     label6:
        $stack12 = l0#1.<avrora.sim.mcu.Timer8Bit$ControlRegister: avrora.sim.mcu.Timer8Bit this$0>;

        $stack13 = $stack12.<avrora.sim.mcu.Timer8Bit: avrora.sim.mcu.DefaultMCU$Pin outputComparePin>;

        virtualinvoke $stack13.<avrora.sim.mcu.DefaultMCU$Pin: void write(boolean)>(1);

     label7:
        return;
    }

    public void write(byte)
    {
        avrora.sim.mcu.Timer8Bit$ControlRegister l0;
        int $stack3, $stack5, $stack7, $stack9, $stack10, $stack14, $stack19, $stack21, $stack24, $stack28, $stack34, $stack43, $stack47, $stack50, $stack56, $stack76;
        byte $stack4, l1#1;
        avrora.sim.state.RegisterView $stack6, $stack8;
        avrora.sim.mcu.Timer8Bit $stack11, $stack13, $stack17, $stack18, $stack22, $stack23, $stack25, $stack27, $stack29, $stack33, $stack38, $stack42, $stack46, $stack53, $stack54, $stack55, $stack61, $stack62;
        avrora.sim.Simulator$Event $stack12, $stack16, $stack58, $stack63;
        avrora.sim.Simulator$Event[] $stack15;
        int[] $stack20;
        avrora.sim.output.SimPrinter $stack26, $stack31, $stack40;
        java.lang.StringBuilder $stack30, $stack32, $stack35, $stack36, $stack39, $stack41, $stack44, $stack45, $stack48, $stack49, $stack51;
        java.lang.String $stack37, $stack52;
        long $stack57;
        avrora.sim.clock.Clock $stack59, $stack64;

        l0 := @this: avrora.sim.mcu.Timer8Bit$ControlRegister;

        l1#1 := @parameter0: byte;

        $stack3 = l1#1 & 127;

        $stack4 = (byte) $stack3;

        l0.<avrora.sim.mcu.Timer8Bit$ControlRegister: byte value> = $stack4;

        $stack5 = l1#1 & 128;

        if $stack5 == 0 goto label1;

        specialinvoke l0.<avrora.sim.mcu.Timer8Bit$ControlRegister: void forcedOutputCompare()>();

     label1:
        $stack6 = l0.<avrora.sim.mcu.Timer8Bit$ControlRegister: avrora.sim.state.RegisterView WGMn>;

        $stack7 = interfaceinvoke $stack6.<avrora.sim.state.RegisterView: int getValue()>();

        $stack8 = l0.<avrora.sim.mcu.Timer8Bit$ControlRegister: avrora.sim.state.RegisterView CSn>;

        $stack9 = interfaceinvoke $stack8.<avrora.sim.state.RegisterView: int getValue()>();

        $stack10 = l0.<avrora.sim.mcu.Timer8Bit$ControlRegister: int mode>;

        if $stack7 != $stack10 goto label2;

        $stack76 = l0.<avrora.sim.mcu.Timer8Bit$ControlRegister: int scale>;

        if $stack9 == $stack76 goto label6;

     label2:
        $stack11 = l0.<avrora.sim.mcu.Timer8Bit$ControlRegister: avrora.sim.mcu.Timer8Bit this$0>;

        $stack12 = $stack11.<avrora.sim.mcu.Timer8Bit: avrora.sim.Simulator$Event ticker>;

        if $stack12 == null goto label3;

        $stack61 = l0.<avrora.sim.mcu.Timer8Bit$ControlRegister: avrora.sim.mcu.Timer8Bit this$0>;

        $stack64 = $stack61.<avrora.sim.mcu.Timer8Bit: avrora.sim.clock.Clock timerClock>;

        $stack62 = l0.<avrora.sim.mcu.Timer8Bit$ControlRegister: avrora.sim.mcu.Timer8Bit this$0>;

        $stack63 = $stack62.<avrora.sim.mcu.Timer8Bit: avrora.sim.Simulator$Event ticker>;

        virtualinvoke $stack64.<avrora.sim.clock.Clock: void removeEvent(avrora.sim.Simulator$Event)>($stack63);

     label3:
        l0.<avrora.sim.mcu.Timer8Bit$ControlRegister: int mode> = $stack7;

        l0.<avrora.sim.mcu.Timer8Bit$ControlRegister: int scale> = $stack9;

        $stack17 = l0.<avrora.sim.mcu.Timer8Bit$ControlRegister: avrora.sim.mcu.Timer8Bit this$0>;

        $stack13 = l0.<avrora.sim.mcu.Timer8Bit$ControlRegister: avrora.sim.mcu.Timer8Bit this$0>;

        $stack15 = $stack13.<avrora.sim.mcu.Timer8Bit: avrora.sim.Simulator$Event[] tickers>;

        $stack14 = l0.<avrora.sim.mcu.Timer8Bit$ControlRegister: int mode>;

        $stack16 = $stack15[$stack14];

        $stack17.<avrora.sim.mcu.Timer8Bit: avrora.sim.Simulator$Event ticker> = $stack16;

        $stack22 = l0.<avrora.sim.mcu.Timer8Bit$ControlRegister: avrora.sim.mcu.Timer8Bit this$0>;

        $stack18 = l0.<avrora.sim.mcu.Timer8Bit$ControlRegister: avrora.sim.mcu.Timer8Bit this$0>;

        $stack20 = $stack18.<avrora.sim.mcu.Timer8Bit: int[] periods>;

        $stack19 = l0.<avrora.sim.mcu.Timer8Bit$ControlRegister: int scale>;

        $stack21 = $stack20[$stack19];

        $stack22.<avrora.sim.mcu.Timer8Bit: int period> = $stack21;

        $stack23 = l0.<avrora.sim.mcu.Timer8Bit$ControlRegister: avrora.sim.mcu.Timer8Bit this$0>;

        $stack24 = $stack23.<avrora.sim.mcu.Timer8Bit: int period>;

        if $stack24 == 0 goto label4;

        $stack53 = l0.<avrora.sim.mcu.Timer8Bit$ControlRegister: avrora.sim.mcu.Timer8Bit this$0>;

        $stack59 = $stack53.<avrora.sim.mcu.Timer8Bit: avrora.sim.clock.Clock timerClock>;

        $stack54 = l0.<avrora.sim.mcu.Timer8Bit$ControlRegister: avrora.sim.mcu.Timer8Bit this$0>;

        $stack58 = $stack54.<avrora.sim.mcu.Timer8Bit: avrora.sim.Simulator$Event ticker>;

        $stack55 = l0.<avrora.sim.mcu.Timer8Bit$ControlRegister: avrora.sim.mcu.Timer8Bit this$0>;

        $stack56 = $stack55.<avrora.sim.mcu.Timer8Bit: int period>;

        $stack57 = (long) $stack56;

        virtualinvoke $stack59.<avrora.sim.clock.Clock: void insertEvent(avrora.sim.Simulator$Event,long)>($stack58, $stack57);

     label4:
        $stack25 = l0.<avrora.sim.mcu.Timer8Bit$ControlRegister: avrora.sim.mcu.Timer8Bit this$0>;

        $stack26 = $stack25.<avrora.sim.mcu.Timer8Bit: avrora.sim.output.SimPrinter devicePrinter>;

        if $stack26 == null goto label6;

        $stack27 = l0.<avrora.sim.mcu.Timer8Bit$ControlRegister: avrora.sim.mcu.Timer8Bit this$0>;

        $stack28 = $stack27.<avrora.sim.mcu.Timer8Bit: int period>;

        if $stack28 == 0 goto label5;

        $stack38 = l0.<avrora.sim.mcu.Timer8Bit$ControlRegister: avrora.sim.mcu.Timer8Bit this$0>;

        $stack40 = $stack38.<avrora.sim.mcu.Timer8Bit: avrora.sim.output.SimPrinter devicePrinter>;

        $stack39 = new java.lang.StringBuilder;

        specialinvoke $stack39.<java.lang.StringBuilder: void <init>()>();

        $stack41 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timer");

        $stack42 = l0.<avrora.sim.mcu.Timer8Bit$ControlRegister: avrora.sim.mcu.Timer8Bit this$0>;

        $stack43 = $stack42.<avrora.sim.mcu.Timer8Bit: int n>;

        $stack44 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack43);

        $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" enabled: period = ");

        $stack46 = l0.<avrora.sim.mcu.Timer8Bit$ControlRegister: avrora.sim.mcu.Timer8Bit this$0>;

        $stack47 = $stack46.<avrora.sim.mcu.Timer8Bit: int period>;

        $stack48 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack47);

        $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mode = ");

        $stack50 = l0.<avrora.sim.mcu.Timer8Bit$ControlRegister: int mode>;

        $stack51 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack50);

        $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack40.<avrora.sim.output.SimPrinter: void println(java.lang.String)>($stack52);

        goto label6;

     label5:
        $stack29 = l0.<avrora.sim.mcu.Timer8Bit$ControlRegister: avrora.sim.mcu.Timer8Bit this$0>;

        $stack31 = $stack29.<avrora.sim.mcu.Timer8Bit: avrora.sim.output.SimPrinter devicePrinter>;

        $stack30 = new java.lang.StringBuilder;

        specialinvoke $stack30.<java.lang.StringBuilder: void <init>()>();

        $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timer");

        $stack33 = l0.<avrora.sim.mcu.Timer8Bit$ControlRegister: avrora.sim.mcu.Timer8Bit this$0>;

        $stack34 = $stack33.<avrora.sim.mcu.Timer8Bit: int n>;

        $stack35 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack34);

        $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" disabled");

        $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack31.<avrora.sim.output.SimPrinter: void println(java.lang.String)>($stack37);

     label6:
        return;
    }

    public static void <clinit>()
    {
        <avrora.sim.mcu.Timer8Bit$ControlRegister: int CSn0> = 0;

        <avrora.sim.mcu.Timer8Bit$ControlRegister: int CSn1> = 1;

        <avrora.sim.mcu.Timer8Bit$ControlRegister: int CSn2> = 2;

        <avrora.sim.mcu.Timer8Bit$ControlRegister: int WGMn1> = 3;

        <avrora.sim.mcu.Timer8Bit$ControlRegister: int COMn0> = 4;

        <avrora.sim.mcu.Timer8Bit$ControlRegister: int COMn1> = 5;

        <avrora.sim.mcu.Timer8Bit$ControlRegister: int WGMn0> = 6;

        <avrora.sim.mcu.Timer8Bit$ControlRegister: int FOCn> = 7;

        return;
    }
}
