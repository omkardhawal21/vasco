public class avrora.sim.radio.CC1000Radio extends java.lang.Object implements avrora.sim.radio.Radio
{
    private static final double FXOSC_FREQUENCY;
    public static final int MAIN;
    public static final int FREQ_2A;
    public static final int FREQ_1A;
    public static final int FREQ_0A;
    public static final int FREQ_2B;
    public static final int FREQ_1B;
    public static final int FREQ_0B;
    public static final int FSEP1;
    public static final int FSEP0;
    public static final int CURRENT;
    public static final int FRONT_END;
    public static final int PA_POW;
    public static final int PLL;
    public static final int LOCK;
    public static final int CAL;
    public static final int MODEM2;
    public static final int MODEM1;
    public static final int MODEM0;
    public static final int MATCH;
    public static final int FSCTRL;
    public static final int PRESCALER;
    public static final int TEST6;
    public static final int TEST5;
    public static final int TEST4;
    public static final int TEST3;
    public static final int TEST2;
    public static final int TEST1;
    public static final int TEST0;
    protected static final java.lang.String[] allModeNames;
    protected static final int[][] ttm;
    protected avrora.sim.radio.CC1000Radio$RadioRegister[] registers;
    protected final avrora.sim.radio.CC1000Radio$MainRegister MAIN_reg;
    protected final avrora.sim.radio.CC1000Radio$FrequencyRegister FREQ_A_reg;
    protected final avrora.sim.radio.CC1000Radio$FrequencyRegister FREQ_B_reg;
    protected final avrora.sim.radio.CC1000Radio$FrequencySeparationRegister FSEP_reg;
    protected final avrora.sim.radio.CC1000Radio$CurrentRegister CURRENT_reg;
    protected final avrora.sim.radio.CC1000Radio$FrontEndRegister FRONT_END_reg;
    protected final avrora.sim.radio.CC1000Radio$PA_POWRegister PA_POW_reg;
    protected final avrora.sim.radio.CC1000Radio$PLLRegister PLL_reg;
    protected final avrora.sim.radio.CC1000Radio$LockRegister LOCK_reg;
    protected final avrora.sim.radio.CC1000Radio$CALRegister CAL_reg;
    protected final avrora.sim.radio.CC1000Radio$Modem2Register MODEM_2_reg;
    protected final avrora.sim.radio.CC1000Radio$Modem1Register MODEM_1_reg;
    protected final avrora.sim.radio.CC1000Radio$Modem0Register MODEM_0_reg;
    protected final avrora.sim.radio.CC1000Radio$MatchRegister MATCH_reg;
    protected final avrora.sim.radio.CC1000Radio$FSCTRLRegister FSCTRL_reg;
    protected final avrora.sim.radio.CC1000Radio$PrescalerRegister PRESCALER_reg;
    protected final avrora.sim.output.SimPrinter radioPrinter;
    protected final long xoscFrequency;
    protected avrora.sim.radio.CC1000Radio$FrequencyRegister currentFrequencyRegister;
    protected final avrora.sim.mcu.Microcontroller mcu;
    protected final avrora.sim.Simulator sim;
    protected final avrora.sim.clock.Clock clock;
    protected final avrora.sim.FiniteStateMachine stateMachine;
    public final avrora.sim.radio.CC1000Radio$SerialConfigurationInterface config;
    static final int[] VCO_CURRENT;
    static final double[] LO_DRIVE;
    static final int[] PA_DRIVE;
    static final int[] BUF_CURRENT;
    static final double[] LNA_CURRENT;
    static final int[] SETS_LOCK_THRESHOLD;
    static final int[] RESET_LOCK_THRESHOLD;
    static final int[] SETTLING;
    static final int[] BAUDRATE;
    static final int[] XOSC_FREQ;
    static final double[] PRE_SWING;
    static final double[] PRE_CURRENT;
    protected avrora.sim.radio.Medium medium;
    protected avrora.sim.radio.CC1000Radio$Transmitter transmitter;
    protected avrora.sim.radio.CC1000Radio$Receiver receiver;
    protected avrora.sim.radio.CC1000Radio$SPITicker ticker;
    protected avrora.sim.radio.CC1000Radio$RSSIOutput rssiOutput;
    long spiTick;
    byte txBuffer;
    int rxBuffer;

    static void <clinit>()
    {
        java.lang.String[] $stack1, $stack2;
        int $stack3;
        int[][] $stack4;
        int[] l0#1, l0#3, l0#4, l0#6, l0#7, l0#8, l0#9, l0#10;
        double[] l0#2, l0#5, l0#11, l0#12;

        <avrora.sim.radio.CC1000Radio: int TEST0> = 70;

        <avrora.sim.radio.CC1000Radio: int TEST1> = 69;

        <avrora.sim.radio.CC1000Radio: int TEST2> = 68;

        <avrora.sim.radio.CC1000Radio: int TEST3> = 67;

        <avrora.sim.radio.CC1000Radio: int TEST4> = 66;

        <avrora.sim.radio.CC1000Radio: int TEST5> = 65;

        <avrora.sim.radio.CC1000Radio: int TEST6> = 64;

        <avrora.sim.radio.CC1000Radio: int PRESCALER> = 28;

        <avrora.sim.radio.CC1000Radio: int FSCTRL> = 19;

        <avrora.sim.radio.CC1000Radio: int MATCH> = 18;

        <avrora.sim.radio.CC1000Radio: int MODEM0> = 17;

        <avrora.sim.radio.CC1000Radio: int MODEM1> = 16;

        <avrora.sim.radio.CC1000Radio: int MODEM2> = 15;

        <avrora.sim.radio.CC1000Radio: int CAL> = 14;

        <avrora.sim.radio.CC1000Radio: int LOCK> = 13;

        <avrora.sim.radio.CC1000Radio: int PLL> = 12;

        <avrora.sim.radio.CC1000Radio: int PA_POW> = 11;

        <avrora.sim.radio.CC1000Radio: int FRONT_END> = 10;

        <avrora.sim.radio.CC1000Radio: int CURRENT> = 9;

        <avrora.sim.radio.CC1000Radio: int FSEP0> = 8;

        <avrora.sim.radio.CC1000Radio: int FSEP1> = 7;

        <avrora.sim.radio.CC1000Radio: int FREQ_0B> = 6;

        <avrora.sim.radio.CC1000Radio: int FREQ_1B> = 5;

        <avrora.sim.radio.CC1000Radio: int FREQ_2B> = 4;

        <avrora.sim.radio.CC1000Radio: int FREQ_0A> = 3;

        <avrora.sim.radio.CC1000Radio: int FREQ_1A> = 2;

        <avrora.sim.radio.CC1000Radio: int FREQ_2A> = 1;

        <avrora.sim.radio.CC1000Radio: int MAIN> = 0;

        <avrora.sim.radio.CC1000Radio: double FXOSC_FREQUENCY> = 1.47456E7;

        $stack1 = staticinvoke <avrora.sim.radio.RadioEnergy: java.lang.String[] allModeNames()>();

        <avrora.sim.radio.CC1000Radio: java.lang.String[] allModeNames> = $stack1;

        $stack2 = <avrora.sim.radio.CC1000Radio: java.lang.String[] allModeNames>;

        $stack3 = lengthof $stack2;

        $stack4 = staticinvoke <avrora.sim.FiniteStateMachine: int[][] buildSparseTTM(int,int)>($stack3, 0);

        <avrora.sim.radio.CC1000Radio: int[][] ttm> = $stack4;

        l0#1 = newarray (int)[16];

        l0#1[0] = 150;

        l0#1[1] = 250;

        l0#1[2] = 350;

        l0#1[3] = 450;

        l0#1[4] = 950;

        l0#1[5] = 1050;

        l0#1[6] = 1150;

        l0#1[7] = 1250;

        l0#1[8] = 1450;

        l0#1[9] = 1550;

        l0#1[10] = 1650;

        l0#1[11] = 1750;

        l0#1[12] = 2250;

        l0#1[13] = 2350;

        l0#1[14] = 2450;

        l0#1[15] = 2550;

        <avrora.sim.radio.CC1000Radio: int[] VCO_CURRENT> = l0#1;

        l0#2 = newarray (double)[4];

        l0#2[0] = 0.5;

        l0#2[1] = 1.0;

        l0#2[2] = 1.5;

        l0#2[3] = 2.0;

        <avrora.sim.radio.CC1000Radio: double[] LO_DRIVE> = l0#2;

        l0#3 = newarray (int)[4];

        l0#3[0] = 1;

        l0#3[1] = 2;

        l0#3[2] = 3;

        l0#3[3] = 4;

        <avrora.sim.radio.CC1000Radio: int[] PA_DRIVE> = l0#3;

        l0#4 = newarray (int)[2];

        l0#4[0] = 520;

        l0#4[1] = 690;

        <avrora.sim.radio.CC1000Radio: int[] BUF_CURRENT> = l0#4;

        l0#5 = newarray (double)[4];

        l0#5[0] = 0.8;

        l0#5[1] = 1.4;

        l0#5[2] = 1.8;

        l0#5[3] = 2.2;

        <avrora.sim.radio.CC1000Radio: double[] LNA_CURRENT> = l0#5;

        l0#6 = newarray (int)[2];

        l0#6[0] = 127;

        l0#6[1] = 31;

        <avrora.sim.radio.CC1000Radio: int[] SETS_LOCK_THRESHOLD> = l0#6;

        l0#7 = newarray (int)[2];

        l0#7[0] = 111;

        l0#7[1] = 15;

        <avrora.sim.radio.CC1000Radio: int[] RESET_LOCK_THRESHOLD> = l0#7;

        l0#8 = newarray (int)[4];

        l0#8[0] = 11;

        l0#8[1] = 22;

        l0#8[2] = 43;

        l0#8[3] = 86;

        <avrora.sim.radio.CC1000Radio: int[] SETTLING> = l0#8;

        l0#9 = newarray (int)[8];

        l0#9[0] = 600;

        l0#9[1] = 1200;

        l0#9[2] = 2400;

        l0#9[3] = 4800;

        l0#9[4] = 9600;

        l0#9[5] = 19200;

        l0#9[6] = 0;

        l0#9[7] = 0;

        <avrora.sim.radio.CC1000Radio: int[] BAUDRATE> = l0#9;

        l0#10 = newarray (int)[4];

        l0#10[0] = 3686400;

        l0#10[1] = 7372800;

        l0#10[2] = 1105920;

        l0#10[3] = 1474560;

        <avrora.sim.radio.CC1000Radio: int[] XOSC_FREQ> = l0#10;

        l0#11 = newarray (double)[4];

        l0#11[0] = 1.0;

        l0#11[1] = 0.6666666666666666;

        l0#11[2] = 2.3333333333333335;

        l0#11[3] = 1.6666666666666667;

        <avrora.sim.radio.CC1000Radio: double[] PRE_SWING> = l0#11;

        l0#12 = newarray (double)[4];

        l0#12[0] = 1.0;

        l0#12[1] = 0.6666666666666666;

        l0#12[2] = 0.5;

        l0#12[3] = 0.4;

        <avrora.sim.radio.CC1000Radio: double[] PRE_CURRENT> = l0#12;

        return;
    }

    public void <init>(avrora.sim.mcu.Microcontroller, long)
    {
        avrora.sim.radio.CC1000Radio l0;
        avrora.sim.radio.CC1000Radio$RadioRegister[] $stack5, $stack11, $stack13, $stack17, $stack20, $stack23, $stack27, $stack30, $stack33, $stack37, $stack40, $stack41, $stack42, $stack43, $stack44, $stack45, $stack46, $stack47, $stack48, $stack49, $stack50, $stack51, $stack52, $stack74;
        long l2;
        avrora.sim.Simulator $stack6, $stack7, $stack9, $stack54, $stack58;
        avrora.sim.clock.MainClock $stack8, $stack55;
        avrora.sim.output.SimPrinter $stack10;
        int $stack12, l4#2;
        avrora.sim.radio.CC1000Radio$FrequencyRegister $stack14, $stack15, $stack18, $stack21, $stack24, $stack25, $stack28, $stack31;
        avrora.sim.radio.CC1000Radio$FrequencyRegister$FrequencySubRegister $stack16, $stack19, $stack22, $stack26, $stack29, $stack32;
        avrora.sim.radio.CC1000Radio$FrequencySeparationRegister $stack34, $stack35, $stack38;
        avrora.sim.radio.CC1000Radio$FrequencySeparationRegister$SubRegister $stack36, $stack39;
        avrora.sim.FiniteStateMachine $stack53, $stack62;
        int[][] $stack56;
        java.lang.String[] $stack57;
        avrora.sim.energy.Energy $stack59;
        double[] $stack61;
        avrora.sim.energy.EnergyControl $stack63;
        avrora.sim.mcu.ATMegaFamily $stack64;
        avrora.sim.radio.CC1000Radio$SPITicker $stack65, l1#16;
        avrora.sim.mcu.AtmelInternalDevice $stack66, $stack69;
        avrora.sim.radio.Medium $stack67;
        avrora.sim.radio.CC1000Radio$RSSIOutput $stack68, $stack70;
        avrora.sim.mcu.ADC $stack71;
        avrora.sim.radio.CC1000Radio$SerialConfigurationInterface $stack72;
        avrora.sim.radio.CC1000Radio$DummyRegister $stack73;
        avrora.sim.mcu.Microcontroller l1#1;
        avrora.sim.radio.CC1000Radio$MainRegister l4#3;
        avrora.sim.radio.CC1000Radio$CurrentRegister l4#4;
        avrora.sim.radio.CC1000Radio$FrontEndRegister l4#5;
        avrora.sim.radio.CC1000Radio$PA_POWRegister l4#6;
        avrora.sim.radio.CC1000Radio$PLLRegister l4#7;
        avrora.sim.radio.CC1000Radio$LockRegister l4#8;
        avrora.sim.radio.CC1000Radio$CALRegister l4#9;
        avrora.sim.radio.CC1000Radio$Modem2Register l4#10;
        avrora.sim.radio.CC1000Radio$Modem1Register l4#11;
        avrora.sim.radio.CC1000Radio$Modem0Register l4#12;
        avrora.sim.radio.CC1000Radio$MatchRegister l4#13;
        avrora.sim.radio.CC1000Radio$FSCTRLRegister l4#14;
        avrora.sim.radio.CC1000Radio$PrescalerRegister l4#15;
        avrora.sim.mcu.SPIDevice l4#17;

        l0 := @this: avrora.sim.radio.CC1000Radio;

        l1#1 := @parameter0: avrora.sim.mcu.Microcontroller;

        l2 := @parameter1: long;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        $stack5 = newarray (avrora.sim.radio.CC1000Radio$RadioRegister)[71];

        l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$RadioRegister[] registers> = $stack5;

        l0.<avrora.sim.radio.CC1000Radio: long xoscFrequency> = l2;

        l0.<avrora.sim.radio.CC1000Radio: avrora.sim.mcu.Microcontroller mcu> = l1#1;

        $stack6 = interfaceinvoke l1#1.<avrora.sim.mcu.Microcontroller: avrora.sim.Simulator getSimulator()>();

        l0.<avrora.sim.radio.CC1000Radio: avrora.sim.Simulator sim> = $stack6;

        $stack7 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.Simulator sim>;

        $stack8 = virtualinvoke $stack7.<avrora.sim.Simulator: avrora.sim.clock.MainClock getClock()>();

        l0.<avrora.sim.radio.CC1000Radio: avrora.sim.clock.Clock clock> = $stack8;

        $stack9 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.Simulator sim>;

        $stack10 = virtualinvoke $stack9.<avrora.sim.Simulator: avrora.sim.output.SimPrinter getPrinter(java.lang.String)>("radio.cc1000");

        l0.<avrora.sim.radio.CC1000Radio: avrora.sim.output.SimPrinter radioPrinter> = $stack10;

        l4#2 = 20;

     label1:
        $stack11 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$RadioRegister[] registers>;

        $stack12 = lengthof $stack11;

        if l4#2 >= $stack12 goto label2;

        $stack74 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$RadioRegister[] registers>;

        $stack73 = new avrora.sim.radio.CC1000Radio$DummyRegister;

        specialinvoke $stack73.<avrora.sim.radio.CC1000Radio$DummyRegister: void <init>(avrora.sim.radio.CC1000Radio,int)>(l0, l4#2);

        $stack74[l4#2] = $stack73;

        l4#2 = l4#2 + 1;

        goto label1;

     label2:
        $stack13 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$RadioRegister[] registers>;

        l4#3 = new avrora.sim.radio.CC1000Radio$MainRegister;

        specialinvoke l4#3.<avrora.sim.radio.CC1000Radio$MainRegister: void <init>(avrora.sim.radio.CC1000Radio)>(l0);

        l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$MainRegister MAIN_reg> = l4#3;

        $stack13[0] = l4#3;

        $stack14 = new avrora.sim.radio.CC1000Radio$FrequencyRegister;

        specialinvoke $stack14.<avrora.sim.radio.CC1000Radio$FrequencyRegister: void <init>(avrora.sim.radio.CC1000Radio,java.lang.String)>(l0, "A");

        l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$FrequencyRegister FREQ_A_reg> = $stack14;

        $stack17 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$RadioRegister[] registers>;

        $stack15 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$FrequencyRegister FREQ_A_reg>;

        $stack16 = $stack15.<avrora.sim.radio.CC1000Radio$FrequencyRegister: avrora.sim.radio.CC1000Radio$FrequencyRegister$FrequencySubRegister reg2>;

        $stack17[1] = $stack16;

        $stack20 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$RadioRegister[] registers>;

        $stack18 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$FrequencyRegister FREQ_A_reg>;

        $stack19 = $stack18.<avrora.sim.radio.CC1000Radio$FrequencyRegister: avrora.sim.radio.CC1000Radio$FrequencyRegister$FrequencySubRegister reg1>;

        $stack20[2] = $stack19;

        $stack23 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$RadioRegister[] registers>;

        $stack21 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$FrequencyRegister FREQ_A_reg>;

        $stack22 = $stack21.<avrora.sim.radio.CC1000Radio$FrequencyRegister: avrora.sim.radio.CC1000Radio$FrequencyRegister$FrequencySubRegister reg0>;

        $stack23[3] = $stack22;

        $stack24 = new avrora.sim.radio.CC1000Radio$FrequencyRegister;

        specialinvoke $stack24.<avrora.sim.radio.CC1000Radio$FrequencyRegister: void <init>(avrora.sim.radio.CC1000Radio,java.lang.String)>(l0, "B");

        l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$FrequencyRegister FREQ_B_reg> = $stack24;

        $stack27 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$RadioRegister[] registers>;

        $stack25 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$FrequencyRegister FREQ_B_reg>;

        $stack26 = $stack25.<avrora.sim.radio.CC1000Radio$FrequencyRegister: avrora.sim.radio.CC1000Radio$FrequencyRegister$FrequencySubRegister reg2>;

        $stack27[4] = $stack26;

        $stack30 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$RadioRegister[] registers>;

        $stack28 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$FrequencyRegister FREQ_B_reg>;

        $stack29 = $stack28.<avrora.sim.radio.CC1000Radio$FrequencyRegister: avrora.sim.radio.CC1000Radio$FrequencyRegister$FrequencySubRegister reg1>;

        $stack30[5] = $stack29;

        $stack33 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$RadioRegister[] registers>;

        $stack31 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$FrequencyRegister FREQ_B_reg>;

        $stack32 = $stack31.<avrora.sim.radio.CC1000Radio$FrequencyRegister: avrora.sim.radio.CC1000Radio$FrequencyRegister$FrequencySubRegister reg0>;

        $stack33[6] = $stack32;

        $stack34 = new avrora.sim.radio.CC1000Radio$FrequencySeparationRegister;

        specialinvoke $stack34.<avrora.sim.radio.CC1000Radio$FrequencySeparationRegister: void <init>(avrora.sim.radio.CC1000Radio)>(l0);

        l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$FrequencySeparationRegister FSEP_reg> = $stack34;

        $stack37 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$RadioRegister[] registers>;

        $stack35 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$FrequencySeparationRegister FSEP_reg>;

        $stack36 = $stack35.<avrora.sim.radio.CC1000Radio$FrequencySeparationRegister: avrora.sim.radio.CC1000Radio$FrequencySeparationRegister$SubRegister reg1>;

        $stack37[7] = $stack36;

        $stack40 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$RadioRegister[] registers>;

        $stack38 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$FrequencySeparationRegister FSEP_reg>;

        $stack39 = $stack38.<avrora.sim.radio.CC1000Radio$FrequencySeparationRegister: avrora.sim.radio.CC1000Radio$FrequencySeparationRegister$SubRegister reg0>;

        $stack40[8] = $stack39;

        $stack41 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$RadioRegister[] registers>;

        l4#4 = new avrora.sim.radio.CC1000Radio$CurrentRegister;

        specialinvoke l4#4.<avrora.sim.radio.CC1000Radio$CurrentRegister: void <init>(avrora.sim.radio.CC1000Radio)>(l0);

        l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$CurrentRegister CURRENT_reg> = l4#4;

        $stack41[9] = l4#4;

        $stack42 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$RadioRegister[] registers>;

        l4#5 = new avrora.sim.radio.CC1000Radio$FrontEndRegister;

        specialinvoke l4#5.<avrora.sim.radio.CC1000Radio$FrontEndRegister: void <init>(avrora.sim.radio.CC1000Radio)>(l0);

        l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$FrontEndRegister FRONT_END_reg> = l4#5;

        $stack42[10] = l4#5;

        $stack43 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$RadioRegister[] registers>;

        l4#6 = new avrora.sim.radio.CC1000Radio$PA_POWRegister;

        specialinvoke l4#6.<avrora.sim.radio.CC1000Radio$PA_POWRegister: void <init>(avrora.sim.radio.CC1000Radio)>(l0);

        l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$PA_POWRegister PA_POW_reg> = l4#6;

        $stack43[11] = l4#6;

        $stack44 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$RadioRegister[] registers>;

        l4#7 = new avrora.sim.radio.CC1000Radio$PLLRegister;

        specialinvoke l4#7.<avrora.sim.radio.CC1000Radio$PLLRegister: void <init>(avrora.sim.radio.CC1000Radio)>(l0);

        l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$PLLRegister PLL_reg> = l4#7;

        $stack44[12] = l4#7;

        $stack45 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$RadioRegister[] registers>;

        l4#8 = new avrora.sim.radio.CC1000Radio$LockRegister;

        specialinvoke l4#8.<avrora.sim.radio.CC1000Radio$LockRegister: void <init>(avrora.sim.radio.CC1000Radio)>(l0);

        l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$LockRegister LOCK_reg> = l4#8;

        $stack45[13] = l4#8;

        $stack46 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$RadioRegister[] registers>;

        l4#9 = new avrora.sim.radio.CC1000Radio$CALRegister;

        specialinvoke l4#9.<avrora.sim.radio.CC1000Radio$CALRegister: void <init>(avrora.sim.radio.CC1000Radio)>(l0);

        l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$CALRegister CAL_reg> = l4#9;

        $stack46[14] = l4#9;

        $stack47 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$RadioRegister[] registers>;

        l4#10 = new avrora.sim.radio.CC1000Radio$Modem2Register;

        specialinvoke l4#10.<avrora.sim.radio.CC1000Radio$Modem2Register: void <init>(avrora.sim.radio.CC1000Radio)>(l0);

        l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$Modem2Register MODEM_2_reg> = l4#10;

        $stack47[15] = l4#10;

        $stack48 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$RadioRegister[] registers>;

        l4#11 = new avrora.sim.radio.CC1000Radio$Modem1Register;

        specialinvoke l4#11.<avrora.sim.radio.CC1000Radio$Modem1Register: void <init>(avrora.sim.radio.CC1000Radio)>(l0);

        l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$Modem1Register MODEM_1_reg> = l4#11;

        $stack48[16] = l4#11;

        $stack49 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$RadioRegister[] registers>;

        l4#12 = new avrora.sim.radio.CC1000Radio$Modem0Register;

        specialinvoke l4#12.<avrora.sim.radio.CC1000Radio$Modem0Register: void <init>(avrora.sim.radio.CC1000Radio)>(l0);

        l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$Modem0Register MODEM_0_reg> = l4#12;

        $stack49[17] = l4#12;

        $stack50 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$RadioRegister[] registers>;

        l4#13 = new avrora.sim.radio.CC1000Radio$MatchRegister;

        specialinvoke l4#13.<avrora.sim.radio.CC1000Radio$MatchRegister: void <init>(avrora.sim.radio.CC1000Radio)>(l0);

        l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$MatchRegister MATCH_reg> = l4#13;

        $stack50[18] = l4#13;

        $stack51 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$RadioRegister[] registers>;

        l4#14 = new avrora.sim.radio.CC1000Radio$FSCTRLRegister;

        specialinvoke l4#14.<avrora.sim.radio.CC1000Radio$FSCTRLRegister: void <init>(avrora.sim.radio.CC1000Radio)>(l0);

        l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$FSCTRLRegister FSCTRL_reg> = l4#14;

        $stack51[19] = l4#14;

        $stack52 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$RadioRegister[] registers>;

        l4#15 = new avrora.sim.radio.CC1000Radio$PrescalerRegister;

        specialinvoke l4#15.<avrora.sim.radio.CC1000Radio$PrescalerRegister: void <init>(avrora.sim.radio.CC1000Radio)>(l0);

        l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$PrescalerRegister PRESCALER_reg> = l4#15;

        $stack52[28] = l4#15;

        $stack53 = new avrora.sim.FiniteStateMachine;

        $stack54 = interfaceinvoke l1#1.<avrora.sim.mcu.Microcontroller: avrora.sim.Simulator getSimulator()>();

        $stack55 = virtualinvoke $stack54.<avrora.sim.Simulator: avrora.sim.clock.MainClock getClock()>();

        $stack57 = <avrora.sim.radio.CC1000Radio: java.lang.String[] allModeNames>;

        $stack56 = <avrora.sim.radio.CC1000Radio: int[][] ttm>;

        specialinvoke $stack53.<avrora.sim.FiniteStateMachine: void <init>(avrora.sim.clock.Clock,int,java.lang.String[],int[][])>($stack55, 0, $stack57, $stack56);

        l0.<avrora.sim.radio.CC1000Radio: avrora.sim.FiniteStateMachine stateMachine> = $stack53;

        $stack59 = new avrora.sim.energy.Energy;

        $stack61 = <avrora.sim.radio.RadioEnergy: double[] modeAmpere>;

        $stack62 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.FiniteStateMachine stateMachine>;

        $stack58 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.Simulator sim>;

        $stack63 = virtualinvoke $stack58.<avrora.sim.Simulator: avrora.sim.energy.EnergyControl getEnergyControl()>();

        specialinvoke $stack59.<avrora.sim.energy.Energy: void <init>(java.lang.String,double[],avrora.sim.FiniteStateMachine,avrora.sim.energy.EnergyControl)>("Radio", $stack61, $stack62, $stack63);

        $stack64 = (avrora.sim.mcu.ATMegaFamily) l1#1;

        $stack65 = new avrora.sim.radio.CC1000Radio$SPITicker;

        specialinvoke $stack65.<avrora.sim.radio.CC1000Radio$SPITicker: void <init>(avrora.sim.radio.CC1000Radio,avrora.sim.radio.CC1000Radio$1)>(l0, null);

        l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$SPITicker ticker> = $stack65;

        l1#16 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$SPITicker ticker>;

        $stack66 = virtualinvoke $stack64.<avrora.sim.mcu.ATMegaFamily: avrora.sim.mcu.AtmelInternalDevice getDevice(java.lang.String)>("spi");

        l4#17 = (avrora.sim.mcu.SPIDevice) $stack66;

        l1#16.<avrora.sim.radio.CC1000Radio$SPITicker: avrora.sim.mcu.SPIDevice spiDevice> = l4#17;

        $stack67 = staticinvoke <avrora.sim.radio.CC1000Radio: avrora.sim.radio.Medium createMedium(avrora.sim.clock.Synchronizer,avrora.sim.radio.Medium$Arbitrator)>(null, null);

        virtualinvoke l0.<avrora.sim.radio.CC1000Radio: void setMedium(avrora.sim.radio.Medium)>($stack67);

        $stack68 = new avrora.sim.radio.CC1000Radio$RSSIOutput;

        specialinvoke $stack68.<avrora.sim.radio.CC1000Radio$RSSIOutput: void <init>(avrora.sim.radio.CC1000Radio,avrora.sim.radio.CC1000Radio$1)>(l0, null);

        l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$RSSIOutput rssiOutput> = $stack68;

        $stack69 = virtualinvoke $stack64.<avrora.sim.mcu.ATMegaFamily: avrora.sim.mcu.AtmelInternalDevice getDevice(java.lang.String)>("adc");

        $stack71 = (avrora.sim.mcu.ADC) $stack69;

        $stack70 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$RSSIOutput rssiOutput>;

        virtualinvoke $stack71.<avrora.sim.mcu.ADC: void connectADCInput(avrora.sim.mcu.ADC$ADCInput,int)>($stack70, 0);

        $stack72 = new avrora.sim.radio.CC1000Radio$SerialConfigurationInterface;

        specialinvoke $stack72.<avrora.sim.radio.CC1000Radio$SerialConfigurationInterface: void <init>(avrora.sim.radio.CC1000Radio)>(l0);

        l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$SerialConfigurationInterface config> = $stack72;

        return;
    }

    public static avrora.sim.radio.Medium createMedium(avrora.sim.clock.Synchronizer, avrora.sim.radio.Medium$Arbitrator)
    {
        avrora.sim.radio.Medium $stack2;
        avrora.sim.clock.Synchronizer l0;
        avrora.sim.radio.Medium$Arbitrator l1;

        l0 := @parameter0: avrora.sim.clock.Synchronizer;

        l1 := @parameter1: avrora.sim.radio.Medium$Arbitrator;

        $stack2 = new avrora.sim.radio.Medium;

        specialinvoke $stack2.<avrora.sim.radio.Medium: void <init>(avrora.sim.clock.Synchronizer,avrora.sim.radio.Medium$Arbitrator,int,int,int,int)>(l0, l1, 19200, 4, 8, 1024);

        return $stack2;
    }

    public avrora.sim.FiniteStateMachine getFiniteStateMachine()
    {
        avrora.sim.radio.CC1000Radio l0;
        avrora.sim.FiniteStateMachine $stack1;

        l0 := @this: avrora.sim.radio.CC1000Radio;

        $stack1 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.FiniteStateMachine stateMachine>;

        return $stack1;
    }

    public double getFrequency()
    {
        avrora.sim.radio.CC1000Radio$PLLRegister $stack3;
        int $stack4, $stack9, l0#2;
        double $stack5, l1, $stack10, $stack11, $stack12;
        avrora.sim.radio.CC1000Radio$MainRegister $stack6;
        boolean $stack7;
        avrora.sim.radio.CC1000Radio$FrequencyRegister $stack8, $stack13;
        avrora.sim.radio.CC1000Radio l0#1;

        l0#1 := @this: avrora.sim.radio.CC1000Radio;

        $stack3 = l0#1.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$PLLRegister PLL_reg>;

        $stack4 = $stack3.<avrora.sim.radio.CC1000Radio$PLLRegister: int refDiv>;

        $stack5 = (double) $stack4;

        l1 = 1.47456E7 / $stack5;

        $stack6 = l0#1.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$MainRegister MAIN_reg>;

        $stack7 = $stack6.<avrora.sim.radio.CC1000Radio$MainRegister: boolean fReg>;

        if $stack7 != 0 goto label1;

        $stack13 = l0#1.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$FrequencyRegister FREQ_A_reg>;

        l0#2 = $stack13.<avrora.sim.radio.CC1000Radio$FrequencyRegister: int frequency>;

        goto label2;

     label1:
        $stack8 = l0#1.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$FrequencyRegister FREQ_B_reg>;

        l0#2 = $stack8.<avrora.sim.radio.CC1000Radio$FrequencyRegister: int frequency>;

     label2:
        $stack9 = l0#2 + 8192;

        $stack10 = (double) $stack9;

        $stack11 = l1 * $stack10;

        $stack12 = $stack11 / 1.6384E10;

        return $stack12;
    }

    public avrora.sim.radio.Medium getMedium()
    {
        avrora.sim.radio.CC1000Radio l0;
        avrora.sim.radio.Medium $stack1;

        l0 := @this: avrora.sim.radio.CC1000Radio;

        $stack1 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.Medium medium>;

        return $stack1;
    }

    public double getPower()
    {
        avrora.sim.radio.CC1000Radio l0;
        avrora.sim.radio.CC1000Radio$PA_POWRegister $stack3;
        int $stack4;
        byte $stack5;
        double $stack6, $stack7, l1#1, l1#2;

        l0 := @this: avrora.sim.radio.CC1000Radio;

        $stack3 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$PA_POWRegister PA_POW_reg>;

        $stack4 = virtualinvoke $stack3.<avrora.sim.radio.CC1000Radio$PA_POWRegister: int getPower()>();

        l1#1 = (double) $stack4;

        $stack5 = l1#1 cmpg 16.0;

        if $stack5 >= 0 goto label1;

        $stack7 = 0.12 * l1#1;

        l1#2 = $stack7 - 1.8;

        goto label2;

     label1:
        $stack6 = 0.00431 * l1#1;

        l1#2 = $stack6 - 0.06459;

     label2:
        return l1#2;
    }

    public avrora.sim.radio.Medium$Receiver getReceiver()
    {
        avrora.sim.radio.CC1000Radio l0;
        avrora.sim.radio.CC1000Radio$Receiver $stack1;

        l0 := @this: avrora.sim.radio.CC1000Radio;

        $stack1 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$Receiver receiver>;

        return $stack1;
    }

    public avrora.sim.Simulator getSimulator()
    {
        avrora.sim.radio.CC1000Radio l0;
        avrora.sim.Simulator $stack1;

        l0 := @this: avrora.sim.radio.CC1000Radio;

        $stack1 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.Simulator sim>;

        return $stack1;
    }

    public avrora.sim.radio.Medium$Transmitter getTransmitter()
    {
        avrora.sim.radio.CC1000Radio l0;
        avrora.sim.radio.CC1000Radio$Transmitter $stack1;

        l0 := @this: avrora.sim.radio.CC1000Radio;

        $stack1 = l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$Transmitter transmitter>;

        return $stack1;
    }

    public void setMedium(avrora.sim.radio.Medium)
    {
        avrora.sim.radio.CC1000Radio l0;
        avrora.sim.radio.Medium l1;
        avrora.sim.radio.CC1000Radio$Transmitter $stack2;
        avrora.sim.radio.CC1000Radio$Receiver $stack3;

        l0 := @this: avrora.sim.radio.CC1000Radio;

        l1 := @parameter0: avrora.sim.radio.Medium;

        l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.Medium medium> = l1;

        $stack2 = new avrora.sim.radio.CC1000Radio$Transmitter;

        specialinvoke $stack2.<avrora.sim.radio.CC1000Radio$Transmitter: void <init>(avrora.sim.radio.CC1000Radio,avrora.sim.radio.Medium)>(l0, l1);

        l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$Transmitter transmitter> = $stack2;

        $stack3 = new avrora.sim.radio.CC1000Radio$Receiver;

        specialinvoke $stack3.<avrora.sim.radio.CC1000Radio$Receiver: void <init>(avrora.sim.radio.CC1000Radio,avrora.sim.radio.Medium)>(l0, l1);

        l0.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$Receiver receiver> = $stack3;

        return;
    }
}
