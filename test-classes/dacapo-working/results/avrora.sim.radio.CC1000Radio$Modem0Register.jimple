public class avrora.sim.radio.CC1000Radio$Modem0Register extends avrora.sim.radio.CC1000Radio$RadioRegister
{
    int baudrate;
    int bitrate;
    static final int DATA_FORMAT_NRZ;
    static final int DATA_FORMAT_MANCHESTER;
    static final int DATA_FORMAT_UART;
    int dataFormat;
    int xoscFreqRange;
    final avrora.sim.radio.CC1000Radio this$0;

    void <init>(avrora.sim.radio.CC1000Radio)
    {
        avrora.sim.radio.CC1000Radio$Modem0Register l0;
        avrora.sim.radio.CC1000Radio l1;
        int[] $stack2;
        int $stack3;
        byte $stack4;

        l0 := @this: avrora.sim.radio.CC1000Radio$Modem0Register;

        l1 := @parameter0: avrora.sim.radio.CC1000Radio;

        l0.<avrora.sim.radio.CC1000Radio$Modem0Register: avrora.sim.radio.CC1000Radio this$0> = l1;

        specialinvoke l0.<avrora.sim.radio.CC1000Radio$RadioRegister: void <init>(avrora.sim.radio.CC1000Radio,java.lang.String,byte)>(l1, "MODEM0", 36);

        l0.<avrora.sim.radio.CC1000Radio$Modem0Register: int baudrate> = 2400;

        l0.<avrora.sim.radio.CC1000Radio$Modem0Register: int bitrate> = 1200;

        l0.<avrora.sim.radio.CC1000Radio$Modem0Register: int dataFormat> = 1;

        $stack2 = <avrora.sim.radio.CC1000Radio: int[] XOSC_FREQ>;

        $stack3 = $stack2[0];

        l0.<avrora.sim.radio.CC1000Radio$Modem0Register: int xoscFreqRange> = $stack3;

        $stack4 = l0.<avrora.sim.radio.CC1000Radio$Modem0Register: byte value>;

        virtualinvoke l0.<avrora.sim.radio.CC1000Radio$Modem0Register: void decode(byte)>($stack4);

        return;
    }

    private void calculateBaudRate(int, int)
    {
        int l1, $stack4, $stack7, l2, $stack14;
        avrora.sim.radio.CC1000Radio$Modem0Register l0;
        int[] $stack3, $stack6, $stack13;
        avrora.sim.radio.CC1000Radio $stack5;
        long $stack8, $stack9;
        byte $stack10;

        l0 := @this: avrora.sim.radio.CC1000Radio$Modem0Register;

        l1 := @parameter0: int;

        l2 := @parameter1: int;

        if l1 != 5 goto label3;

        $stack5 = l0.<avrora.sim.radio.CC1000Radio$Modem0Register: avrora.sim.radio.CC1000Radio this$0>;

        $stack9 = $stack5.<avrora.sim.radio.CC1000Radio: long xoscFrequency>;

        $stack6 = <avrora.sim.radio.CC1000Radio: int[] XOSC_FREQ>;

        $stack7 = $stack6[2];

        $stack8 = (long) $stack7;

        $stack10 = $stack9 cmp $stack8;

        if $stack10 <= 0 goto label3;

        if l2 != 0 goto label1;

        l0.<avrora.sim.radio.CC1000Radio$Modem0Register: int baudrate> = 76800;

        goto label4;

     label1:
        if l2 != 1 goto label2;

        l0.<avrora.sim.radio.CC1000Radio$Modem0Register: int baudrate> = 38400;

        goto label4;

     label2:
        $stack13 = <avrora.sim.radio.CC1000Radio: int[] BAUDRATE>;

        $stack14 = $stack13[l1];

        l0.<avrora.sim.radio.CC1000Radio$Modem0Register: int baudrate> = $stack14;

        goto label4;

     label3:
        $stack3 = <avrora.sim.radio.CC1000Radio: int[] BAUDRATE>;

        $stack4 = $stack3[l1];

        l0.<avrora.sim.radio.CC1000Radio$Modem0Register: int baudrate> = $stack4;

     label4:
        return;
    }

    protected void decode(byte)
    {
        avrora.sim.radio.CC1000Radio$Modem0Register l0;
        int $stack3, $stack4, $stack5, $stack6, $stack8, $stack9, $stack10, l1#2, l1#3;
        int[] $stack7;
        byte l1#1, l2#4;

        l0 := @this: avrora.sim.radio.CC1000Radio$Modem0Register;

        l1#1 := @parameter0: byte;

        $stack3 = l1#1 & 112;

        $stack6 = $stack3 >> 4;

        $stack4 = l1#1 & 12;

        $stack5 = $stack4 >> 2;

        l0.<avrora.sim.radio.CC1000Radio$Modem0Register: int dataFormat> = $stack5;

        $stack7 = <avrora.sim.radio.CC1000Radio: int[] XOSC_FREQ>;

        l1#2 = l1#1 & 3;

        $stack8 = $stack7[l1#2];

        l0.<avrora.sim.radio.CC1000Radio$Modem0Register: int xoscFreqRange> = $stack8;

        specialinvoke l0.<avrora.sim.radio.CC1000Radio$Modem0Register: void calculateBaudRate(int,int)>($stack6, l1#2);

        l1#3 = l0.<avrora.sim.radio.CC1000Radio$Modem0Register: int baudrate>;

        $stack9 = l0.<avrora.sim.radio.CC1000Radio$Modem0Register: int dataFormat>;

        if $stack9 != 1 goto label1;

        l2#4 = 2;

        goto label2;

     label1:
        l2#4 = 1;

     label2:
        $stack10 = l1#3 / l2#4;

        l0.<avrora.sim.radio.CC1000Radio$Modem0Register: int bitrate> = $stack10;

        return;
    }

    protected void printStatus()
    {
        avrora.sim.radio.CC1000Radio $stack3;
        avrora.sim.output.SimPrinter l1;
        java.lang.StringBuilder $stack4, $stack5, $stack7, $stack8, $stack10, $stack11, $stack13;
        int $stack6, $stack9, $stack12;
        java.lang.String $stack14;
        avrora.sim.radio.CC1000Radio$Modem0Register l0#1;
        boolean l0#2;

        l0#1 := @this: avrora.sim.radio.CC1000Radio$Modem0Register;

        $stack3 = l0#1.<avrora.sim.radio.CC1000Radio$Modem0Register: avrora.sim.radio.CC1000Radio this$0>;

        l1 = $stack3.<avrora.sim.radio.CC1000Radio: avrora.sim.output.SimPrinter radioPrinter>;

        $stack4 = new java.lang.StringBuilder;

        specialinvoke $stack4.<java.lang.StringBuilder: void <init>()>();

        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CC1000[MODEM0]: ");

        $stack6 = l0#1.<avrora.sim.radio.CC1000Radio$Modem0Register: int baudrate>;

        $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack6);

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" baud, ");

        $stack9 = l0#1.<avrora.sim.radio.CC1000Radio$Modem0Register: int bitrate>;

        $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack9);

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bit rate, manchester: ");

        $stack12 = l0#1.<avrora.sim.radio.CC1000Radio$Modem0Register: int dataFormat>;

        if $stack12 != 1 goto label1;

        l0#2 = 1;

        goto label2;

     label1:
        l0#2 = 0;

     label2:
        $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(l0#2);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke l1.<avrora.sim.output.SimPrinter: void println(java.lang.String)>($stack14);

        return;
    }

    public static void <clinit>()
    {
        <avrora.sim.radio.CC1000Radio$Modem0Register: int DATA_FORMAT_UART> = 2;

        <avrora.sim.radio.CC1000Radio$Modem0Register: int DATA_FORMAT_MANCHESTER> = 1;

        <avrora.sim.radio.CC1000Radio$Modem0Register: int DATA_FORMAT_NRZ> = 0;

        return;
    }
}
