public class avrora.sim.mcu.ATMegaFamily$MaskRegister extends avrora.sim.RWRegister
{
    protected final int[] mapping;
    protected final avrora.sim.AtmelInterpreter interpreter;

    public void <init>(avrora.sim.AtmelInterpreter, int[])
    {
        avrora.sim.mcu.ATMegaFamily$MaskRegister l0;
        int[] l2;
        avrora.sim.AtmelInterpreter l1;

        l0 := @this: avrora.sim.mcu.ATMegaFamily$MaskRegister;

        l1 := @parameter0: avrora.sim.AtmelInterpreter;

        l2 := @parameter1: int[];

        specialinvoke l0.<avrora.sim.RWRegister: void <init>()>();

        l0.<avrora.sim.mcu.ATMegaFamily$MaskRegister: int[] mapping> = l2;

        l0.<avrora.sim.mcu.ATMegaFamily$MaskRegister: avrora.sim.AtmelInterpreter interpreter> = l1;

        return;
    }

    void setEnabled(int, boolean)
    {
        avrora.sim.mcu.ATMegaFamily$MaskRegister l0;
        int l1, $stack4, $stack6;
        int[] $stack3, $stack5;
        boolean l2;
        avrora.sim.AtmelInterpreter $stack7;

        l0 := @this: avrora.sim.mcu.ATMegaFamily$MaskRegister;

        l1 := @parameter0: int;

        l2 := @parameter1: boolean;

        $stack3 = l0.<avrora.sim.mcu.ATMegaFamily$MaskRegister: int[] mapping>;

        $stack4 = $stack3[l1];

        if $stack4 <= 0 goto label1;

        $stack7 = l0.<avrora.sim.mcu.ATMegaFamily$MaskRegister: avrora.sim.AtmelInterpreter interpreter>;

        $stack5 = l0.<avrora.sim.mcu.ATMegaFamily$MaskRegister: int[] mapping>;

        $stack6 = $stack5[l1];

        virtualinvoke $stack7.<avrora.sim.AtmelInterpreter: void setEnabled(int,boolean)>($stack6, l2);

     label1:
        return;
    }

    public void write(byte)
    {
        avrora.sim.mcu.ATMegaFamily$MaskRegister l0;
        byte l1;
        boolean $stack3;
        int l2#1;

        l0 := @this: avrora.sim.mcu.ATMegaFamily$MaskRegister;

        l1 := @parameter0: byte;

        l0.<avrora.sim.mcu.ATMegaFamily$MaskRegister: byte value> = l1;

        l2#1 = 0;

     label1:
        if l2#1 >= 8 goto label2;

        $stack3 = staticinvoke <cck.util.Arithmetic: boolean getBit(byte,int)>(l1, l2#1);

        virtualinvoke l0.<avrora.sim.mcu.ATMegaFamily$MaskRegister: void setEnabled(int,boolean)>(l2#1, $stack3);

        l2#1 = l2#1 + 1;

        goto label1;

     label2:
        return;
    }
}
