public class avrora.sim.Simulator extends java.lang.Object
{
    protected final avrora.core.Program program;
    protected final avrora.sim.mcu.Microcontroller microcontroller;
    protected avrora.sim.Interpreter interpreter;
    protected avrora.sim.clock.MainClock clock;
    protected final int id;
    protected final avrora.sim.Simulation simulation;
    protected avrora.sim.output.EventBuffer events;
    protected avrora.sim.energy.EnergyControl energyControl;

    void <init>(int, avrora.sim.Simulation, avrora.sim.InterpreterFactory, avrora.sim.mcu.Microcontroller, avrora.core.Program)
    {
        avrora.sim.Simulator l0;
        int l1;
        avrora.sim.mcu.Microcontroller l4, $stack8;
        avrora.core.Program l5, $stack9;
        avrora.sim.Simulation l2;
        avrora.sim.clock.ClockDomain $stack6;
        avrora.sim.clock.MainClock $stack7;
        avrora.sim.InterpreterFactory l3;
        avrora.sim.mcu.MCUProperties $stack10;
        avrora.sim.Interpreter $stack11;
        avrora.sim.output.EventBuffer $stack12;
        avrora.sim.energy.EnergyControl $stack13;

        l0 := @this: avrora.sim.Simulator;

        l1 := @parameter0: int;

        l2 := @parameter1: avrora.sim.Simulation;

        l3 := @parameter2: avrora.sim.InterpreterFactory;

        l4 := @parameter3: avrora.sim.mcu.Microcontroller;

        l5 := @parameter4: avrora.core.Program;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        l0.<avrora.sim.Simulator: int id> = l1;

        l0.<avrora.sim.Simulator: avrora.sim.mcu.Microcontroller microcontroller> = l4;

        l0.<avrora.sim.Simulator: avrora.core.Program program> = l5;

        l0.<avrora.sim.Simulator: avrora.sim.Simulation simulation> = l2;

        $stack6 = interfaceinvoke l4.<avrora.sim.mcu.Microcontroller: avrora.sim.clock.ClockDomain getClockDomain()>();

        $stack7 = virtualinvoke $stack6.<avrora.sim.clock.ClockDomain: avrora.sim.clock.MainClock getMainClock()>();

        l0.<avrora.sim.Simulator: avrora.sim.clock.MainClock clock> = $stack7;

        $stack9 = l0.<avrora.sim.Simulator: avrora.core.Program program>;

        $stack8 = l0.<avrora.sim.Simulator: avrora.sim.mcu.Microcontroller microcontroller>;

        $stack10 = interfaceinvoke $stack8.<avrora.sim.mcu.Microcontroller: avrora.sim.mcu.MCUProperties getProperties()>();

        $stack11 = virtualinvoke l3.<avrora.sim.InterpreterFactory: avrora.sim.Interpreter newInterpreter(avrora.sim.Simulator,avrora.core.Program,avrora.sim.mcu.MCUProperties)>(l0, $stack9, $stack10);

        l0.<avrora.sim.Simulator: avrora.sim.Interpreter interpreter> = $stack11;

        $stack12 = new avrora.sim.output.EventBuffer;

        specialinvoke $stack12.<avrora.sim.output.EventBuffer: void <init>(avrora.sim.Simulator)>(l0);

        l0.<avrora.sim.Simulator: avrora.sim.output.EventBuffer events> = $stack12;

        $stack13 = new avrora.sim.energy.EnergyControl;

        specialinvoke $stack13.<avrora.sim.energy.EnergyControl: void <init>()>();

        l0.<avrora.sim.Simulator: avrora.sim.energy.EnergyControl energyControl> = $stack13;

        return;
    }

    public void delay(long)
    {
        avrora.sim.Simulator l0;
        long l1;
        avrora.sim.Interpreter $stack3;

        l0 := @this: avrora.sim.Simulator;

        l1 := @parameter0: long;

        $stack3 = l0.<avrora.sim.Simulator: avrora.sim.Interpreter interpreter>;

        virtualinvoke $stack3.<avrora.sim.Interpreter: void delay(long)>(l1);

        return;
    }

    public void forceInterrupt(int)
    {
        avrora.sim.Simulator l0;
        avrora.sim.Interpreter $stack2;
        avrora.sim.InterruptTable $stack3;
        int l1;

        l0 := @this: avrora.sim.Simulator;

        l1 := @parameter0: int;

        $stack2 = l0.<avrora.sim.Simulator: avrora.sim.Interpreter interpreter>;

        $stack3 = virtualinvoke $stack2.<avrora.sim.Interpreter: avrora.sim.InterruptTable getInterruptTable()>();

        virtualinvoke $stack3.<avrora.sim.InterruptTable: void force(int)>(l1);

        return;
    }

    public avrora.sim.clock.MainClock getClock()
    {
        avrora.sim.Simulator l0;
        avrora.sim.clock.MainClock $stack1;

        l0 := @this: avrora.sim.Simulator;

        $stack1 = l0.<avrora.sim.Simulator: avrora.sim.clock.MainClock clock>;

        return $stack1;
    }

    public avrora.sim.energy.EnergyControl getEnergyControl()
    {
        avrora.sim.Simulator l0;
        avrora.sim.energy.EnergyControl $stack1;

        l0 := @this: avrora.sim.Simulator;

        $stack1 = l0.<avrora.sim.Simulator: avrora.sim.energy.EnergyControl energyControl>;

        return $stack1;
    }

    public avrora.sim.output.EventBuffer getEventBuffer()
    {
        avrora.sim.Simulator l0;
        avrora.sim.output.EventBuffer $stack1;

        l0 := @this: avrora.sim.Simulator;

        $stack1 = l0.<avrora.sim.Simulator: avrora.sim.output.EventBuffer events>;

        return $stack1;
    }

    public int getID()
    {
        avrora.sim.Simulator l0;
        int $stack1;

        l0 := @this: avrora.sim.Simulator;

        $stack1 = l0.<avrora.sim.Simulator: int id>;

        return $stack1;
    }

    public avrora.sim.Interpreter getInterpreter()
    {
        avrora.sim.Simulator l0;
        avrora.sim.Interpreter $stack1;

        l0 := @this: avrora.sim.Simulator;

        $stack1 = l0.<avrora.sim.Simulator: avrora.sim.Interpreter interpreter>;

        return $stack1;
    }

    public avrora.sim.mcu.Microcontroller getMicrocontroller()
    {
        avrora.sim.Simulator l0;
        avrora.sim.mcu.Microcontroller $stack1;

        l0 := @this: avrora.sim.Simulator;

        $stack1 = l0.<avrora.sim.Simulator: avrora.sim.mcu.Microcontroller microcontroller>;

        return $stack1;
    }

    public avrora.sim.output.SimPrinter getPrinter(java.lang.String)
    {
        avrora.sim.Simulator l0;
        java.lang.String l1;
        avrora.sim.Simulation $stack2;
        avrora.sim.output.SimPrinter $stack3;

        l0 := @this: avrora.sim.Simulator;

        l1 := @parameter0: java.lang.String;

        $stack2 = l0.<avrora.sim.Simulator: avrora.sim.Simulation simulation>;

        $stack3 = virtualinvoke $stack2.<avrora.sim.Simulation: avrora.sim.output.SimPrinter getPrinter(avrora.sim.Simulator,java.lang.String)>(l0, l1);

        return $stack3;
    }

    public avrora.sim.output.SimPrinter getPrinter()
    {
        avrora.sim.Simulator l0;
        avrora.sim.Simulation $stack1;
        avrora.sim.output.SimPrinter $stack2;

        l0 := @this: avrora.sim.Simulator;

        $stack1 = l0.<avrora.sim.Simulator: avrora.sim.Simulation simulation>;

        $stack2 = virtualinvoke $stack1.<avrora.sim.Simulation: avrora.sim.output.SimPrinter getPrinter(avrora.sim.Simulator)>(l0);

        return $stack2;
    }

    public avrora.core.Program getProgram()
    {
        avrora.sim.Simulator l0;
        avrora.core.Program $stack1;

        l0 := @this: avrora.sim.Simulator;

        $stack1 = l0.<avrora.sim.Simulator: avrora.core.Program program>;

        return $stack1;
    }

    public avrora.sim.Simulation getSimulation()
    {
        avrora.sim.Simulator l0;
        avrora.sim.Simulation $stack1;

        l0 := @this: avrora.sim.Simulator;

        $stack1 = l0.<avrora.sim.Simulator: avrora.sim.Simulation simulation>;

        return $stack1;
    }

    public avrora.sim.State getState()
    {
        avrora.sim.Simulator l0;
        avrora.sim.Interpreter $stack1;
        avrora.sim.State $stack2;

        l0 := @this: avrora.sim.Simulator;

        $stack1 = l0.<avrora.sim.Simulator: avrora.sim.Interpreter interpreter>;

        $stack2 = virtualinvoke $stack1.<avrora.sim.Interpreter: avrora.sim.State getState()>();

        return $stack2;
    }

    public void insertErrorWatch(avrora.sim.Simulator$Watch)
    {
        avrora.sim.Simulator l0;
        avrora.sim.Simulator$Watch l1;
        avrora.sim.Interpreter $stack2;

        l0 := @this: avrora.sim.Simulator;

        l1 := @parameter0: avrora.sim.Simulator$Watch;

        $stack2 = l0.<avrora.sim.Simulator: avrora.sim.Interpreter interpreter>;

        virtualinvoke $stack2.<avrora.sim.Interpreter: void insertErrorWatch(avrora.sim.Simulator$Watch)>(l1);

        return;
    }

    public void insertEvent(avrora.sim.Simulator$Event, long)
    {
        avrora.sim.Simulator l0;
        avrora.sim.Simulator$Event l1;
        long l2;
        avrora.sim.clock.MainClock $stack4;

        l0 := @this: avrora.sim.Simulator;

        l1 := @parameter0: avrora.sim.Simulator$Event;

        l2 := @parameter1: long;

        $stack4 = l0.<avrora.sim.Simulator: avrora.sim.clock.MainClock clock>;

        virtualinvoke $stack4.<avrora.sim.clock.MainClock: void insertEvent(avrora.sim.Simulator$Event,long)>(l1, l2);

        return;
    }

    public void insertProbe(avrora.sim.Simulator$Probe)
    {
        avrora.sim.Simulator l0;
        avrora.sim.Simulator$Probe l1;
        avrora.sim.Interpreter $stack2;

        l0 := @this: avrora.sim.Simulator;

        l1 := @parameter0: avrora.sim.Simulator$Probe;

        $stack2 = l0.<avrora.sim.Simulator: avrora.sim.Interpreter interpreter>;

        virtualinvoke $stack2.<avrora.sim.Interpreter: void insertProbe(avrora.sim.Simulator$Probe)>(l1);

        return;
    }

    public void insertProbe(avrora.sim.Simulator$Probe, int)
    {
        avrora.sim.Simulator l0;
        avrora.sim.Simulator$Probe l1;
        int l2;
        avrora.sim.Interpreter $stack3;

        l0 := @this: avrora.sim.Simulator;

        l1 := @parameter0: avrora.sim.Simulator$Probe;

        l2 := @parameter1: int;

        $stack3 = l0.<avrora.sim.Simulator: avrora.sim.Interpreter interpreter>;

        virtualinvoke $stack3.<avrora.sim.Interpreter: void insertProbe(avrora.sim.Simulator$Probe,int)>(l1, l2);

        return;
    }

    public void insertWatch(avrora.sim.Simulator$Watch, int)
    {
        avrora.sim.Simulator l0;
        avrora.sim.Simulator$Watch l1;
        int l2;
        avrora.sim.Interpreter $stack3;

        l0 := @this: avrora.sim.Simulator;

        l1 := @parameter0: avrora.sim.Simulator$Watch;

        l2 := @parameter1: int;

        $stack3 = l0.<avrora.sim.Simulator: avrora.sim.Interpreter interpreter>;

        virtualinvoke $stack3.<avrora.sim.Interpreter: void insertWatch(avrora.sim.Simulator$Watch,int)>(l1, l2);

        return;
    }

    public void removeEvent(avrora.sim.Simulator$Event)
    {
        avrora.sim.Simulator l0;
        avrora.sim.Simulator$Event l1;
        avrora.sim.clock.MainClock $stack2;

        l0 := @this: avrora.sim.Simulator;

        l1 := @parameter0: avrora.sim.Simulator$Event;

        $stack2 = l0.<avrora.sim.Simulator: avrora.sim.clock.MainClock clock>;

        virtualinvoke $stack2.<avrora.sim.clock.MainClock: void removeEvent(avrora.sim.Simulator$Event)>(l1);

        return;
    }

    public void removeProbe(avrora.sim.Simulator$Probe)
    {
        avrora.sim.Simulator l0;
        avrora.sim.Simulator$Probe l1;
        avrora.sim.Interpreter $stack2;

        l0 := @this: avrora.sim.Simulator;

        l1 := @parameter0: avrora.sim.Simulator$Probe;

        $stack2 = l0.<avrora.sim.Simulator: avrora.sim.Interpreter interpreter>;

        virtualinvoke $stack2.<avrora.sim.Interpreter: void removeProbe(avrora.sim.Simulator$Probe)>(l1);

        return;
    }

    public void removeProbe(avrora.sim.Simulator$Probe, int)
    {
        avrora.sim.Simulator l0;
        avrora.sim.Simulator$Probe l1;
        int l2;
        avrora.sim.Interpreter $stack3;

        l0 := @this: avrora.sim.Simulator;

        l1 := @parameter0: avrora.sim.Simulator$Probe;

        l2 := @parameter1: int;

        $stack3 = l0.<avrora.sim.Simulator: avrora.sim.Interpreter interpreter>;

        virtualinvoke $stack3.<avrora.sim.Interpreter: void removeProbe(avrora.sim.Simulator$Probe,int)>(l1, l2);

        return;
    }

    public void removeWatch(avrora.sim.Simulator$Watch, int)
    {
        avrora.sim.Simulator l0;
        avrora.sim.Simulator$Watch l1;
        int l2;
        avrora.sim.Interpreter $stack3;

        l0 := @this: avrora.sim.Simulator;

        l1 := @parameter0: avrora.sim.Simulator$Watch;

        l2 := @parameter1: int;

        $stack3 = l0.<avrora.sim.Simulator: avrora.sim.Interpreter interpreter>;

        virtualinvoke $stack3.<avrora.sim.Interpreter: void removeWatch(avrora.sim.Simulator$Watch,int)>(l1, l2);

        return;
    }

    public void start()
    {
        avrora.sim.Simulator l0;
        avrora.sim.Interpreter $stack1;

        l0 := @this: avrora.sim.Simulator;

        $stack1 = l0.<avrora.sim.Simulator: avrora.sim.Interpreter interpreter>;

        virtualinvoke $stack1.<avrora.sim.Interpreter: void start()>();

        return;
    }

    public int step()
    {
        avrora.sim.Simulator l0;
        avrora.sim.Interpreter $stack1;
        int $stack2;

        l0 := @this: avrora.sim.Simulator;

        $stack1 = l0.<avrora.sim.Simulator: avrora.sim.Interpreter interpreter>;

        $stack2 = virtualinvoke $stack1.<avrora.sim.Interpreter: int step()>();

        return $stack2;
    }

    public void stop()
    {
        avrora.sim.Simulator l0;
        avrora.sim.Interpreter $stack1;

        l0 := @this: avrora.sim.Simulator;

        $stack1 = l0.<avrora.sim.Simulator: avrora.sim.Interpreter interpreter>;

        virtualinvoke $stack1.<avrora.sim.Interpreter: void stop()>();

        return;
    }
}
