public abstract class avrora.sim.radio.Medium$Receiver extends avrora.sim.radio.Medium$TXRX
{
    private static final int BIT_DELAY;
    protected boolean locked;
    protected double frequency;
    public avrora.sim.radio.Medium$Receiver$Ticker ticker;
    static final boolean $assertionsDisabled;

    static void <clinit>()
    {
        java.lang.Class $stack1;
        boolean $stack2, l0#1;

        <avrora.sim.radio.Medium$Receiver: int BIT_DELAY> = 1;

        $stack1 = class "Lavrora/sim/radio/Medium;";

        $stack2 = virtualinvoke $stack1.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $stack2 != 0 goto label1;

        l0#1 = 1;

        goto label2;

     label1:
        l0#1 = 0;

     label2:
        <avrora.sim.radio.Medium$Receiver: boolean $assertionsDisabled> = l0#1;

        return;
    }

    protected void <init>(avrora.sim.radio.Medium, avrora.sim.clock.Clock)
    {
        avrora.sim.radio.Medium$Receiver l0;
        avrora.sim.radio.Medium l1;
        avrora.sim.clock.Clock l2;
        avrora.sim.radio.Medium$Receiver$Ticker $stack3;

        l0 := @this: avrora.sim.radio.Medium$Receiver;

        l1 := @parameter0: avrora.sim.radio.Medium;

        l2 := @parameter1: avrora.sim.clock.Clock;

        specialinvoke l0.<avrora.sim.radio.Medium$TXRX: void <init>(avrora.sim.radio.Medium,avrora.sim.clock.Clock)>(l1, l2);

        $stack3 = new avrora.sim.radio.Medium$Receiver$Ticker;

        specialinvoke $stack3.<avrora.sim.radio.Medium$Receiver$Ticker: void <init>(avrora.sim.radio.Medium$Receiver)>(l0);

        l0.<avrora.sim.radio.Medium$Receiver: avrora.sim.radio.Medium$Receiver$Ticker ticker> = $stack3;

        return;
    }

    static void access$000(avrora.sim.radio.Medium$Receiver, long)
    {
        avrora.sim.radio.Medium$Receiver l0;
        long l1;

        l0 := @parameter0: avrora.sim.radio.Medium$Receiver;

        l1 := @parameter1: long;

        specialinvoke l0.<avrora.sim.radio.Medium$Receiver: void waitForNeighbors(long)>(l1);

        return;
    }

    static avrora.sim.radio.Medium$Transmission access$100(avrora.sim.radio.Medium$Receiver, long)
    {
        avrora.sim.radio.Medium$Receiver l0;
        long l1;
        avrora.sim.radio.Medium$Transmission $stack3;

        l0 := @parameter0: avrora.sim.radio.Medium$Receiver;

        l1 := @parameter1: long;

        $stack3 = specialinvoke l0.<avrora.sim.radio.Medium$Receiver: avrora.sim.radio.Medium$Transmission earliestNewTransmission(long)>(l1);

        return $stack3;
    }

    static java.util.List access$200(avrora.sim.radio.Medium$Receiver, long)
    {
        avrora.sim.radio.Medium$Receiver l0;
        long l1;
        java.util.List $stack3;

        l0 := @parameter0: avrora.sim.radio.Medium$Receiver;

        l1 := @parameter1: long;

        $stack3 = specialinvoke l0.<avrora.sim.radio.Medium$Receiver: java.util.List getIntersection(long)>(l1);

        return $stack3;
    }

    public final void beginReceive(double)
    {
        avrora.sim.radio.Medium$Receiver l0;
        double l1;
        boolean $stack3;
        long $stack4, $stack5, $stack6;
        avrora.sim.radio.Medium$Receiver$Ticker $stack7;
        avrora.sim.clock.Clock $stack8;

        l0 := @this: avrora.sim.radio.Medium$Receiver;

        l1 := @parameter0: double;

        l0.<avrora.sim.radio.Medium$Receiver: double frequency> = l1;

        $stack3 = l0.<avrora.sim.radio.Medium$Receiver: boolean activated>;

        if $stack3 != 0 goto label1;

        l0.<avrora.sim.radio.Medium$Receiver: boolean activated> = 1;

        $stack8 = l0.<avrora.sim.radio.Medium$Receiver: avrora.sim.clock.Clock clock>;

        $stack7 = l0.<avrora.sim.radio.Medium$Receiver: avrora.sim.radio.Medium$Receiver$Ticker ticker>;

        $stack5 = l0.<avrora.sim.radio.Medium$Receiver: long leadCycles>;

        $stack4 = l0.<avrora.sim.radio.Medium$Receiver: long cyclesPerByte>;

        $stack6 = $stack5 + $stack4;

        virtualinvoke $stack8.<avrora.sim.clock.Clock: void insertEvent(avrora.sim.Simulator$Event,long)>($stack7, $stack6);

     label1:
        return;
    }

    private avrora.sim.radio.Medium$Transmission earliestNewTransmission(long)
    {
        avrora.sim.radio.Medium$Receiver l0;
        avrora.sim.radio.Medium l3, $stack9, $stack17, $stack26;
        java.util.List $stack10;
        java.util.Iterator $stack11;
        boolean $stack12, $stack33;
        java.lang.Object $stack14;
        avrora.sim.radio.Medium$Transmission l5, l7#1;
        long l1, $stack15, $stack20, $stack21, $stack22, $stack23, $stack30, $stack39, $stack40;
        byte $stack16, $stack24, $stack41;
        int $stack18, $stack19, $stack32;
        avrora.sim.clock.Clock $stack27, $stack29;
        avrora.sim.radio.Medium$Arbitrator $stack28;
        double $stack31;
        java.lang.Throwable $stack42;

        l0 := @this: avrora.sim.radio.Medium$Receiver;

        l1 := @parameter0: long;

        l7#1 = null;

        l3 = l0.<avrora.sim.radio.Medium$Receiver: avrora.sim.radio.Medium medium>;

        entermonitor l3;

     label01:
        $stack9 = l0.<avrora.sim.radio.Medium$Receiver: avrora.sim.radio.Medium medium>;

        $stack10 = $stack9.<avrora.sim.radio.Medium: java.util.List transmissions>;

        $stack11 = interfaceinvoke $stack10.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $stack12 = interfaceinvoke $stack11.<java.util.Iterator: boolean hasNext()>();

        if $stack12 == 0 goto label06;

        $stack14 = interfaceinvoke $stack11.<java.util.Iterator: java.lang.Object next()>();

        l5 = (avrora.sim.radio.Medium$Transmission) $stack14;

        $stack15 = l5.<avrora.sim.radio.Medium$Transmission: long firstBit>;

        $stack16 = l1 cmp $stack15;

        if $stack16 > 0 goto label04;

        $stack26 = l0.<avrora.sim.radio.Medium$Receiver: avrora.sim.radio.Medium medium>;

        $stack28 = $stack26.<avrora.sim.radio.Medium: avrora.sim.radio.Medium$Arbitrator arbitrator>;

        $stack29 = l0.<avrora.sim.radio.Medium$Receiver: avrora.sim.clock.Clock clock>;

        $stack27 = l0.<avrora.sim.radio.Medium$Receiver: avrora.sim.clock.Clock clock>;

        $stack30 = virtualinvoke $stack27.<avrora.sim.clock.Clock: long getCount()>();

        $stack31 = virtualinvoke $stack29.<avrora.sim.clock.Clock: double cyclesToMillis(long)>($stack30);

        $stack32 = (int) $stack31;

        $stack33 = interfaceinvoke $stack28.<avrora.sim.radio.Medium$Arbitrator: boolean lockTransmission(avrora.sim.radio.Medium$Receiver,avrora.sim.radio.Medium$Transmission,int)>(l0, l5, $stack32);

        if $stack33 == 0 goto label04;

        if l7#1 != null goto label03;

        l7#1 = l5;

        goto label05;

     label03:
        $stack40 = l5.<avrora.sim.radio.Medium$Transmission: long firstBit>;

        $stack39 = l7#1.<avrora.sim.radio.Medium$Transmission: long firstBit>;

        $stack41 = $stack40 cmp $stack39;

        if $stack41 >= 0 goto label05;

        l7#1 = l5;

        goto label05;

     label04:
        $stack21 = l1 - 8L;

        $stack17 = l0.<avrora.sim.radio.Medium$Receiver: avrora.sim.radio.Medium medium>;

        $stack18 = $stack17.<avrora.sim.radio.Medium: int leadBits>;

        $stack19 = 2 * $stack18;

        $stack20 = (long) $stack19;

        $stack23 = $stack21 - $stack20;

        $stack22 = l5.<avrora.sim.radio.Medium$Transmission: long lastBit>;

        $stack24 = $stack23 cmp $stack22;

        if $stack24 <= 0 goto label05;

        interfaceinvoke $stack11.<java.util.Iterator: void remove()>();

     label05:
        goto label02;

     label06:
        exitmonitor l3;

     label07:
        goto label10;

     label08:
        $stack42 := @caughtexception;

        exitmonitor l3;

     label09:
        throw $stack42;

     label10:
        return l7#1;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public final void endReceive()
    {
        avrora.sim.radio.Medium$Receiver l0;
        boolean $stack1;
        avrora.sim.radio.Medium$Probe$List $stack5, $stack12;
        avrora.sim.clock.Clock $stack3#11;
        avrora.sim.radio.Medium$Receiver$Ticker $stack2#15;

        l0 := @this: avrora.sim.radio.Medium$Receiver;

        $stack1 = l0.<avrora.sim.radio.Medium$Receiver: boolean locked>;

        if $stack1 == 0 goto label1;

        virtualinvoke l0.<avrora.sim.radio.Medium$Receiver: byte nextByte(boolean,byte)>(0, 0);

        $stack5 = l0.<avrora.sim.radio.Medium$Receiver: avrora.sim.radio.Medium$Probe$List probeList>;

        if $stack5 == null goto label1;

        $stack12 = l0.<avrora.sim.radio.Medium$Receiver: avrora.sim.radio.Medium$Probe$List probeList>;

        virtualinvoke $stack12.<avrora.sim.radio.Medium$Probe$List: void fireAfterReceiveEnd(avrora.sim.radio.Medium$Receiver)>(l0);

     label1:
        l0.<avrora.sim.radio.Medium$Receiver: boolean activated> = 0;

        l0.<avrora.sim.radio.Medium$Receiver: boolean locked> = 0;

        $stack3#11 = l0.<avrora.sim.radio.Medium$Receiver: avrora.sim.clock.Clock clock>;

        $stack2#15 = l0.<avrora.sim.radio.Medium$Receiver: avrora.sim.radio.Medium$Receiver$Ticker ticker>;

        virtualinvoke $stack3#11.<avrora.sim.clock.Clock: void removeEvent(avrora.sim.Simulator$Event)>($stack2#15);

        return;
    }

    private java.util.List getIntersection(long)
    {
        avrora.sim.radio.Medium$Receiver l0;
        avrora.sim.radio.Medium l3, $stack9;
        java.util.List $stack10;
        java.util.Iterator $stack11;
        boolean $stack12, $stack15;
        java.lang.Object $stack14;
        avrora.sim.radio.Medium$Transmission l5;
        long l1;
        java.util.LinkedList $stack18, l7#1;
        java.lang.Throwable $stack21;

        l0 := @this: avrora.sim.radio.Medium$Receiver;

        l1 := @parameter0: long;

        l7#1 = null;

        l3 = l0.<avrora.sim.radio.Medium$Receiver: avrora.sim.radio.Medium medium>;

        entermonitor l3;

     label1:
        $stack9 = l0.<avrora.sim.radio.Medium$Receiver: avrora.sim.radio.Medium medium>;

        $stack10 = $stack9.<avrora.sim.radio.Medium: java.util.List transmissions>;

        $stack11 = interfaceinvoke $stack10.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $stack12 = interfaceinvoke $stack11.<java.util.Iterator: boolean hasNext()>();

        if $stack12 == 0 goto label5;

        $stack14 = interfaceinvoke $stack11.<java.util.Iterator: java.lang.Object next()>();

        l5 = (avrora.sim.radio.Medium$Transmission) $stack14;

        $stack15 = specialinvoke l0.<avrora.sim.radio.Medium$Receiver: boolean intersect(long,avrora.sim.radio.Medium$Transmission)>(l1, l5);

        if $stack15 == 0 goto label4;

        if l7#1 != null goto label3;

        $stack18 = new java.util.LinkedList;

        specialinvoke $stack18.<java.util.LinkedList: void <init>()>();

        l7#1 = $stack18;

     label3:
        interfaceinvoke l7#1.<java.util.List: boolean add(java.lang.Object)>(l5);

     label4:
        goto label2;

     label5:
        exitmonitor l3;

     label6:
        goto label9;

     label7:
        $stack21 := @caughtexception;

        exitmonitor l3;

     label8:
        throw $stack21;

     label9:
        return l7#1;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public volatile void insertProbe(avrora.sim.radio.Medium$Probe)
    {
        avrora.sim.radio.Medium$Receiver l0;
        avrora.sim.radio.Medium$Probe l1;

        l0 := @this: avrora.sim.radio.Medium$Receiver;

        l1 := @parameter0: avrora.sim.radio.Medium$Probe;

        specialinvoke l0.<avrora.sim.radio.Medium$TXRX: void insertProbe(avrora.sim.radio.Medium$Probe)>(l1);

        return;
    }

    private boolean intersect(long, avrora.sim.radio.Medium$Transmission)
    {
        long l1, $stack5, $stack7;
        avrora.sim.radio.Medium$Transmission l3;
        byte $stack6, $stack8;
        avrora.sim.radio.Medium$Receiver l0;
        boolean l4#1;

        l0 := @this: avrora.sim.radio.Medium$Receiver;

        l1 := @parameter0: long;

        l3 := @parameter1: avrora.sim.radio.Medium$Transmission;

        $stack5 = l3.<avrora.sim.radio.Medium$Transmission: long firstBit>;

        $stack6 = l1 cmp $stack5;

        if $stack6 < 0 goto label1;

        $stack7 = l3.<avrora.sim.radio.Medium$Transmission: long lastBit>;

        $stack8 = l1 cmp $stack7;

        if $stack8 >= 0 goto label1;

        l4#1 = 1;

        goto label2;

     label1:
        l4#1 = 0;

     label2:
        return l4#1;
    }

    public final boolean isChannelClear(int, int)
    {
        avrora.sim.radio.Medium$Receiver l0;
        boolean $stack17, $stack27, $stack82, l10#1, $stack29#5, l16#8;
        avrora.sim.clock.Clock $stack18, $stack42, $stack44, $stack51, $stack53, $stack62, $stack66;
        long $stack19, $stack20, $stack21, $stack22, $stack23, $stack24, $stack45, $stack54, $stack67;
        java.util.List $stack25;
        int l2, $stack26, l6, $stack30, l14, l1, $stack31, $stack32, $stack33, $stack34, $stack47, $stack56, $stack57, $stack69, $stack77, l15#7;
        java.util.Iterator $stack28;
        java.lang.Object $stack40;
        avrora.sim.radio.Medium$Transmission l13;
        avrora.sim.radio.Medium $stack41, $stack50, $stack61;
        avrora.sim.radio.Medium$Arbitrator $stack43, $stack52, $stack65;
        double $stack46, $stack48, $stack55, $stack59, $stack68, $stack70, $stack71, $stack72, $stack73, $stack74, $stack75, $stack76, l11#2;
        java.lang.AssertionError $stack79;

        l0 := @this: avrora.sim.radio.Medium$Receiver;

        l1 := @parameter0: int;

        l2 := @parameter1: int;

        $stack17 = l0.<avrora.sim.radio.Medium$Receiver: boolean activated>;

        if $stack17 == 0 goto label01;

        $stack82 = l0.<avrora.sim.radio.Medium$Receiver: boolean locked>;

        if $stack82 == 0 goto label01;

        return 0;

     label01:
        $stack18 = l0.<avrora.sim.radio.Medium$Receiver: avrora.sim.clock.Clock clock>;

        $stack19 = virtualinvoke $stack18.<avrora.sim.clock.Clock: long getCount()>();

        $stack20 = virtualinvoke l0.<avrora.sim.radio.Medium$Receiver: long getBitNum(long)>($stack19);

        $stack23 = $stack20 - 1L;

        $stack21 = l0.<avrora.sim.radio.Medium$Receiver: long cyclesPerByte>;

        $stack22 = $stack19 - $stack21;

        specialinvoke l0.<avrora.sim.radio.Medium$Receiver: void waitForNeighbors(long)>($stack22);

        $stack24 = $stack23 - 8L;

        $stack25 = specialinvoke l0.<avrora.sim.radio.Medium$Receiver: java.util.List getIntersection(long)>($stack24);

        if $stack25 == null goto label12;

        $stack26 = l2 & 192;

        l6 = $stack26 >>> 6;

        if l6 == 1 goto label02;

        if l6 != 3 goto label11;

     label02:
        l10#1 = 0;

        l11#2 = 0.0;

        $stack27 = <avrora.sim.radio.Medium$Receiver: boolean $assertionsDisabled>;

        if $stack27 != 0 goto label03;

        $stack77 = interfaceinvoke $stack25.<java.util.List: int size()>();

        if $stack77 > 0 goto label03;

        $stack79 = new java.lang.AssertionError;

        specialinvoke $stack79.<java.lang.AssertionError: void <init>()>();

        throw $stack79;

     label03:
        $stack28 = interfaceinvoke $stack25.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $stack29#5 = interfaceinvoke $stack28.<java.util.Iterator: boolean hasNext()>();

        if $stack29#5 == 0 goto label07;

        $stack40 = interfaceinvoke $stack28.<java.util.Iterator: java.lang.Object next()>();

        l13 = (avrora.sim.radio.Medium$Transmission) $stack40;

        if l10#1 == 0 goto label05;

        $stack61 = l0.<avrora.sim.radio.Medium$Receiver: avrora.sim.radio.Medium medium>;

        $stack65 = $stack61.<avrora.sim.radio.Medium: avrora.sim.radio.Medium$Arbitrator arbitrator>;

        $stack66 = l0.<avrora.sim.radio.Medium$Receiver: avrora.sim.clock.Clock clock>;

        $stack62 = l0.<avrora.sim.radio.Medium$Receiver: avrora.sim.clock.Clock clock>;

        $stack67 = virtualinvoke $stack62.<avrora.sim.clock.Clock: long getCount()>();

        $stack68 = virtualinvoke $stack66.<avrora.sim.clock.Clock: double cyclesToMillis(long)>($stack67);

        $stack69 = (int) $stack68;

        $stack70 = interfaceinvoke $stack65.<avrora.sim.radio.Medium$Arbitrator: double computeReceivedPower(avrora.sim.radio.Medium$Transmission,avrora.sim.radio.Medium$Receiver,int)>(l13, l0, $stack69);

        $stack71 = l11#2 / 10.0;

        $stack72 = staticinvoke <java.lang.Math: double pow(double,double)>(10.0, $stack71);

        $stack73 = $stack70 / 10.0;

        $stack74 = staticinvoke <java.lang.Math: double pow(double,double)>(10.0, $stack73);

        $stack75 = $stack74 + $stack72;

        $stack76 = staticinvoke <java.lang.Math: double log10(double)>($stack75);

        l11#2 = 10.0 * $stack76;

        goto label06;

     label05:
        l10#1 = 1;

        $stack41 = l0.<avrora.sim.radio.Medium$Receiver: avrora.sim.radio.Medium medium>;

        $stack43 = $stack41.<avrora.sim.radio.Medium: avrora.sim.radio.Medium$Arbitrator arbitrator>;

        $stack44 = l0.<avrora.sim.radio.Medium$Receiver: avrora.sim.clock.Clock clock>;

        $stack42 = l0.<avrora.sim.radio.Medium$Receiver: avrora.sim.clock.Clock clock>;

        $stack45 = virtualinvoke $stack42.<avrora.sim.clock.Clock: long getCount()>();

        $stack46 = virtualinvoke $stack44.<avrora.sim.clock.Clock: double cyclesToMillis(long)>($stack45);

        $stack47 = (int) $stack46;

        $stack48 = interfaceinvoke $stack43.<avrora.sim.radio.Medium$Arbitrator: double computeReceivedPower(avrora.sim.radio.Medium$Transmission,avrora.sim.radio.Medium$Receiver,int)>(l13, l0, $stack47);

        staticinvoke <avrora.sim.radio.Medium: double access$302(double)>($stack48);

        $stack50 = l0.<avrora.sim.radio.Medium$Receiver: avrora.sim.radio.Medium medium>;

        $stack52 = $stack50.<avrora.sim.radio.Medium: avrora.sim.radio.Medium$Arbitrator arbitrator>;

        $stack53 = l0.<avrora.sim.radio.Medium$Receiver: avrora.sim.clock.Clock clock>;

        $stack51 = l0.<avrora.sim.radio.Medium$Receiver: avrora.sim.clock.Clock clock>;

        $stack54 = virtualinvoke $stack51.<avrora.sim.clock.Clock: long getCount()>();

        $stack55 = virtualinvoke $stack53.<avrora.sim.clock.Clock: double cyclesToMillis(long)>($stack54);

        $stack56 = (int) $stack55;

        $stack57 = interfaceinvoke $stack52.<avrora.sim.radio.Medium$Arbitrator: int getNoise(int)>($stack56);

        staticinvoke <avrora.sim.radio.Medium: int access$402(int)>($stack57);

        $stack59 = staticinvoke <avrora.sim.radio.Medium: double access$300()>();

        l11#2 = $stack59;

     label06:
        goto label04;

     label07:
        $stack30 = l2 & 1792;

        l14 = $stack30 >>> 8;

        $stack31 = l1 & 65280;

        l15#7 = $stack31 >>> 8;

        if l15#7 <= 127 goto label08;

        l15#7 = l15#7 + -256;

     label08:
        $stack32 = (int) l11#2;

        $stack34 = $stack32 + 45;

        $stack33 = l15#7 - l14;

        if $stack34 >= $stack33 goto label09;

        l16#8 = 1;

        goto label10;

     label09:
        l16#8 = 0;

     label10:
        return l16#8;

     label11:
        return 0;

     label12:
        return 1;
    }

    public abstract byte nextByte(boolean, byte);

    public volatile void removeProbe(avrora.sim.radio.Medium$Probe)
    {
        avrora.sim.radio.Medium$Receiver l0;
        avrora.sim.radio.Medium$Probe l1;

        l0 := @this: avrora.sim.radio.Medium$Receiver;

        l1 := @parameter0: avrora.sim.radio.Medium$Probe;

        specialinvoke l0.<avrora.sim.radio.Medium$TXRX: void removeProbe(avrora.sim.radio.Medium$Probe)>(l1);

        return;
    }

    public abstract void setBER(double);

    public abstract void setRSSI(double);

    private void waitForNeighbors(long)
    {
        avrora.sim.radio.Medium$Receiver l0;
        avrora.sim.radio.Medium $stack3, $stack5;
        avrora.sim.clock.Synchronizer $stack4, $stack6;
        long l1;

        l0 := @this: avrora.sim.radio.Medium$Receiver;

        l1 := @parameter0: long;

        $stack3 = l0.<avrora.sim.radio.Medium$Receiver: avrora.sim.radio.Medium medium>;

        $stack4 = $stack3.<avrora.sim.radio.Medium: avrora.sim.clock.Synchronizer synch>;

        if $stack4 == null goto label1;

        $stack5 = l0.<avrora.sim.radio.Medium$Receiver: avrora.sim.radio.Medium medium>;

        $stack6 = $stack5.<avrora.sim.radio.Medium: avrora.sim.clock.Synchronizer synch>;

        virtualinvoke $stack6.<avrora.sim.clock.Synchronizer: void waitForNeighbors(long)>(l1);

     label1:
        return;
    }
}
