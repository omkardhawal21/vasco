class org.dacapo.parser.Config$1 extends java.lang.Object
{
    static final int[] $SwitchMap$org$dacapo$parser$Config$ThreadModel;

    static void <clinit>()
    {
        org.dacapo.parser.Config$ThreadModel[] $stack3;
        int $stack4, $stack8, $stack11, $stack14;
        int[] $stack5, $stack7, $stack10, $stack13;
        org.dacapo.parser.Config$ThreadModel $stack6, $stack9, $stack12;
        java.lang.NoSuchFieldError $stack15, $stack16, $stack18;

        $stack3 = staticinvoke <org.dacapo.parser.Config$ThreadModel: org.dacapo.parser.Config$ThreadModel[] values()>();

        $stack4 = lengthof $stack3;

        $stack5 = newarray (int)[$stack4];

        <org.dacapo.parser.Config$1: int[] $SwitchMap$org$dacapo$parser$Config$ThreadModel> = $stack5;

     label01:
        $stack7 = <org.dacapo.parser.Config$1: int[] $SwitchMap$org$dacapo$parser$Config$ThreadModel>;

        $stack6 = <org.dacapo.parser.Config$ThreadModel: org.dacapo.parser.Config$ThreadModel SINGLE>;

        $stack8 = virtualinvoke $stack6.<org.dacapo.parser.Config$ThreadModel: int ordinal()>();

        $stack7[$stack8] = 1;

     label02:
        goto label04;

     label03:
        $stack18 := @caughtexception;

     label04:
        $stack10 = <org.dacapo.parser.Config$1: int[] $SwitchMap$org$dacapo$parser$Config$ThreadModel>;

        $stack9 = <org.dacapo.parser.Config$ThreadModel: org.dacapo.parser.Config$ThreadModel FIXED>;

        $stack11 = virtualinvoke $stack9.<org.dacapo.parser.Config$ThreadModel: int ordinal()>();

        $stack10[$stack11] = 2;

     label05:
        goto label07;

     label06:
        $stack16 := @caughtexception;

     label07:
        $stack13 = <org.dacapo.parser.Config$1: int[] $SwitchMap$org$dacapo$parser$Config$ThreadModel>;

        $stack12 = <org.dacapo.parser.Config$ThreadModel: org.dacapo.parser.Config$ThreadModel PER_CPU>;

        $stack14 = virtualinvoke $stack12.<org.dacapo.parser.Config$ThreadModel: int ordinal()>();

        $stack13[$stack14] = 3;

     label08:
        goto label10;

     label09:
        $stack15 := @caughtexception;

     label10:
        return;

        catch java.lang.NoSuchFieldError from label01 to label02 with label03;
        catch java.lang.NoSuchFieldError from label04 to label05 with label06;
        catch java.lang.NoSuchFieldError from label07 to label08 with label09;
    }
}
