public abstract class org.dacapo.harness.Benchmark extends java.lang.Object
{
    private static final int BUFFER_SIZE;
    private static final java.lang.String TIMEOUT_DIALATION_PROPERTY;
    private static boolean verbose;
    private static boolean silent;
    private static boolean validateOutput;
    private static boolean preIterationGC;
    private static boolean validate;
    private static boolean preserve;
    private static java.io.PrintWriter valRepFile;
    private static boolean validationReport;
    private static java.lang.String timeoutDialation;
    private static final java.io.PrintStream savedOut;
    private static final java.io.PrintStream savedErr;
    protected final java.io.File scratch;
    protected final org.dacapo.parser.Config config;
    protected java.lang.ClassLoader loader;
    private java.lang.ClassLoader savedClassLoader;
    private java.util.Properties savedSystemProperties;
    private static org.dacapo.harness.TeePrintStream err;
    private static org.dacapo.harness.TeePrintStream out;
    protected int iteration;
    protected java.lang.reflect.Method method;

    static void <clinit>()
    {
        java.io.PrintStream $stack0, $stack1;

        <org.dacapo.harness.Benchmark: java.lang.String TIMEOUT_DIALATION_PROPERTY> = "dacapo.timeout.dialation";

        <org.dacapo.harness.Benchmark: int BUFFER_SIZE> = 2048;

        <org.dacapo.harness.Benchmark: boolean verbose> = 0;

        <org.dacapo.harness.Benchmark: boolean silent> = 1;

        <org.dacapo.harness.Benchmark: boolean validateOutput> = 1;

        <org.dacapo.harness.Benchmark: boolean preIterationGC> = 0;

        <org.dacapo.harness.Benchmark: boolean validate> = 1;

        <org.dacapo.harness.Benchmark: boolean preserve> = 0;

        <org.dacapo.harness.Benchmark: java.io.PrintWriter valRepFile> = null;

        <org.dacapo.harness.Benchmark: boolean validationReport> = 0;

        <org.dacapo.harness.Benchmark: java.lang.String timeoutDialation> = "1";

        $stack0 = <java.lang.System: java.io.PrintStream out>;

        <org.dacapo.harness.Benchmark: java.io.PrintStream savedOut> = $stack0;

        $stack1 = <java.lang.System: java.io.PrintStream err>;

        <org.dacapo.harness.Benchmark: java.io.PrintStream savedErr> = $stack1;

        <org.dacapo.harness.Benchmark: org.dacapo.harness.TeePrintStream err> = null;

        <org.dacapo.harness.Benchmark: org.dacapo.harness.TeePrintStream out> = null;

        return;
    }

    public void <init>(org.dacapo.parser.Config, java.io.File) throws java.lang.Exception
    {
        org.dacapo.harness.Benchmark l0;
        org.dacapo.parser.Config l1;
        java.io.File l2;

        l0 := @this: org.dacapo.harness.Benchmark;

        l1 := @parameter0: org.dacapo.parser.Config;

        l2 := @parameter1: java.io.File;

        specialinvoke l0.<org.dacapo.harness.Benchmark: void <init>(org.dacapo.parser.Config,java.io.File,boolean)>(l1, l2, 1);

        return;
    }

    public void <init>(org.dacapo.parser.Config, java.io.File, boolean) throws java.lang.Exception
    {
        org.dacapo.harness.Benchmark l0;
        boolean l3;
        java.io.File l2;
        org.dacapo.parser.Config l1;

        l0 := @this: org.dacapo.harness.Benchmark;

        l1 := @parameter0: org.dacapo.parser.Config;

        l2 := @parameter1: java.io.File;

        l3 := @parameter2: boolean;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        l0.<org.dacapo.harness.Benchmark: int iteration> = 0;

        <org.dacapo.harness.Benchmark: boolean silent> = l3;

        l0.<org.dacapo.harness.Benchmark: java.io.File scratch> = l2;

        l0.<org.dacapo.harness.Benchmark: org.dacapo.parser.Config config> = l1;

        specialinvoke l0.<org.dacapo.harness.Benchmark: void initialize()>();

        return;
    }

    public void augmentSystemProperties(java.util.Properties)
    {
        org.dacapo.harness.Benchmark l0;
        java.util.Properties l1;

        l0 := @this: org.dacapo.harness.Benchmark;

        l1 := @parameter0: java.util.Properties;

        return;
    }

    public static long byteCount(java.io.File) throws java.io.IOException
    {
        java.io.File l0;
        long $stack1;

        l0 := @parameter0: java.io.File;

        $stack1 = virtualinvoke l0.<java.io.File: long length()>();

        return $stack1;
    }

    public void cleanup()
    {
        boolean $stack1;
        java.io.File $stack2, $stack5;
        org.dacapo.harness.Benchmark l0;
        org.dacapo.parser.Config $stack3;
        java.lang.String $stack4;

        l0 := @this: org.dacapo.harness.Benchmark;

        $stack1 = <org.dacapo.harness.Benchmark: boolean preserve>;

        if $stack1 != 0 goto label1;

        $stack2 = new java.io.File;

        $stack5 = l0.<org.dacapo.harness.Benchmark: java.io.File scratch>;

        $stack3 = l0.<org.dacapo.harness.Benchmark: org.dacapo.parser.Config config>;

        $stack4 = $stack3.<org.dacapo.parser.Config: java.lang.String name>;

        specialinvoke $stack2.<java.io.File: void <init>(java.io.File,java.lang.String)>($stack5, $stack4);

        staticinvoke <org.dacapo.harness.Benchmark: void deleteTree(java.io.File)>($stack2);

     label1:
        return;
    }

    public static void deleteFile(java.io.File)
    {
        boolean $stack1, $stack2, $stack3;
        java.io.File l0;
        java.lang.StringBuilder $stack5, $stack7, $stack9;
        java.io.PrintStream $stack6;
        java.lang.String $stack8, $stack10;

        l0 := @parameter0: java.io.File;

        $stack1 = <org.dacapo.harness.Benchmark: boolean verbose>;

        if $stack1 == 0 goto label1;

        $stack6 = <java.lang.System: java.io.PrintStream out>;

        $stack5 = new java.lang.StringBuilder;

        specialinvoke $stack5.<java.lang.StringBuilder: void <init>()>();

        $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleting ");

        $stack8 = virtualinvoke l0.<java.io.File: java.lang.String getName()>();

        $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8);

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack6.<java.io.PrintStream: void println(java.lang.String)>($stack10);

     label1:
        $stack2 = virtualinvoke l0.<java.io.File: boolean exists()>();

        if $stack2 == 0 goto label2;

        $stack3 = virtualinvoke l0.<java.io.File: boolean isDirectory()>();

        if $stack3 != 0 goto label2;

        virtualinvoke l0.<java.io.File: boolean delete()>();

     label2:
        return;
    }

    public static void deleteTree(java.io.File)
    {
        boolean $stack3, $stack4;
        java.io.File l0, $stack8;
        java.io.File[] $stack5;
        int $stack6, l2#1;
        java.lang.StringBuilder $stack12, $stack14, $stack16;
        java.io.PrintStream $stack13;
        java.lang.String $stack15, $stack17;

        l0 := @parameter0: java.io.File;

        $stack3 = <org.dacapo.harness.Benchmark: boolean verbose>;

        if $stack3 == 0 goto label1;

        $stack13 = <java.lang.System: java.io.PrintStream out>;

        $stack12 = new java.lang.StringBuilder;

        specialinvoke $stack12.<java.lang.StringBuilder: void <init>()>();

        $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleting ");

        $stack15 = virtualinvoke l0.<java.io.File: java.lang.String getName()>();

        $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack15);

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack13.<java.io.PrintStream: void println(java.lang.String)>($stack17);

     label1:
        $stack4 = virtualinvoke l0.<java.io.File: boolean isDirectory()>();

        if $stack4 != 0 goto label2;

        virtualinvoke l0.<java.io.File: boolean delete()>();

        goto label5;

     label2:
        $stack5 = virtualinvoke l0.<java.io.File: java.io.File[] listFiles()>();

        l2#1 = 0;

     label3:
        $stack6 = lengthof $stack5;

        if l2#1 >= $stack6 goto label4;

        $stack8 = $stack5[l2#1];

        staticinvoke <org.dacapo.harness.Benchmark: void deleteTree(java.io.File)>($stack8);

        l2#1 = l2#1 + 1;

        goto label3;

     label4:
        virtualinvoke l0.<java.io.File: boolean delete()>();

     label5:
        return;
    }

    private static void enableValidationReport(java.lang.String)
    {
        java.lang.String l0;
        java.lang.Throwable $stack4;
        java.io.FileWriter $u0;
        java.io.BufferedWriter $u1;
        java.io.PrintWriter $u2;
        java.io.IOException $r0;

        l0 := @parameter0: java.lang.String;

     label1:
        <org.dacapo.harness.Benchmark: boolean validationReport> = 1;

        $u2 = new java.io.PrintWriter;

        $u1 = new java.io.BufferedWriter;

        $u0 = new java.io.FileWriter;

        specialinvoke $u0.<java.io.FileWriter: void <init>(java.lang.String,boolean)>(l0, 1);

        specialinvoke $u1.<java.io.BufferedWriter: void <init>(java.io.Writer)>($u0);

        specialinvoke $u2.<java.io.PrintWriter: void <init>(java.io.Writer)>($u1);

        <org.dacapo.harness.Benchmark: java.io.PrintWriter valRepFile> = $u2;

     label2:
        goto label4;

     label3:
        $stack4 := @caughtexception;

        $r0 = (java.io.IOException) $stack4;

        virtualinvoke $r0.<java.io.IOException: void printStackTrace()>();

        staticinvoke <java.lang.System: void exit(int)>(1);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static void extractFileResource(java.lang.String, java.io.File) throws java.io.IOException, java.io.FileNotFoundException, org.dacapo.harness.DacapoException
    {
        boolean $stack3;
        java.lang.String l0, $stack13, $stack19, $stack21;
        java.net.URL $stack4;
        java.io.BufferedInputStream $stack5;
        java.io.InputStream $stack6;
        java.io.File $stack7, l1;
        org.dacapo.harness.DacapoException $stack8;
        java.lang.StringBuilder $stack9, $stack10, $stack11, $stack12, $stack14, $stack16, $stack17, $stack18, $stack20;
        java.io.PrintStream $stack15;

        l0 := @parameter0: java.lang.String;

        l1 := @parameter1: java.io.File;

        $stack3 = <org.dacapo.harness.Benchmark: boolean verbose>;

        if $stack3 == 0 goto label1;

        $stack15 = <java.lang.System: java.io.PrintStream out>;

        $stack14 = new java.lang.StringBuilder;

        specialinvoke $stack14.<java.lang.StringBuilder: void <init>()>();

        $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Extracting file ");

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l0);

        $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" into ");

        $stack19 = virtualinvoke l1.<java.io.File: java.lang.String getCanonicalPath()>();

        $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack19);

        $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack15.<java.io.PrintStream: void println(java.lang.String)>($stack21);

     label1:
        $stack4 = staticinvoke <org.dacapo.harness.Benchmark: java.net.URL getURL(java.lang.String)>(l0);

        if $stack4 != null goto label2;

        $stack8 = new org.dacapo.harness.DacapoException;

        $stack9 = new java.lang.StringBuilder;

        specialinvoke $stack9.<java.lang.StringBuilder: void <init>()>();

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No such file: \"");

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l0);

        $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $stack8.<org.dacapo.harness.DacapoException: void <init>(java.lang.String)>($stack13);

        throw $stack8;

     label2:
        $stack5 = new java.io.BufferedInputStream;

        $stack6 = virtualinvoke $stack4.<java.net.URL: java.io.InputStream openStream()>();

        specialinvoke $stack5.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($stack6);

        $stack7 = new java.io.File;

        specialinvoke $stack7.<java.io.File: void <init>(java.io.File,java.lang.String)>(l1, l0);

        staticinvoke <org.dacapo.harness.Benchmark: void fileFromInputStream(java.io.InputStream,java.io.File)>($stack5, $stack7);

        return;
    }

    private static void fileFromInputStream(java.io.InputStream, java.io.File) throws java.io.IOException
    {
        java.io.FileOutputStream l2;
        java.io.File l1;
        java.io.BufferedOutputStream l3;
        byte[] l4;
        java.io.InputStream l0;
        int $stack6;

        l0 := @parameter0: java.io.InputStream;

        l1 := @parameter1: java.io.File;

        l2 = new java.io.FileOutputStream;

        specialinvoke l2.<java.io.FileOutputStream: void <init>(java.io.File)>(l1);

        l3 = new java.io.BufferedOutputStream;

        specialinvoke l3.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>(l2, 2048);

        l4 = newarray (byte)[2048];

     label1:
        $stack6 = virtualinvoke l0.<java.io.InputStream: int read(byte[],int,int)>(l4, 0, 2048);

        if $stack6 == -1 goto label2;

        virtualinvoke l3.<java.io.BufferedOutputStream: void write(byte[],int,int)>(l4, 0, $stack6);

        goto label1;

     label2:
        virtualinvoke l3.<java.io.BufferedOutputStream: void flush()>();

        virtualinvoke l3.<java.io.BufferedOutputStream: void close()>();

        return;
    }

    public java.lang.String fileInScratch(java.lang.String)
    {
        java.io.File $stack2, $stack3;
        org.dacapo.harness.Benchmark l0;
        java.lang.String l1, $stack4;

        l0 := @this: org.dacapo.harness.Benchmark;

        l1 := @parameter0: java.lang.String;

        $stack2 = new java.io.File;

        $stack3 = l0.<org.dacapo.harness.Benchmark: java.io.File scratch>;

        specialinvoke $stack2.<java.io.File: void <init>(java.io.File,java.lang.String)>($stack3, l1);

        $stack4 = virtualinvoke $stack2.<java.io.File: java.lang.String getPath()>();

        return $stack4;
    }

    protected int getIteration()
    {
        org.dacapo.harness.Benchmark l0;
        int $stack1;

        l0 := @this: org.dacapo.harness.Benchmark;

        $stack1 = l0.<org.dacapo.harness.Benchmark: int iteration>;

        return $stack1;
    }

    public static boolean getPreserve()
    {
        boolean $stack0;

        $stack0 = <org.dacapo.harness.Benchmark: boolean preserve>;

        return $stack0;
    }

    public static boolean getSilent()
    {
        boolean $stack0;

        $stack0 = <org.dacapo.harness.Benchmark: boolean silent>;

        return $stack0;
    }

    public static java.net.URL getURL(java.lang.String)
    {
        java.lang.Class $stack2;
        java.lang.ClassLoader $stack3;
        java.lang.String l0, $stack10;
        java.net.URL $stack4;
        boolean $stack5;
        java.lang.StringBuilder $stack6, $stack8, $stack9;
        java.io.PrintStream $stack7;

        l0 := @parameter0: java.lang.String;

        $stack2 = class "Lorg/dacapo/harness/Benchmark;";

        $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $stack4 = virtualinvoke $stack3.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>(l0);

        $stack5 = <org.dacapo.harness.Benchmark: boolean verbose>;

        if $stack5 == 0 goto label1;

        $stack7 = <java.lang.System: java.io.PrintStream out>;

        $stack6 = new java.lang.StringBuilder;

        specialinvoke $stack6.<java.lang.StringBuilder: void <init>()>();

        $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Util.getURL: returns ");

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack4);

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack7.<java.io.PrintStream: void println(java.lang.String)>($stack10);

     label1:
        return $stack4;
    }

    public static boolean getValidate()
    {
        boolean $stack0;

        $stack0 = <org.dacapo.harness.Benchmark: boolean validate>;

        return $stack0;
    }

    public static boolean getValidateOutput()
    {
        boolean $stack0;

        $stack0 = <org.dacapo.harness.Benchmark: boolean validateOutput>;

        return $stack0;
    }

    public static boolean getVerbose()
    {
        boolean $stack0;

        $stack0 = <org.dacapo.harness.Benchmark: boolean verbose>;

        return $stack0;
    }

    private void initialize() throws java.lang.Exception
    {
        org.dacapo.harness.Benchmark l0;
        java.util.Properties $stack9;
        java.lang.StringBuilder $stack10, $stack14, $stack15;
        org.dacapo.parser.Config $stack12, $stack26;
        java.lang.String $stack13, $stack16, $stack17;
        java.io.PrintStream l1, l2, $stack31, $stack38;
        org.dacapo.harness.TeePrintStream $stack20, $stack23, $stack28, l3, $stack35, l4;
        java.io.File $stack25, $stack29, $stack30, $stack36, $stack37;
        org.dacapo.harness.DacapoClassLoader $stack27;
        boolean $stack32, $stack39, l7#1, l8#4;
        java.lang.Throwable $stack42, $stack44;

        l0 := @this: org.dacapo.harness.Benchmark;

        $stack9 = staticinvoke <java.lang.System: java.util.Properties getProperties()>();

        l0.<org.dacapo.harness.Benchmark: java.util.Properties savedSystemProperties> = $stack9;

        $stack10 = new java.lang.StringBuilder;

        specialinvoke $stack10.<java.lang.StringBuilder: void <init>()>();

        $stack12 = l0.<org.dacapo.harness.Benchmark: org.dacapo.parser.Config config>;

        $stack13 = $stack12.<org.dacapo.parser.Config: java.lang.String name>;

        $stack14 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack13);

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".log");

        $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack17 = virtualinvoke l0.<org.dacapo.harness.Benchmark: java.lang.String fileInScratch(java.lang.String)>($stack16);

        staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>("java.util.logging.config.file", $stack17);

        l1 = <java.lang.System: java.io.PrintStream out>;

        entermonitor l1;

     label01:
        $stack20 = <org.dacapo.harness.Benchmark: org.dacapo.harness.TeePrintStream out>;

        if $stack20 != null goto label04;

        $stack35 = new org.dacapo.harness.TeePrintStream;

        $stack38 = <java.lang.System: java.io.PrintStream out>;

        $stack36 = new java.io.File;

        $stack37 = l0.<org.dacapo.harness.Benchmark: java.io.File scratch>;

        specialinvoke $stack36.<java.io.File: void <init>(java.io.File,java.lang.String)>($stack37, "stdout.log");

        specialinvoke $stack35.<org.dacapo.harness.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>($stack38, $stack36);

        <org.dacapo.harness.Benchmark: org.dacapo.harness.TeePrintStream out> = $stack35;

        l4 = <org.dacapo.harness.Benchmark: org.dacapo.harness.TeePrintStream out>;

        $stack39 = <org.dacapo.harness.Benchmark: boolean silent>;

        if $stack39 != 0 goto label02;

        l7#1 = 1;

        goto label03;

     label02:
        l7#1 = 0;

     label03:
        virtualinvoke l4.<org.dacapo.harness.TeePrintStream: void enableOutput(boolean)>(l7#1);

     label04:
        exitmonitor l1;

     label05:
        goto label08;

     label06:
        $stack44 := @caughtexception;

        exitmonitor l1;

     label07:
        throw $stack44;

     label08:
        l2 = <java.lang.System: java.io.PrintStream err>;

        entermonitor l2;

     label09:
        $stack23 = <org.dacapo.harness.Benchmark: org.dacapo.harness.TeePrintStream err>;

        if $stack23 != null goto label12;

        $stack28 = new org.dacapo.harness.TeePrintStream;

        $stack31 = <java.lang.System: java.io.PrintStream err>;

        $stack29 = new java.io.File;

        $stack30 = l0.<org.dacapo.harness.Benchmark: java.io.File scratch>;

        specialinvoke $stack29.<java.io.File: void <init>(java.io.File,java.lang.String)>($stack30, "stderr.log");

        specialinvoke $stack28.<org.dacapo.harness.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>($stack31, $stack29);

        <org.dacapo.harness.Benchmark: org.dacapo.harness.TeePrintStream err> = $stack28;

        l3 = <org.dacapo.harness.Benchmark: org.dacapo.harness.TeePrintStream err>;

        $stack32 = <org.dacapo.harness.Benchmark: boolean silent>;

        if $stack32 != 0 goto label10;

        l8#4 = 1;

        goto label11;

     label10:
        l8#4 = 0;

     label11:
        virtualinvoke l3.<org.dacapo.harness.TeePrintStream: void enableOutput(boolean)>(l8#4);

     label12:
        exitmonitor l2;

     label13:
        goto label16;

     label14:
        $stack42 := @caughtexception;

        exitmonitor l2;

     label15:
        throw $stack42;

     label16:
        specialinvoke l0.<org.dacapo.harness.Benchmark: void prepareJars()>();

        $stack26 = l0.<org.dacapo.harness.Benchmark: org.dacapo.parser.Config config>;

        $stack25 = l0.<org.dacapo.harness.Benchmark: java.io.File scratch>;

        $stack27 = staticinvoke <org.dacapo.harness.DacapoClassLoader: org.dacapo.harness.DacapoClassLoader create(org.dacapo.parser.Config,java.io.File)>($stack26, $stack25);

        l0.<org.dacapo.harness.Benchmark: java.lang.ClassLoader loader> = $stack27;

        virtualinvoke l0.<org.dacapo.harness.Benchmark: void prepare()>();

        return;

        catch java.lang.Throwable from label01 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label09 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    public abstract void iterate(java.lang.String) throws java.lang.Exception;

    public static int lineCount(java.io.File) throws java.io.IOException
    {
        java.io.BufferedReader l1;
        java.io.FileReader $stack3;
        java.io.File l0;
        java.lang.String $stack4;
        int l2#1;

        l0 := @parameter0: java.io.File;

        l2#1 = 0;

        l1 = new java.io.BufferedReader;

        $stack3 = new java.io.FileReader;

        specialinvoke $stack3.<java.io.FileReader: void <init>(java.io.File)>(l0);

        specialinvoke l1.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack3);

     label1:
        $stack4 = virtualinvoke l1.<java.io.BufferedReader: java.lang.String readLine()>();

        if $stack4 == null goto label2;

        l2#1 = l2#1 + 1;

        goto label1;

     label2:
        virtualinvoke l1.<java.io.BufferedReader: void close()>();

        return l2#1;
    }

    public void postIteration(java.lang.String) throws java.lang.Exception
    {
        boolean $stack2;
        org.dacapo.harness.Benchmark l0;
        java.lang.String l1;

        l0 := @this: org.dacapo.harness.Benchmark;

        l1 := @parameter0: java.lang.String;

        $stack2 = <org.dacapo.harness.Benchmark: boolean preserve>;

        if $stack2 != 0 goto label1;

        virtualinvoke l0.<org.dacapo.harness.Benchmark: void postIterationCleanup(java.lang.String)>(l1);

     label1:
        return;
    }

    protected void postIterationCleanup(java.lang.String)
    {
        org.dacapo.harness.Benchmark l0;
        java.lang.String l1, l3;
        org.dacapo.parser.Config $stack4, $stack12;
        java.util.Set $stack5;
        java.util.Iterator $stack6;
        boolean $stack7, $stack9, $stack11, $stack13;
        java.lang.Object $stack8;
        java.io.File $stack14, $stack15;

        l0 := @this: org.dacapo.harness.Benchmark;

        l1 := @parameter0: java.lang.String;

        $stack4 = l0.<org.dacapo.harness.Benchmark: org.dacapo.parser.Config config>;

        $stack5 = virtualinvoke $stack4.<org.dacapo.parser.Config: java.util.Set getOutputs(java.lang.String)>(l1);

        $stack6 = interfaceinvoke $stack5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $stack7 = interfaceinvoke $stack6.<java.util.Iterator: boolean hasNext()>();

        if $stack7 == 0 goto label4;

        $stack8 = interfaceinvoke $stack6.<java.util.Iterator: java.lang.Object next()>();

        l3 = (java.lang.String) $stack8;

        $stack9 = virtualinvoke l3.<java.lang.String: boolean equals(java.lang.Object)>("$stdout");

        if $stack9 != 0 goto label3;

        $stack11 = virtualinvoke l3.<java.lang.String: boolean equals(java.lang.Object)>("$stderr");

        if $stack11 == 0 goto label2;

        goto label3;

     label2:
        $stack12 = l0.<org.dacapo.harness.Benchmark: org.dacapo.parser.Config config>;

        $stack13 = virtualinvoke $stack12.<org.dacapo.parser.Config: boolean isKept(java.lang.String,java.lang.String)>(l1, l3);

        if $stack13 != 0 goto label3;

        $stack14 = new java.io.File;

        $stack15 = l0.<org.dacapo.harness.Benchmark: java.io.File scratch>;

        specialinvoke $stack14.<java.io.File: void <init>(java.io.File,java.lang.String)>($stack15, l3);

        staticinvoke <org.dacapo.harness.Benchmark: void deleteFile(java.io.File)>($stack14);

     label3:
        goto label1;

     label4:
        return;
    }

    public void preIteration(java.lang.String) throws java.lang.Exception
    {
        boolean $stack4, $stack5;
        org.dacapo.harness.Benchmark l0;
        int $stack6, $stack11, l3#1;
        java.lang.String l1, $stack15, $stack18;
        java.io.File $stack7;
        org.dacapo.parser.Config $stack8;
        java.lang.String[] $stack9;
        java.io.PrintStream $stack10, $stack12, $stack14;
        java.lang.StringBuilder $stack13, $stack16, $stack17;

        l0 := @this: org.dacapo.harness.Benchmark;

        l1 := @parameter0: java.lang.String;

        $stack4 = <org.dacapo.harness.Benchmark: boolean verbose>;

        if $stack4 == 0 goto label3;

        $stack8 = l0.<org.dacapo.harness.Benchmark: org.dacapo.parser.Config config>;

        $stack7 = l0.<org.dacapo.harness.Benchmark: java.io.File scratch>;

        $stack9 = virtualinvoke $stack8.<org.dacapo.parser.Config: java.lang.String[] preprocessArgs(java.lang.String,java.io.File)>(l1, $stack7);

        $stack10 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack10.<java.io.PrintStream: void print(java.lang.String)>("Benchmark parameters: ");

        l3#1 = 0;

     label1:
        $stack11 = lengthof $stack9;

        if l3#1 >= $stack11 goto label2;

        $stack14 = <java.lang.System: java.io.PrintStream out>;

        $stack13 = new java.lang.StringBuilder;

        specialinvoke $stack13.<java.lang.StringBuilder: void <init>()>();

        $stack15 = $stack9[l3#1];

        $stack16 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack15);

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack14.<java.io.PrintStream: void print(java.lang.String)>($stack18);

        l3#1 = l3#1 + 1;

        goto label1;

     label2:
        $stack12 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack12.<java.io.PrintStream: void println()>();

     label3:
        $stack5 = <org.dacapo.harness.Benchmark: boolean preserve>;

        if $stack5 == 0 goto label4;

        $stack6 = l0.<org.dacapo.harness.Benchmark: int iteration>;

        if $stack6 <= 1 goto label4;

        virtualinvoke l0.<org.dacapo.harness.Benchmark: void postIterationCleanup(java.lang.String)>(l1);

     label4:
        return;
    }

    protected void prepare() throws java.lang.Exception
    {
        java.lang.StringBuilder $stack1, $stack2, $stack5, $stack6;
        org.dacapo.harness.Benchmark l0;
        org.dacapo.parser.Config $stack3;
        java.lang.String $stack4, $stack7;
        java.io.File $stack8;

        l0 := @this: org.dacapo.harness.Benchmark;

        $stack1 = new java.lang.StringBuilder;

        specialinvoke $stack1.<java.lang.StringBuilder: void <init>()>();

        $stack2 = virtualinvoke $stack1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dat/");

        $stack3 = l0.<org.dacapo.harness.Benchmark: org.dacapo.parser.Config config>;

        $stack4 = $stack3.<org.dacapo.parser.Config: java.lang.String name>;

        $stack5 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack4);

        $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".zip");

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack8 = l0.<org.dacapo.harness.Benchmark: java.io.File scratch>;

        staticinvoke <org.dacapo.harness.Benchmark: void unpackZipFileResource(java.lang.String,java.io.File)>($stack7, $stack8);

        return;
    }

    protected void prepare(java.lang.String) throws java.lang.Exception
    {
        org.dacapo.harness.Benchmark l0;
        java.lang.String l1;

        l0 := @this: org.dacapo.harness.Benchmark;

        l1 := @parameter0: java.lang.String;

        return;
    }

    private void prepareJars() throws java.io.IOException, java.io.FileNotFoundException, org.dacapo.harness.DacapoException
    {
        java.io.File l1, $stack4, $stack21;
        java.lang.StringBuilder $stack3, $stack5, $stack6, $stack14, $stack15, $stack19;
        org.dacapo.harness.Benchmark l0;
        java.lang.String $stack7, $stack18, $stack20;
        boolean $stack8;
        org.dacapo.parser.Config $stack9, $stack11, $stack16;
        java.lang.String[] $stack10, $stack12, $stack17;
        int $stack13, l2#1;

        l0 := @this: org.dacapo.harness.Benchmark;

        l1 = new java.io.File;

        $stack3 = new java.lang.StringBuilder;

        specialinvoke $stack3.<java.lang.StringBuilder: void <init>()>();

        $stack4 = l0.<org.dacapo.harness.Benchmark: java.io.File scratch>;

        $stack5 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack4);

        $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/jar");

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke l1.<java.io.File: void <init>(java.lang.String)>($stack7);

        $stack8 = virtualinvoke l1.<java.io.File: boolean exists()>();

        if $stack8 != 0 goto label1;

        virtualinvoke l1.<java.io.File: boolean mkdir()>();

     label1:
        $stack9 = l0.<org.dacapo.harness.Benchmark: org.dacapo.parser.Config config>;

        $stack10 = $stack9.<org.dacapo.parser.Config: java.lang.String[] jars>;

        if $stack10 == null goto label3;

        l2#1 = 0;

     label2:
        $stack11 = l0.<org.dacapo.harness.Benchmark: org.dacapo.parser.Config config>;

        $stack12 = $stack11.<org.dacapo.parser.Config: java.lang.String[] jars>;

        $stack13 = lengthof $stack12;

        if l2#1 >= $stack13 goto label3;

        $stack14 = new java.lang.StringBuilder;

        specialinvoke $stack14.<java.lang.StringBuilder: void <init>()>();

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("jar/");

        $stack16 = l0.<org.dacapo.harness.Benchmark: org.dacapo.parser.Config config>;

        $stack17 = $stack16.<org.dacapo.parser.Config: java.lang.String[] jars>;

        $stack18 = $stack17[l2#1];

        $stack19 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18);

        $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack21 = l0.<org.dacapo.harness.Benchmark: java.io.File scratch>;

        staticinvoke <org.dacapo.harness.Benchmark: void extractFileResource(java.lang.String,java.io.File)>($stack20, $stack21);

        l2#1 = l2#1 + 1;

        goto label2;

     label3:
        return;
    }

    protected void revertClassLoader()
    {
        org.dacapo.harness.Benchmark l0;
        java.lang.ClassLoader $stack1, $stack3;
        java.lang.Thread $stack2;

        l0 := @this: org.dacapo.harness.Benchmark;

        $stack1 = l0.<org.dacapo.harness.Benchmark: java.lang.ClassLoader loader>;

        if $stack1 == null goto label1;

        $stack2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $stack3 = l0.<org.dacapo.harness.Benchmark: java.lang.ClassLoader savedClassLoader>;

        virtualinvoke $stack2.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>($stack3);

     label1:
        return;
    }

    public final boolean run(org.dacapo.harness.Callback, java.lang.String) throws java.lang.Exception
    {
        org.dacapo.harness.Benchmark l0;
        int $stack7, $stack8, $stack9;
        java.lang.String l2, $stack14, $stack20;
        java.io.PrintStream $stack10, $stack11, $stack27, $stack28;
        boolean $stack12, $stack18;
        org.dacapo.harness.Callback l1;
        org.dacapo.parser.Config $stack13, $stack19;
        long $stack15, $stack16, $stack17;
        java.lang.Throwable $stack31;

        l0 := @this: org.dacapo.harness.Benchmark;

        l1 := @parameter0: org.dacapo.harness.Callback;

        l2 := @parameter1: java.lang.String;

        $stack7 = l0.<org.dacapo.harness.Benchmark: int iteration>;

        $stack8 = $stack7 + 1;

        l0.<org.dacapo.harness.Benchmark: int iteration> = $stack8;

        $stack9 = l0.<org.dacapo.harness.Benchmark: int iteration>;

        if $stack9 != 1 goto label1;

        virtualinvoke l0.<org.dacapo.harness.Benchmark: void prepare(java.lang.String)>(l2);

        $stack27 = <org.dacapo.harness.Benchmark: java.io.PrintStream savedOut>;

        staticinvoke <java.lang.System: void setOut(java.io.PrintStream)>($stack27);

        $stack28 = <org.dacapo.harness.Benchmark: java.io.PrintStream savedErr>;

        staticinvoke <java.lang.System: void setErr(java.io.PrintStream)>($stack28);

     label1:
        virtualinvoke l0.<org.dacapo.harness.Benchmark: void preIteration(java.lang.String)>(l2);

        $stack10 = <org.dacapo.harness.Benchmark: java.io.PrintStream savedOut>;

        staticinvoke <java.lang.System: void setOut(java.io.PrintStream)>($stack10);

        $stack11 = <org.dacapo.harness.Benchmark: java.io.PrintStream savedErr>;

        staticinvoke <java.lang.System: void setErr(java.io.PrintStream)>($stack11);

        $stack12 = <org.dacapo.harness.Benchmark: boolean preIterationGC>;

        if $stack12 == 0 goto label2;

        staticinvoke <java.lang.System: void gc()>();

     label2:
        $stack13 = l0.<org.dacapo.harness.Benchmark: org.dacapo.parser.Config config>;

        $stack14 = $stack13.<org.dacapo.parser.Config: java.lang.String name>;

        virtualinvoke l1.<org.dacapo.harness.Callback: void start(java.lang.String)>($stack14);

        $stack15 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke l0.<org.dacapo.harness.Benchmark: void startIteration()>();

     label3:
        virtualinvoke l0.<org.dacapo.harness.Benchmark: void iterate(java.lang.String)>(l2);

     label4:
        virtualinvoke l0.<org.dacapo.harness.Benchmark: void stopIteration()>();

        goto label7;

     label5:
        $stack31 := @caughtexception;

     label6:
        virtualinvoke l0.<org.dacapo.harness.Benchmark: void stopIteration()>();

        throw $stack31;

     label7:
        $stack16 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $stack17 = $stack16 - $stack15;

        virtualinvoke l1.<org.dacapo.harness.Callback: void stop(long)>($stack17);

        $stack18 = virtualinvoke l0.<org.dacapo.harness.Benchmark: boolean validate(java.lang.String)>(l2);

        $stack19 = l0.<org.dacapo.harness.Benchmark: org.dacapo.parser.Config config>;

        $stack20 = $stack19.<org.dacapo.parser.Config: java.lang.String name>;

        virtualinvoke l1.<org.dacapo.harness.Callback: void complete(java.lang.String,boolean)>($stack20, $stack18);

        virtualinvoke l0.<org.dacapo.harness.Benchmark: void postIteration(java.lang.String)>(l2);

        return $stack18;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static void setCommandLineOptions(org.dacapo.harness.CommandLineArgs)
    {
        org.dacapo.harness.CommandLineArgs l0;
        boolean $stack1, $stack2, $stack3, $stack4, $stack5;
        java.lang.String $stack6, $stack7, $stack8;

        l0 := @parameter0: org.dacapo.harness.CommandLineArgs;

        $stack1 = virtualinvoke l0.<org.dacapo.harness.CommandLineArgs: boolean getSilent()>();

        <org.dacapo.harness.Benchmark: boolean silent> = $stack1;

        $stack2 = virtualinvoke l0.<org.dacapo.harness.CommandLineArgs: boolean getPreserve()>();

        <org.dacapo.harness.Benchmark: boolean preserve> = $stack2;

        $stack3 = virtualinvoke l0.<org.dacapo.harness.CommandLineArgs: boolean getValidate()>();

        <org.dacapo.harness.Benchmark: boolean validate> = $stack3;

        $stack4 = virtualinvoke l0.<org.dacapo.harness.CommandLineArgs: boolean getValidateOutput()>();

        <org.dacapo.harness.Benchmark: boolean validateOutput> = $stack4;

        $stack5 = virtualinvoke l0.<org.dacapo.harness.CommandLineArgs: boolean getPreIterationGC()>();

        <org.dacapo.harness.Benchmark: boolean preIterationGC> = $stack5;

        $stack6 = virtualinvoke l0.<org.dacapo.harness.CommandLineArgs: java.lang.String getTimeoutDialation()>();

        <org.dacapo.harness.Benchmark: java.lang.String timeoutDialation> = $stack6;

        $stack7 = virtualinvoke l0.<org.dacapo.harness.CommandLineArgs: java.lang.String getValidationReport()>();

        if $stack7 == null goto label1;

        $stack8 = virtualinvoke l0.<org.dacapo.harness.CommandLineArgs: java.lang.String getValidationReport()>();

        staticinvoke <org.dacapo.harness.Benchmark: void enableValidationReport(java.lang.String)>($stack8);

     label1:
        return;
    }

    public final void startIteration()
    {
        boolean $stack2, $stack7;
        java.lang.String $stack3;
        org.dacapo.harness.Benchmark l0;
        java.util.Properties $stack5, $stack19;
        java.lang.Object $stack6;
        org.dacapo.harness.TeePrintStream $stack8, $stack9, $stack11, $stack12, $stack14, $stack15;
        int $stack10;
        java.io.PrintStream $stack16;

        l0 := @this: org.dacapo.harness.Benchmark;

        $stack2 = <org.dacapo.harness.Benchmark: boolean verbose>;

        if $stack2 == 0 goto label1;

        $stack16 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack16.<java.io.PrintStream: void println(java.lang.String)>("startIteration()");

     label1:
        $stack3 = <org.dacapo.harness.Benchmark: java.lang.String timeoutDialation>;

        staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>("dacapo.timeout.dialation", $stack3);

        $stack5 = l0.<org.dacapo.harness.Benchmark: java.util.Properties savedSystemProperties>;

        $stack6 = virtualinvoke $stack5.<java.util.Properties: java.lang.Object clone()>();

        $stack19 = (java.util.Properties) $stack6;

        virtualinvoke l0.<org.dacapo.harness.Benchmark: void augmentSystemProperties(java.util.Properties)>($stack19);

        staticinvoke <java.lang.System: void setProperties(java.util.Properties)>($stack19);

        $stack7 = <org.dacapo.harness.Benchmark: boolean validateOutput>;

        if $stack7 == 0 goto label3;

        $stack8 = <org.dacapo.harness.Benchmark: org.dacapo.harness.TeePrintStream out>;

        staticinvoke <java.lang.System: void setOut(java.io.PrintStream)>($stack8);

        $stack9 = <org.dacapo.harness.Benchmark: org.dacapo.harness.TeePrintStream err>;

        staticinvoke <java.lang.System: void setErr(java.io.PrintStream)>($stack9);

        $stack10 = l0.<org.dacapo.harness.Benchmark: int iteration>;

        if $stack10 <= 1 goto label2;

        $stack14 = <org.dacapo.harness.Benchmark: org.dacapo.harness.TeePrintStream out>;

        virtualinvoke $stack14.<org.dacapo.harness.TeePrintStream: void version()>();

        $stack15 = <org.dacapo.harness.Benchmark: org.dacapo.harness.TeePrintStream err>;

        virtualinvoke $stack15.<org.dacapo.harness.TeePrintStream: void version()>();

     label2:
        $stack11 = <org.dacapo.harness.Benchmark: org.dacapo.harness.TeePrintStream out>;

        virtualinvoke $stack11.<org.dacapo.harness.TeePrintStream: void openLog()>();

        $stack12 = <org.dacapo.harness.Benchmark: org.dacapo.harness.TeePrintStream err>;

        virtualinvoke $stack12.<org.dacapo.harness.TeePrintStream: void openLog()>();

     label3:
        virtualinvoke l0.<org.dacapo.harness.Benchmark: void useBenchmarkClassLoader()>();

        return;
    }

    public final void stopIteration()
    {
        org.dacapo.harness.Benchmark l0;
        boolean $stack1, $stack3;
        java.util.Properties $stack2;
        java.io.PrintStream $stack4, $stack7, $stack8;
        org.dacapo.harness.TeePrintStream $stack5, $stack6;

        l0 := @this: org.dacapo.harness.Benchmark;

        virtualinvoke l0.<org.dacapo.harness.Benchmark: void revertClassLoader()>();

        $stack1 = <org.dacapo.harness.Benchmark: boolean validateOutput>;

        if $stack1 == 0 goto label1;

        $stack5 = <org.dacapo.harness.Benchmark: org.dacapo.harness.TeePrintStream out>;

        virtualinvoke $stack5.<org.dacapo.harness.TeePrintStream: void closeLog()>();

        $stack6 = <org.dacapo.harness.Benchmark: org.dacapo.harness.TeePrintStream err>;

        virtualinvoke $stack6.<org.dacapo.harness.TeePrintStream: void closeLog()>();

        $stack7 = <org.dacapo.harness.Benchmark: java.io.PrintStream savedOut>;

        staticinvoke <java.lang.System: void setOut(java.io.PrintStream)>($stack7);

        $stack8 = <org.dacapo.harness.Benchmark: java.io.PrintStream savedErr>;

        staticinvoke <java.lang.System: void setErr(java.io.PrintStream)>($stack8);

     label1:
        $stack2 = l0.<org.dacapo.harness.Benchmark: java.util.Properties savedSystemProperties>;

        staticinvoke <java.lang.System: void setProperties(java.util.Properties)>($stack2);

        $stack3 = <org.dacapo.harness.Benchmark: boolean verbose>;

        if $stack3 == 0 goto label2;

        $stack4 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack4.<java.io.PrintStream: void println(java.lang.String)>("stopIteration()");

     label2:
        return;
    }

    public static void unpackZipFileResource(java.lang.String, java.io.File) throws java.io.IOException, java.io.FileNotFoundException, org.dacapo.harness.DacapoException
    {
        java.lang.String l0, $stack11;
        java.net.URL $stack3;
        java.io.BufferedInputStream $stack4;
        java.io.InputStream $stack5;
        java.io.File l1;
        org.dacapo.harness.DacapoException $stack6;
        java.lang.StringBuilder $stack7, $stack8, $stack9, $stack10;

        l0 := @parameter0: java.lang.String;

        l1 := @parameter1: java.io.File;

        $stack3 = staticinvoke <org.dacapo.harness.Benchmark: java.net.URL getURL(java.lang.String)>(l0);

        if $stack3 != null goto label1;

        $stack6 = new org.dacapo.harness.DacapoException;

        $stack7 = new java.lang.StringBuilder;

        specialinvoke $stack7.<java.lang.StringBuilder: void <init>()>();

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No such zip file: \"");

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l0);

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $stack6.<org.dacapo.harness.DacapoException: void <init>(java.lang.String)>($stack11);

        throw $stack6;

     label1:
        $stack4 = new java.io.BufferedInputStream;

        $stack5 = virtualinvoke $stack3.<java.net.URL: java.io.InputStream openStream()>();

        specialinvoke $stack4.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($stack5);

        staticinvoke <org.dacapo.harness.Benchmark: void unpackZipStream(java.io.BufferedInputStream,java.io.File)>($stack4, l1);

        return;
    }

    private static void unpackZipStream(java.io.BufferedInputStream, java.io.File) throws java.io.IOException
    {
        java.util.zip.ZipInputStream l2;
        java.io.BufferedInputStream l0;
        java.util.zip.ZipEntry $stack5;
        boolean $stack6, $stack8, $stack11;
        java.io.File l1, $stack19;
        java.lang.String $stack7, $stack16, $stack18;
        java.lang.StringBuilder $stack13, $stack15, $stack17;
        java.io.PrintStream $stack14;

        l0 := @parameter0: java.io.BufferedInputStream;

        l1 := @parameter1: java.io.File;

        l2 = new java.util.zip.ZipInputStream;

        specialinvoke l2.<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>(l0);

     label1:
        $stack5 = virtualinvoke l2.<java.util.zip.ZipInputStream: java.util.zip.ZipEntry getNextEntry()>();

        if $stack5 == null goto label5;

        $stack6 = <org.dacapo.harness.Benchmark: boolean verbose>;

        if $stack6 == 0 goto label2;

        $stack14 = <java.lang.System: java.io.PrintStream out>;

        $stack13 = new java.lang.StringBuilder;

        specialinvoke $stack13.<java.lang.StringBuilder: void <init>()>();

        $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unpacking ");

        $stack16 = virtualinvoke $stack5.<java.util.zip.ZipEntry: java.lang.String getName()>();

        $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack16);

        $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack14.<java.io.PrintStream: void println(java.lang.String)>($stack18);

     label2:
        $stack19 = new java.io.File;

        $stack7 = virtualinvoke $stack5.<java.util.zip.ZipEntry: java.lang.String getName()>();

        specialinvoke $stack19.<java.io.File: void <init>(java.io.File,java.lang.String)>(l1, $stack7);

        $stack8 = virtualinvoke $stack5.<java.util.zip.ZipEntry: boolean isDirectory()>();

        if $stack8 == 0 goto label3;

        $stack11 = virtualinvoke $stack19.<java.io.File: boolean exists()>();

        if $stack11 != 0 goto label4;

        virtualinvoke $stack19.<java.io.File: boolean mkdir()>();

        goto label4;

     label3:
        staticinvoke <org.dacapo.harness.Benchmark: void fileFromInputStream(java.io.InputStream,java.io.File)>(l2, $stack19);

     label4:
        goto label1;

     label5:
        virtualinvoke l2.<java.util.zip.ZipInputStream: void close()>();

        return;
    }

    protected void useBenchmarkClassLoader()
    {
        org.dacapo.harness.Benchmark l0;
        java.lang.ClassLoader $stack1, $stack3, $stack5;
        java.lang.Thread $stack2, $stack4;

        l0 := @this: org.dacapo.harness.Benchmark;

        $stack1 = l0.<org.dacapo.harness.Benchmark: java.lang.ClassLoader loader>;

        if $stack1 == null goto label1;

        $stack2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $stack3 = virtualinvoke $stack2.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        l0.<org.dacapo.harness.Benchmark: java.lang.ClassLoader savedClassLoader> = $stack3;

        $stack4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $stack5 = l0.<org.dacapo.harness.Benchmark: java.lang.ClassLoader loader>;

        virtualinvoke $stack4.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>($stack5);

     label1:
        return;
    }

    public boolean validate(java.lang.String)
    {
        boolean $stack18, $stack19, $stack20, $stack25, $stack30, $stack40, $stack41, $stack56, $stack60, $stack92, $stack95, $stack128, $stack130, $stack135, $stack136, $stack137, $stack155, $stack156, $stack182, l13#1, $stack24#4, $stack134#7, $stack32#29, $stack94#35, $stack34#49, $stack58#53, $stack36#67;
        org.dacapo.harness.Benchmark l0;
        java.lang.String l1, l3, $stack46, $stack52, $stack68, $stack77, $stack85, $stack103, $stack112, $stack120, $stack125, $stack126, $stack133, $stack145, $stack154, $stack166, $stack171, $stack175, $stack185, $stack192, $stack199, l14#6;
        org.dacapo.parser.Config $stack21, $stack29, $stack53, $stack89, $stack124, $stack127, $stack129, $stack170, $stack31#14, $stack33#40, $stack35#58;
        java.util.Set $stack22;
        java.util.Iterator $stack23;
        java.io.PrintWriter $stack26, $stack79, $stack114, $stack160, $stack168;
        java.lang.Object $stack28;
        java.io.File $stack39, $stack55, $stack91, $stack131, $u5, $u11, $u17;
        java.io.PrintStream $stack43, $stack48, $stack65, $stack70, $stack100, $stack105, $stack142, $stack147, $stack180, $stack189, $stack196;
        java.lang.StringBuilder $stack44, $stack45, $stack49, $stack50, $stack51, $stack66, $stack67, $stack71, $stack72, $stack73, $stack74, $stack75, $stack76, $stack80, $stack81, $stack82, $stack83, $stack84, $stack101, $stack102, $stack106, $stack107, $stack108, $stack109, $stack110, $stack111, $stack115, $stack116, $stack117, $stack118, $stack119, $stack143, $stack144, $stack148, $stack149, $stack150, $stack151, $stack152, $stack153, $stack161, $stack162, $stack163, $stack164, $stack165, $stack169, $stack172, $stack173, $stack174, $stack181, $stack183, $stack184, $stack190, $stack191, $stack197, $stack198, $u0, $u1, $u2, $u3, $u4, $u7, $u8, $u9, $u10, $u13, $u14, $u15, $u16, $u18, $u19;
        long $stack54, $stack57, l16#52;
        byte $stack59;
        int $stack90, $stack93, l15#34;
        byte[] $stack132;
        java.lang.Throwable $stack186, $stack187, $stack193, $stack194, $stack200, $stack201;
        java.io.FileNotFoundException $u6, $u12;
        java.io.IOException $r0, $r1, $r2;

        l0 := @this: org.dacapo.harness.Benchmark;

        l1 := @parameter0: java.lang.String;

        $stack18 = <org.dacapo.harness.Benchmark: boolean verbose>;

        if $stack18 == 0 goto label01;

        $stack180 = <java.lang.System: java.io.PrintStream out>;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack181 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("validate(");

        $stack182 = <org.dacapo.harness.Benchmark: boolean validate>;

        $stack183 = virtualinvoke $stack181.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($stack182);

        $stack184 = virtualinvoke $stack183.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $stack185 = virtualinvoke $stack184.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack180.<java.io.PrintStream: void println(java.lang.String)>($stack185);

     label01:
        $stack19 = <org.dacapo.harness.Benchmark: boolean validate>;

        if $stack19 != 0 goto label02;

        return 1;

     label02:
        $stack20 = <org.dacapo.harness.Benchmark: boolean validationReport>;

        if $stack20 == 0 goto label03;

        $stack168 = <org.dacapo.harness.Benchmark: java.io.PrintWriter valRepFile>;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack169 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Validating ");

        $stack170 = l0.<org.dacapo.harness.Benchmark: org.dacapo.parser.Config config>;

        $stack171 = $stack170.<org.dacapo.parser.Config: java.lang.String name>;

        $stack172 = virtualinvoke $stack169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack171);

        $stack173 = virtualinvoke $stack172.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $stack174 = virtualinvoke $stack173.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l1);

        $stack175 = virtualinvoke $stack174.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack168.<java.io.PrintWriter: void println(java.lang.String)>($stack175);

     label03:
        l13#1 = 1;

        $stack21 = l0.<org.dacapo.harness.Benchmark: org.dacapo.parser.Config config>;

        $stack22 = virtualinvoke $stack21.<org.dacapo.parser.Config: java.util.Set getOutputs(java.lang.String)>(l1);

        $stack23 = interfaceinvoke $stack22.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $stack24#4 = interfaceinvoke $stack23.<java.util.Iterator: boolean hasNext()>();

        if $stack24#4 == 0 goto label34;

        $stack28 = interfaceinvoke $stack23.<java.util.Iterator: java.lang.Object next()>();

        l3 = (java.lang.String) $stack28;

        $stack29 = l0.<org.dacapo.harness.Benchmark: org.dacapo.parser.Config config>;

        $stack30 = virtualinvoke $stack29.<org.dacapo.parser.Config: boolean hasDigest(java.lang.String,java.lang.String)>(l1, l3);

        if $stack30 == 0 goto label13;

        $stack124 = l0.<org.dacapo.harness.Benchmark: org.dacapo.parser.Config config>;

        $stack125 = virtualinvoke $stack124.<org.dacapo.parser.Config: java.lang.String getDigest(java.lang.String,java.lang.String)>(l1, l3);

     label05:
        $stack126 = virtualinvoke l0.<org.dacapo.harness.Benchmark: java.lang.String fileInScratch(java.lang.String)>(l3);

        $stack127 = l0.<org.dacapo.harness.Benchmark: org.dacapo.parser.Config config>;

        $stack128 = virtualinvoke $stack127.<org.dacapo.parser.Config: boolean isTextFile(java.lang.String,java.lang.String)>(l1, l3);

        $stack129 = l0.<org.dacapo.harness.Benchmark: org.dacapo.parser.Config config>;

        $stack130 = virtualinvoke $stack129.<org.dacapo.parser.Config: boolean filterScratch(java.lang.String,java.lang.String)>(l1, l3);

        $stack131 = l0.<org.dacapo.harness.Benchmark: java.io.File scratch>;

        $stack132 = staticinvoke <org.dacapo.harness.FileDigest: byte[] get(java.lang.String,boolean,boolean,java.io.File)>($stack126, $stack128, $stack130, $stack131);

        $stack133 = staticinvoke <org.dacapo.harness.Digest: java.lang.String toString(byte[])>($stack132);

        l14#6 = $stack133;

     label06:
        goto label09;

     label07:
        $stack201 := @caughtexception;

        l14#6 = "<File not found>";

        goto label09;

     label08:
        $stack200 := @caughtexception;

        l14#6 = "<IO exception>";

        $r0 = (java.io.IOException) $stack200;

        virtualinvoke $r0.<java.io.IOException: void printStackTrace()>();

     label09:
        $stack134#7 = <org.dacapo.harness.Benchmark: boolean validationReport>;

        if $stack134#7 == 0 goto label10;

        $stack160 = <org.dacapo.harness.Benchmark: java.io.PrintWriter valRepFile>;

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        $stack161 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  \"");

        $stack162 = virtualinvoke $stack161.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l3);

        $stack163 = virtualinvoke $stack162.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" digest 0x");

        $stack164 = virtualinvoke $stack163.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l14#6);

        $stack165 = virtualinvoke $stack164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $stack166 = virtualinvoke $stack165.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack160.<java.io.PrintWriter: void println(java.lang.String)>($stack166);

     label10:
        $stack135 = <org.dacapo.harness.Benchmark: boolean validateOutput>;

        if $stack135 != 0 goto label11;

        $stack155 = virtualinvoke l3.<java.lang.String: boolean equals(java.lang.Object)>("$stdout");

        if $stack155 != 0 goto label13;

        $stack156 = virtualinvoke l3.<java.lang.String: boolean equals(java.lang.Object)>("$stderr");

        if $stack156 == 0 goto label11;

        goto label13;

     label11:
        $stack136 = virtualinvoke l14#6.<java.lang.String: boolean equals(java.lang.Object)>($stack125);

        if $stack136 != 0 goto label12;

        l13#1 = 0;

        $stack147 = <java.lang.System: java.io.PrintStream err>;

        $u3 = new java.lang.StringBuilder;

        specialinvoke $u3.<java.lang.StringBuilder: void <init>()>();

        $stack148 = virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Digest validation failed for ");

        $stack149 = virtualinvoke $stack148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l3);

        $stack150 = virtualinvoke $stack149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", expecting 0x");

        $stack151 = virtualinvoke $stack150.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack125);

        $stack152 = virtualinvoke $stack151.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" found 0x");

        $stack153 = virtualinvoke $stack152.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l14#6);

        $stack154 = virtualinvoke $stack153.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack147.<java.io.PrintStream: void println(java.lang.String)>($stack154);

        goto label13;

     label12:
        $stack137 = <org.dacapo.harness.Benchmark: boolean verbose>;

        if $stack137 == 0 goto label13;

        $stack142 = <java.lang.System: java.io.PrintStream out>;

        $u4 = new java.lang.StringBuilder;

        specialinvoke $u4.<java.lang.StringBuilder: void <init>()>();

        $stack143 = virtualinvoke $u4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Digest validation succeeded for ");

        $stack144 = virtualinvoke $stack143.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l3);

        $stack145 = virtualinvoke $stack144.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack142.<java.io.PrintStream: void println(java.lang.String)>($stack145);

     label13:
        $stack31#14 = l0.<org.dacapo.harness.Benchmark: org.dacapo.parser.Config config>;

        $stack32#29 = virtualinvoke $stack31#14.<org.dacapo.parser.Config: boolean hasLines(java.lang.String,java.lang.String)>(l1, l3);

        if $stack32#29 == 0 goto label22;

        $stack89 = l0.<org.dacapo.harness.Benchmark: org.dacapo.parser.Config config>;

        $stack90 = virtualinvoke $stack89.<org.dacapo.parser.Config: int getLines(java.lang.String,java.lang.String)>(l1, l3);

     label14:
        $u5 = new java.io.File;

        $stack91 = l0.<org.dacapo.harness.Benchmark: java.io.File scratch>;

        specialinvoke $u5.<java.io.File: void <init>(java.io.File,java.lang.String)>($stack91, l3);

        $stack92 = virtualinvoke $u5.<java.io.File: boolean exists()>();

        if $stack92 != 0 goto label15;

        $u6 = new java.io.FileNotFoundException;

        specialinvoke $u6.<java.io.FileNotFoundException: void <init>()>();

        throw $u6;

     label15:
        $stack93 = staticinvoke <org.dacapo.harness.Benchmark: int lineCount(java.io.File)>($u5);

        l15#34 = $stack93;

     label16:
        goto label19;

     label17:
        $stack194 := @caughtexception;

        $stack196 = <java.lang.System: java.io.PrintStream err>;

        $u7 = new java.lang.StringBuilder;

        specialinvoke $u7.<java.lang.StringBuilder: void <init>()>();

        $stack197 = virtualinvoke $u7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File not found, ");

        $stack198 = virtualinvoke $stack197.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l3);

        $stack199 = virtualinvoke $stack198.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack196.<java.io.PrintStream: void println(java.lang.String)>($stack199);

        l15#34 = -1;

        goto label19;

     label18:
        $stack193 := @caughtexception;

        $r1 = (java.io.IOException) $stack193;

        virtualinvoke $r1.<java.io.IOException: void printStackTrace()>();

        l15#34 = -1;

     label19:
        $stack94#35 = <org.dacapo.harness.Benchmark: boolean validationReport>;

        if $stack94#35 == 0 goto label20;

        $stack114 = <org.dacapo.harness.Benchmark: java.io.PrintWriter valRepFile>;

        $u8 = new java.lang.StringBuilder;

        specialinvoke $u8.<java.lang.StringBuilder: void <init>()>();

        $stack115 = virtualinvoke $u8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  \"");

        $stack116 = virtualinvoke $stack115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l3);

        $stack117 = virtualinvoke $stack116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" lines ");

        $stack118 = virtualinvoke $stack117.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(l15#34);

        $stack119 = virtualinvoke $stack118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $stack120 = virtualinvoke $stack119.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack114.<java.io.PrintWriter: void println(java.lang.String)>($stack120);

     label20:
        if l15#34 == $stack90 goto label21;

        l13#1 = 0;

        $stack105 = <java.lang.System: java.io.PrintStream err>;

        $u9 = new java.lang.StringBuilder;

        specialinvoke $u9.<java.lang.StringBuilder: void <init>()>();

        $stack106 = virtualinvoke $u9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Line count validation failed for ");

        $stack107 = virtualinvoke $stack106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l3);

        $stack108 = virtualinvoke $stack107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", expecting ");

        $stack109 = virtualinvoke $stack108.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack90);

        $stack110 = virtualinvoke $stack109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" found ");

        $stack111 = virtualinvoke $stack110.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(l15#34);

        $stack112 = virtualinvoke $stack111.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack105.<java.io.PrintStream: void println(java.lang.String)>($stack112);

        goto label22;

     label21:
        $stack95 = <org.dacapo.harness.Benchmark: boolean verbose>;

        if $stack95 == 0 goto label22;

        $stack100 = <java.lang.System: java.io.PrintStream out>;

        $u10 = new java.lang.StringBuilder;

        specialinvoke $u10.<java.lang.StringBuilder: void <init>()>();

        $stack101 = virtualinvoke $u10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Line count validation succeeded for ");

        $stack102 = virtualinvoke $stack101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l3);

        $stack103 = virtualinvoke $stack102.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack100.<java.io.PrintStream: void println(java.lang.String)>($stack103);

     label22:
        $stack33#40 = l0.<org.dacapo.harness.Benchmark: org.dacapo.parser.Config config>;

        $stack34#49 = virtualinvoke $stack33#40.<org.dacapo.parser.Config: boolean hasBytes(java.lang.String,java.lang.String)>(l1, l3);

        if $stack34#49 == 0 goto label31;

        $stack53 = l0.<org.dacapo.harness.Benchmark: org.dacapo.parser.Config config>;

        $stack54 = virtualinvoke $stack53.<org.dacapo.parser.Config: long getBytes(java.lang.String,java.lang.String)>(l1, l3);

     label23:
        $u11 = new java.io.File;

        $stack55 = l0.<org.dacapo.harness.Benchmark: java.io.File scratch>;

        specialinvoke $u11.<java.io.File: void <init>(java.io.File,java.lang.String)>($stack55, l3);

        $stack56 = virtualinvoke $u11.<java.io.File: boolean exists()>();

        if $stack56 != 0 goto label24;

        $u12 = new java.io.FileNotFoundException;

        specialinvoke $u12.<java.io.FileNotFoundException: void <init>()>();

        throw $u12;

     label24:
        $stack57 = staticinvoke <org.dacapo.harness.Benchmark: long byteCount(java.io.File)>($u11);

        l16#52 = $stack57;

     label25:
        goto label28;

     label26:
        $stack187 := @caughtexception;

        $stack189 = <java.lang.System: java.io.PrintStream err>;

        $u13 = new java.lang.StringBuilder;

        specialinvoke $u13.<java.lang.StringBuilder: void <init>()>();

        $stack190 = virtualinvoke $u13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File not found, ");

        $stack191 = virtualinvoke $stack190.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l3);

        $stack192 = virtualinvoke $stack191.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack189.<java.io.PrintStream: void println(java.lang.String)>($stack192);

        l16#52 = -1L;

        goto label28;

     label27:
        $stack186 := @caughtexception;

        $r2 = (java.io.IOException) $stack186;

        virtualinvoke $r2.<java.io.IOException: void printStackTrace()>();

        l16#52 = -1L;

     label28:
        $stack58#53 = <org.dacapo.harness.Benchmark: boolean validationReport>;

        if $stack58#53 == 0 goto label29;

        $stack79 = <org.dacapo.harness.Benchmark: java.io.PrintWriter valRepFile>;

        $u14 = new java.lang.StringBuilder;

        specialinvoke $u14.<java.lang.StringBuilder: void <init>()>();

        $stack80 = virtualinvoke $u14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  \"");

        $stack81 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l3);

        $stack82 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" bytes ");

        $stack83 = virtualinvoke $stack82.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l16#52);

        $stack84 = virtualinvoke $stack83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $stack85 = virtualinvoke $stack84.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack79.<java.io.PrintWriter: void println(java.lang.String)>($stack85);

     label29:
        $stack59 = l16#52 cmp $stack54;

        if $stack59 == 0 goto label30;

        l13#1 = 0;

        $stack70 = <java.lang.System: java.io.PrintStream err>;

        $u15 = new java.lang.StringBuilder;

        specialinvoke $u15.<java.lang.StringBuilder: void <init>()>();

        $stack71 = virtualinvoke $u15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Byte count validation failed for ");

        $stack72 = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l3);

        $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", expecting ");

        $stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack54);

        $stack75 = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" found ");

        $stack76 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l16#52);

        $stack77 = virtualinvoke $stack76.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack70.<java.io.PrintStream: void println(java.lang.String)>($stack77);

        goto label31;

     label30:
        $stack60 = <org.dacapo.harness.Benchmark: boolean verbose>;

        if $stack60 == 0 goto label31;

        $stack65 = <java.lang.System: java.io.PrintStream out>;

        $u16 = new java.lang.StringBuilder;

        specialinvoke $u16.<java.lang.StringBuilder: void <init>()>();

        $stack66 = virtualinvoke $u16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Byte count validation succeeded for ");

        $stack67 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l3);

        $stack68 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack65.<java.io.PrintStream: void println(java.lang.String)>($stack68);

     label31:
        $stack35#58 = l0.<org.dacapo.harness.Benchmark: org.dacapo.parser.Config config>;

        $stack36#67 = virtualinvoke $stack35#58.<org.dacapo.parser.Config: boolean checkExists(java.lang.String,java.lang.String)>(l1, l3);

        if $stack36#67 == 0 goto label33;

        $u17 = new java.io.File;

        $stack39 = l0.<org.dacapo.harness.Benchmark: java.io.File scratch>;

        specialinvoke $u17.<java.io.File: void <init>(java.io.File,java.lang.String)>($stack39, l3);

        $stack40 = virtualinvoke $u17.<java.io.File: boolean exists()>();

        if $stack40 != 0 goto label32;

        $stack48 = <java.lang.System: java.io.PrintStream err>;

        $u18 = new java.lang.StringBuilder;

        specialinvoke $u18.<java.lang.StringBuilder: void <init>()>();

        $stack49 = virtualinvoke $u18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected file ");

        $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l3);

        $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not exist");

        $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack48.<java.io.PrintStream: void println(java.lang.String)>($stack52);

        l13#1 = 0;

        goto label33;

     label32:
        $stack41 = <org.dacapo.harness.Benchmark: boolean verbose>;

        if $stack41 == 0 goto label33;

        $stack43 = <java.lang.System: java.io.PrintStream out>;

        $u19 = new java.lang.StringBuilder;

        specialinvoke $u19.<java.lang.StringBuilder: void <init>()>();

        $stack44 = virtualinvoke $u19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Existence validation succeeded for ");

        $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l3);

        $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack43.<java.io.PrintStream: void println(java.lang.String)>($stack46);

     label33:
        goto label04;

     label34:
        $stack25 = <org.dacapo.harness.Benchmark: boolean validationReport>;

        if $stack25 == 0 goto label35;

        $stack26 = <org.dacapo.harness.Benchmark: java.io.PrintWriter valRepFile>;

        virtualinvoke $stack26.<java.io.PrintWriter: void flush()>();

     label35:
        return l13#1;

        catch java.io.FileNotFoundException from label05 to label06 with label07;
        catch java.io.IOException from label05 to label06 with label08;
        catch java.io.FileNotFoundException from label14 to label16 with label17;
        catch java.io.IOException from label14 to label16 with label18;
        catch java.io.FileNotFoundException from label23 to label25 with label26;
        catch java.io.IOException from label23 to label25 with label27;
    }
}
