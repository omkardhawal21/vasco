public abstract class org.slf4j.helpers.MarkerIgnoringBase extends org.slf4j.helpers.NamedLoggerBase implements org.slf4j.Logger
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.slf4j.helpers.MarkerIgnoringBase l0;

        l0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        specialinvoke l0.<org.slf4j.helpers.NamedLoggerBase: void <init>()>();

        return;
    }

    public void debug(org.slf4j.Marker, java.lang.String)
    {
        org.slf4j.helpers.MarkerIgnoringBase l0;
        java.lang.String l2;
        org.slf4j.Marker l1;

        l0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        l1 := @parameter0: org.slf4j.Marker;

        l2 := @parameter1: java.lang.String;

        virtualinvoke l0.<org.slf4j.helpers.MarkerIgnoringBase: void debug(java.lang.String)>(l2);

        return;
    }

    public void debug(org.slf4j.Marker, java.lang.String, java.lang.Object)
    {
        org.slf4j.helpers.MarkerIgnoringBase l0;
        java.lang.String l2;
        java.lang.Object l3;
        org.slf4j.Marker l1;

        l0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        l1 := @parameter0: org.slf4j.Marker;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: java.lang.Object;

        virtualinvoke l0.<org.slf4j.helpers.MarkerIgnoringBase: void debug(java.lang.String,java.lang.Object)>(l2, l3);

        return;
    }

    public void debug(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.slf4j.helpers.MarkerIgnoringBase l0;
        java.lang.String l2;
        java.lang.Object l3, l4;
        org.slf4j.Marker l1;

        l0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        l1 := @parameter0: org.slf4j.Marker;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: java.lang.Object;

        l4 := @parameter3: java.lang.Object;

        virtualinvoke l0.<org.slf4j.helpers.MarkerIgnoringBase: void debug(java.lang.String,java.lang.Object,java.lang.Object)>(l2, l3, l4);

        return;
    }

    public transient void debug(org.slf4j.Marker, java.lang.String, java.lang.Object[])
    {
        org.slf4j.helpers.MarkerIgnoringBase l0;
        java.lang.String l2;
        java.lang.Object[] l3;
        org.slf4j.Marker l1;

        l0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        l1 := @parameter0: org.slf4j.Marker;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: java.lang.Object[];

        virtualinvoke l0.<org.slf4j.helpers.MarkerIgnoringBase: void debug(java.lang.String,java.lang.Object[])>(l2, l3);

        return;
    }

    public void debug(org.slf4j.Marker, java.lang.String, java.lang.Throwable)
    {
        org.slf4j.helpers.MarkerIgnoringBase l0;
        java.lang.String l2;
        java.lang.Throwable l3;
        org.slf4j.Marker l1;

        l0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        l1 := @parameter0: org.slf4j.Marker;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: java.lang.Throwable;

        virtualinvoke l0.<org.slf4j.helpers.MarkerIgnoringBase: void debug(java.lang.String,java.lang.Throwable)>(l2, l3);

        return;
    }

    public void error(org.slf4j.Marker, java.lang.String)
    {
        org.slf4j.helpers.MarkerIgnoringBase l0;
        java.lang.String l2;
        org.slf4j.Marker l1;

        l0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        l1 := @parameter0: org.slf4j.Marker;

        l2 := @parameter1: java.lang.String;

        virtualinvoke l0.<org.slf4j.helpers.MarkerIgnoringBase: void error(java.lang.String)>(l2);

        return;
    }

    public void error(org.slf4j.Marker, java.lang.String, java.lang.Object)
    {
        org.slf4j.helpers.MarkerIgnoringBase l0;
        java.lang.String l2;
        java.lang.Object l3;
        org.slf4j.Marker l1;

        l0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        l1 := @parameter0: org.slf4j.Marker;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: java.lang.Object;

        virtualinvoke l0.<org.slf4j.helpers.MarkerIgnoringBase: void error(java.lang.String,java.lang.Object)>(l2, l3);

        return;
    }

    public void error(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.slf4j.helpers.MarkerIgnoringBase l0;
        java.lang.String l2;
        java.lang.Object l3, l4;
        org.slf4j.Marker l1;

        l0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        l1 := @parameter0: org.slf4j.Marker;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: java.lang.Object;

        l4 := @parameter3: java.lang.Object;

        virtualinvoke l0.<org.slf4j.helpers.MarkerIgnoringBase: void error(java.lang.String,java.lang.Object,java.lang.Object)>(l2, l3, l4);

        return;
    }

    public transient void error(org.slf4j.Marker, java.lang.String, java.lang.Object[])
    {
        org.slf4j.helpers.MarkerIgnoringBase l0;
        java.lang.String l2;
        java.lang.Object[] l3;
        org.slf4j.Marker l1;

        l0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        l1 := @parameter0: org.slf4j.Marker;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: java.lang.Object[];

        virtualinvoke l0.<org.slf4j.helpers.MarkerIgnoringBase: void error(java.lang.String,java.lang.Object[])>(l2, l3);

        return;
    }

    public void error(org.slf4j.Marker, java.lang.String, java.lang.Throwable)
    {
        org.slf4j.helpers.MarkerIgnoringBase l0;
        java.lang.String l2;
        java.lang.Throwable l3;
        org.slf4j.Marker l1;

        l0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        l1 := @parameter0: org.slf4j.Marker;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: java.lang.Throwable;

        virtualinvoke l0.<org.slf4j.helpers.MarkerIgnoringBase: void error(java.lang.String,java.lang.Throwable)>(l2, l3);

        return;
    }

    public volatile java.lang.String getName()
    {
        org.slf4j.helpers.MarkerIgnoringBase l0;
        java.lang.String $stack1;

        l0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        $stack1 = specialinvoke l0.<org.slf4j.helpers.NamedLoggerBase: java.lang.String getName()>();

        return $stack1;
    }

    public void info(org.slf4j.Marker, java.lang.String)
    {
        org.slf4j.helpers.MarkerIgnoringBase l0;
        java.lang.String l2;
        org.slf4j.Marker l1;

        l0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        l1 := @parameter0: org.slf4j.Marker;

        l2 := @parameter1: java.lang.String;

        virtualinvoke l0.<org.slf4j.helpers.MarkerIgnoringBase: void info(java.lang.String)>(l2);

        return;
    }

    public void info(org.slf4j.Marker, java.lang.String, java.lang.Object)
    {
        org.slf4j.helpers.MarkerIgnoringBase l0;
        java.lang.String l2;
        java.lang.Object l3;
        org.slf4j.Marker l1;

        l0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        l1 := @parameter0: org.slf4j.Marker;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: java.lang.Object;

        virtualinvoke l0.<org.slf4j.helpers.MarkerIgnoringBase: void info(java.lang.String,java.lang.Object)>(l2, l3);

        return;
    }

    public void info(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.slf4j.helpers.MarkerIgnoringBase l0;
        java.lang.String l2;
        java.lang.Object l3, l4;
        org.slf4j.Marker l1;

        l0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        l1 := @parameter0: org.slf4j.Marker;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: java.lang.Object;

        l4 := @parameter3: java.lang.Object;

        virtualinvoke l0.<org.slf4j.helpers.MarkerIgnoringBase: void info(java.lang.String,java.lang.Object,java.lang.Object)>(l2, l3, l4);

        return;
    }

    public transient void info(org.slf4j.Marker, java.lang.String, java.lang.Object[])
    {
        org.slf4j.helpers.MarkerIgnoringBase l0;
        java.lang.String l2;
        java.lang.Object[] l3;
        org.slf4j.Marker l1;

        l0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        l1 := @parameter0: org.slf4j.Marker;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: java.lang.Object[];

        virtualinvoke l0.<org.slf4j.helpers.MarkerIgnoringBase: void info(java.lang.String,java.lang.Object[])>(l2, l3);

        return;
    }

    public void info(org.slf4j.Marker, java.lang.String, java.lang.Throwable)
    {
        org.slf4j.helpers.MarkerIgnoringBase l0;
        java.lang.String l2;
        java.lang.Throwable l3;
        org.slf4j.Marker l1;

        l0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        l1 := @parameter0: org.slf4j.Marker;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: java.lang.Throwable;

        virtualinvoke l0.<org.slf4j.helpers.MarkerIgnoringBase: void info(java.lang.String,java.lang.Throwable)>(l2, l3);

        return;
    }

    public boolean isDebugEnabled(org.slf4j.Marker)
    {
        org.slf4j.helpers.MarkerIgnoringBase l0;
        boolean $stack2;
        org.slf4j.Marker l1;

        l0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        l1 := @parameter0: org.slf4j.Marker;

        $stack2 = virtualinvoke l0.<org.slf4j.helpers.MarkerIgnoringBase: boolean isDebugEnabled()>();

        return $stack2;
    }

    public boolean isErrorEnabled(org.slf4j.Marker)
    {
        org.slf4j.helpers.MarkerIgnoringBase l0;
        boolean $stack2;
        org.slf4j.Marker l1;

        l0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        l1 := @parameter0: org.slf4j.Marker;

        $stack2 = virtualinvoke l0.<org.slf4j.helpers.MarkerIgnoringBase: boolean isErrorEnabled()>();

        return $stack2;
    }

    public boolean isInfoEnabled(org.slf4j.Marker)
    {
        org.slf4j.helpers.MarkerIgnoringBase l0;
        boolean $stack2;
        org.slf4j.Marker l1;

        l0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        l1 := @parameter0: org.slf4j.Marker;

        $stack2 = virtualinvoke l0.<org.slf4j.helpers.MarkerIgnoringBase: boolean isInfoEnabled()>();

        return $stack2;
    }

    public boolean isTraceEnabled(org.slf4j.Marker)
    {
        org.slf4j.helpers.MarkerIgnoringBase l0;
        boolean $stack2;
        org.slf4j.Marker l1;

        l0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        l1 := @parameter0: org.slf4j.Marker;

        $stack2 = virtualinvoke l0.<org.slf4j.helpers.MarkerIgnoringBase: boolean isTraceEnabled()>();

        return $stack2;
    }

    public boolean isWarnEnabled(org.slf4j.Marker)
    {
        org.slf4j.helpers.MarkerIgnoringBase l0;
        boolean $stack2;
        org.slf4j.Marker l1;

        l0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        l1 := @parameter0: org.slf4j.Marker;

        $stack2 = virtualinvoke l0.<org.slf4j.helpers.MarkerIgnoringBase: boolean isWarnEnabled()>();

        return $stack2;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $stack1, $stack4, $stack5, $stack7, $stack8;
        org.slf4j.helpers.MarkerIgnoringBase l0;
        java.lang.Class $stack2;
        java.lang.String $stack3, $stack6, $stack9;

        l0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        $stack1 = new java.lang.StringBuilder;

        specialinvoke $stack1.<java.lang.StringBuilder: void <init>()>();

        $stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>();

        $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>();

        $stack4 = virtualinvoke $stack1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack3);

        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $stack6 = virtualinvoke l0.<org.slf4j.helpers.MarkerIgnoringBase: java.lang.String getName()>();

        $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack6);

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack9;
    }

    public void trace(org.slf4j.Marker, java.lang.String)
    {
        org.slf4j.helpers.MarkerIgnoringBase l0;
        java.lang.String l2;
        org.slf4j.Marker l1;

        l0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        l1 := @parameter0: org.slf4j.Marker;

        l2 := @parameter1: java.lang.String;

        virtualinvoke l0.<org.slf4j.helpers.MarkerIgnoringBase: void trace(java.lang.String)>(l2);

        return;
    }

    public void trace(org.slf4j.Marker, java.lang.String, java.lang.Object)
    {
        org.slf4j.helpers.MarkerIgnoringBase l0;
        java.lang.String l2;
        java.lang.Object l3;
        org.slf4j.Marker l1;

        l0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        l1 := @parameter0: org.slf4j.Marker;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: java.lang.Object;

        virtualinvoke l0.<org.slf4j.helpers.MarkerIgnoringBase: void trace(java.lang.String,java.lang.Object)>(l2, l3);

        return;
    }

    public void trace(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.slf4j.helpers.MarkerIgnoringBase l0;
        java.lang.String l2;
        java.lang.Object l3, l4;
        org.slf4j.Marker l1;

        l0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        l1 := @parameter0: org.slf4j.Marker;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: java.lang.Object;

        l4 := @parameter3: java.lang.Object;

        virtualinvoke l0.<org.slf4j.helpers.MarkerIgnoringBase: void trace(java.lang.String,java.lang.Object,java.lang.Object)>(l2, l3, l4);

        return;
    }

    public transient void trace(org.slf4j.Marker, java.lang.String, java.lang.Object[])
    {
        org.slf4j.helpers.MarkerIgnoringBase l0;
        java.lang.String l2;
        java.lang.Object[] l3;
        org.slf4j.Marker l1;

        l0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        l1 := @parameter0: org.slf4j.Marker;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: java.lang.Object[];

        virtualinvoke l0.<org.slf4j.helpers.MarkerIgnoringBase: void trace(java.lang.String,java.lang.Object[])>(l2, l3);

        return;
    }

    public void trace(org.slf4j.Marker, java.lang.String, java.lang.Throwable)
    {
        org.slf4j.helpers.MarkerIgnoringBase l0;
        java.lang.String l2;
        java.lang.Throwable l3;
        org.slf4j.Marker l1;

        l0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        l1 := @parameter0: org.slf4j.Marker;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: java.lang.Throwable;

        virtualinvoke l0.<org.slf4j.helpers.MarkerIgnoringBase: void trace(java.lang.String,java.lang.Throwable)>(l2, l3);

        return;
    }

    public void warn(org.slf4j.Marker, java.lang.String)
    {
        org.slf4j.helpers.MarkerIgnoringBase l0;
        java.lang.String l2;
        org.slf4j.Marker l1;

        l0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        l1 := @parameter0: org.slf4j.Marker;

        l2 := @parameter1: java.lang.String;

        virtualinvoke l0.<org.slf4j.helpers.MarkerIgnoringBase: void warn(java.lang.String)>(l2);

        return;
    }

    public void warn(org.slf4j.Marker, java.lang.String, java.lang.Object)
    {
        org.slf4j.helpers.MarkerIgnoringBase l0;
        java.lang.String l2;
        java.lang.Object l3;
        org.slf4j.Marker l1;

        l0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        l1 := @parameter0: org.slf4j.Marker;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: java.lang.Object;

        virtualinvoke l0.<org.slf4j.helpers.MarkerIgnoringBase: void warn(java.lang.String,java.lang.Object)>(l2, l3);

        return;
    }

    public void warn(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.slf4j.helpers.MarkerIgnoringBase l0;
        java.lang.String l2;
        java.lang.Object l3, l4;
        org.slf4j.Marker l1;

        l0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        l1 := @parameter0: org.slf4j.Marker;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: java.lang.Object;

        l4 := @parameter3: java.lang.Object;

        virtualinvoke l0.<org.slf4j.helpers.MarkerIgnoringBase: void warn(java.lang.String,java.lang.Object,java.lang.Object)>(l2, l3, l4);

        return;
    }

    public transient void warn(org.slf4j.Marker, java.lang.String, java.lang.Object[])
    {
        org.slf4j.helpers.MarkerIgnoringBase l0;
        java.lang.String l2;
        java.lang.Object[] l3;
        org.slf4j.Marker l1;

        l0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        l1 := @parameter0: org.slf4j.Marker;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: java.lang.Object[];

        virtualinvoke l0.<org.slf4j.helpers.MarkerIgnoringBase: void warn(java.lang.String,java.lang.Object[])>(l2, l3);

        return;
    }

    public void warn(org.slf4j.Marker, java.lang.String, java.lang.Throwable)
    {
        org.slf4j.helpers.MarkerIgnoringBase l0;
        java.lang.String l2;
        java.lang.Throwable l3;
        org.slf4j.Marker l1;

        l0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        l1 := @parameter0: org.slf4j.Marker;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: java.lang.Throwable;

        virtualinvoke l0.<org.slf4j.helpers.MarkerIgnoringBase: void warn(java.lang.String,java.lang.Throwable)>(l2, l3);

        return;
    }

    public static void <clinit>()
    {
        <org.slf4j.helpers.MarkerIgnoringBase: long serialVersionUID> = 9044267456635152283L;

        return;
    }
}
