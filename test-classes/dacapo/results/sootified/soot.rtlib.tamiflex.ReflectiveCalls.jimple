public class soot.rtlib.tamiflex.ReflectiveCalls extends java.lang.Object
{
    private static final java.util.Set classForName;
    private static final java.util.Set classNewInstance;
    private static final java.util.Set constructorNewInstance;
    private static final java.util.Set methodInvoke;
    private static final java.util.Set fieldSet;
    private static final java.util.Set fieldGet;

    static void <clinit>()
    {
        java.util.HashSet $stack5, $stack6, $stack7, $stack8, $stack9, $stack10;
        java.util.Set $stack11, $stack13, $stack15, $stack17, $stack19, $stack21, l0, $stack29, l1, $stack39, $stack41, $stack43, $stack45, $stack47, $stack49, l2, $stack94, $stack96, $stack98, $stack100, l3, $stack108, l4, $stack118, $stack120, $stack122, $stack124;

        $stack5 = new java.util.HashSet;

        specialinvoke $stack5.<java.util.HashSet: void <init>()>();

        <soot.rtlib.tamiflex.ReflectiveCalls: java.util.Set classForName> = $stack5;

        $stack6 = new java.util.HashSet;

        specialinvoke $stack6.<java.util.HashSet: void <init>()>();

        <soot.rtlib.tamiflex.ReflectiveCalls: java.util.Set classNewInstance> = $stack6;

        $stack7 = new java.util.HashSet;

        specialinvoke $stack7.<java.util.HashSet: void <init>()>();

        <soot.rtlib.tamiflex.ReflectiveCalls: java.util.Set constructorNewInstance> = $stack7;

        $stack8 = new java.util.HashSet;

        specialinvoke $stack8.<java.util.HashSet: void <init>()>();

        <soot.rtlib.tamiflex.ReflectiveCalls: java.util.Set methodInvoke> = $stack8;

        $stack9 = new java.util.HashSet;

        specialinvoke $stack9.<java.util.HashSet: void <init>()>();

        <soot.rtlib.tamiflex.ReflectiveCalls: java.util.Set fieldSet> = $stack9;

        $stack10 = new java.util.HashSet;

        specialinvoke $stack10.<java.util.HashSet: void <init>()>();

        <soot.rtlib.tamiflex.ReflectiveCalls: java.util.Set fieldGet> = $stack10;

        $stack11 = <soot.rtlib.tamiflex.ReflectiveCalls: java.util.Set classForName>;

        interfaceinvoke $stack11.<java.util.Set: boolean add(java.lang.Object)>("0avrora.Main");

        $stack13 = <soot.rtlib.tamiflex.ReflectiveCalls: java.util.Set classForName>;

        interfaceinvoke $stack13.<java.util.Set: boolean add(java.lang.Object)>("1java.security.MessageDigestSpi");

        $stack15 = <soot.rtlib.tamiflex.ReflectiveCalls: java.util.Set classForName>;

        interfaceinvoke $stack15.<java.util.Set: boolean add(java.lang.Object)>("2org.dacapo.harness.Avrora");

        $stack17 = <soot.rtlib.tamiflex.ReflectiveCalls: java.util.Set classForName>;

        interfaceinvoke $stack17.<java.util.Set: boolean add(java.lang.Object)>("3sun.net.www.protocol.jar.Handler");

        $stack19 = <soot.rtlib.tamiflex.ReflectiveCalls: java.util.Set classNewInstance>;

        interfaceinvoke $stack19.<java.util.Set: boolean add(java.lang.Object)>("4sun.net.www.protocol.jar.Handler");

        $stack21 = <soot.rtlib.tamiflex.ReflectiveCalls: java.util.Set classForName>;

        interfaceinvoke $stack21.<java.util.Set: boolean add(java.lang.Object)>("5sun.security.provider.SHA");

        l0 = <soot.rtlib.tamiflex.ReflectiveCalls: java.util.Set classNewInstance>;

        interfaceinvoke l0.<java.util.Set: boolean add(java.lang.Object)>("6avrora.Defaults$AutoProgramReader");

        interfaceinvoke l0.<java.util.Set: boolean add(java.lang.Object)>("6avrora.actions.SimAction");

        interfaceinvoke l0.<java.util.Set: boolean add(java.lang.Object)>("6avrora.monitors.LEDMonitor");

        interfaceinvoke l0.<java.util.Set: boolean add(java.lang.Object)>("6avrora.monitors.PacketMonitor");

        interfaceinvoke l0.<java.util.Set: boolean add(java.lang.Object)>("6avrora.sim.platform.Mica2$Factory");

        interfaceinvoke l0.<java.util.Set: boolean add(java.lang.Object)>("6avrora.sim.types.SensorSimulation");

        $stack29 = <soot.rtlib.tamiflex.ReflectiveCalls: java.util.Set classNewInstance>;

        interfaceinvoke $stack29.<java.util.Set: boolean add(java.lang.Object)>("7sun.security.provider.Sun");

        l1 = <soot.rtlib.tamiflex.ReflectiveCalls: java.util.Set constructorNewInstance>;

        interfaceinvoke l1.<java.util.Set: boolean add(java.lang.Object)>("8<avrora.Defaults$AutoProgramReader: void <init>()>");

        interfaceinvoke l1.<java.util.Set: boolean add(java.lang.Object)>("8<avrora.actions.SimAction: void <init>()>");

        interfaceinvoke l1.<java.util.Set: boolean add(java.lang.Object)>("8<avrora.monitors.LEDMonitor: void <init>()>");

        interfaceinvoke l1.<java.util.Set: boolean add(java.lang.Object)>("8<avrora.monitors.PacketMonitor: void <init>()>");

        interfaceinvoke l1.<java.util.Set: boolean add(java.lang.Object)>("8<avrora.sim.platform.Mica2$Factory: void <init>()>");

        interfaceinvoke l1.<java.util.Set: boolean add(java.lang.Object)>("8<avrora.sim.types.SensorSimulation: void <init>()>");

        interfaceinvoke l1.<java.util.Set: boolean add(java.lang.Object)>("8<sun.net.www.protocol.jar.Handler: void <init>()>");

        interfaceinvoke l1.<java.util.Set: boolean add(java.lang.Object)>("8<sun.security.provider.Sun: void <init>()>");

        $stack39 = <soot.rtlib.tamiflex.ReflectiveCalls: java.util.Set constructorNewInstance>;

        interfaceinvoke $stack39.<java.util.Set: boolean add(java.lang.Object)>("9<org.dacapo.harness.Avrora: void <init>(org.dacapo.parser.Config,java.io.File)>");

        $stack41 = <soot.rtlib.tamiflex.ReflectiveCalls: java.util.Set constructorNewInstance>;

        interfaceinvoke $stack41.<java.util.Set: boolean add(java.lang.Object)>("10<sun.security.provider.SHA: void <init>()>");

        $stack43 = <soot.rtlib.tamiflex.ReflectiveCalls: java.util.Set methodInvoke>;

        interfaceinvoke $stack43.<java.util.Set: boolean add(java.lang.Object)>("11<avrora.Main: void main(java.lang.String[])>");

        $stack45 = <soot.rtlib.tamiflex.ReflectiveCalls: java.util.Set methodInvoke>;

        interfaceinvoke $stack45.<java.util.Set: boolean add(java.lang.Object)>("12<org.dacapo.harness.TestHarness: void main(java.lang.String[])>");

        $stack47 = <soot.rtlib.tamiflex.ReflectiveCalls: java.util.Set classForName>;

        interfaceinvoke $stack47.<java.util.Set: boolean add(java.lang.Object)>("0avrora.Main");

        $stack49 = <soot.rtlib.tamiflex.ReflectiveCalls: java.util.Set classForName>;

        interfaceinvoke $stack49.<java.util.Set: boolean add(java.lang.Object)>("1java.security.MessageDigestSpi");

        l2 = <soot.rtlib.tamiflex.ReflectiveCalls: java.util.Set classForName>;

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2org.apache.commons.cli.CommandLine");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2org.apache.commons.cli.CommandLineParser");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2org.apache.commons.cli.MissingArgumentException");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2org.apache.commons.cli.MissingOptionException");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2org.apache.commons.cli.Option");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2org.apache.commons.cli.OptionValidator");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2org.apache.commons.cli.Options");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2org.apache.commons.cli.ParseException");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2org.apache.commons.cli.Parser");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2org.apache.commons.cli.PosixParser");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2org.apache.commons.cli.UnrecognizedOptionException");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2org.apache.commons.cli.Util");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2org.dacapo.harness.Avrora");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2org.dacapo.harness.Benchmark");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2org.dacapo.harness.Callback$1");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2org.dacapo.harness.Callback$Mode");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2org.dacapo.harness.Callback");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2org.dacapo.harness.CommandLineArgs$Methodology");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2org.dacapo.harness.CommandLineArgs");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2org.dacapo.harness.DacapoClassLoader");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2org.dacapo.harness.DacapoException");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2org.dacapo.harness.Digest");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2org.dacapo.harness.FileDigest");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2org.dacapo.harness.TeeOutputStream");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2org.dacapo.harness.TeePrintStream");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2org.dacapo.harness.TestHarness");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2org.dacapo.parser.Config$1");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2org.dacapo.parser.Config$OutputFile");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2org.dacapo.parser.Config$Size");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2org.dacapo.parser.Config$ThreadModel");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2org.dacapo.parser.Config");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2org.dacapo.parser.ConfigFile");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2org.dacapo.parser.ConfigFileConstants");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2org.dacapo.parser.ConfigFileTokenManager");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2org.dacapo.parser.ParseException");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2org.dacapo.parser.SimpleCharStream");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2org.dacapo.parser.Token");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2org.dacapo.parser.TokenMgrError");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2soot.rtlib.tamiflex.IUnexpectedReflectiveCallHandler");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2soot.rtlib.tamiflex.OpaquePredicate");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2soot.rtlib.tamiflex.ReflectiveCalls");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2soot.rtlib.tamiflex.ReflectiveCallsWrapper");

        interfaceinvoke l2.<java.util.Set: boolean add(java.lang.Object)>("2soot.rtlib.tamiflex.SootSig");

        $stack94 = <soot.rtlib.tamiflex.ReflectiveCalls: java.util.Set classForName>;

        interfaceinvoke $stack94.<java.util.Set: boolean add(java.lang.Object)>("3org.dacapo.harness.Avrora");

        $stack96 = <soot.rtlib.tamiflex.ReflectiveCalls: java.util.Set classForName>;

        interfaceinvoke $stack96.<java.util.Set: boolean add(java.lang.Object)>("4sun.net.www.protocol.jar.Handler");

        $stack98 = <soot.rtlib.tamiflex.ReflectiveCalls: java.util.Set classNewInstance>;

        interfaceinvoke $stack98.<java.util.Set: boolean add(java.lang.Object)>("5sun.net.www.protocol.jar.Handler");

        $stack100 = <soot.rtlib.tamiflex.ReflectiveCalls: java.util.Set classForName>;

        interfaceinvoke $stack100.<java.util.Set: boolean add(java.lang.Object)>("6sun.security.provider.SHA");

        l3 = <soot.rtlib.tamiflex.ReflectiveCalls: java.util.Set classNewInstance>;

        interfaceinvoke l3.<java.util.Set: boolean add(java.lang.Object)>("7avrora.Defaults$AutoProgramReader");

        interfaceinvoke l3.<java.util.Set: boolean add(java.lang.Object)>("7avrora.actions.SimAction");

        interfaceinvoke l3.<java.util.Set: boolean add(java.lang.Object)>("7avrora.monitors.LEDMonitor");

        interfaceinvoke l3.<java.util.Set: boolean add(java.lang.Object)>("7avrora.monitors.PacketMonitor");

        interfaceinvoke l3.<java.util.Set: boolean add(java.lang.Object)>("7avrora.sim.platform.Mica2$Factory");

        interfaceinvoke l3.<java.util.Set: boolean add(java.lang.Object)>("7avrora.sim.types.SensorSimulation");

        $stack108 = <soot.rtlib.tamiflex.ReflectiveCalls: java.util.Set classNewInstance>;

        interfaceinvoke $stack108.<java.util.Set: boolean add(java.lang.Object)>("8sun.security.provider.Sun");

        l4 = <soot.rtlib.tamiflex.ReflectiveCalls: java.util.Set constructorNewInstance>;

        interfaceinvoke l4.<java.util.Set: boolean add(java.lang.Object)>("9<avrora.Defaults$AutoProgramReader: void <init>()>");

        interfaceinvoke l4.<java.util.Set: boolean add(java.lang.Object)>("9<avrora.actions.SimAction: void <init>()>");

        interfaceinvoke l4.<java.util.Set: boolean add(java.lang.Object)>("9<avrora.monitors.LEDMonitor: void <init>()>");

        interfaceinvoke l4.<java.util.Set: boolean add(java.lang.Object)>("9<avrora.monitors.PacketMonitor: void <init>()>");

        interfaceinvoke l4.<java.util.Set: boolean add(java.lang.Object)>("9<avrora.sim.platform.Mica2$Factory: void <init>()>");

        interfaceinvoke l4.<java.util.Set: boolean add(java.lang.Object)>("9<avrora.sim.types.SensorSimulation: void <init>()>");

        interfaceinvoke l4.<java.util.Set: boolean add(java.lang.Object)>("9<sun.net.www.protocol.jar.Handler: void <init>()>");

        interfaceinvoke l4.<java.util.Set: boolean add(java.lang.Object)>("9<sun.security.provider.Sun: void <init>()>");

        $stack118 = <soot.rtlib.tamiflex.ReflectiveCalls: java.util.Set constructorNewInstance>;

        interfaceinvoke $stack118.<java.util.Set: boolean add(java.lang.Object)>("10<org.dacapo.harness.Avrora: void <init>(org.dacapo.parser.Config,java.io.File)>");

        $stack120 = <soot.rtlib.tamiflex.ReflectiveCalls: java.util.Set constructorNewInstance>;

        interfaceinvoke $stack120.<java.util.Set: boolean add(java.lang.Object)>("11<sun.security.provider.SHA: void <init>()>");

        $stack122 = <soot.rtlib.tamiflex.ReflectiveCalls: java.util.Set methodInvoke>;

        interfaceinvoke $stack122.<java.util.Set: boolean add(java.lang.Object)>("12<avrora.Main: void main(java.lang.String[])>");

        $stack124 = <soot.rtlib.tamiflex.ReflectiveCalls: java.util.Set methodInvoke>;

        interfaceinvoke $stack124.<java.util.Set: boolean add(java.lang.Object)>("13<org.dacapo.harness.TestHarness: void main(java.lang.String[])>");

        return;
    }

    public void <init>()
    {
        soot.rtlib.tamiflex.ReflectiveCalls l0;

        l0 := @this: soot.rtlib.tamiflex.ReflectiveCalls;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void knownClassForName(int, java.lang.String)
    {
        java.lang.StringBuilder $stack2, $stack4, $stack5;
        java.util.Set $stack3;
        int l0;
        java.lang.String l1, $stack6;
        boolean $stack7;

        l0 := @parameter0: int;

        l1 := @parameter1: java.lang.String;

        $stack3 = <soot.rtlib.tamiflex.ReflectiveCalls: java.util.Set classForName>;

        $stack2 = new java.lang.StringBuilder;

        specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>();

        $stack4 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(l0);

        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l1);

        $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack7 = interfaceinvoke $stack3.<java.util.Set: boolean contains(java.lang.Object)>($stack6);

        if $stack7 != 0 goto label1;

        staticinvoke <soot.rtlib.tamiflex.UnexpectedReflectiveCall: void classForName(java.lang.String)>(l1);

     label1:
        return;
    }

    public static void knownClassNewInstance(int, java.lang.Class)
    {
        java.lang.StringBuilder $stack2, $stack4, $stack6;
        java.util.Set $stack3;
        int l0;
        java.lang.Class l1;
        java.lang.String $stack5, $stack7;
        boolean $stack8;

        l0 := @parameter0: int;

        l1 := @parameter1: java.lang.Class;

        $stack3 = <soot.rtlib.tamiflex.ReflectiveCalls: java.util.Set classNewInstance>;

        $stack2 = new java.lang.StringBuilder;

        specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>();

        $stack4 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(l0);

        $stack5 = virtualinvoke l1.<java.lang.Class: java.lang.String getName()>();

        $stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack5);

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack8 = interfaceinvoke $stack3.<java.util.Set: boolean contains(java.lang.Object)>($stack7);

        if $stack8 != 0 goto label1;

        staticinvoke <soot.rtlib.tamiflex.UnexpectedReflectiveCall: void classNewInstance(java.lang.Class)>(l1);

     label1:
        return;
    }

    public static void knownConstructorNewInstance(int, java.lang.reflect.Constructor)
    {
        java.lang.StringBuilder $stack2, $stack4, $stack6;
        java.util.Set $stack3;
        int l0;
        java.lang.reflect.Constructor l1;
        java.lang.String $stack5, $stack7;
        boolean $stack8;

        l0 := @parameter0: int;

        l1 := @parameter1: java.lang.reflect.Constructor;

        $stack3 = <soot.rtlib.tamiflex.ReflectiveCalls: java.util.Set constructorNewInstance>;

        $stack2 = new java.lang.StringBuilder;

        specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>();

        $stack4 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(l0);

        $stack5 = staticinvoke <soot.rtlib.tamiflex.SootSig: java.lang.String sootSignature(java.lang.reflect.Constructor)>(l1);

        $stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack5);

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack8 = interfaceinvoke $stack3.<java.util.Set: boolean contains(java.lang.Object)>($stack7);

        if $stack8 != 0 goto label1;

        staticinvoke <soot.rtlib.tamiflex.UnexpectedReflectiveCall: void constructorNewInstance(java.lang.reflect.Constructor)>(l1);

     label1:
        return;
    }

    public static void knownFieldGet(int, java.lang.Object, java.lang.reflect.Field)
    {
        java.lang.StringBuilder $stack3, $stack5, $stack7;
        java.util.Set $stack4;
        int l0;
        java.lang.reflect.Field l2;
        java.lang.String $stack6, $stack8;
        boolean $stack9;
        java.lang.Object l1;

        l0 := @parameter0: int;

        l1 := @parameter1: java.lang.Object;

        l2 := @parameter2: java.lang.reflect.Field;

        $stack4 = <soot.rtlib.tamiflex.ReflectiveCalls: java.util.Set fieldGet>;

        $stack3 = new java.lang.StringBuilder;

        specialinvoke $stack3.<java.lang.StringBuilder: void <init>()>();

        $stack5 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(l0);

        $stack6 = staticinvoke <soot.rtlib.tamiflex.SootSig: java.lang.String sootSignature(java.lang.reflect.Field)>(l2);

        $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack6);

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack9 = interfaceinvoke $stack4.<java.util.Set: boolean contains(java.lang.Object)>($stack8);

        if $stack9 != 0 goto label1;

        staticinvoke <soot.rtlib.tamiflex.UnexpectedReflectiveCall: void fieldGet(java.lang.Object,java.lang.reflect.Field)>(l1, l2);

     label1:
        return;
    }

    public static void knownFieldSet(int, java.lang.Object, java.lang.reflect.Field)
    {
        java.lang.StringBuilder $stack3, $stack5, $stack7;
        java.util.Set $stack4;
        int l0;
        java.lang.reflect.Field l2;
        java.lang.String $stack6, $stack8;
        boolean $stack9;
        java.lang.Object l1;

        l0 := @parameter0: int;

        l1 := @parameter1: java.lang.Object;

        l2 := @parameter2: java.lang.reflect.Field;

        $stack4 = <soot.rtlib.tamiflex.ReflectiveCalls: java.util.Set fieldSet>;

        $stack3 = new java.lang.StringBuilder;

        specialinvoke $stack3.<java.lang.StringBuilder: void <init>()>();

        $stack5 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(l0);

        $stack6 = staticinvoke <soot.rtlib.tamiflex.SootSig: java.lang.String sootSignature(java.lang.reflect.Field)>(l2);

        $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack6);

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack9 = interfaceinvoke $stack4.<java.util.Set: boolean contains(java.lang.Object)>($stack8);

        if $stack9 != 0 goto label1;

        staticinvoke <soot.rtlib.tamiflex.UnexpectedReflectiveCall: void fieldSet(java.lang.Object,java.lang.reflect.Field)>(l1, l2);

     label1:
        return;
    }

    public static void knownMethodInvoke(int, java.lang.Object, java.lang.reflect.Method)
    {
        java.lang.StringBuilder $stack3, $stack5, $stack7;
        java.util.Set $stack4;
        int l0;
        java.lang.Object l1;
        java.lang.reflect.Method l2;
        java.lang.String $stack6, $stack8;
        boolean $stack9;

        l0 := @parameter0: int;

        l1 := @parameter1: java.lang.Object;

        l2 := @parameter2: java.lang.reflect.Method;

        $stack4 = <soot.rtlib.tamiflex.ReflectiveCalls: java.util.Set methodInvoke>;

        $stack3 = new java.lang.StringBuilder;

        specialinvoke $stack3.<java.lang.StringBuilder: void <init>()>();

        $stack5 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(l0);

        $stack6 = staticinvoke <soot.rtlib.tamiflex.SootSig: java.lang.String sootSignature(java.lang.Object,java.lang.reflect.Method)>(l1, l2);

        $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack6);

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack9 = interfaceinvoke $stack4.<java.util.Set: boolean contains(java.lang.Object)>($stack8);

        if $stack9 != 0 goto label1;

        staticinvoke <soot.rtlib.tamiflex.UnexpectedReflectiveCall: void methodInvoke(java.lang.Object,java.lang.reflect.Method)>(l1, l2);

     label1:
        return;
    }
}
