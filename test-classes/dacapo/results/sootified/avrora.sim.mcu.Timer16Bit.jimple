public abstract class avrora.sim.mcu.Timer16Bit extends avrora.sim.mcu.AtmelInternalDevice
{
    public static final int MODE_NORMAL;
    public static final int MODE_PWM_PHASE_CORRECT_8_BIT;
    public static final int MODE_PWM_PHASE_CORRECT_9_BIT;
    public static final int MODE_PWM_PHASE_CORRECT_10_BIT;
    public static final int MODE_CTC_OCRnA;
    public static final int MODE_FASTPWM_8_BIT;
    public static final int MODE_FASTPWM_9_BIT;
    public static final int MODE_FASTPWM_10_BIT;
    public static final int MODE_PWM_PNF_ICRn;
    public static final int MODE_PWM_PNF_OCRnA;
    public static final int MODE_PWN_PHASE_CORRECT_ICRn;
    public static final int MODE_PWN_PHASE_CORRECT_OCRnA;
    public static final int MODE_CTC_ICRn;
    public static final int MODE_FASTPWM_ICRn;
    public static final int MODE_FASTPWM_OCRnA;
    public static final int MAX;
    public static final int BOTTOM;
    final avrora.sim.mcu.RegisterSet$Field ICESn_flag;
    final avrora.sim.RWRegister TCNTnH_reg;
    final avrora.sim.mcu.Timer16Bit$TCNTnRegister TCNTnL_reg;
    final avrora.sim.mcu.Timer16Bit$PairedRegister TCNTn_reg;
    final avrora.sim.mcu.Timer16Bit$OutputCompareUnit[] compareUnits;
    final avrora.sim.Simulator$Event[] tickers;
    final avrora.sim.RWRegister highTempReg;
    final avrora.sim.RWRegister ICRnH_reg;
    final avrora.sim.RWRegister ICRnL_reg;
    final avrora.sim.mcu.Timer16Bit$PairedRegister ICRn_reg;
    avrora.sim.Simulator$Event ticker;
    final avrora.sim.mcu.RegisterSet$Field WGMn;
    final avrora.sim.mcu.RegisterSet$Field CSn;
    final avrora.sim.mcu.Timer16Bit$InputCapturePin inputCapturePin;
    long period;
    boolean blockCompareMatch;
    protected final avrora.sim.clock.Clock externalClock;
    avrora.sim.clock.Clock timerClock;
    final int n;
    int OCIEnA;
    int OCIEnB;
    int OCIEnC;
    int TOIEn;
    int TOVn;
    int OCFnA;
    int OCFnB;
    int OCFnC;
    int ICFn;
    int inputCaptureInterrupt;
    protected avrora.sim.mcu.ATMegaFamily$FlagRegister xTIFR_reg;
    protected avrora.sim.mcu.ATMegaFamily$MaskRegister xTIMSK_reg;
    protected avrora.sim.mcu.ATMegaFamily$FlagRegister cTIFR_reg;
    protected avrora.sim.mcu.ATMegaFamily$MaskRegister cTIMSK_reg;
    protected int[] periods;

    protected void <init>(int, int, avrora.sim.mcu.AtmelMicrocontroller)
    {
        avrora.sim.mcu.Timer16Bit l0;
        java.lang.StringBuilder $stack5, $stack6, $stack7, $stack10, $stack11, $stack12, $stack16, $stack17, $stack18, $stack23, $stack24, $stack25, $stack26, $stack48, $stack49, $stack50, $stack55, $stack56, $stack57, $stack58, $stack61, $stack62, $stack63, $stack64, $stack67, $stack68, $stack69, $stack70, $stack73, $stack74, $stack75, $stack76;
        int l1, $stack28, l2, $stack33, $stack35, $stack37;
        java.lang.String $stack8, $stack13, $stack19, $stack27, $stack51, $stack59, $stack65, $stack71, $stack77;
        avrora.sim.mcu.AtmelMicrocontroller l3;
        avrora.sim.mcu.RegisterSet $stack9;
        avrora.sim.mcu.Timer16Bit$1 $stack14;
        avrora.sim.mcu.RegisterSet$Field $stack15, $stack21, $stack52;
        avrora.sim.mcu.Timer16Bit$2 $stack20;
        avrora.sim.mcu.MCUProperties $stack22;
        avrora.sim.mcu.Timer16Bit$InputCapturePin $stack29;
        avrora.sim.RWRegister $stack30, $stack38, $stack42, $stack43, $stack44, $stack46, $stack47, $stack60, $stack72;
        avrora.sim.mcu.Timer16Bit$OutputCompareUnit[] $stack31;
        avrora.sim.mcu.ATMegaFamily$FlagRegister $stack32, $stack34, $stack36;
        avrora.sim.mcu.Timer16Bit$TCNTnRegister $stack39, $stack41;
        avrora.sim.mcu.Timer16Bit$PairedRegister $stack40, $stack45, $stack66, $stack78;
        avrora.sim.clock.Clock $stack53, $stack54;
        avrora.sim.Simulator$Event[] $stack79;

        l0 := @this: avrora.sim.mcu.Timer16Bit;

        l1 := @parameter0: int;

        l2 := @parameter1: int;

        l3 := @parameter2: avrora.sim.mcu.AtmelMicrocontroller;

        $stack5 = new java.lang.StringBuilder;

        specialinvoke $stack5.<java.lang.StringBuilder: void <init>()>();

        $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("timer");

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(l1);

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke l0.<avrora.sim.mcu.AtmelInternalDevice: void <init>(java.lang.String,avrora.sim.mcu.AtmelMicrocontroller)>($stack8, l3);

        l0.<avrora.sim.mcu.Timer16Bit: int n> = l1;

        $stack9 = virtualinvoke l3.<avrora.sim.mcu.AtmelMicrocontroller: avrora.sim.mcu.RegisterSet getRegisterSet()>();

        virtualinvoke l0.<avrora.sim.mcu.Timer16Bit: void initValues()>();

        $stack10 = new java.lang.StringBuilder;

        specialinvoke $stack10.<java.lang.StringBuilder: void <init>()>();

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WGM");

        $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(l1);

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack14 = new avrora.sim.mcu.Timer16Bit$1;

        specialinvoke $stack14.<avrora.sim.mcu.Timer16Bit$1: void <init>(avrora.sim.mcu.Timer16Bit)>(l0);

        $stack15 = virtualinvoke $stack9.<avrora.sim.mcu.RegisterSet: avrora.sim.mcu.RegisterSet$Field installField(java.lang.String,avrora.sim.mcu.RegisterSet$Field)>($stack13, $stack14);

        l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.RegisterSet$Field WGMn> = $stack15;

        $stack16 = new java.lang.StringBuilder;

        specialinvoke $stack16.<java.lang.StringBuilder: void <init>()>();

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CS");

        $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(l1);

        $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack20 = new avrora.sim.mcu.Timer16Bit$2;

        specialinvoke $stack20.<avrora.sim.mcu.Timer16Bit$2: void <init>(avrora.sim.mcu.Timer16Bit)>(l0);

        $stack21 = virtualinvoke $stack9.<avrora.sim.mcu.RegisterSet: avrora.sim.mcu.RegisterSet$Field installField(java.lang.String,avrora.sim.mcu.RegisterSet$Field)>($stack19, $stack20);

        l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.RegisterSet$Field CSn> = $stack21;

        $stack22 = virtualinvoke l3.<avrora.sim.mcu.AtmelMicrocontroller: avrora.sim.mcu.MCUProperties getProperties()>();

        $stack23 = new java.lang.StringBuilder;

        specialinvoke $stack23.<java.lang.StringBuilder: void <init>()>();

        $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TIMER");

        $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(l1);

        $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" CAPT");

        $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack28 = virtualinvoke $stack22.<avrora.sim.mcu.MCUProperties: int getInterrupt(java.lang.String)>($stack27);

        l0.<avrora.sim.mcu.Timer16Bit: int inputCaptureInterrupt> = $stack28;

        $stack29 = new avrora.sim.mcu.Timer16Bit$InputCapturePin;

        specialinvoke $stack29.<avrora.sim.mcu.Timer16Bit$InputCapturePin: void <init>(avrora.sim.mcu.Timer16Bit)>(l0);

        l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.Timer16Bit$InputCapturePin inputCapturePin> = $stack29;

        $stack30 = new avrora.sim.RWRegister;

        specialinvoke $stack30.<avrora.sim.RWRegister: void <init>()>();

        l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister highTempReg> = $stack30;

        $stack31 = newarray (avrora.sim.mcu.Timer16Bit$OutputCompareUnit)[l2];

        l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.Timer16Bit$OutputCompareUnit[] compareUnits> = $stack31;

        $stack33 = l0.<avrora.sim.mcu.Timer16Bit: int OCFnA>;

        $stack32 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.ATMegaFamily$FlagRegister xTIFR_reg>;

        virtualinvoke l0.<avrora.sim.mcu.Timer16Bit: void newOCU(int,int,avrora.sim.mcu.Microcontroller,avrora.sim.mcu.RegisterSet,char,int,avrora.sim.mcu.ATMegaFamily$FlagRegister)>(0, l2, l3, $stack9, 65, $stack33, $stack32);

        $stack35 = l0.<avrora.sim.mcu.Timer16Bit: int OCFnB>;

        $stack34 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.ATMegaFamily$FlagRegister xTIFR_reg>;

        virtualinvoke l0.<avrora.sim.mcu.Timer16Bit: void newOCU(int,int,avrora.sim.mcu.Microcontroller,avrora.sim.mcu.RegisterSet,char,int,avrora.sim.mcu.ATMegaFamily$FlagRegister)>(1, l2, l3, $stack9, 66, $stack35, $stack34);

        $stack37 = l0.<avrora.sim.mcu.Timer16Bit: int OCFnC>;

        $stack36 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.ATMegaFamily$FlagRegister cTIFR_reg>;

        virtualinvoke l0.<avrora.sim.mcu.Timer16Bit: void newOCU(int,int,avrora.sim.mcu.Microcontroller,avrora.sim.mcu.RegisterSet,char,int,avrora.sim.mcu.ATMegaFamily$FlagRegister)>(2, l2, l3, $stack9, 67, $stack37, $stack36);

        $stack38 = new avrora.sim.RWRegister;

        specialinvoke $stack38.<avrora.sim.RWRegister: void <init>()>();

        l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister TCNTnH_reg> = $stack38;

        $stack39 = new avrora.sim.mcu.Timer16Bit$TCNTnRegister;

        specialinvoke $stack39.<avrora.sim.mcu.Timer16Bit$TCNTnRegister: void <init>(avrora.sim.mcu.Timer16Bit)>(l0);

        l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.Timer16Bit$TCNTnRegister TCNTnL_reg> = $stack39;

        $stack40 = new avrora.sim.mcu.Timer16Bit$PairedRegister;

        $stack42 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister TCNTnH_reg>;

        $stack41 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.Timer16Bit$TCNTnRegister TCNTnL_reg>;

        specialinvoke $stack40.<avrora.sim.mcu.Timer16Bit$PairedRegister: void <init>(avrora.sim.mcu.Timer16Bit,avrora.sim.RWRegister,avrora.sim.RWRegister)>(l0, $stack42, $stack41);

        l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.Timer16Bit$PairedRegister TCNTn_reg> = $stack40;

        $stack43 = new avrora.sim.RWRegister;

        specialinvoke $stack43.<avrora.sim.RWRegister: void <init>()>();

        l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister ICRnH_reg> = $stack43;

        $stack44 = new avrora.sim.RWRegister;

        specialinvoke $stack44.<avrora.sim.RWRegister: void <init>()>();

        l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister ICRnL_reg> = $stack44;

        $stack45 = new avrora.sim.mcu.Timer16Bit$PairedRegister;

        $stack47 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister ICRnL_reg>;

        $stack46 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister ICRnH_reg>;

        specialinvoke $stack45.<avrora.sim.mcu.Timer16Bit$PairedRegister: void <init>(avrora.sim.mcu.Timer16Bit,avrora.sim.RWRegister,avrora.sim.RWRegister)>(l0, $stack47, $stack46);

        l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.Timer16Bit$PairedRegister ICRn_reg> = $stack45;

        $stack48 = new java.lang.StringBuilder;

        specialinvoke $stack48.<java.lang.StringBuilder: void <init>()>();

        $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ICES");

        $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(l1);

        $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack52 = virtualinvoke $stack9.<avrora.sim.mcu.RegisterSet: avrora.sim.mcu.RegisterSet$Field getField(java.lang.String)>($stack51);

        l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.RegisterSet$Field ICESn_flag> = $stack52;

        $stack53 = virtualinvoke l3.<avrora.sim.mcu.AtmelMicrocontroller: avrora.sim.clock.Clock getClock(java.lang.String)>("external");

        l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.clock.Clock externalClock> = $stack53;

        $stack54 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.clock.Clock mainClock>;

        l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.clock.Clock timerClock> = $stack54;

        $stack55 = new java.lang.StringBuilder;

        specialinvoke $stack55.<java.lang.StringBuilder: void <init>()>();

        $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TCNT");

        $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(l1);

        $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("H");

        $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack60 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister highTempReg>;

        virtualinvoke l0.<avrora.sim.mcu.Timer16Bit: void installIOReg(java.lang.String,avrora.sim.ActiveRegister)>($stack59, $stack60);

        $stack61 = new java.lang.StringBuilder;

        specialinvoke $stack61.<java.lang.StringBuilder: void <init>()>();

        $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TCNT");

        $stack63 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(l1);

        $stack64 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("L");

        $stack65 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack66 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.Timer16Bit$PairedRegister TCNTn_reg>;

        virtualinvoke l0.<avrora.sim.mcu.Timer16Bit: void installIOReg(java.lang.String,avrora.sim.ActiveRegister)>($stack65, $stack66);

        $stack67 = new java.lang.StringBuilder;

        specialinvoke $stack67.<java.lang.StringBuilder: void <init>()>();

        $stack68 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ICR");

        $stack69 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(l1);

        $stack70 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("H");

        $stack71 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack72 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister highTempReg>;

        virtualinvoke l0.<avrora.sim.mcu.Timer16Bit: void installIOReg(java.lang.String,avrora.sim.ActiveRegister)>($stack71, $stack72);

        $stack73 = new java.lang.StringBuilder;

        specialinvoke $stack73.<java.lang.StringBuilder: void <init>()>();

        $stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ICR");

        $stack75 = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(l1);

        $stack76 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("L");

        $stack77 = virtualinvoke $stack76.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack78 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.Timer16Bit$PairedRegister ICRn_reg>;

        virtualinvoke l0.<avrora.sim.mcu.Timer16Bit: void installIOReg(java.lang.String,avrora.sim.ActiveRegister)>($stack77, $stack78);

        $stack79 = newarray (avrora.sim.Simulator$Event)[16];

        l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event[] tickers> = $stack79;

        specialinvoke l0.<avrora.sim.mcu.Timer16Bit: void installTickers()>();

        return;
    }

    static void access$100(avrora.sim.mcu.Timer16Bit, int)
    {
        avrora.sim.mcu.Timer16Bit l0;
        int l1;

        l0 := @parameter0: avrora.sim.mcu.Timer16Bit;

        l1 := @parameter1: int;

        specialinvoke l0.<avrora.sim.mcu.Timer16Bit: void resetPeriod(int)>(l1);

        return;
    }

    static void access$200(avrora.sim.mcu.Timer16Bit, int)
    {
        avrora.sim.mcu.Timer16Bit l0;
        int l1;

        l0 := @parameter0: avrora.sim.mcu.Timer16Bit;

        l1 := @parameter1: int;

        specialinvoke l0.<avrora.sim.mcu.Timer16Bit: void tickerStart(int)>(l1);

        return;
    }

    static void access$300(avrora.sim.mcu.Timer16Bit, avrora.sim.Simulator$Event, int)
    {
        avrora.sim.mcu.Timer16Bit l0;
        avrora.sim.Simulator$Event l1;
        int l2;

        l0 := @parameter0: avrora.sim.mcu.Timer16Bit;

        l1 := @parameter1: avrora.sim.Simulator$Event;

        l2 := @parameter2: int;

        specialinvoke l0.<avrora.sim.mcu.Timer16Bit: void tickerFinish(avrora.sim.Simulator$Event,int)>(l1, l2);

        return;
    }

    static void access$400(avrora.sim.mcu.Timer16Bit)
    {
        avrora.sim.mcu.Timer16Bit l0;

        l0 := @parameter0: avrora.sim.mcu.Timer16Bit;

        specialinvoke l0.<avrora.sim.mcu.Timer16Bit: void flushOCRnx()>();

        return;
    }

    void captureInput()
    {
        avrora.sim.mcu.Timer16Bit l0;
        avrora.sim.mcu.Timer16Bit$TCNTnRegister $stack1;
        byte $stack2, $stack5;
        avrora.sim.RWRegister $stack3, $stack4, $stack6;
        int $stack7, $stack11;
        avrora.sim.mcu.ATMegaFamily$FlagRegister $stack8;
        avrora.sim.AtmelInterpreter $stack9;
        avrora.sim.InterruptTable $stack10;

        l0 := @this: avrora.sim.mcu.Timer16Bit;

        $stack3 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister ICRnL_reg>;

        $stack1 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.Timer16Bit$TCNTnRegister TCNTnL_reg>;

        $stack2 = $stack1.<avrora.sim.mcu.Timer16Bit$TCNTnRegister: byte value>;

        virtualinvoke $stack3.<avrora.sim.RWRegister: void write(byte)>($stack2);

        $stack6 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister ICRnH_reg>;

        $stack4 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister TCNTnH_reg>;

        $stack5 = $stack4.<avrora.sim.RWRegister: byte value>;

        virtualinvoke $stack6.<avrora.sim.RWRegister: void write(byte)>($stack5);

        $stack8 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.ATMegaFamily$FlagRegister xTIFR_reg>;

        $stack7 = l0.<avrora.sim.mcu.Timer16Bit: int ICFn>;

        virtualinvoke $stack8.<avrora.sim.mcu.ATMegaFamily$FlagRegister: void flagBit(int)>($stack7);

        $stack9 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.AtmelInterpreter interpreter>;

        $stack10 = virtualinvoke $stack9.<avrora.sim.AtmelInterpreter: avrora.sim.InterruptTable getInterruptTable()>();

        $stack11 = l0.<avrora.sim.mcu.Timer16Bit: int inputCaptureInterrupt>;

        virtualinvoke $stack10.<avrora.sim.InterruptTable: void post(int)>($stack11);

        return;
    }

    private void flushOCRnx()
    {
        avrora.sim.mcu.Timer16Bit l0;
        avrora.sim.mcu.Timer16Bit$OutputCompareUnit[] $stack2, $stack4;
        int $stack3, l1#1;
        avrora.sim.mcu.Timer16Bit$OutputCompareUnit $stack5;

        l0 := @this: avrora.sim.mcu.Timer16Bit;

        l1#1 = 0;

     label1:
        $stack2 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.Timer16Bit$OutputCompareUnit[] compareUnits>;

        $stack3 = lengthof $stack2;

        if l1#1 >= $stack3 goto label2;

        $stack4 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.Timer16Bit$OutputCompareUnit[] compareUnits>;

        $stack5 = $stack4[l1#1];

        virtualinvoke $stack5.<avrora.sim.mcu.Timer16Bit$OutputCompareUnit: void flush()>();

        l1#1 = l1#1 + 1;

        goto label1;

     label2:
        return;
    }

    public avrora.sim.state.BooleanView getInputCapturePin()
    {
        avrora.sim.mcu.Timer16Bit l0;
        avrora.sim.mcu.Timer16Bit$InputCapturePin $stack1;

        l0 := @this: avrora.sim.mcu.Timer16Bit;

        $stack1 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.Timer16Bit$InputCapturePin inputCapturePin>;

        return $stack1;
    }

    protected abstract void initValues();

    private void installTickers()
    {
        avrora.sim.mcu.Timer16Bit l0;
        avrora.sim.mcu.Timer16Bit$OutputCompareUnit[] $stack3;
        avrora.sim.mcu.Timer16Bit$OutputCompareUnit $stack4;
        avrora.sim.mcu.Timer16Bit$BufferedRegister l1, l2;
        avrora.sim.mcu.Timer16Bit$Mode_Normal $stack5;
        avrora.sim.Simulator$Event[] $stack6, $stack9, $stack12, $stack15, $stack18, $stack21, $stack24, $stack27, $stack32, $stack35, $stack40, $stack43, $stack48, $stack51, $stack56, $stack59;
        avrora.sim.mcu.Timer16Bit$Mode_PWMPhaseCorrect $stack8, $stack11, $stack14, $stack37, $stack42;
        avrora.sim.mcu.Timer16Bit$Mode_CTC $stack17, $stack45;
        avrora.sim.mcu.Timer16Bit$Mode_FastPWM $stack20, $stack23, $stack26, $stack53, $stack58;
        avrora.sim.mcu.Timer16Bit$Mode_PWM_PNF $stack29, $stack34;
        avrora.sim.RWRegister $stack30, $stack31, $stack38, $stack39, $stack46, $stack47, $stack54, $stack55;
        avrora.sim.mcu.Timer16Bit$Mode_Reserved $stack50;

        l0 := @this: avrora.sim.mcu.Timer16Bit;

        $stack3 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.Timer16Bit$OutputCompareUnit[] compareUnits>;

        $stack4 = $stack3[0];

        l1 = $stack4.<avrora.sim.mcu.Timer16Bit$OutputCompareUnit: avrora.sim.mcu.Timer16Bit$BufferedRegister OCRnXH_reg>;

        l2 = $stack4.<avrora.sim.mcu.Timer16Bit$OutputCompareUnit: avrora.sim.mcu.Timer16Bit$BufferedRegister OCRnXL_reg>;

        $stack6 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event[] tickers>;

        $stack5 = new avrora.sim.mcu.Timer16Bit$Mode_Normal;

        specialinvoke $stack5.<avrora.sim.mcu.Timer16Bit$Mode_Normal: void <init>(avrora.sim.mcu.Timer16Bit)>(l0);

        $stack6[0] = $stack5;

        $stack9 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event[] tickers>;

        $stack8 = new avrora.sim.mcu.Timer16Bit$Mode_PWMPhaseCorrect;

        specialinvoke $stack8.<avrora.sim.mcu.Timer16Bit$Mode_PWMPhaseCorrect: void <init>(avrora.sim.mcu.Timer16Bit,int,avrora.sim.RWRegister,avrora.sim.RWRegister)>(l0, 255, null, null);

        $stack9[1] = $stack8;

        $stack12 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event[] tickers>;

        $stack11 = new avrora.sim.mcu.Timer16Bit$Mode_PWMPhaseCorrect;

        specialinvoke $stack11.<avrora.sim.mcu.Timer16Bit$Mode_PWMPhaseCorrect: void <init>(avrora.sim.mcu.Timer16Bit,int,avrora.sim.RWRegister,avrora.sim.RWRegister)>(l0, 511, null, null);

        $stack12[2] = $stack11;

        $stack15 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event[] tickers>;

        $stack14 = new avrora.sim.mcu.Timer16Bit$Mode_PWMPhaseCorrect;

        specialinvoke $stack14.<avrora.sim.mcu.Timer16Bit$Mode_PWMPhaseCorrect: void <init>(avrora.sim.mcu.Timer16Bit,int,avrora.sim.RWRegister,avrora.sim.RWRegister)>(l0, 1023, null, null);

        $stack15[3] = $stack14;

        $stack18 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event[] tickers>;

        $stack17 = new avrora.sim.mcu.Timer16Bit$Mode_CTC;

        specialinvoke $stack17.<avrora.sim.mcu.Timer16Bit$Mode_CTC: void <init>(avrora.sim.mcu.Timer16Bit,avrora.sim.RWRegister,avrora.sim.RWRegister)>(l0, l1, l2);

        $stack18[4] = $stack17;

        $stack21 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event[] tickers>;

        $stack20 = new avrora.sim.mcu.Timer16Bit$Mode_FastPWM;

        specialinvoke $stack20.<avrora.sim.mcu.Timer16Bit$Mode_FastPWM: void <init>(avrora.sim.mcu.Timer16Bit,int,avrora.sim.RWRegister,avrora.sim.RWRegister)>(l0, 255, null, null);

        $stack21[5] = $stack20;

        $stack24 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event[] tickers>;

        $stack23 = new avrora.sim.mcu.Timer16Bit$Mode_FastPWM;

        specialinvoke $stack23.<avrora.sim.mcu.Timer16Bit$Mode_FastPWM: void <init>(avrora.sim.mcu.Timer16Bit,int,avrora.sim.RWRegister,avrora.sim.RWRegister)>(l0, 511, null, null);

        $stack24[6] = $stack23;

        $stack27 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event[] tickers>;

        $stack26 = new avrora.sim.mcu.Timer16Bit$Mode_FastPWM;

        specialinvoke $stack26.<avrora.sim.mcu.Timer16Bit$Mode_FastPWM: void <init>(avrora.sim.mcu.Timer16Bit,int,avrora.sim.RWRegister,avrora.sim.RWRegister)>(l0, 1023, null, null);

        $stack27[7] = $stack26;

        $stack32 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event[] tickers>;

        $stack29 = new avrora.sim.mcu.Timer16Bit$Mode_PWM_PNF;

        $stack31 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister ICRnH_reg>;

        $stack30 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister ICRnL_reg>;

        specialinvoke $stack29.<avrora.sim.mcu.Timer16Bit$Mode_PWM_PNF: void <init>(avrora.sim.mcu.Timer16Bit,avrora.sim.RWRegister,avrora.sim.RWRegister)>(l0, $stack31, $stack30);

        $stack32[8] = $stack29;

        $stack35 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event[] tickers>;

        $stack34 = new avrora.sim.mcu.Timer16Bit$Mode_PWM_PNF;

        specialinvoke $stack34.<avrora.sim.mcu.Timer16Bit$Mode_PWM_PNF: void <init>(avrora.sim.mcu.Timer16Bit,avrora.sim.RWRegister,avrora.sim.RWRegister)>(l0, l1, l2);

        $stack35[9] = $stack34;

        $stack40 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event[] tickers>;

        $stack37 = new avrora.sim.mcu.Timer16Bit$Mode_PWMPhaseCorrect;

        $stack39 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister ICRnH_reg>;

        $stack38 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister ICRnL_reg>;

        specialinvoke $stack37.<avrora.sim.mcu.Timer16Bit$Mode_PWMPhaseCorrect: void <init>(avrora.sim.mcu.Timer16Bit,int,avrora.sim.RWRegister,avrora.sim.RWRegister)>(l0, 0, $stack39, $stack38);

        $stack40[10] = $stack37;

        $stack43 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event[] tickers>;

        $stack42 = new avrora.sim.mcu.Timer16Bit$Mode_PWMPhaseCorrect;

        specialinvoke $stack42.<avrora.sim.mcu.Timer16Bit$Mode_PWMPhaseCorrect: void <init>(avrora.sim.mcu.Timer16Bit,int,avrora.sim.RWRegister,avrora.sim.RWRegister)>(l0, 0, l1, l2);

        $stack43[11] = $stack42;

        $stack48 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event[] tickers>;

        $stack45 = new avrora.sim.mcu.Timer16Bit$Mode_CTC;

        $stack47 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister ICRnH_reg>;

        $stack46 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister ICRnL_reg>;

        specialinvoke $stack45.<avrora.sim.mcu.Timer16Bit$Mode_CTC: void <init>(avrora.sim.mcu.Timer16Bit,avrora.sim.RWRegister,avrora.sim.RWRegister)>(l0, $stack47, $stack46);

        $stack48[12] = $stack45;

        $stack51 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event[] tickers>;

        $stack50 = new avrora.sim.mcu.Timer16Bit$Mode_Reserved;

        specialinvoke $stack50.<avrora.sim.mcu.Timer16Bit$Mode_Reserved: void <init>(avrora.sim.mcu.Timer16Bit)>(l0);

        $stack51[13] = $stack50;

        $stack56 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event[] tickers>;

        $stack53 = new avrora.sim.mcu.Timer16Bit$Mode_FastPWM;

        $stack55 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister ICRnH_reg>;

        $stack54 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister ICRnL_reg>;

        specialinvoke $stack53.<avrora.sim.mcu.Timer16Bit$Mode_FastPWM: void <init>(avrora.sim.mcu.Timer16Bit,int,avrora.sim.RWRegister,avrora.sim.RWRegister)>(l0, 0, $stack55, $stack54);

        $stack56[14] = $stack53;

        $stack59 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event[] tickers>;

        $stack58 = new avrora.sim.mcu.Timer16Bit$Mode_FastPWM;

        specialinvoke $stack58.<avrora.sim.mcu.Timer16Bit$Mode_FastPWM: void <init>(avrora.sim.mcu.Timer16Bit,int,avrora.sim.RWRegister,avrora.sim.RWRegister)>(l0, 0, l1, l2);

        $stack59[15] = $stack58;

        return;
    }

    void newOCU(int, int, avrora.sim.mcu.Microcontroller, avrora.sim.mcu.RegisterSet, char, int, avrora.sim.mcu.ATMegaFamily$FlagRegister)
    {
        int l1, l2, l6;
        avrora.sim.mcu.Timer16Bit l0;
        avrora.sim.mcu.Timer16Bit$OutputCompareUnit $stack8;
        avrora.sim.mcu.Microcontroller l3;
        avrora.sim.mcu.RegisterSet l4;
        char l5;
        avrora.sim.mcu.ATMegaFamily$FlagRegister l7;
        avrora.sim.mcu.Timer16Bit$OutputCompareUnit[] $stack9;

        l0 := @this: avrora.sim.mcu.Timer16Bit;

        l1 := @parameter0: int;

        l2 := @parameter1: int;

        l3 := @parameter2: avrora.sim.mcu.Microcontroller;

        l4 := @parameter3: avrora.sim.mcu.RegisterSet;

        l5 := @parameter4: char;

        l6 := @parameter5: int;

        l7 := @parameter6: avrora.sim.mcu.ATMegaFamily$FlagRegister;

        if l1 >= l2 goto label1;

        $stack9 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.Timer16Bit$OutputCompareUnit[] compareUnits>;

        $stack8 = new avrora.sim.mcu.Timer16Bit$OutputCompareUnit;

        specialinvoke $stack8.<avrora.sim.mcu.Timer16Bit$OutputCompareUnit: void <init>(avrora.sim.mcu.Timer16Bit,avrora.sim.mcu.Microcontroller,avrora.sim.mcu.RegisterSet,char,int,avrora.sim.mcu.ATMegaFamily$FlagRegister)>(l0, l3, l4, l5, l6, l7);

        $stack9[l1] = $stack8;

     label1:
        return;
    }

    protected void overflow()
    {
        avrora.sim.mcu.Timer16Bit l0;
        avrora.sim.output.SimPrinter $stack2, $stack9;
        int $stack3, $stack5, $stack11;
        avrora.sim.mcu.ATMegaFamily$FlagRegister $stack4;
        avrora.sim.mcu.ATMegaFamily$MaskRegister $stack6;
        boolean $stack7;
        java.lang.StringBuilder $stack8, $stack10, $stack12, $stack13, $stack14, $stack15, $stack16;
        java.lang.String $stack17;

        l0 := @this: avrora.sim.mcu.Timer16Bit;

        $stack2 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.output.SimPrinter devicePrinter>;

        if $stack2 == null goto label1;

        $stack6 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.ATMegaFamily$MaskRegister xTIMSK_reg>;

        $stack5 = l0.<avrora.sim.mcu.Timer16Bit: int TOIEn>;

        $stack7 = virtualinvoke $stack6.<avrora.sim.mcu.ATMegaFamily$MaskRegister: boolean readBit(int)>($stack5);

        $stack9 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.output.SimPrinter devicePrinter>;

        $stack8 = new java.lang.StringBuilder;

        specialinvoke $stack8.<java.lang.StringBuilder: void <init>()>();

        $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timer");

        $stack11 = l0.<avrora.sim.mcu.Timer16Bit: int n>;

        $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack11);

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".overFlow (enabled: ");

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($stack7);

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack9.<avrora.sim.output.SimPrinter: void println(java.lang.String)>($stack17);

     label1:
        $stack4 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.ATMegaFamily$FlagRegister xTIFR_reg>;

        $stack3 = l0.<avrora.sim.mcu.Timer16Bit: int TOVn>;

        virtualinvoke $stack4.<avrora.sim.mcu.ATMegaFamily$FlagRegister: void flagBit(int)>($stack3);

        return;
    }

    private void resetPeriod(int)
    {
        int l1, $stack5, $stack25, $stack31, $stack42;
        avrora.sim.mcu.Timer16Bit l0;
        avrora.sim.output.SimPrinter $stack2, $stack23, $stack35, $stack40;
        avrora.sim.Simulator$Event $stack3, $stack7, $stack10, $stack12, $stack36, $stack37;
        avrora.sim.mcu.RegisterSet$Field $stack4, $stack30;
        avrora.sim.Simulator$Event[] $stack6;
        long $stack8, $stack9;
        avrora.sim.clock.Clock $stack11, $stack13, $stack38;
        java.lang.StringBuilder $stack22, $stack24, $stack26, $stack27, $stack28, $stack29, $stack32, $stack39, $stack41, $stack43, $stack44;
        java.lang.String $stack33, $stack45;

        l0 := @this: avrora.sim.mcu.Timer16Bit;

        l1 := @parameter0: int;

        if l1 != 0 goto label2;

        $stack35 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.output.SimPrinter devicePrinter>;

        if $stack35 == null goto label1;

        $stack40 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.output.SimPrinter devicePrinter>;

        $stack39 = new java.lang.StringBuilder;

        specialinvoke $stack39.<java.lang.StringBuilder: void <init>()>();

        $stack41 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timer");

        $stack42 = l0.<avrora.sim.mcu.Timer16Bit: int n>;

        $stack43 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack42);

        $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" disabled");

        $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack40.<avrora.sim.output.SimPrinter: void println(java.lang.String)>($stack45);

     label1:
        $stack36 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event ticker>;

        if $stack36 == null goto label5;

        $stack38 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.clock.Clock timerClock>;

        $stack37 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event ticker>;

        virtualinvoke $stack38.<avrora.sim.clock.Clock: void removeEvent(avrora.sim.Simulator$Event)>($stack37);

        goto label5;

     label2:
        $stack2 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.output.SimPrinter devicePrinter>;

        if $stack2 == null goto label3;

        $stack23 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.output.SimPrinter devicePrinter>;

        $stack22 = new java.lang.StringBuilder;

        specialinvoke $stack22.<java.lang.StringBuilder: void <init>()>();

        $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timer");

        $stack25 = l0.<avrora.sim.mcu.Timer16Bit: int n>;

        $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack25);

        $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" enabled: period = ");

        $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(l1);

        $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mode = ");

        $stack30 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.RegisterSet$Field WGMn>;

        $stack31 = $stack30.<avrora.sim.mcu.RegisterSet$Field: int value>;

        $stack32 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack31);

        $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack23.<avrora.sim.output.SimPrinter: void println(java.lang.String)>($stack33);

     label3:
        $stack3 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event ticker>;

        if $stack3 == null goto label4;

        $stack13 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.clock.Clock timerClock>;

        $stack12 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event ticker>;

        virtualinvoke $stack13.<avrora.sim.clock.Clock: void removeEvent(avrora.sim.Simulator$Event)>($stack12);

     label4:
        $stack6 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event[] tickers>;

        $stack4 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.RegisterSet$Field WGMn>;

        $stack5 = $stack4.<avrora.sim.mcu.RegisterSet$Field: int value>;

        $stack7 = $stack6[$stack5];

        l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event ticker> = $stack7;

        $stack8 = (long) l1;

        l0.<avrora.sim.mcu.Timer16Bit: long period> = $stack8;

        $stack11 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.clock.Clock timerClock>;

        $stack10 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event ticker>;

        $stack9 = l0.<avrora.sim.mcu.Timer16Bit: long period>;

        virtualinvoke $stack11.<avrora.sim.clock.Clock: void insertEvent(avrora.sim.Simulator$Event,long)>($stack10, $stack9);

     label5:
        return;
    }

    public void resetTicker(avrora.sim.Simulator$Event)
    {
        avrora.sim.mcu.Timer16Bit l0;
        avrora.sim.Simulator$Event $stack2, l1, $stack5;
        long $stack3;
        avrora.sim.Simulator $stack4, $stack6;

        l0 := @this: avrora.sim.mcu.Timer16Bit;

        l1 := @parameter0: avrora.sim.Simulator$Event;

        $stack2 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event ticker>;

        if $stack2 == null goto label1;

        $stack6 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator simulator>;

        $stack5 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event ticker>;

        virtualinvoke $stack6.<avrora.sim.Simulator: void removeEvent(avrora.sim.Simulator$Event)>($stack5);

     label1:
        l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event ticker> = l1;

        $stack4 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator simulator>;

        $stack3 = l0.<avrora.sim.mcu.Timer16Bit: long period>;

        virtualinvoke $stack4.<avrora.sim.Simulator: void insertEvent(avrora.sim.Simulator$Event,long)>(l1, $stack3);

        return;
    }

    private void tickerFinish(avrora.sim.Simulator$Event, int)
    {
        int l2;
        avrora.sim.mcu.Timer16Bit l0;
        avrora.sim.mcu.Timer16Bit$TCNTnRegister $stack3;
        avrora.sim.RWRegister $stack4;
        long $stack5, $stack7;
        byte $stack6;
        avrora.sim.Simulator$Event l1;
        avrora.sim.clock.Clock $stack8;

        l0 := @this: avrora.sim.mcu.Timer16Bit;

        l1 := @parameter0: avrora.sim.Simulator$Event;

        l2 := @parameter1: int;

        $stack4 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister TCNTnH_reg>;

        $stack3 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.Timer16Bit$TCNTnRegister TCNTnL_reg>;

        staticinvoke <avrora.sim.mcu.Timer16Bit: void write16(int,avrora.sim.RWRegister,avrora.sim.RWRegister)>(l2, $stack4, $stack3);

        l0.<avrora.sim.mcu.Timer16Bit: boolean blockCompareMatch> = 0;

        $stack5 = l0.<avrora.sim.mcu.Timer16Bit: long period>;

        $stack6 = $stack5 cmp 0L;

        if $stack6 == 0 goto label1;

        $stack8 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.clock.Clock timerClock>;

        $stack7 = l0.<avrora.sim.mcu.Timer16Bit: long period>;

        virtualinvoke $stack8.<avrora.sim.clock.Clock: void insertEvent(avrora.sim.Simulator$Event,long)>(l1, $stack7);

     label1:
        return;
    }

    private void tickerStart(int)
    {
        avrora.sim.mcu.Timer16Bit l0;
        boolean $stack3;
        avrora.sim.mcu.Timer16Bit$OutputCompareUnit[] $stack4, $stack6;
        int $stack5, l1, l2#1;
        avrora.sim.mcu.Timer16Bit$OutputCompareUnit $stack7;

        l0 := @this: avrora.sim.mcu.Timer16Bit;

        l1 := @parameter0: int;

        $stack3 = l0.<avrora.sim.mcu.Timer16Bit: boolean blockCompareMatch>;

        if $stack3 != 0 goto label2;

        l2#1 = 0;

     label1:
        $stack4 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.Timer16Bit$OutputCompareUnit[] compareUnits>;

        $stack5 = lengthof $stack4;

        if l2#1 >= $stack5 goto label2;

        $stack6 = l0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.Timer16Bit$OutputCompareUnit[] compareUnits>;

        $stack7 = $stack6[l2#1];

        virtualinvoke $stack7.<avrora.sim.mcu.Timer16Bit$OutputCompareUnit: void compare(int)>(l1);

        l2#1 = l2#1 + 1;

        goto label1;

     label2:
        return;
    }

    public static void <clinit>()
    {
        <avrora.sim.mcu.Timer16Bit: int BOTTOM> = 0;

        <avrora.sim.mcu.Timer16Bit: int MAX> = 65535;

        <avrora.sim.mcu.Timer16Bit: int MODE_FASTPWM_OCRnA> = 15;

        <avrora.sim.mcu.Timer16Bit: int MODE_FASTPWM_ICRn> = 14;

        <avrora.sim.mcu.Timer16Bit: int MODE_CTC_ICRn> = 12;

        <avrora.sim.mcu.Timer16Bit: int MODE_PWN_PHASE_CORRECT_OCRnA> = 11;

        <avrora.sim.mcu.Timer16Bit: int MODE_PWN_PHASE_CORRECT_ICRn> = 10;

        <avrora.sim.mcu.Timer16Bit: int MODE_PWM_PNF_OCRnA> = 9;

        <avrora.sim.mcu.Timer16Bit: int MODE_PWM_PNF_ICRn> = 8;

        <avrora.sim.mcu.Timer16Bit: int MODE_FASTPWM_10_BIT> = 7;

        <avrora.sim.mcu.Timer16Bit: int MODE_FASTPWM_9_BIT> = 6;

        <avrora.sim.mcu.Timer16Bit: int MODE_FASTPWM_8_BIT> = 5;

        <avrora.sim.mcu.Timer16Bit: int MODE_CTC_OCRnA> = 4;

        <avrora.sim.mcu.Timer16Bit: int MODE_PWM_PHASE_CORRECT_10_BIT> = 3;

        <avrora.sim.mcu.Timer16Bit: int MODE_PWM_PHASE_CORRECT_9_BIT> = 2;

        <avrora.sim.mcu.Timer16Bit: int MODE_PWM_PHASE_CORRECT_8_BIT> = 1;

        <avrora.sim.mcu.Timer16Bit: int MODE_NORMAL> = 0;

        return;
    }
}
