public class avrora.sim.mcu.MCUProperties extends java.lang.Object
{
    protected static final int BASE_ADDRESS;
    protected final java.util.HashMap pinAssignments;
    protected final avrora.sim.mcu.RegisterLayout layout;
    protected final java.util.HashMap interruptAssignments;
    protected final java.lang.String[] ioreg_name;
    protected final java.lang.String[] interrupt_name;
    public final int num_interrupts;

    protected void <init>(java.util.HashMap, avrora.sim.mcu.RegisterLayout, java.util.HashMap, int)
    {
        avrora.sim.mcu.MCUProperties l0;
        java.util.HashMap l1, l3;
        avrora.sim.mcu.RegisterLayout l2;
        java.lang.String[] $stack5, $stack6;
        int l4;

        l0 := @this: avrora.sim.mcu.MCUProperties;

        l1 := @parameter0: java.util.HashMap;

        l2 := @parameter1: avrora.sim.mcu.RegisterLayout;

        l3 := @parameter2: java.util.HashMap;

        l4 := @parameter3: int;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        l0.<avrora.sim.mcu.MCUProperties: java.util.HashMap pinAssignments> = l1;

        l0.<avrora.sim.mcu.MCUProperties: avrora.sim.mcu.RegisterLayout layout> = l2;

        l0.<avrora.sim.mcu.MCUProperties: java.util.HashMap interruptAssignments> = l3;

        $stack5 = virtualinvoke l0.<avrora.sim.mcu.MCUProperties: java.lang.String[] initIORNames()>();

        l0.<avrora.sim.mcu.MCUProperties: java.lang.String[] ioreg_name> = $stack5;

        $stack6 = virtualinvoke l0.<avrora.sim.mcu.MCUProperties: java.lang.String[] initInterruptNames()>();

        l0.<avrora.sim.mcu.MCUProperties: java.lang.String[] interrupt_name> = $stack6;

        l0.<avrora.sim.mcu.MCUProperties: int num_interrupts> = l4;

        return;
    }

    public int getIOReg(java.lang.String)
    {
        avrora.sim.mcu.MCUProperties l0;
        java.lang.String l1;
        avrora.sim.mcu.RegisterLayout $stack2;
        int $stack3;

        l0 := @this: avrora.sim.mcu.MCUProperties;

        l1 := @parameter0: java.lang.String;

        $stack2 = l0.<avrora.sim.mcu.MCUProperties: avrora.sim.mcu.RegisterLayout layout>;

        $stack3 = virtualinvoke $stack2.<avrora.sim.mcu.RegisterLayout: int getIOReg(java.lang.String)>(l1);

        return $stack3;
    }

    public int getIORegAddr(java.lang.String)
    {
        avrora.sim.mcu.MCUProperties l0;
        java.lang.String l1;
        int $stack2, $stack3;

        l0 := @this: avrora.sim.mcu.MCUProperties;

        l1 := @parameter0: java.lang.String;

        $stack2 = virtualinvoke l0.<avrora.sim.mcu.MCUProperties: int getIOReg(java.lang.String)>(l1);

        $stack3 = $stack2 + 32;

        return $stack3;
    }

    public java.lang.String getIORegName(int)
    {
        avrora.sim.mcu.MCUProperties l0;
        int l1;
        java.lang.String[] $stack2;
        java.lang.String $stack3;

        l0 := @this: avrora.sim.mcu.MCUProperties;

        l1 := @parameter0: int;

        $stack2 = l0.<avrora.sim.mcu.MCUProperties: java.lang.String[] ioreg_name>;

        $stack3 = $stack2[l1];

        return $stack3;
    }

    public int getInterrupt(java.lang.String)
    {
        avrora.sim.mcu.MCUProperties l0;
        java.lang.String l1, $stack8, $stack11;
        java.util.HashMap $stack3;
        java.lang.Object $stack4;
        java.lang.Integer l2;
        int $stack5;
        java.util.NoSuchElementException $stack6;
        java.lang.StringBuilder $stack7, $stack9, $stack10;

        l0 := @this: avrora.sim.mcu.MCUProperties;

        l1 := @parameter0: java.lang.String;

        $stack3 = l0.<avrora.sim.mcu.MCUProperties: java.util.HashMap interruptAssignments>;

        $stack4 = virtualinvoke $stack3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(l1);

        l2 = (java.lang.Integer) $stack4;

        if l2 != null goto label1;

        $stack6 = new java.util.NoSuchElementException;

        $stack7 = new java.lang.StringBuilder;

        specialinvoke $stack7.<java.lang.StringBuilder: void <init>()>();

        $stack8 = staticinvoke <cck.text.StringUtil: java.lang.String quote(java.lang.Object)>(l1);

        $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8);

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" interrupt not found");

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $stack6.<java.util.NoSuchElementException: void <init>(java.lang.String)>($stack11);

        throw $stack6;

     label1:
        $stack5 = virtualinvoke l2.<java.lang.Integer: int intValue()>();

        return $stack5;
    }

    public java.lang.String getInterruptName(int)
    {
        avrora.sim.mcu.MCUProperties l0;
        int l1;
        java.lang.String[] $stack2;
        java.lang.String $stack3;

        l0 := @this: avrora.sim.mcu.MCUProperties;

        l1 := @parameter0: int;

        $stack2 = l0.<avrora.sim.mcu.MCUProperties: java.lang.String[] interrupt_name>;

        $stack3 = $stack2[l1];

        return $stack3;
    }

    private int getMax()
    {
        avrora.sim.mcu.MCUProperties l0;
        java.util.HashMap $stack5, $stack10;
        java.util.Set $stack6;
        java.util.Iterator $stack7;
        boolean $stack8;
        java.lang.Object $stack9, $stack11;
        java.lang.String l2;
        java.lang.Integer $stack12;
        int $stack13, l4#1;

        l0 := @this: avrora.sim.mcu.MCUProperties;

        l4#1 = 0;

        $stack5 = l0.<avrora.sim.mcu.MCUProperties: java.util.HashMap interruptAssignments>;

        $stack6 = virtualinvoke $stack5.<java.util.HashMap: java.util.Set keySet()>();

        $stack7 = interfaceinvoke $stack6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $stack8 = interfaceinvoke $stack7.<java.util.Iterator: boolean hasNext()>();

        if $stack8 == 0 goto label3;

        $stack9 = interfaceinvoke $stack7.<java.util.Iterator: java.lang.Object next()>();

        l2 = (java.lang.String) $stack9;

        $stack10 = l0.<avrora.sim.mcu.MCUProperties: java.util.HashMap interruptAssignments>;

        $stack11 = virtualinvoke $stack10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(l2);

        $stack12 = (java.lang.Integer) $stack11;

        $stack13 = virtualinvoke $stack12.<java.lang.Integer: int intValue()>();

        if l4#1 >= $stack13 goto label2;

        l4#1 = $stack13;

     label2:
        goto label1;

     label3:
        return l4#1;
    }

    public int getPin(java.lang.String)
    {
        avrora.sim.mcu.MCUProperties l0;
        java.lang.String l1, $stack8, $stack11;
        java.util.HashMap $stack3;
        java.lang.Object $stack4;
        java.lang.Integer l2;
        int $stack5;
        java.util.NoSuchElementException $stack6;
        java.lang.StringBuilder $stack7, $stack9, $stack10;

        l0 := @this: avrora.sim.mcu.MCUProperties;

        l1 := @parameter0: java.lang.String;

        $stack3 = l0.<avrora.sim.mcu.MCUProperties: java.util.HashMap pinAssignments>;

        $stack4 = virtualinvoke $stack3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(l1);

        l2 = (java.lang.Integer) $stack4;

        if l2 != null goto label1;

        $stack6 = new java.util.NoSuchElementException;

        $stack7 = new java.lang.StringBuilder;

        specialinvoke $stack7.<java.lang.StringBuilder: void <init>()>();

        $stack8 = staticinvoke <cck.text.StringUtil: java.lang.String quote(java.lang.Object)>(l1);

        $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8);

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pin not found");

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $stack6.<java.util.NoSuchElementException: void <init>(java.lang.String)>($stack11);

        throw $stack6;

     label1:
        $stack5 = virtualinvoke l2.<java.lang.Integer: int intValue()>();

        return $stack5;
    }

    public avrora.sim.mcu.RegisterLayout getRegisterLayout()
    {
        avrora.sim.mcu.MCUProperties l0;
        avrora.sim.mcu.RegisterLayout $stack1;

        l0 := @this: avrora.sim.mcu.MCUProperties;

        $stack1 = l0.<avrora.sim.mcu.MCUProperties: avrora.sim.mcu.RegisterLayout layout>;

        return $stack1;
    }

    public boolean hasIOReg(java.lang.String)
    {
        avrora.sim.mcu.MCUProperties l0;
        java.lang.String l1;
        avrora.sim.mcu.RegisterLayout $stack2;
        boolean $stack3;

        l0 := @this: avrora.sim.mcu.MCUProperties;

        l1 := @parameter0: java.lang.String;

        $stack2 = l0.<avrora.sim.mcu.MCUProperties: avrora.sim.mcu.RegisterLayout layout>;

        $stack3 = virtualinvoke $stack2.<avrora.sim.mcu.RegisterLayout: boolean hasIOReg(java.lang.String)>(l1);

        return $stack3;
    }

    protected java.lang.String[] initIORNames()
    {
        avrora.sim.mcu.MCUProperties l0;
        avrora.sim.mcu.RegisterLayout $stack4, $stack6, $stack8;
        int $stack5, $stack7, l3#1;
        java.lang.String[] l1;
        avrora.sim.mcu.RegisterLayout$RegisterInfo[] $stack9;
        avrora.sim.mcu.RegisterLayout$RegisterInfo l2;
        java.lang.String $stack12;

        l0 := @this: avrora.sim.mcu.MCUProperties;

        $stack4 = l0.<avrora.sim.mcu.MCUProperties: avrora.sim.mcu.RegisterLayout layout>;

        $stack5 = $stack4.<avrora.sim.mcu.RegisterLayout: int ioreg_size>;

        l1 = newarray (java.lang.String)[$stack5];

        l3#1 = 0;

     label1:
        $stack6 = l0.<avrora.sim.mcu.MCUProperties: avrora.sim.mcu.RegisterLayout layout>;

        $stack7 = $stack6.<avrora.sim.mcu.RegisterLayout: int ioreg_size>;

        if l3#1 >= $stack7 goto label3;

        $stack8 = l0.<avrora.sim.mcu.MCUProperties: avrora.sim.mcu.RegisterLayout layout>;

        $stack9 = $stack8.<avrora.sim.mcu.RegisterLayout: avrora.sim.mcu.RegisterLayout$RegisterInfo[] info>;

        l2 = $stack9[l3#1];

        if l2 == null goto label2;

        $stack12 = l2.<avrora.sim.mcu.RegisterLayout$RegisterInfo: java.lang.String name>;

        l1[l3#1] = $stack12;

     label2:
        l3#1 = l3#1 + 1;

        goto label1;

     label3:
        return l1;
    }

    protected java.lang.String[] initInterruptNames()
    {
        avrora.sim.mcu.MCUProperties l0;
        int $stack4, $stack5, $stack14;
        java.lang.String[] l1;
        java.util.HashMap $stack6, $stack11;
        java.util.Set $stack7;
        java.util.Iterator $stack8;
        boolean $stack9;
        java.lang.Object $stack10, $stack12;
        java.lang.String l3;
        java.lang.Integer $stack13;

        l0 := @this: avrora.sim.mcu.MCUProperties;

        $stack4 = specialinvoke l0.<avrora.sim.mcu.MCUProperties: int getMax()>();

        $stack5 = $stack4 + 1;

        l1 = newarray (java.lang.String)[$stack5];

        $stack6 = l0.<avrora.sim.mcu.MCUProperties: java.util.HashMap interruptAssignments>;

        $stack7 = virtualinvoke $stack6.<java.util.HashMap: java.util.Set keySet()>();

        $stack8 = interfaceinvoke $stack7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $stack9 = interfaceinvoke $stack8.<java.util.Iterator: boolean hasNext()>();

        if $stack9 == 0 goto label2;

        $stack10 = interfaceinvoke $stack8.<java.util.Iterator: java.lang.Object next()>();

        l3 = (java.lang.String) $stack10;

        $stack11 = l0.<avrora.sim.mcu.MCUProperties: java.util.HashMap interruptAssignments>;

        $stack12 = virtualinvoke $stack11.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(l3);

        $stack13 = (java.lang.Integer) $stack12;

        $stack14 = virtualinvoke $stack13.<java.lang.Integer: int intValue()>();

        l1[$stack14] = l3;

        goto label1;

     label2:
        return l1;
    }

    public static void <clinit>()
    {
        <avrora.sim.mcu.MCUProperties: int BASE_ADDRESS> = 32;

        return;
    }
}
