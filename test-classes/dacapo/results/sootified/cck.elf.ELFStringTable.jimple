public class cck.elf.ELFStringTable extends java.lang.Object
{
    protected final java.util.HashMap map;
    protected final byte[] data;
    protected final cck.elf.ELFSectionHeaderTable$Entry32 entry;

    public void <init>(cck.elf.ELFHeader, cck.elf.ELFSectionHeaderTable$Entry32)
    {
        cck.elf.ELFStringTable l0;
        cck.elf.ELFSectionHeaderTable$Entry32 l2;
        int $stack3;
        byte[] $stack4;
        java.util.HashMap $stack5;
        cck.elf.ELFHeader l1;

        l0 := @this: cck.elf.ELFStringTable;

        l1 := @parameter0: cck.elf.ELFHeader;

        l2 := @parameter1: cck.elf.ELFSectionHeaderTable$Entry32;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        $stack3 = l2.<cck.elf.ELFSectionHeaderTable$Entry32: int sh_size>;

        $stack4 = newarray (byte)[$stack3];

        l0.<cck.elf.ELFStringTable: byte[] data> = $stack4;

        $stack5 = new java.util.HashMap;

        specialinvoke $stack5.<java.util.HashMap: void <init>()>();

        l0.<cck.elf.ELFStringTable: java.util.HashMap map> = $stack5;

        l0.<cck.elf.ELFStringTable: cck.elf.ELFSectionHeaderTable$Entry32 entry> = l2;

        return;
    }

    public java.lang.String getString(int)
    {
        int l1, $stack8, $stack13, l6#2;
        cck.elf.ELFStringTable l0;
        byte[] $stack7, $stack12, $stack19;
        java.lang.Integer $stack9, $stack15;
        java.util.HashMap $stack10, $stack16;
        java.lang.Object $stack11;
        java.lang.StringBuffer l2;
        java.lang.String $stack14, l5#1;
        byte l4;
        char $stack20;

        l0 := @this: cck.elf.ELFStringTable;

        l1 := @parameter0: int;

        $stack7 = l0.<cck.elf.ELFStringTable: byte[] data>;

        $stack8 = lengthof $stack7;

        if l1 < $stack8 goto label1;

        return "";

     label1:
        $stack10 = l0.<cck.elf.ELFStringTable: java.util.HashMap map>;

        $stack9 = new java.lang.Integer;

        specialinvoke $stack9.<java.lang.Integer: void <init>(int)>(l1);

        $stack11 = virtualinvoke $stack10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack9);

        l5#1 = (java.lang.String) $stack11;

        if l5#1 != null goto label5;

        l2 = new java.lang.StringBuffer;

        specialinvoke l2.<java.lang.StringBuffer: void <init>()>();

        l6#2 = l1;

     label2:
        $stack12 = l0.<cck.elf.ELFStringTable: byte[] data>;

        $stack13 = lengthof $stack12;

        if l6#2 >= $stack13 goto label4;

        $stack19 = l0.<cck.elf.ELFStringTable: byte[] data>;

        l4 = $stack19[l6#2];

        if l4 != 0 goto label3;

        goto label4;

     label3:
        $stack20 = (char) l4;

        virtualinvoke l2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($stack20);

        l6#2 = l6#2 + 1;

        goto label2;

     label4:
        $stack14 = virtualinvoke l2.<java.lang.StringBuffer: java.lang.String toString()>();

        l5#1 = $stack14;

        $stack16 = l0.<cck.elf.ELFStringTable: java.util.HashMap map>;

        $stack15 = new java.lang.Integer;

        specialinvoke $stack15.<java.lang.Integer: void <init>(int)>(l1);

        virtualinvoke $stack16.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack15, $stack14);

     label5:
        return l5#1;
    }

    public void read(java.io.RandomAccessFile) throws java.io.IOException
    {
        cck.elf.ELFStringTable l0;
        byte[] $stack3, $stack8, $stack10, $stack13;
        int $stack4, $stack6, $stack9, $stack11, $stack12, $stack14, l2#1;
        java.io.RandomAccessFile l1;
        cck.elf.ELFSectionHeaderTable$Entry32 $stack5;
        long $stack7;

        l0 := @this: cck.elf.ELFStringTable;

        l1 := @parameter0: java.io.RandomAccessFile;

        $stack3 = l0.<cck.elf.ELFStringTable: byte[] data>;

        $stack4 = lengthof $stack3;

        if $stack4 != 0 goto label1;

        return;

     label1:
        $stack5 = l0.<cck.elf.ELFStringTable: cck.elf.ELFSectionHeaderTable$Entry32 entry>;

        $stack6 = $stack5.<cck.elf.ELFSectionHeaderTable$Entry32: int sh_offset>;

        $stack7 = (long) $stack6;

        virtualinvoke l1.<java.io.RandomAccessFile: void seek(long)>($stack7);

        l2#1 = 0;

     label2:
        $stack8 = l0.<cck.elf.ELFStringTable: byte[] data>;

        $stack9 = lengthof $stack8;

        if l2#1 >= $stack9 goto label3;

        $stack13 = l0.<cck.elf.ELFStringTable: byte[] data>;

        $stack10 = l0.<cck.elf.ELFStringTable: byte[] data>;

        $stack11 = lengthof $stack10;

        $stack12 = $stack11 - l2#1;

        $stack14 = virtualinvoke l1.<java.io.RandomAccessFile: int read(byte[],int,int)>($stack13, l2#1, $stack12);

        l2#1 = l2#1 + $stack14;

        goto label2;

     label3:
        return;
    }
}
