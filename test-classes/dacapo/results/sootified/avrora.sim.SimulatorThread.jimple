public class avrora.sim.SimulatorThread extends java.lang.Thread
{
    protected final avrora.sim.Simulation$Node node;
    protected avrora.sim.clock.Synchronizer synchronizer;

    public void <init>(avrora.sim.Simulation$Node)
    {
        avrora.sim.SimulatorThread l0;
        java.lang.StringBuilder $stack2, $stack3, $stack5;
        avrora.sim.Simulation$Node l1;
        int $stack4;
        java.lang.String $stack6;

        l0 := @this: avrora.sim.SimulatorThread;

        l1 := @parameter0: avrora.sim.Simulation$Node;

        $stack2 = new java.lang.StringBuilder;

        specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>();

        $stack3 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("node-");

        $stack4 = l1.<avrora.sim.Simulation$Node: int id>;

        $stack5 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack4);

        $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke l0.<java.lang.Thread: void <init>(java.lang.String)>($stack6);

        l0.<avrora.sim.SimulatorThread: avrora.sim.Simulation$Node node> = l1;

        return;
    }

    public avrora.sim.Simulation$Node getNode()
    {
        avrora.sim.SimulatorThread l0;
        avrora.sim.Simulation$Node $stack1;

        l0 := @this: avrora.sim.SimulatorThread;

        $stack1 = l0.<avrora.sim.SimulatorThread: avrora.sim.Simulation$Node node>;

        return $stack1;
    }

    public avrora.sim.Simulator getSimulator()
    {
        avrora.sim.SimulatorThread l0;
        avrora.sim.Simulation$Node $stack1;
        avrora.sim.Simulator $stack2;

        l0 := @this: avrora.sim.SimulatorThread;

        $stack1 = l0.<avrora.sim.SimulatorThread: avrora.sim.Simulation$Node node>;

        $stack2 = virtualinvoke $stack1.<avrora.sim.Simulation$Node: avrora.sim.Simulator getSimulator()>();

        return $stack2;
    }

    public void run()
    {
        avrora.sim.SimulatorThread l0;
        avrora.sim.Simulation$Node $stack5, $stack8, $stack12, $stack17, $stack28, $stack32;
        avrora.sim.Simulator $stack6;
        avrora.sim.clock.Synchronizer $stack7, $stack9, $stack11, $stack13, $stack16, $stack18, $stack27, $stack29, $stack31, $stack33;
        java.lang.Throwable $stack10;
        cck.util.Util$Error $stack15;
        avrora.actions.SimAction$BreakPointException $stack19;
        java.lang.StringBuilder $stack20, $stack21, $stack24, $stack25;
        int $stack22;
        java.lang.String $stack23, $stack26;
        avrora.actions.SimAction$TimeoutException $stack30;

        l0 := @this: avrora.sim.SimulatorThread;

     label01:
        $stack5 = l0.<avrora.sim.SimulatorThread: avrora.sim.Simulation$Node node>;

        $stack6 = virtualinvoke $stack5.<avrora.sim.Simulation$Node: avrora.sim.Simulator getSimulator()>();

        virtualinvoke $stack6.<avrora.sim.Simulator: void start()>();

     label02:
        $stack7 = l0.<avrora.sim.SimulatorThread: avrora.sim.clock.Synchronizer synchronizer>;

        if $stack7 == null goto label10;

        $stack9 = l0.<avrora.sim.SimulatorThread: avrora.sim.clock.Synchronizer synchronizer>;

        $stack8 = l0.<avrora.sim.SimulatorThread: avrora.sim.Simulation$Node node>;

        virtualinvoke $stack9.<avrora.sim.clock.Synchronizer: void removeNode(avrora.sim.Simulation$Node)>($stack8);

        goto label10;

     label03:
        $stack30 := @caughtexception;

        $stack31 = l0.<avrora.sim.SimulatorThread: avrora.sim.clock.Synchronizer synchronizer>;

        if $stack31 == null goto label10;

        $stack33 = l0.<avrora.sim.SimulatorThread: avrora.sim.clock.Synchronizer synchronizer>;

        $stack32 = l0.<avrora.sim.SimulatorThread: avrora.sim.Simulation$Node node>;

        virtualinvoke $stack33.<avrora.sim.clock.Synchronizer: void removeNode(avrora.sim.Simulation$Node)>($stack32);

        goto label10;

     label04:
        $stack19 := @caughtexception;

        staticinvoke <cck.text.Terminal: void printYellow(java.lang.String)>("Simulation terminated");

        $stack20 = new java.lang.StringBuilder;

        specialinvoke $stack20.<java.lang.StringBuilder: void <init>()>();

        $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": breakpoint at ");

        $stack22 = $stack19.<avrora.actions.SimAction$BreakPointException: int address>;

        $stack23 = staticinvoke <cck.text.StringUtil: java.lang.String addrToString(int)>($stack22);

        $stack24 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack23);

        $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reached.");

        $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <cck.text.Terminal: void println(java.lang.String)>($stack26);

     label05:
        $stack27 = l0.<avrora.sim.SimulatorThread: avrora.sim.clock.Synchronizer synchronizer>;

        if $stack27 == null goto label10;

        $stack29 = l0.<avrora.sim.SimulatorThread: avrora.sim.clock.Synchronizer synchronizer>;

        $stack28 = l0.<avrora.sim.SimulatorThread: avrora.sim.Simulation$Node node>;

        virtualinvoke $stack29.<avrora.sim.clock.Synchronizer: void removeNode(avrora.sim.Simulation$Node)>($stack28);

        goto label10;

     label06:
        $stack15 := @caughtexception;

        virtualinvoke $stack15.<cck.util.Util$Error: void report()>();

     label07:
        $stack16 = l0.<avrora.sim.SimulatorThread: avrora.sim.clock.Synchronizer synchronizer>;

        if $stack16 == null goto label10;

        $stack18 = l0.<avrora.sim.SimulatorThread: avrora.sim.clock.Synchronizer synchronizer>;

        $stack17 = l0.<avrora.sim.SimulatorThread: avrora.sim.Simulation$Node node>;

        virtualinvoke $stack18.<avrora.sim.clock.Synchronizer: void removeNode(avrora.sim.Simulation$Node)>($stack17);

        goto label10;

     label08:
        $stack10 := @caughtexception;

        $stack11 = l0.<avrora.sim.SimulatorThread: avrora.sim.clock.Synchronizer synchronizer>;

        if $stack11 == null goto label09;

        $stack13 = l0.<avrora.sim.SimulatorThread: avrora.sim.clock.Synchronizer synchronizer>;

        $stack12 = l0.<avrora.sim.SimulatorThread: avrora.sim.Simulation$Node node>;

        virtualinvoke $stack13.<avrora.sim.clock.Synchronizer: void removeNode(avrora.sim.Simulation$Node)>($stack12);

     label09:
        throw $stack10;

     label10:
        return;

        catch avrora.actions.SimAction$TimeoutException from label01 to label02 with label03;
        catch avrora.actions.SimAction$BreakPointException from label01 to label02 with label04;
        catch cck.util.Util$Error from label01 to label02 with label06;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
    }

    public void setSynchronizer(avrora.sim.clock.Synchronizer)
    {
        avrora.sim.SimulatorThread l0;
        avrora.sim.clock.Synchronizer l1;

        l0 := @this: avrora.sim.SimulatorThread;

        l1 := @parameter0: avrora.sim.clock.Synchronizer;

        l0.<avrora.sim.SimulatorThread: avrora.sim.clock.Synchronizer synchronizer> = l1;

        return;
    }
}
