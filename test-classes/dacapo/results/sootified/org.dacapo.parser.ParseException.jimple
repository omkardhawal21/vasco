public class org.dacapo.parser.ParseException extends java.lang.Exception
{
    private static final long serialVersionUID;
    public org.dacapo.parser.Token currentToken;
    public int[][] expectedTokenSequences;
    public java.lang.String[] tokenImage;
    protected java.lang.String eol;

    public void <init>(org.dacapo.parser.Token, int[][], java.lang.String[])
    {
        org.dacapo.parser.ParseException l0;
        org.dacapo.parser.Token l1;
        int[][] l2;
        java.lang.String[] l3;
        java.lang.String $stack4, $stack5;

        l0 := @this: org.dacapo.parser.ParseException;

        l1 := @parameter0: org.dacapo.parser.Token;

        l2 := @parameter1: int[][];

        l3 := @parameter2: java.lang.String[];

        $stack4 = staticinvoke <org.dacapo.parser.ParseException: java.lang.String initialise(org.dacapo.parser.Token,int[][],java.lang.String[])>(l1, l2, l3);

        specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>($stack4);

        $stack5 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("line.separator", "\n");

        l0.<org.dacapo.parser.ParseException: java.lang.String eol> = $stack5;

        l0.<org.dacapo.parser.ParseException: org.dacapo.parser.Token currentToken> = l1;

        l0.<org.dacapo.parser.ParseException: int[][] expectedTokenSequences> = l2;

        l0.<org.dacapo.parser.ParseException: java.lang.String[] tokenImage> = l3;

        return;
    }

    public void <init>()
    {
        org.dacapo.parser.ParseException l0;
        java.lang.String $stack1;

        l0 := @this: org.dacapo.parser.ParseException;

        specialinvoke l0.<java.lang.Exception: void <init>()>();

        $stack1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("line.separator", "\n");

        l0.<org.dacapo.parser.ParseException: java.lang.String eol> = $stack1;

        return;
    }

    public void <init>(java.lang.String)
    {
        org.dacapo.parser.ParseException l0;
        java.lang.String l1, $stack2;

        l0 := @this: org.dacapo.parser.ParseException;

        l1 := @parameter0: java.lang.String;

        specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1);

        $stack2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("line.separator", "\n");

        l0.<org.dacapo.parser.ParseException: java.lang.String eol> = $stack2;

        return;
    }

    static java.lang.String add_escapes(java.lang.String)
    {
        java.lang.StringBuffer l1;
        java.lang.String l0, $stack6, $stack21, $stack23, $stack29, $stack31;
        int $stack5, $stack26, $stack27, $stack28, l4#1;
        char $stack7, $stack18;
        java.lang.StringBuilder $stack19, $stack20, $stack22, $stack24, $stack25, $stack30;

        l0 := @parameter0: java.lang.String;

        l1 = new java.lang.StringBuffer;

        specialinvoke l1.<java.lang.StringBuffer: void <init>()>();

        l4#1 = 0;

     label01:
        $stack5 = virtualinvoke l0.<java.lang.String: int length()>();

        if l4#1 >= $stack5 goto label15;

        $stack7 = virtualinvoke l0.<java.lang.String: char charAt(int)>(l4#1);

        lookupswitch($stack7)
        {
            case 0: goto label02;
            case 8: goto label03;
            case 9: goto label04;
            case 10: goto label05;
            case 12: goto label06;
            case 13: goto label07;
            case 34: goto label08;
            case 39: goto label09;
            case 92: goto label10;
            default: goto label11;
        };

     label02:
        goto label14;

     label03:
        virtualinvoke l1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\b");

        goto label14;

     label04:
        virtualinvoke l1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\t");

        goto label14;

     label05:
        virtualinvoke l1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\n");

        goto label14;

     label06:
        virtualinvoke l1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\f");

        goto label14;

     label07:
        virtualinvoke l1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\r");

        goto label14;

     label08:
        virtualinvoke l1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\\"");

        goto label14;

     label09:
        virtualinvoke l1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\\'");

        goto label14;

     label10:
        virtualinvoke l1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\\\");

        goto label14;

     label11:
        $stack18 = virtualinvoke l0.<java.lang.String: char charAt(int)>(l4#1);

        if $stack18 < 32 goto label12;

        if $stack18 <= 126 goto label13;

     label12:
        $stack19 = new java.lang.StringBuilder;

        specialinvoke $stack19.<java.lang.StringBuilder: void <init>()>();

        $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0000");

        $stack21 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>($stack18, 16);

        $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack21);

        $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack24 = new java.lang.StringBuilder;

        specialinvoke $stack24.<java.lang.StringBuilder: void <init>()>();

        $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\u");

        $stack26 = virtualinvoke $stack23.<java.lang.String: int length()>();

        $stack27 = $stack26 - 4;

        $stack28 = virtualinvoke $stack23.<java.lang.String: int length()>();

        $stack29 = virtualinvoke $stack23.<java.lang.String: java.lang.String substring(int,int)>($stack27, $stack28);

        $stack30 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack29);

        $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke l1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack31);

        goto label14;

     label13:
        virtualinvoke l1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($stack18);

     label14:
        l4#1 = l4#1 + 1;

        goto label01;

     label15:
        $stack6 = virtualinvoke l1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $stack6;
    }

    private static java.lang.String initialise(org.dacapo.parser.Token, int[][], java.lang.String[])
    {
        java.lang.String $stack17, $stack29, $stack34, $stack41, $stack44, $stack46, $stack52, $stack60, $stack62, $stack66, $stack69, $stack70, $stack72, $stack76, $stack81, $stack83, $stack97, $stack118, l13#14, l16#17;
        java.lang.StringBuffer l4, $stack108, $stack119;
        int[][] l1;
        int $stack18, $stack23, $stack27, $stack35, $stack55, $stack59, $stack100, $stack104, $stack105, $stack107, $stack117, l10#1, l11#2, l12#3, $stack102#12, l15#16;
        org.dacapo.parser.Token l0, $stack22, $stack26, l14#15;
        java.lang.StringBuilder $stack19, $stack20, $stack21, $stack24, $stack25, $stack28, $stack30, $stack31, $stack32, $stack33, $stack36, $stack37, $stack38, $stack39, $stack40, $stack42, $stack43, $stack45, $stack47, $stack48, $stack49, $stack50, $stack51, $stack56, $stack57, $stack58, $stack61, $stack63, $stack64, $stack65, $stack67, $stack68, $stack71, $stack73, $stack74, $stack75, $stack79, $stack80, $stack82, $stack94, $stack95, $stack96;
        java.lang.String[] l2;
        int[] $stack99, $stack103, $stack106, $stack116, $stack124, $stack101#10;

        l0 := @parameter0: org.dacapo.parser.Token;

        l1 := @parameter1: int[][];

        l2 := @parameter2: java.lang.String[];

        $stack17 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("line.separator", "\n");

        l4 = new java.lang.StringBuffer;

        specialinvoke l4.<java.lang.StringBuffer: void <init>()>();

        l10#1 = 0;

        l11#2 = 0;

     label01:
        $stack18 = lengthof l1;

        if l11#2 >= $stack18 goto label06;

        $stack99 = l1[l11#2];

        $stack100 = lengthof $stack99;

        if l10#1 >= $stack100 goto label02;

        $stack124 = l1[l11#2];

        l10#1 = lengthof $stack124;

     label02:
        l12#3 = 0;

     label03:
        $stack101#10 = l1[l11#2];

        $stack102#12 = lengthof $stack101#10;

        if l12#3 >= $stack102#12 goto label04;

        $stack116 = l1[l11#2];

        $stack117 = $stack116[l12#3];

        $stack118 = l2[$stack117];

        $stack119 = virtualinvoke l4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack118);

        virtualinvoke $stack119.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        l12#3 = l12#3 + 1;

        goto label03;

     label04:
        $stack106 = l1[l11#2];

        $stack103 = l1[l11#2];

        $stack104 = lengthof $stack103;

        $stack105 = $stack104 - 1;

        $stack107 = $stack106[$stack105];

        if $stack107 == 0 goto label05;

        virtualinvoke l4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("...");

     label05:
        $stack108 = virtualinvoke l4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack17);

        virtualinvoke $stack108.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    ");

        l11#2 = l11#2 + 1;

        goto label01;

     label06:
        l13#14 = "Encountered \"";

        l14#15 = l0.<org.dacapo.parser.Token: org.dacapo.parser.Token next>;

        l15#16 = 0;

     label07:
        if l15#16 >= l10#1 goto label10;

        if l15#16 == 0 goto label08;

        $stack94 = new java.lang.StringBuilder;

        specialinvoke $stack94.<java.lang.StringBuilder: void <init>()>();

        $stack95 = virtualinvoke $stack94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l13#14);

        $stack96 = virtualinvoke $stack95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $stack97 = virtualinvoke $stack96.<java.lang.StringBuilder: java.lang.String toString()>();

        l13#14 = $stack97;

     label08:
        $stack55 = l14#15.<org.dacapo.parser.Token: int kind>;

        if $stack55 != 0 goto label09;

        $stack79 = new java.lang.StringBuilder;

        specialinvoke $stack79.<java.lang.StringBuilder: void <init>()>();

        $stack80 = virtualinvoke $stack79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l13#14);

        $stack81 = l2[0];

        $stack82 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack81);

        $stack83 = virtualinvoke $stack82.<java.lang.StringBuilder: java.lang.String toString()>();

        l13#14 = $stack83;

        goto label10;

     label09:
        $stack56 = new java.lang.StringBuilder;

        specialinvoke $stack56.<java.lang.StringBuilder: void <init>()>();

        $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l13#14);

        $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $stack59 = l14#15.<org.dacapo.parser.Token: int kind>;

        $stack60 = l2[$stack59];

        $stack61 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack60);

        $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack63 = new java.lang.StringBuilder;

        specialinvoke $stack63.<java.lang.StringBuilder: void <init>()>();

        $stack64 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack62);

        $stack65 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \"");

        $stack66 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack67 = new java.lang.StringBuilder;

        specialinvoke $stack67.<java.lang.StringBuilder: void <init>()>();

        $stack68 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack66);

        $stack69 = l14#15.<org.dacapo.parser.Token: java.lang.String image>;

        $stack70 = staticinvoke <org.dacapo.parser.ParseException: java.lang.String add_escapes(java.lang.String)>($stack69);

        $stack71 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack70);

        $stack72 = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack73 = new java.lang.StringBuilder;

        specialinvoke $stack73.<java.lang.StringBuilder: void <init>()>();

        $stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack72);

        $stack75 = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \"");

        $stack76 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.String toString()>();

        l13#14 = $stack76;

        l14#15 = l14#15.<org.dacapo.parser.Token: org.dacapo.parser.Token next>;

        l15#16 = l15#16 + 1;

        goto label07;

     label10:
        $stack19 = new java.lang.StringBuilder;

        specialinvoke $stack19.<java.lang.StringBuilder: void <init>()>();

        $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l13#14);

        $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" at line ");

        $stack22 = l0.<org.dacapo.parser.Token: org.dacapo.parser.Token next>;

        $stack23 = $stack22.<org.dacapo.parser.Token: int beginLine>;

        $stack24 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack23);

        $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", column ");

        $stack26 = l0.<org.dacapo.parser.Token: org.dacapo.parser.Token next>;

        $stack27 = $stack26.<org.dacapo.parser.Token: int beginColumn>;

        $stack28 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack27);

        $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack30 = new java.lang.StringBuilder;

        specialinvoke $stack30.<java.lang.StringBuilder: void <init>()>();

        $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack29);

        $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17);

        $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack35 = lengthof l1;

        if $stack35 != 1 goto label11;

        $stack47 = new java.lang.StringBuilder;

        specialinvoke $stack47.<java.lang.StringBuilder: void <init>()>();

        $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack34);

        $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Was expecting:");

        $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17);

        $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.String toString()>();

        l16#17 = $stack52;

        goto label12;

     label11:
        $stack36 = new java.lang.StringBuilder;

        specialinvoke $stack36.<java.lang.StringBuilder: void <init>()>();

        $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack34);

        $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Was expecting one of:");

        $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17);

        $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>();

        l16#17 = $stack41;

     label12:
        $stack42 = new java.lang.StringBuilder;

        specialinvoke $stack42.<java.lang.StringBuilder: void <init>()>();

        $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l16#17);

        $stack44 = virtualinvoke l4.<java.lang.StringBuffer: java.lang.String toString()>();

        $stack45 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack44);

        $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack46;
    }

    public static void <clinit>()
    {
        <org.dacapo.parser.ParseException: long serialVersionUID> = 1L;

        return;
    }
}
