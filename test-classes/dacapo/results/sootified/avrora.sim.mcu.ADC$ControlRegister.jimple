public class avrora.sim.mcu.ADC$ControlRegister extends avrora.sim.RWRegister implements avrora.sim.InterruptTable$Notification
{
    final avrora.sim.mcu.ADC$ControlRegister$ConversionEvent conversion;
    final avrora.sim.state.BooleanView _aden;
    final avrora.sim.state.BooleanView _adsc;
    final avrora.sim.state.BooleanView _adfr;
    final avrora.sim.state.BooleanView _adif;
    final avrora.sim.state.BooleanView _adie;
    final avrora.sim.state.RegisterView _prescaler;
    int cycles;
    boolean converting;
    final avrora.sim.mcu.ADC this$0;

    protected void <init>(avrora.sim.mcu.ADC)
    {
        avrora.sim.mcu.ADC$ControlRegister l0;
        avrora.sim.mcu.ADC l1;
        avrora.sim.mcu.ADC$ControlRegister$ConversionEvent $stack2;
        avrora.sim.state.BooleanView $stack3, $stack4, $stack5, $stack6, $stack7;
        avrora.sim.state.RegisterUtil$BitRangeView $stack8;

        l0 := @this: avrora.sim.mcu.ADC$ControlRegister;

        l1 := @parameter0: avrora.sim.mcu.ADC;

        l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0> = l1;

        specialinvoke l0.<avrora.sim.RWRegister: void <init>()>();

        $stack2 = new avrora.sim.mcu.ADC$ControlRegister$ConversionEvent;

        specialinvoke $stack2.<avrora.sim.mcu.ADC$ControlRegister$ConversionEvent: void <init>(avrora.sim.mcu.ADC$ControlRegister,avrora.sim.mcu.ADC$1)>(l0, null);

        l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC$ControlRegister$ConversionEvent conversion> = $stack2;

        $stack3 = staticinvoke <avrora.sim.state.RegisterUtil: avrora.sim.state.BooleanView booleanView(avrora.sim.state.RegisterView,int)>(l0, 7);

        l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.BooleanView _aden> = $stack3;

        $stack4 = staticinvoke <avrora.sim.state.RegisterUtil: avrora.sim.state.BooleanView booleanView(avrora.sim.state.RegisterView,int)>(l0, 6);

        l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.BooleanView _adsc> = $stack4;

        $stack5 = staticinvoke <avrora.sim.state.RegisterUtil: avrora.sim.state.BooleanView booleanView(avrora.sim.state.RegisterView,int)>(l0, 5);

        l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.BooleanView _adfr> = $stack5;

        $stack6 = staticinvoke <avrora.sim.state.RegisterUtil: avrora.sim.state.BooleanView booleanView(avrora.sim.state.RegisterView,int)>(l0, 4);

        l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.BooleanView _adif> = $stack6;

        $stack7 = staticinvoke <avrora.sim.state.RegisterUtil: avrora.sim.state.BooleanView booleanView(avrora.sim.state.RegisterView,int)>(l0, 3);

        l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.BooleanView _adie> = $stack7;

        $stack8 = staticinvoke <avrora.sim.state.RegisterUtil: avrora.sim.state.RegisterUtil$BitRangeView bitRangeView(avrora.sim.state.RegisterView,int,int)>(l0, 0, 2);

        l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.RegisterView _prescaler> = $stack8;

        l0.<avrora.sim.mcu.ADC$ControlRegister: int cycles> = 25;

        return;
    }

    static int access$100(avrora.sim.mcu.ADC$ControlRegister)
    {
        avrora.sim.mcu.ADC$ControlRegister l0;
        int $stack1;

        l0 := @parameter0: avrora.sim.mcu.ADC$ControlRegister;

        $stack1 = specialinvoke l0.<avrora.sim.mcu.ADC$ControlRegister: int convertVoltage()>();

        return $stack1;
    }

    static void access$200(avrora.sim.mcu.ADC$ControlRegister)
    {
        avrora.sim.mcu.ADC$ControlRegister l0;

        l0 := @parameter0: avrora.sim.mcu.ADC$ControlRegister;

        specialinvoke l0.<avrora.sim.mcu.ADC$ControlRegister: void insertConversion()>();

        return;
    }

    static void access$300(avrora.sim.mcu.ADC$ControlRegister)
    {
        avrora.sim.mcu.ADC$ControlRegister l0;

        l0 := @parameter0: avrora.sim.mcu.ADC$ControlRegister;

        specialinvoke l0.<avrora.sim.mcu.ADC$ControlRegister: void stopConversion()>();

        return;
    }

    private int convertVoltage()
    {
        avrora.sim.mcu.ADC$ControlRegister l0;
        avrora.sim.mcu.ADC $stack11, $stack14, $stack15, $stack19, $stack20, $stack24, $stack25, $stack50, $stack51, $stack55;
        avrora.sim.mcu.ADC$MUXRegister $stack12, $stack16, $stack21, $stack26, $stack52;
        boolean $stack13;
        avrora.sim.mcu.ADC$ADCInput[] $stack17, $stack22, $stack53;
        int $stack18, $stack23, $stack28, $stack34, $stack35, $stack54, $stack59, $stack60;
        avrora.sim.mcu.ADC$ADCInput l6, l7, l4;
        float l9, $stack27, $stack29, $stack30, $stack31, $stack36, $stack38, $stack44, $stack47, $stack57, $stack58, $stack61, $stack63, l5#1, l8#2, l10#3;
        byte $stack32, $stack33, $stack56;

        l0 := @this: avrora.sim.mcu.ADC$ControlRegister;

        $stack11 = l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack12 = $stack11.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$MUXRegister ADMUX_reg>;

        $stack13 = virtualinvoke $stack12.<avrora.sim.mcu.ADC$MUXRegister: boolean isSingleEnded()>();

        if $stack13 == 0 goto label04;

        $stack50 = l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack53 = $stack50.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$ADCInput[] connectedDevices>;

        $stack51 = l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack52 = $stack51.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$MUXRegister ADMUX_reg>;

        $stack54 = virtualinvoke $stack52.<avrora.sim.mcu.ADC$MUXRegister: int getSingleIndex()>();

        l4 = $stack53[$stack54];

        if l4 == null goto label01;

        $stack61 = interfaceinvoke l4.<avrora.sim.mcu.ADC$ADCInput: float getVoltage()>();

        l5#1 = $stack61;

        goto label02;

     label01:
        l5#1 = 0.0F;

     label02:
        $stack55 = l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack63 = $stack55.<avrora.sim.mcu.ADC: float voltageRef>;

        $stack56 = l5#1 cmpl $stack63;

        if $stack56 < 0 goto label03;

        return 1023;

     label03:
        $stack57 = l5#1 * 1024.0F;

        $stack58 = $stack57 / $stack63;

        $stack59 = (int) $stack58;

        $stack60 = 1023 & $stack59;

        return $stack60;

     label04:
        $stack14 = l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack17 = $stack14.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$ADCInput[] connectedDevices>;

        $stack15 = l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack16 = $stack15.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$MUXRegister ADMUX_reg>;

        $stack18 = virtualinvoke $stack16.<avrora.sim.mcu.ADC$MUXRegister: int getPosIndex()>();

        l6 = $stack17[$stack18];

        $stack19 = l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack22 = $stack19.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$ADCInput[] connectedDevices>;

        $stack20 = l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack21 = $stack20.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$MUXRegister ADMUX_reg>;

        $stack23 = virtualinvoke $stack21.<avrora.sim.mcu.ADC$MUXRegister: int getNegIndex()>();

        l7 = $stack22[$stack23];

        if l6 == null goto label05;

        $stack47 = interfaceinvoke l6.<avrora.sim.mcu.ADC$ADCInput: float getVoltage()>();

        l8#2 = $stack47;

        goto label06;

     label05:
        l8#2 = 0.0F;

     label06:
        l9 = l8#2;

        if l7 == null goto label07;

        $stack36 = interfaceinvoke l7.<avrora.sim.mcu.ADC$ADCInput: float getVoltage()>();

        l10#3 = $stack36;

        goto label08;

     label07:
        l10#3 = 0.0F;

     label08:
        $stack24 = l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack38 = $stack24.<avrora.sim.mcu.ADC: float voltageRef>;

        $stack27 = l9 - l10#3;

        $stack25 = l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack26 = $stack25.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$MUXRegister ADMUX_reg>;

        $stack28 = virtualinvoke $stack26.<avrora.sim.mcu.ADC$MUXRegister: int getGain()>();

        $stack29 = (float) $stack28;

        $stack30 = $stack27 * $stack29;

        $stack31 = $stack30 * 512.0F;

        $stack44 = $stack31 / $stack38;

        $stack32 = $stack44 cmpg -512.0F;

        if $stack32 >= 0 goto label09;

        return 1023;

     label09:
        $stack33 = $stack44 cmpl 511.0F;

        if $stack33 <= 0 goto label10;

        return 511;

     label10:
        $stack34 = (int) $stack44;

        $stack35 = 1023 & $stack34;

        return $stack35;
    }

    public void force(int)
    {
        avrora.sim.mcu.ADC$ControlRegister l0;
        avrora.sim.state.BooleanView $stack2;
        int l1;

        l0 := @this: avrora.sim.mcu.ADC$ControlRegister;

        l1 := @parameter0: int;

        $stack2 = l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.BooleanView _adif>;

        interfaceinvoke $stack2.<avrora.sim.state.BooleanView: void setValue(boolean)>(1);

        return;
    }

    private int getPrescaler()
    {
        avrora.sim.mcu.ADC$ControlRegister l0;
        avrora.sim.state.RegisterView $stack1;
        short[] $stack2;
        int $stack3;
        short $stack4;

        l0 := @this: avrora.sim.mcu.ADC$ControlRegister;

        $stack2 = <avrora.sim.mcu.ADC: short[] PRESCALER>;

        $stack1 = l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.RegisterView _prescaler>;

        $stack3 = interfaceinvoke $stack1.<avrora.sim.state.RegisterView: int getValue()>();

        $stack4 = $stack2[$stack3];

        return $stack4;
    }

    private void insertConversion()
    {
        avrora.sim.mcu.ADC$ControlRegister l0;
        avrora.sim.mcu.ADC $stack1, $stack8, $stack11, $stack13, $stack17, $stack22, $stack29, $stack31, $stack35;
        avrora.sim.clock.Clock $stack2;
        avrora.sim.mcu.ADC$ControlRegister$ConversionEvent $stack3;
        int $stack4, $stack5, $stack6, $stack19, $stack24, $stack37;
        long $stack7;
        avrora.sim.mcu.ADC$MUXRegister $stack9, $stack18, $stack23, $stack36;
        boolean $stack10;
        avrora.sim.output.SimPrinter $stack12, $stack15, $stack30, $stack33;
        java.lang.StringBuilder $stack14, $stack16, $stack20, $stack21, $stack25, $stack32, $stack34, $stack38;
        java.lang.String $stack26, $stack39;

        l0 := @this: avrora.sim.mcu.ADC$ControlRegister;

        $stack1 = l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack2 = $stack1.<avrora.sim.mcu.ADC: avrora.sim.clock.Clock mainClock>;

        $stack3 = l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC$ControlRegister$ConversionEvent conversion>;

        $stack4 = specialinvoke l0.<avrora.sim.mcu.ADC$ControlRegister: int getPrescaler()>();

        $stack5 = l0.<avrora.sim.mcu.ADC$ControlRegister: int cycles>;

        $stack6 = $stack4 * $stack5;

        $stack7 = (long) $stack6;

        virtualinvoke $stack2.<avrora.sim.clock.Clock: void insertEvent(avrora.sim.Simulator$Event,long)>($stack3, $stack7);

        $stack8 = l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack9 = $stack8.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$MUXRegister ADMUX_reg>;

        $stack10 = virtualinvoke $stack9.<avrora.sim.mcu.ADC$MUXRegister: boolean isSingleEnded()>();

        if $stack10 == 0 goto label1;

        $stack29 = l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack30 = $stack29.<avrora.sim.mcu.ADC: avrora.sim.output.SimPrinter devicePrinter>;

        if $stack30 == null goto label2;

        $stack31 = l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack33 = $stack31.<avrora.sim.mcu.ADC: avrora.sim.output.SimPrinter devicePrinter>;

        $stack32 = new java.lang.StringBuilder;

        specialinvoke $stack32.<java.lang.StringBuilder: void <init>()>();

        $stack34 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ADC: beginning sample of channel ");

        $stack35 = l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack36 = $stack35.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$MUXRegister ADMUX_reg>;

        $stack37 = virtualinvoke $stack36.<avrora.sim.mcu.ADC$MUXRegister: int getSingleIndex()>();

        $stack38 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack37);

        $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack33.<avrora.sim.output.SimPrinter: void println(java.lang.String)>($stack39);

        goto label2;

     label1:
        $stack11 = l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack12 = $stack11.<avrora.sim.mcu.ADC: avrora.sim.output.SimPrinter devicePrinter>;

        if $stack12 == null goto label2;

        $stack13 = l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack15 = $stack13.<avrora.sim.mcu.ADC: avrora.sim.output.SimPrinter devicePrinter>;

        $stack14 = new java.lang.StringBuilder;

        specialinvoke $stack14.<java.lang.StringBuilder: void <init>()>();

        $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ADC: beginning sample of channels ");

        $stack17 = l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack18 = $stack17.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$MUXRegister ADMUX_reg>;

        $stack19 = virtualinvoke $stack18.<avrora.sim.mcu.ADC$MUXRegister: int getPosIndex()>();

        $stack20 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack19);

        $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $stack22 = l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack23 = $stack22.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$MUXRegister ADMUX_reg>;

        $stack24 = virtualinvoke $stack23.<avrora.sim.mcu.ADC$MUXRegister: int getNegIndex()>();

        $stack25 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack24);

        $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack15.<avrora.sim.output.SimPrinter: void println(java.lang.String)>($stack26);

     label2:
        l0.<avrora.sim.mcu.ADC$ControlRegister: int cycles> = 13;

        return;
    }

    public void invoke(int)
    {
        avrora.sim.mcu.ADC$ControlRegister l0;
        int l1;

        l0 := @this: avrora.sim.mcu.ADC$ControlRegister;

        l1 := @parameter0: int;

        specialinvoke l0.<avrora.sim.mcu.ADC$ControlRegister: void unpostADCInterrupt()>();

        return;
    }

    private void startConversion()
    {
        avrora.sim.mcu.ADC$ControlRegister l0;
        boolean $stack1;

        l0 := @this: avrora.sim.mcu.ADC$ControlRegister;

        $stack1 = l0.<avrora.sim.mcu.ADC$ControlRegister: boolean converting>;

        if $stack1 != 0 goto label1;

        l0.<avrora.sim.mcu.ADC$ControlRegister: boolean converting> = 1;

        specialinvoke l0.<avrora.sim.mcu.ADC$ControlRegister: void insertConversion()>();

     label1:
        return;
    }

    private void stopConversion()
    {
        avrora.sim.mcu.ADC$ControlRegister l0;
        avrora.sim.state.BooleanView $stack1;
        boolean $stack2;
        avrora.sim.mcu.ADC $stack3;
        avrora.sim.mcu.ADC$ControlRegister$ConversionEvent $stack4;
        avrora.sim.clock.Clock $stack5;

        l0 := @this: avrora.sim.mcu.ADC$ControlRegister;

        $stack1 = l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.BooleanView _adsc>;

        interfaceinvoke $stack1.<avrora.sim.state.BooleanView: void setValue(boolean)>(0);

        $stack2 = l0.<avrora.sim.mcu.ADC$ControlRegister: boolean converting>;

        if $stack2 == 0 goto label1;

        l0.<avrora.sim.mcu.ADC$ControlRegister: boolean converting> = 0;

        $stack3 = l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack5 = $stack3.<avrora.sim.mcu.ADC: avrora.sim.clock.Clock mainClock>;

        $stack4 = l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC$ControlRegister$ConversionEvent conversion>;

        virtualinvoke $stack5.<avrora.sim.clock.Clock: void removeEvent(avrora.sim.Simulator$Event)>($stack4);

     label1:
        return;
    }

    private void unpostADCInterrupt()
    {
        avrora.sim.mcu.ADC$ControlRegister l0;
        avrora.sim.state.BooleanView $stack1;
        avrora.sim.mcu.ADC $stack2, $stack3;
        int $stack4;
        avrora.sim.AtmelInterpreter $stack5;

        l0 := @this: avrora.sim.mcu.ADC$ControlRegister;

        $stack1 = l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.BooleanView _adif>;

        interfaceinvoke $stack1.<avrora.sim.state.BooleanView: void setValue(boolean)>(0);

        $stack2 = l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack5 = $stack2.<avrora.sim.mcu.ADC: avrora.sim.AtmelInterpreter interpreter>;

        $stack3 = l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack4 = $stack3.<avrora.sim.mcu.ADC: int interruptNum>;

        virtualinvoke $stack5.<avrora.sim.AtmelInterpreter: void setPosted(int,boolean)>($stack4, 0);

        return;
    }

    public void write(byte)
    {
        avrora.sim.mcu.ADC$ControlRegister l0;
        byte l1;
        avrora.sim.state.BooleanView $stack2, $stack8, $stack15, $stack4#3;
        boolean $stack3, $stack11, $stack16, $stack5#5;
        avrora.sim.mcu.ADC $stack6, $stack7;
        avrora.sim.AtmelInterpreter $stack9;
        int $stack10;

        l0 := @this: avrora.sim.mcu.ADC$ControlRegister;

        l1 := @parameter0: byte;

        l0.<avrora.sim.mcu.ADC$ControlRegister: byte value> = l1;

        $stack2 = l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.BooleanView _aden>;

        $stack3 = interfaceinvoke $stack2.<avrora.sim.state.BooleanView: boolean getValue()>();

        if $stack3 == 0 goto label1;

        $stack15 = l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.BooleanView _adsc>;

        $stack16 = interfaceinvoke $stack15.<avrora.sim.state.BooleanView: boolean getValue()>();

        if $stack16 == 0 goto label2;

        specialinvoke l0.<avrora.sim.mcu.ADC$ControlRegister: void startConversion()>();

        goto label2;

     label1:
        specialinvoke l0.<avrora.sim.mcu.ADC$ControlRegister: void stopConversion()>();

     label2:
        $stack4#3 = l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.BooleanView _adif>;

        $stack5#5 = interfaceinvoke $stack4#3.<avrora.sim.state.BooleanView: boolean getValue()>();

        if $stack5#5 == 0 goto label3;

        specialinvoke l0.<avrora.sim.mcu.ADC$ControlRegister: void unpostADCInterrupt()>();

     label3:
        $stack6 = l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack9 = $stack6.<avrora.sim.mcu.ADC: avrora.sim.AtmelInterpreter interpreter>;

        $stack7 = l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $stack10 = $stack7.<avrora.sim.mcu.ADC: int interruptNum>;

        $stack8 = l0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.BooleanView _adie>;

        $stack11 = interfaceinvoke $stack8.<avrora.sim.state.BooleanView: boolean getValue()>();

        virtualinvoke $stack9.<avrora.sim.AtmelInterpreter: void setEnabled(int,boolean)>($stack10, $stack11);

        return;
    }
}
