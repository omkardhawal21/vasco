public class avrora.sim.radio.Medium$TXRX extends java.lang.Object
{
    public final avrora.sim.radio.Medium medium;
    public final avrora.sim.clock.Clock clock;
    public final long cyclesPerByte;
    public final long leadCycles;
    public final long cyclesPerBit;
    protected avrora.sim.radio.Medium$Probe$List probeList;
    public boolean activated;
    static final boolean $assertionsDisabled;

    static void <clinit>()
    {
        java.lang.Class $stack1;
        boolean $stack2, l0#1;

        $stack1 = class "Lavrora/sim/radio/Medium;";

        $stack2 = virtualinvoke $stack1.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $stack2 != 0 goto label1;

        l0#1 = 1;

        goto label2;

     label1:
        l0#1 = 0;

     label2:
        <avrora.sim.radio.Medium$TXRX: boolean $assertionsDisabled> = l0#1;

        return;
    }

    protected void <init>(avrora.sim.radio.Medium, avrora.sim.clock.Clock)
    {
        avrora.sim.radio.Medium$TXRX l0;
        avrora.sim.radio.Medium l1, $stack7, $stack13;
        avrora.sim.clock.Clock l2;
        long $stack6, $stack9, $stack10, $stack11, $stack12, $stack15, $stack16, $stack17, $stack18, $stack19;
        int l5, $stack14;
        boolean $stack8;
        byte $stack20;
        java.lang.AssertionError $stack31;

        l0 := @this: avrora.sim.radio.Medium$TXRX;

        l1 := @parameter0: avrora.sim.radio.Medium;

        l2 := @parameter1: avrora.sim.clock.Clock;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        l0.<avrora.sim.radio.Medium$TXRX: avrora.sim.radio.Medium medium> = l1;

        l0.<avrora.sim.radio.Medium$TXRX: avrora.sim.clock.Clock clock> = l2;

        $stack6 = virtualinvoke l2.<avrora.sim.clock.Clock: long getHZ()>();

        $stack7 = l0.<avrora.sim.radio.Medium$TXRX: avrora.sim.radio.Medium medium>;

        l5 = $stack7.<avrora.sim.radio.Medium: int bitsPerSecond>;

        $stack8 = <avrora.sim.radio.Medium$TXRX: boolean $assertionsDisabled>;

        if $stack8 != 0 goto label1;

        $stack19 = (long) l5;

        $stack20 = $stack6 cmp $stack19;

        if $stack20 > 0 goto label1;

        $stack31 = new java.lang.AssertionError;

        specialinvoke $stack31.<java.lang.AssertionError: void <init>()>();

        throw $stack31;

     label1:
        $stack9 = (long) l5;

        $stack10 = $stack6 / $stack9;

        l0.<avrora.sim.radio.Medium$TXRX: long cyclesPerBit> = $stack10;

        $stack11 = l0.<avrora.sim.radio.Medium$TXRX: long cyclesPerBit>;

        $stack12 = 8L * $stack11;

        l0.<avrora.sim.radio.Medium$TXRX: long cyclesPerByte> = $stack12;

        $stack13 = l0.<avrora.sim.radio.Medium$TXRX: avrora.sim.radio.Medium medium>;

        $stack14 = $stack13.<avrora.sim.radio.Medium: int leadBits>;

        $stack15 = (long) $stack14;

        $stack17 = $stack15 * $stack6;

        $stack16 = (long) l5;

        $stack18 = $stack17 / $stack16;

        l0.<avrora.sim.radio.Medium$TXRX: long leadCycles> = $stack18;

        return;
    }

    protected long getBitNum(long)
    {
        long l1, $stack3, $stack4;
        avrora.sim.radio.Medium$TXRX l0;

        l0 := @this: avrora.sim.radio.Medium$TXRX;

        l1 := @parameter0: long;

        $stack3 = l0.<avrora.sim.radio.Medium$TXRX: long cyclesPerBit>;

        $stack4 = l1 / $stack3;

        return $stack4;
    }

    protected long getCycleTime(long)
    {
        long l1, $stack3, $stack4;
        avrora.sim.radio.Medium$TXRX l0;

        l0 := @this: avrora.sim.radio.Medium$TXRX;

        l1 := @parameter0: long;

        $stack3 = l0.<avrora.sim.radio.Medium$TXRX: long cyclesPerBit>;

        $stack4 = l1 * $stack3;

        return $stack4;
    }

    public void insertProbe(avrora.sim.radio.Medium$Probe)
    {
        avrora.sim.radio.Medium$TXRX l0;
        avrora.sim.radio.Medium$Probe$List $stack2, $stack3, $stack4;
        avrora.sim.radio.Medium$Probe l1;

        l0 := @this: avrora.sim.radio.Medium$TXRX;

        l1 := @parameter0: avrora.sim.radio.Medium$Probe;

        $stack2 = l0.<avrora.sim.radio.Medium$TXRX: avrora.sim.radio.Medium$Probe$List probeList>;

        if $stack2 != null goto label1;

        $stack4 = new avrora.sim.radio.Medium$Probe$List;

        specialinvoke $stack4.<avrora.sim.radio.Medium$Probe$List: void <init>()>();

        l0.<avrora.sim.radio.Medium$TXRX: avrora.sim.radio.Medium$Probe$List probeList> = $stack4;

     label1:
        $stack3 = l0.<avrora.sim.radio.Medium$TXRX: avrora.sim.radio.Medium$Probe$List probeList>;

        virtualinvoke $stack3.<avrora.sim.radio.Medium$Probe$List: void add(java.lang.Object)>(l1);

        return;
    }

    public void removeProbe(avrora.sim.radio.Medium$Probe)
    {
        avrora.sim.radio.Medium$TXRX l0;
        avrora.sim.radio.Medium$Probe$List $stack2, $stack3;
        avrora.sim.radio.Medium$Probe l1;

        l0 := @this: avrora.sim.radio.Medium$TXRX;

        l1 := @parameter0: avrora.sim.radio.Medium$Probe;

        $stack2 = l0.<avrora.sim.radio.Medium$TXRX: avrora.sim.radio.Medium$Probe$List probeList>;

        if $stack2 == null goto label1;

        $stack3 = l0.<avrora.sim.radio.Medium$TXRX: avrora.sim.radio.Medium$Probe$List probeList>;

        virtualinvoke $stack3.<avrora.sim.radio.Medium$Probe$List: void remove(java.lang.Object)>(l1);

     label1:
        return;
    }
}
