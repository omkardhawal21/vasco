cl = Class.forName("org.dacapo.harness.TeeOutputStream.class");
cl = Class.forName("org.dacapo.harness.Callback$1.class");
cl = Class.forName("org.dacapo.harness.TeePrintStream.class");
cl = Class.forName("org.dacapo.harness.CommandLineArgs$Methodology.class");
cl = Class.forName("org.dacapo.harness.Callback$Mode.class");
cl = Class.forName("org.dacapo.harness.TestHarness.class");
cl = Class.forName("org.dacapo.harness.CommandLineArgs.class");
cl = Class.forName("org.dacapo.harness.Benchmark.class");
cl = Class.forName("org.dacapo.harness.Callback.class");
cl = Class.forName("org.dacapo.harness.DacapoException.class");
cl = Class.forName("org.dacapo.harness.Digest.class");
cl = Class.forName("org.dacapo.harness.Avrora.class");
cl = Class.forName("org.dacapo.harness.DacapoClassLoader.class");
cl = Class.forName("org.dacapo.harness.FileDigest.class");
cl = Class.forName("org.dacapo.parser.SimpleCharStream.class");
cl = Class.forName("org.dacapo.parser.Token.class");
cl = Class.forName("org.dacapo.parser.Config$1.class");
cl = Class.forName("org.dacapo.parser.ConfigFileTokenManager.class");
cl = Class.forName("org.dacapo.parser.ConfigFileConstants.class");
cl = Class.forName("org.dacapo.parser.Config$ThreadModel.class");
cl = Class.forName("org.dacapo.parser.Config$Size.class");
cl = Class.forName("org.dacapo.parser.ParseException.class");
cl = Class.forName("org.dacapo.parser.TokenMgrError.class");
cl = Class.forName("org.dacapo.parser.Config$OutputFile.class");
cl = Class.forName("org.dacapo.parser.Config.class");
cl = Class.forName("org.dacapo.parser.ConfigFile.class");
cl = Class.forName("org.apache.commons.cli.OptionValidator.class");
cl = Class.forName("org.apache.commons.cli.CommandLineParser.class");
cl = Class.forName("org.apache.commons.cli.MissingArgumentException.class");
cl = Class.forName("org.apache.commons.cli.Util.class");
cl = Class.forName("org.apache.commons.cli.Parser.class");
cl = Class.forName("org.apache.commons.cli.ParseException.class");
cl = Class.forName("org.apache.commons.cli.Options.class");
cl = Class.forName("org.apache.commons.cli.MissingOptionException.class");
cl = Class.forName("org.apache.commons.cli.CommandLine.class");
cl = Class.forName("org.apache.commons.cli.Option.class");
cl = Class.forName("org.apache.commons.cli.PosixParser.class");
cl = Class.forName("org.apache.commons.cli.UnrecognizedOptionException.class");
cl = Class.forName("cck.util.Util$Unexpected.class");
cl = Class.forName("cck.util.Option$Long.class");
cl = Class.forName("cck.util.Option$Bool.class");
cl = Class.forName("cck.util.Option$Interval.class");
cl = Class.forName("cck.util.Option$List.class");
cl = Class.forName("cck.util.Options.class");
cl = Class.forName("cck.util.Arithmetic.class");
cl = Class.forName("cck.util.ClassMap.class");
cl = Class.forName("cck.util.Option$1.class");
cl = Class.forName("cck.util.VersionTag.class");
cl = Class.forName("cck.util.Util$Error.class");
cl = Class.forName("cck.util.Option$Double.class");
cl = Class.forName("cck.util.Option.class");
cl = Class.forName("cck.util.Option$Str.class");
cl = Class.forName("cck.util.Util$InternalError.class");
cl = Class.forName("cck.elf.ELFDataInputStream.class");
cl = Class.forName("cck.elf.ELFProgramHeaderTable$Entry32.class");
cl = Class.forName("cck.elf.ELFIdentifier.class");
cl = Class.forName("cck.elf.ELFSectionHeaderTable$Entry32.class");
cl = Class.forName("cck.elf.ELFHeader.class");
cl = Class.forName("cck.elf.ELFStringTable.class");
cl = Class.forName("cck.elf.ELFProgramHeaderTable.class");
cl = Class.forName("cck.elf.ELFLoader.class");
cl = Class.forName("cck.elf.ELFSymbolTable$Entry.class");
cl = Class.forName("cck.elf.ELFSectionHeaderTable.class");
cl = Class.forName("cck.elf.ELFHeader$FormatError.class");
cl = Class.forName("cck.elf.ELFSymbolTable.class");
cl = Class.forName("cck.text.TermUtil.class");
cl = Class.forName("cck.text.Status$Item.class");
cl = Class.forName("cck.text.Verbose.class");
cl = Class.forName("cck.text.CharUtil.class");
cl = Class.forName("cck.text.Status.class");
cl = Class.forName("cck.text.Terminal.class");
cl = Class.forName("cck.text.Verbose$Printer.class");
cl = Class.forName("cck.text.StringUtil.class");
cl = Class.forName("cck.text.Printer.class");
cl = Class.forName("cck.help.HelpCategory.class");
cl = Class.forName("cck.help.HelpCategory$ListSection.class");
cl = Class.forName("cck.help.HelpCategory$Section.class");
cl = Class.forName("cck.help.HelpItem.class");
cl = Class.forName("cck.help.ClassMapValueItem.class");
cl = Class.forName("cck.help.HelpCategory$OptionsSection.class");
cl = Class.forName("cck.help.HelpSystem.class");
cl = Class.forName("cck.help.HelpCategory$1.class");
cl = Class.forName("cck.help.HelpCategory$ParagraphSection.class");
cl = Class.forName("Harness.class");
cl = Class.forName("avrora.Main.class");
cl = Class.forName("avrora.syntax.elf.ELFParser.class");
cl = Class.forName("avrora.syntax.objdump.ObjDumpProgramReader.class");
cl = Class.forName("avrora.syntax.objdump.ObjDump2ProgramReader.class");
cl = Class.forName("avrora.syntax.atmel.AtmelProgramReader.class");
cl = Class.forName("avrora.Defaults$AutoProgramReader.class");
cl = Class.forName("avrora.Version.class");
cl = Class.forName("avrora.core.SourceMapping.class");
cl = Class.forName("avrora.core.SourceMapping$Location.class");
cl = Class.forName("avrora.core.Program.class");
cl = Class.forName("avrora.core.SourceMapping$1.class");
cl = Class.forName("avrora.core.LoadableProgram.class");
cl = Class.forName("avrora.core.ProgramReader.class");
cl = Class.forName("avrora.Defaults.class");
cl = Class.forName("avrora.monitors.Monitor.class");
cl = Class.forName("avrora.monitors.PacketMonitor.class");
cl = Class.forName("avrora.monitors.LEDMonitor.class");
cl = Class.forName("avrora.monitors.PacketMonitor$Mon.class");
cl = Class.forName("avrora.monitors.MonitorFactory.class");
cl = Class.forName("avrora.monitors.LEDMonitor$Mon.class");
cl = Class.forName("avrora.sim.AtmelInterpreter.class");
cl = Class.forName("avrora.sim.Simulation$Iter.class");
cl = Class.forName("avrora.sim.util.MulticastProbe.class");
cl = Class.forName("avrora.sim.util.SimUtil.class");
cl = Class.forName("avrora.sim.util.MulticastFSMProbe.class");
cl = Class.forName("avrora.sim.util.MulticastInterruptProbe.class");
cl = Class.forName("avrora.sim.util.TransactionalList$Link.class");
cl = Class.forName("avrora.sim.util.ClockCycleTimeout.class");
cl = Class.forName("avrora.sim.util.TransactionalList.class");
cl = Class.forName("avrora.sim.output.SimPrinter.class");
cl = Class.forName("avrora.sim.output.EventBuffer.class");
cl = Class.forName("avrora.sim.RWRegister.class");
cl = Class.forName("avrora.sim.FiniteStateMachine$Probe.class");
cl = Class.forName("avrora.sim.AtmelInterpreter$IORegBehavior.class");
cl = Class.forName("avrora.sim.Simulator$Probe.class");
cl = Class.forName("avrora.sim.CodeSegment$ProbedLegacyInstr.class");
cl = Class.forName("avrora.sim.InterpreterFactory.class");
cl = Class.forName("avrora.sim.CodeSegment$NoLegacyInstr.class");
cl = Class.forName("avrora.sim.ActiveRegister.class");
cl = Class.forName("avrora.sim.platform.ExternalFlash$PD5Output.class");
cl = Class.forName("avrora.sim.platform.Seres$Factory.class");
cl = Class.forName("avrora.sim.platform.Mica2$Factory.class");
cl = Class.forName("avrora.sim.platform.ExternalFlash$Delay.class");
cl = Class.forName("avrora.sim.platform.ExternalFlash$PD3Output.class");
cl = Class.forName("avrora.sim.platform.ExternalFlash$Page.class");
cl = Class.forName("avrora.sim.platform.ExternalFlash$PA3Output.class");
cl = Class.forName("avrora.sim.platform.Platform.class");
cl = Class.forName("avrora.sim.platform.MicaZ$Factory.class");
cl = Class.forName("avrora.sim.platform.LED$LEDProbe.class");
cl = Class.forName("avrora.sim.platform.ExternalFlash.class");
cl = Class.forName("avrora.sim.platform.Telos$Factory.class");
cl = Class.forName("avrora.sim.platform.LED$LEDGroup.class");
cl = Class.forName("avrora.sim.platform.Superbot$Factory.class");
cl = Class.forName("avrora.sim.platform.LED.class");
cl = Class.forName("avrora.sim.platform.Mica2.class");
cl = Class.forName("avrora.sim.platform.ExternalFlash$Memory.class");
cl = Class.forName("avrora.sim.platform.ExternalFlash$PD2Input.class");
cl = Class.forName("avrora.sim.platform.PlatformFactory.class");
cl = Class.forName("avrora.sim.platform.sensors.Sensor.class");
cl = Class.forName("avrora.sim.platform.sensors.AccelSensor.class");
cl = Class.forName("avrora.sim.platform.sensors.AccelSensorPower$OnPin.class");
cl = Class.forName("avrora.sim.platform.sensors.AccelSensor$ADCInput.class");
cl = Class.forName("avrora.sim.platform.sensors.LightSensor.class");
cl = Class.forName("avrora.sim.platform.sensors.LightSensor$OnPin.class");
cl = Class.forName("avrora.sim.platform.sensors.SensorBoard.class");
cl = Class.forName("avrora.sim.platform.sensors.LightSensor$ADCInput.class");
cl = Class.forName("avrora.sim.platform.sensors.AccelSensorPower.class");
cl = Class.forName("avrora.sim.CodeSegment.class");
cl = Class.forName("avrora.sim.Simulation$Node.class");
cl = Class.forName("avrora.sim.FiniteStateMachine$TransitionEvent.class");
cl = Class.forName("avrora.sim.Interpreter.class");
cl = Class.forName("avrora.sim.InterpreterError$NoSuchInstructionException.class");
cl = Class.forName("avrora.sim.State.class");
cl = Class.forName("avrora.sim.Simulator$Watch.class");
cl = Class.forName("avrora.sim.AtmelInterpreter$SREGBehavior.class");
cl = Class.forName("avrora.sim.InterruptTable.class");
cl = Class.forName("avrora.sim.Simulator$InterruptProbe.class");
cl = Class.forName("avrora.sim.state.RegisterUtil$BitRangeView.class");
cl = Class.forName("avrora.sim.state.Register.class");
cl = Class.forName("avrora.sim.state.RegisterView$RegisterValueSetListener.class");
cl = Class.forName("avrora.sim.state.RegisterUtil.class");
cl = Class.forName("avrora.sim.state.RegisterUtil$BoolView.class");
cl = Class.forName("avrora.sim.state.RegisterView.class");
cl = Class.forName("avrora.sim.state.RegisterUtil$PermutedView.class");
cl = Class.forName("avrora.sim.state.BooleanRegister.class");
cl = Class.forName("avrora.sim.state.BooleanView$ValueSetListener.class");
cl = Class.forName("avrora.sim.state.Register$Watch.class");
cl = Class.forName("avrora.sim.state.BooleanView.class");
cl = Class.forName("avrora.sim.state.VolatileBehavior.class");
cl = Class.forName("avrora.sim.state.AbstractRegisterView.class");
cl = Class.forName("avrora.sim.Simulator$Event.class");
cl = Class.forName("avrora.sim.clock.RippleSynchronizer$WaitLink.class");
cl = Class.forName("avrora.sim.clock.Synchronizer.class");
cl = Class.forName("avrora.sim.clock.DeltaQueue.class");
cl = Class.forName("avrora.sim.clock.MainClock.class");
cl = Class.forName("avrora.sim.clock.DeltaQueue$Link.class");
cl = Class.forName("avrora.sim.clock.DeltaQueue$EventList.class");
cl = Class.forName("avrora.sim.clock.DerivedClock.class");
cl = Class.forName("avrora.sim.clock.ClockDomain.class");
cl = Class.forName("avrora.sim.clock.RippleSynchronizer$NotifyEvent.class");
cl = Class.forName("avrora.sim.clock.RippleSynchronizer.class");
cl = Class.forName("avrora.sim.clock.Clock.class");
cl = Class.forName("avrora.sim.Simulation.class");
cl = Class.forName("avrora.sim.SimulatorThread.class");
cl = Class.forName("avrora.sim.AtmelInterpreter$StateImpl.class");
cl = Class.forName("avrora.sim.types.SingleSimulation.class");
cl = Class.forName("avrora.sim.types.SensorSimulation$SensorNode.class");
cl = Class.forName("avrora.sim.types.SensorSimulation.class");
cl = Class.forName("avrora.sim.Segment.class");
cl = Class.forName("avrora.sim.Segment$AddressOutOfBoundsException.class");
cl = Class.forName("avrora.sim.mcu.ATMegaFamily$PortRegister.class");
cl = Class.forName("avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg$ResetEvent.class");
cl = Class.forName("avrora.sim.mcu.RegisterSet$UnusedWriter.class");
cl = Class.forName("avrora.sim.mcu.USART$DataRegister$TwoLevelFIFO.class");
cl = Class.forName("avrora.sim.mcu.SPI$TransferEvent.class");
cl = Class.forName("avrora.sim.mcu.Microcontroller$Pin$ListenableInput.class");
cl = Class.forName("avrora.sim.mcu.ATMegaFamily.class");
cl = Class.forName("avrora.sim.mcu.RegisterLayout.class");
cl = Class.forName("avrora.sim.mcu.USART$ControlRegisterC.class");
cl = Class.forName("avrora.sim.mcu.ADC$1.class");
cl = Class.forName("avrora.sim.mcu.USART$UBRRnLReg.class");
cl = Class.forName("avrora.sim.mcu.AtmelMicrocontroller$INTPin$InterruptTableNotification.class");
cl = Class.forName("avrora.sim.mcu.ADC.class");
cl = Class.forName("avrora.sim.mcu.SPI$Frame.class");
cl = Class.forName("avrora.sim.mcu.ATMegaFamily$Timer1.class");
cl = Class.forName("avrora.sim.mcu.ATMegaFamily$Timer0.class");
cl = Class.forName("avrora.sim.mcu.Timer8Bit$BufferedRegister.class");
cl = Class.forName("avrora.sim.mcu.AtmelMicrocontroller$InterruptType.class");
cl = Class.forName("avrora.sim.mcu.Timer16Bit$1.class");
cl = Class.forName("avrora.sim.mcu.SPI.class");
cl = Class.forName("avrora.sim.mcu.USART$DataRegister.class");
cl = Class.forName("avrora.sim.mcu.ATMegaFamily$MaskRegister.class");
cl = Class.forName("avrora.sim.mcu.Timer16Bit$Mode_FastPWM.class");
cl = Class.forName("avrora.sim.mcu.USART$ControlRegisterB.class");
cl = Class.forName("avrora.sim.mcu.ADC$MUXRegister.class");
cl = Class.forName("avrora.sim.mcu.ATMegaFamily$Timer2.class");
cl = Class.forName("avrora.sim.mcu.ATMegaFamily$Timer3.class");
cl = Class.forName("avrora.sim.mcu.SPI$SPDReg.class");
cl = Class.forName("avrora.sim.mcu.Microcontroller$Pin$InputListener.class");
cl = Class.forName("avrora.sim.mcu.RegisterLayout$RegisterInfo.class");
cl = Class.forName("avrora.sim.mcu.Timer16Bit.class");
cl = Class.forName("avrora.sim.mcu.RegisterSet.class");
cl = Class.forName("avrora.sim.mcu.ADC$ADCInput.class");
cl = Class.forName("avrora.sim.mcu.AtmelMicrocontroller$INTPin.class");
cl = Class.forName("avrora.sim.mcu.Timer16Bit$TCNTnRegister.class");
cl = Class.forName("avrora.sim.mcu.RegisterSet$MultiFieldRegister.class");
cl = Class.forName("avrora.sim.mcu.USART$USARTDevice.class");
cl = Class.forName("avrora.sim.mcu.Timer16Bit$OutputCompareUnit$FOC_Field.class");
cl = Class.forName("avrora.sim.mcu.Timer16Bit$Mode_Normal.class");
cl = Class.forName("avrora.sim.mcu.USART$Transmitter.class");
cl = Class.forName("avrora.sim.mcu.DefaultMCU$Pin.class");
cl = Class.forName("avrora.sim.mcu.USART$DataRegister$TwoLevelFIFO$USARTFrameWrapper.class");
cl = Class.forName("avrora.sim.mcu.USART$Receiver.class");
cl = Class.forName("avrora.sim.mcu.Timer8Bit$Mode_Normal.class");
cl = Class.forName("avrora.sim.mcu.SPI$SPSReg.class");
cl = Class.forName("avrora.sim.mcu.AtmelMicrocontroller.class");
cl = Class.forName("avrora.sim.mcu.ReprogrammableCodeSegment$Factory.class");
cl = Class.forName("avrora.sim.mcu.Timer16Bit$Mode_PWM_PNF.class");
cl = Class.forName("avrora.sim.mcu.RegisterSet$Field.class");
cl = Class.forName("avrora.sim.mcu.DefaultMCU.class");
cl = Class.forName("avrora.sim.mcu.EEPROM$EEPROMWriteFinishedEvent.class");
cl = Class.forName("avrora.sim.mcu.AtmelInternalDevice.class");
cl = Class.forName("avrora.sim.mcu.USART$UBRRnHReg.class");
cl = Class.forName("avrora.sim.mcu.RegisterLayout$SubField.class");
cl = Class.forName("avrora.sim.mcu.Timer16Bit$BufferedRegister.class");
cl = Class.forName("avrora.sim.mcu.Microcontroller$Pin$ListenableBooleanViewInput.class");
cl = Class.forName("avrora.sim.mcu.Microcontroller$Pin$Input.class");
cl = Class.forName("avrora.sim.mcu.USART$SerialPrinter.class");
cl = Class.forName("avrora.sim.mcu.Timer16Bit$InputCapturePin.class");
cl = Class.forName("avrora.sim.mcu.Timer16Bit$2.class");
cl = Class.forName("avrora.sim.mcu.RegisterSet$TotalFieldWriter.class");
cl = Class.forName("avrora.sim.mcu.Timer16Bit$Mode_CTC.class");
cl = Class.forName("avrora.sim.mcu.RegisterLayout$Field.class");
cl = Class.forName("avrora.sim.mcu.EEPROM.class");
cl = Class.forName("avrora.sim.mcu.Timer16Bit$PairedRegister.class");
cl = Class.forName("avrora.sim.mcu.ATMegaFamily$DirectionRegister.class");
cl = Class.forName("avrora.sim.mcu.ATMegaFamily$FlagRegister$Notification.class");
cl = Class.forName("avrora.sim.mcu.USART$ControlRegisterA.class");
cl = Class.forName("avrora.sim.mcu.Microcontroller.class");
cl = Class.forName("avrora.sim.mcu.ADC$ControlRegister.class");
cl = Class.forName("avrora.sim.mcu.Timer16Bit$OCRnxTempHighRegister.class");
cl = Class.forName("avrora.sim.mcu.ATMegaFamily$PinRegister.class");
cl = Class.forName("avrora.sim.mcu.USART.class");
cl = Class.forName("avrora.sim.mcu.ADC$2.class");
cl = Class.forName("avrora.sim.mcu.Timer16Bit$OutputCompareUnit.class");
cl = Class.forName("avrora.sim.mcu.EEPROM$EECRReg.class");
cl = Class.forName("avrora.sim.mcu.EEPROM$EEPROMTicker.class");
cl = Class.forName("avrora.sim.mcu.Timer8Bit$Mode_CTC.class");
cl = Class.forName("avrora.sim.mcu.RegisterSet$FieldWriter.class");
cl = Class.forName("avrora.sim.mcu.EEPROM$EEARHReg.class");
cl = Class.forName("avrora.sim.mcu.Timer16Bit$Mode_PWMPhaseCorrect.class");
cl = Class.forName("avrora.sim.mcu.RegisterSet$SubFieldWriter.class");
cl = Class.forName("avrora.sim.mcu.Timer8Bit$ControlRegister.class");
cl = Class.forName("avrora.sim.mcu.Microcontroller$Pin.class");
cl = Class.forName("avrora.sim.mcu.EEPROM$EEARLReg.class");
cl = Class.forName("avrora.sim.mcu.ADC$ControlRegister$ConversionEvent.class");
cl = Class.forName("avrora.sim.mcu.SPI$SPDReg$TransmitRegister.class");
cl = Class.forName("avrora.sim.mcu.USART$Receiver$Receive.class");
cl = Class.forName("avrora.sim.mcu.ATMegaFamily$InterruptFlag.class");
cl = Class.forName("avrora.sim.mcu.Timer16Bit$OCRnxPairedRegister.class");
cl = Class.forName("avrora.sim.mcu.ReprogrammableCodeSegment.class");
cl = Class.forName("avrora.sim.mcu.Timer8Bit.class");
cl = Class.forName("avrora.sim.mcu.Microcontroller$Pin$Output.class");
cl = Class.forName("avrora.sim.mcu.SPIDevice.class");
cl = Class.forName("avrora.sim.mcu.MCUProperties.class");
cl = Class.forName("avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg.class");
cl = Class.forName("avrora.sim.mcu.Timer16Bit$Mode_Reserved.class");
cl = Class.forName("avrora.sim.mcu.ATMegaFamily$Timer0$ASSRRegister.class");
cl = Class.forName("avrora.sim.mcu.RegisterSet$SubRegWriter.class");
cl = Class.forName("avrora.sim.mcu.USART$Transmitter$Transmit.class");
cl = Class.forName("avrora.sim.mcu.ATMega128.class");
cl = Class.forName("avrora.sim.mcu.Timer8Bit$TCNTnRegister.class");
cl = Class.forName("avrora.sim.mcu.Timer8Bit$Mode_FastPWM.class");
cl = Class.forName("avrora.sim.mcu.ATMegaFamily$FlagRegister.class");
cl = Class.forName("avrora.sim.mcu.Timer8Bit$Mode_PWM.class");
cl = Class.forName("avrora.sim.mcu.SPI$SPCRReg.class");
cl = Class.forName("avrora.sim.mcu.USART$USARTProperties.class");
cl = Class.forName("avrora.sim.InterruptTable$Notification.class");
cl = Class.forName("avrora.sim.CodeSegment$Factory.class");
cl = Class.forName("avrora.sim.FiniteStateMachine$State.class");
cl = Class.forName("avrora.sim.FiniteStateMachine.class");
cl = Class.forName("avrora.sim.radio.CC1000Radio.class");
cl = Class.forName("avrora.sim.radio.CC2420Radio.class");
cl = Class.forName("avrora.sim.radio.CC1000Radio$LockRegister.class");
cl = Class.forName("avrora.sim.radio.CC1000Radio$Modem0Register.class");
cl = Class.forName("avrora.sim.radio.Medium$BasicArbitrator.class");
cl = Class.forName("avrora.sim.radio.CC1000Radio$Modem2Register.class");
cl = Class.forName("avrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PALEOutput.class");
cl = Class.forName("avrora.sim.radio.CC1000Radio$CurrentRegister.class");
cl = Class.forName("avrora.sim.radio.CC1000Radio$RadioRegister.class");
cl = Class.forName("avrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PDATAOutput.class");
cl = Class.forName("avrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PDATAInput.class");
cl = Class.forName("avrora.sim.radio.CC1000Radio$FrequencyRegister$FrequencySubRegister.class");
cl = Class.forName("avrora.sim.radio.CC1000Radio$FrontEndRegister.class");
cl = Class.forName("avrora.sim.radio.CC1000Radio$FSCTRLRegister.class");
cl = Class.forName("avrora.sim.radio.RadioEnergy.class");
cl = Class.forName("avrora.sim.radio.Medium$Receiver$Ticker.class");
cl = Class.forName("avrora.sim.radio.Medium$Arbitrator.class");
cl = Class.forName("avrora.sim.radio.CC1000Radio$FrequencySeparationRegister.class");
cl = Class.forName("avrora.sim.radio.Medium$TXRX.class");
cl = Class.forName("avrora.sim.radio.CC1000Radio$DummyRegister.class");
cl = Class.forName("avrora.sim.radio.CC1000Radio$RSSIOutput.class");
cl = Class.forName("avrora.sim.radio.CC1000Radio$FrequencyRegister.class");
cl = Class.forName("avrora.sim.radio.CC1000Radio$CALRegister$Calibrate.class");
cl = Class.forName("avrora.sim.radio.CC1000Radio$Modem1Register.class");
cl = Class.forName("avrora.sim.radio.Medium$Probe.class");
cl = Class.forName("avrora.sim.radio.noise.class");
cl = Class.forName("avrora.sim.radio.Radio.class");
cl = Class.forName("avrora.sim.radio.CC1000Radio$MainRegister.class");
cl = Class.forName("avrora.sim.radio.CC1000Radio$PLLRegister.class");
cl = Class.forName("avrora.sim.radio.CC1000Radio$PrescalerRegister.class");
cl = Class.forName("avrora.sim.radio.Medium$Receiver.class");
cl = Class.forName("avrora.sim.radio.CC1000Radio$Transmitter.class");
cl = Class.forName("avrora.sim.radio.Medium.class");
cl = Class.forName("avrora.sim.radio.CC1000Radio$SerialConfigurationInterface.class");
cl = Class.forName("avrora.sim.radio.Medium$Probe$List.class");
cl = Class.forName("avrora.sim.radio.CC1000Radio$CALRegister.class");
cl = Class.forName("avrora.sim.radio.Medium$Transmission.class");
cl = Class.forName("avrora.sim.radio.CC1000Radio$FrequencySeparationRegister$SubRegister.class");
cl = Class.forName("avrora.sim.radio.CC1000Radio$Receiver.class");
cl = Class.forName("avrora.sim.radio.CC1000Radio$PA_POWRegister.class");
cl = Class.forName("avrora.sim.radio.Medium$Transmitter$Ticker.class");
cl = Class.forName("avrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PCLKOutput.class");
cl = Class.forName("avrora.sim.radio.CC1000Radio$MatchRegister.class");
cl = Class.forName("avrora.sim.radio.CC1000Radio$SPITicker.class");
cl = Class.forName("avrora.sim.radio.Medium$Transmitter.class");
cl = Class.forName("avrora.sim.Simulator.class");
cl = Class.forName("avrora.sim.energy.Energy.class");
cl = Class.forName("avrora.sim.energy.EnergyControl.class");
cl = Class.forName("avrora.actions.ELFDumpAction.class");
cl = Class.forName("avrora.actions.SimAction$BreakPointException.class");
cl = Class.forName("avrora.actions.SimAction$AsynchronousExit.class");
cl = Class.forName("avrora.actions.Action.class");
cl = Class.forName("avrora.actions.SimAction$TimeoutException.class");
cl = Class.forName("avrora.actions.SimAction$ShutdownThread.class");
cl = Class.forName("avrora.actions.SimAction.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$SBIW.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$MULS.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$BRTS.class");
cl = Class.forName("avrora.arch.legacy.LegacyRegister.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$SBRS.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$RET.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$BREAK.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$FMUL.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$OR.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$SBI.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$ADIW.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$NEG.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$CLT.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$SBRC.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$STS.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$CBI.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$INC.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$REGREGIMM_class.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$SUB.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$REG_class.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$BST.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$SUBI.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$SEV.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$RegisterRequired.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$LPM.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$ADD.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$BRID.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$REGREG_class.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$IMMREG_class.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$IMMIMM_class.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$AND.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$REGIMM_class.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$SBIC.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$RJMP.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$SEC.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$OUT.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$STD.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$LDPI.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$InvalidRegister.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$CLI.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$CPI.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$CPC.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$BRCC.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$JMP.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$LDD.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$ADC.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$MULSU.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$CLS.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$IJMP.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$FMULS.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$BRCS.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$MOV.class");
cl = Class.forName("avrora.arch.legacy.LegacyRegister$Set.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$LDPD.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstrVisitor.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$BRHC.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$LDI.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$BRVS.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$BRNE.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$NONE_class.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$IN.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$WrongNumberOfOperands.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$COM.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$LSR.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$SPM.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$SEZ.class");
cl = Class.forName("avrora.arch.legacy.LegacyArchitecture.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$STPD.class");
cl = Class.forName("avrora.arch.legacy.LegacyInterpreter.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$CLH.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$REGIMMREG_class.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$ELPMPI.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$PUSH.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$SBCI.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$RCALL.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$ROR.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$EIJMP.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$SEH.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$MOVW.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$SWAP.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$BLD.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$LPMD.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$POP.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$ICALL.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$CLV.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$ELPM.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$RETI.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$SET.class");
cl = Class.forName("avrora.arch.legacy.LegacyState.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$EICALL.class");
cl = Class.forName("avrora.arch.legacy.LegacyDisassembler$InvalidInstruction.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$BRIE.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$SES.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$CALL.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$InvalidImmediate.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$WORD_class.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$STPI.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$CLC.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$EOR.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$SBC.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$MUL.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$InvalidOperand.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$BRLT.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstrProperties.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$ELPMD.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$ANDI.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$FMULSU.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$BRGE.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$WDR.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstrProto.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$NOP.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$CP.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$SBIS.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$BRMI.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$BRTC.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$SLEEP.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$DEC.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$SEN.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$ORI.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$LD.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$LDS.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$CPSE.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$SEI.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$CLN.class");
cl = Class.forName("avrora.arch.legacy.LegacyDisassembler.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$BRVC.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$BREQ.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$ASR.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$BRHS.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$LPMPI.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$ImmediateRequired.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$BRPL.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$ST.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr$CLZ.class");
cl = Class.forName("avrora.arch.legacy.LegacyInstr.class");
cl = Class.forName("avrora.arch.legacy.LegacyInterpreter$Factory.class");
cl = Class.forName("avrora.arch.AbstractArchitecture.class");
cl = Class.forName("avrora.arch.AbstractDisassembler.class");
cl = Class.forName("avrora.arch.msp430.MSP430Architecture.class");
cl = Class.forName("avrora.arch.ArchitectureRegistry.class");
cl = Class.forName("avrora.arch.AbstractInstr.class");
cl = Class.forName("avrora.arch.avr.AVRProperties.class");
cl = Class.forName("avrora.arch.avr.AVRArchitecture.class");
cl = Class.forName("soot.rtlib.tamiflex.ReflectiveCalls.class");
cl = Class.forName("soot.rtlib.tamiflex.SootSig.class");
cl = Class.forName("soot.rtlib.tamiflex.OpaquePredicate.class");
cl = Class.forName("soot.rtlib.tamiflex.IUnexpectedReflectiveCallHandler.class");
cl = Class.forName("soot.rtlib.tamiflex.ReflectiveCallsWrapper.class");
cl = Class.forName("soot.rtlib.tamiflex.UnexpectedReflectiveCall.class");
