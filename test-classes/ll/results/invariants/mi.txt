LinkedList.main([Ljava/lang/String;)V
java/lang/Class.getConstructor([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
java/lang/Class.checkMemberAccess(ILjava/lang/Class;Z)V
java/lang/System.getSecurityManager()Ljava/lang/SecurityManager;
java/lang/ClassLoader.getClassLoader(Ljava/lang/Class;)Ljava/lang/ClassLoader;
java/lang/Class.getClassLoader0()Ljava/lang/ClassLoader;
java/lang/Class.checkPackageAccess(Ljava/lang/ClassLoader;Z)V
sun/reflect/misc/ReflectUtil.needsPackageAccessCheck(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Z
sun/reflect/misc/ReflectUtil.isAncestor(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Z
java/lang/Class.getName()Ljava/lang/String;
java/lang/String.lastIndexOf(I)I
java/lang/String.lastIndexOf(II)I
java/lang/Math.min(II)I
java/lang/String.lastIndexOfSupplementary(II)I
java/lang/Character.isValidCodePoint(I)Z
java/lang/Character.highSurrogate(I)C
java/lang/Character.lowSurrogate(I)C
java/lang/String.substring(II)Ljava/lang/String;
java/lang/StringIndexOutOfBoundsException.<init>(I)V
java/lang/StringBuilder.<init>()V
java/lang/AbstractStringBuilder.<init>(I)V
java/lang/Object.<init>()V
java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;
java/lang/AbstractStringBuilder.append(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;
java/lang/AbstractStringBuilder.appendNull()Ljava/lang/AbstractStringBuilder;
java/lang/AbstractStringBuilder.ensureCapacityInternal(I)V
java/lang/AbstractStringBuilder.newCapacity(I)I
java/lang/AbstractStringBuilder.hugeCapacity(I)I
java/lang/OutOfMemoryError.<init>()V
java/lang/VirtualMachineError.<init>()V
java/lang/Error.<init>()V
java/lang/Throwable.<init>()V
java/lang/Throwable.fillInStackTrace()Ljava/lang/Throwable;
java/util/Arrays.copyOf([CI)[C
java/lang/String.length()I
java/lang/String.getChars(II[CI)V
java/lang/StringBuilder.append(I)Ljava/lang/StringBuilder;
java/lang/AbstractStringBuilder.append(I)Ljava/lang/AbstractStringBuilder;
java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;
java/lang/Integer.stringSize(I)I
java/lang/Integer.getChars(II[C)V
java/lang/StringBuilder.toString()Ljava/lang/String;
java/lang/String.<init>([CII)V
java/util/Arrays.copyOfRange([CII)[C
java/lang/IllegalArgumentException.<init>(Ljava/lang/String;)V
java/lang/RuntimeException.<init>(Ljava/lang/String;)V
java/lang/Exception.<init>(Ljava/lang/String;)V
java/lang/Throwable.<init>(Ljava/lang/String;)V
java/lang/IndexOutOfBoundsException.<init>(Ljava/lang/String;)V
java/lang/reflect/Proxy.isProxyClass(Ljava/lang/Class;)Z
sun/reflect/misc/ReflectUtil.isNonPublicProxyClass(Ljava/lang/Class;)Z
java/lang/String.equals(Ljava/lang/Object;)Z
java/lang/Class.getInterfaces()[Ljava/lang/Class;
java/lang/Class.reflectionData()Ljava/lang/Class$ReflectionData;
java/lang/Class.newReflectionData(Ljava/lang/ref/SoftReference;I)Ljava/lang/Class$ReflectionData;
java/lang/Class$ReflectionData.<init>(I)V
java/lang/ref/SoftReference.<init>(Ljava/lang/Object;)V
java/lang/ref/Reference.<init>(Ljava/lang/Object;)V
java/lang/ref/Reference.<init>(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
java/lang/Class$Atomic.casReflectionData(Ljava/lang/Class;Ljava/lang/ref/SoftReference;Ljava/lang/ref/SoftReference;)Z
sun/reflect/misc/ReflectUtil.checkProxyPackageAccess(Ljava/lang/ClassLoader;[Ljava/lang/Class;)V
sun/reflect/misc/ReflectUtil.checkPackageAccess(Ljava/lang/Class;)V
sun/reflect/misc/ReflectUtil.checkPackageAccess(Ljava/lang/String;)V
java/lang/String.replace(CC)Ljava/lang/String;
java/lang/String.<init>([CZ)V
java/lang/String.startsWith(Ljava/lang/String;)Z
java/lang/String.startsWith(Ljava/lang/String;I)Z
java/lang/String.substring(I)Ljava/lang/String;
sun/reflect/misc/ReflectUtil.checkProxyPackageAccess(Ljava/lang/Class;)V
java/lang/Class.getConstructor0([Ljava/lang/Class;I)Ljava/lang/reflect/Constructor;
java/lang/Class.privateGetDeclaredConstructors(Z)[Ljava/lang/reflect/Constructor;
java/lang/Class.checkInitted()V
java/lang/Class$3.<init>()V
java/lang/Class.arrayContentsEq([Ljava/lang/Object;[Ljava/lang/Object;)Z
java/lang/Class.getReflectionFactory()Lsun/reflect/ReflectionFactory;
sun/reflect/ReflectionFactory$GetReflectionFactoryAction.<init>()V
java/lang/Class.argumentTypesToString([Ljava/lang/Class;)Ljava/lang/String;
java/lang/NoSuchMethodException.<init>(Ljava/lang/String;)V
java/lang/ReflectiveOperationException.<init>(Ljava/lang/String;)V
soot/rtlib/tamiflex/ReflectiveCalls.knownConstructorNewInstance(ILjava/lang/reflect/Constructor;)V
soot/rtlib/tamiflex/ReflectiveCalls.<clinit>()V
java/util/HashSet.<init>()V
java/util/AbstractSet.<init>()V
java/util/AbstractCollection.<init>()V
java/util/HashSet.add(Ljava/lang/Object;)Z
soot/rtlib/tamiflex/SootSig.sootSignature(Ljava/lang/reflect/Constructor;)Ljava/lang/String;
soot/rtlib/tamiflex/SootSig.<clinit>()V
java/util/concurrent/ConcurrentHashMap.<init>()V
java/util/AbstractMap.<init>()V
java/util/concurrent/ConcurrentHashMap.get(Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/ConcurrentHashMap.spread(I)I
java/util/concurrent/ConcurrentHashMap.tabAt([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;
soot/rtlib/tamiflex/SootSig.classesToTypeNames([Ljava/lang/Class;)[Ljava/lang/String;
soot/rtlib/tamiflex/SootSig.getTypeName(Ljava/lang/Class;)Ljava/lang/String;
java/lang/StringBuffer.<init>()V
java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;
java/lang/StringBuffer.toString()Ljava/lang/String;
soot/rtlib/tamiflex/SootSig.sootSignature(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;
java/util/concurrent/ConcurrentHashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/ConcurrentHashMap.putVal(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;
java/util/concurrent/ConcurrentHashMap$Node.<init>(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentHashMap$Node;)V
java/util/concurrent/ConcurrentHashMap.casTabAt([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z
java/util/concurrent/ConcurrentHashMap.helpTransfer([Ljava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)[Ljava/util/concurrent/ConcurrentHashMap$Node;
java/util/concurrent/ConcurrentHashMap.resizeStamp(I)I
java/lang/Integer.numberOfLeadingZeros(I)I
java/util/concurrent/ConcurrentHashMap.transfer([Ljava/util/concurrent/ConcurrentHashMap$Node;[Ljava/util/concurrent/ConcurrentHashMap$Node;)V
java/util/concurrent/ConcurrentHashMap$ForwardingNode.<init>([Ljava/util/concurrent/ConcurrentHashMap$Node;)V
java/util/concurrent/ConcurrentHashMap.setTabAt([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;)V
java/util/concurrent/ConcurrentHashMap$TreeNode.<init>(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$TreeNode;)V
java/util/concurrent/ConcurrentHashMap.untreeify(Ljava/util/concurrent/ConcurrentHashMap$Node;)Ljava/util/concurrent/ConcurrentHashMap$Node;
java/util/concurrent/ConcurrentHashMap$TreeBin.<init>(Ljava/util/concurrent/ConcurrentHashMap$TreeNode;)V
java/util/concurrent/ConcurrentHashMap.comparableClassFor(Ljava/lang/Object;)Ljava/lang/Class;
java/lang/Class.getGenericInterfaces()[Ljava/lang/reflect/Type;
java/lang/Class.getGenericInfo()Lsun/reflect/generics/repository/ClassRepository;
java/lang/Class.getFactory()Lsun/reflect/generics/factory/GenericsFactory;
sun/reflect/generics/scope/ClassScope.make(Ljava/lang/Class;)Lsun/reflect/generics/scope/ClassScope;
sun/reflect/generics/scope/ClassScope.<init>(Ljava/lang/Class;)V
sun/reflect/generics/scope/AbstractScope.<init>(Ljava/lang/reflect/GenericDeclaration;)V
sun/reflect/generics/factory/CoreReflectionFactory.make(Ljava/lang/reflect/GenericDeclaration;Lsun/reflect/generics/scope/Scope;)Lsun/reflect/generics/factory/CoreReflectionFactory;
sun/reflect/generics/factory/CoreReflectionFactory.<init>(Ljava/lang/reflect/GenericDeclaration;Lsun/reflect/generics/scope/Scope;)V
sun/reflect/generics/repository/ClassRepository.make(Ljava/lang/String;Lsun/reflect/generics/factory/GenericsFactory;)Lsun/reflect/generics/repository/ClassRepository;
sun/reflect/generics/repository/ClassRepository.<init>(Ljava/lang/String;Lsun/reflect/generics/factory/GenericsFactory;)V
sun/reflect/generics/repository/GenericDeclRepository.<init>(Ljava/lang/String;Lsun/reflect/generics/factory/GenericsFactory;)V
sun/reflect/generics/repository/AbstractRepository.<init>(Ljava/lang/String;Lsun/reflect/generics/factory/GenericsFactory;)V
sun/reflect/generics/repository/ClassRepository.parse(Ljava/lang/String;)Lsun/reflect/generics/tree/Tree;
sun/reflect/generics/repository/ClassRepository.parse(Ljava/lang/String;)Lsun/reflect/generics/tree/ClassSignature;
sun/reflect/generics/parser/SignatureParser.make()Lsun/reflect/generics/parser/SignatureParser;
sun/reflect/generics/parser/SignatureParser.<init>()V
sun/reflect/generics/parser/SignatureParser.parseClassSig(Ljava/lang/String;)Lsun/reflect/generics/tree/ClassSignature;
sun/reflect/generics/parser/SignatureParser.init(Ljava/lang/String;)V
sun/reflect/generics/parser/SignatureParser.parseClassSignature()Lsun/reflect/generics/tree/ClassSignature;
java/lang/AssertionError.<init>()V
sun/reflect/generics/parser/SignatureParser.parseZeroOrMoreFormalTypeParameters()[Lsun/reflect/generics/tree/FormalTypeParameter;
sun/reflect/generics/parser/SignatureParser.current()C
java/lang/String.charAt(I)C
sun/reflect/generics/parser/SignatureParser.parseFormalTypeParameters()[Lsun/reflect/generics/tree/FormalTypeParameter;
java/util/ArrayList.<init>(I)V
java/util/AbstractList.<init>()V
sun/reflect/generics/parser/SignatureParser.error(Ljava/lang/String;)Ljava/lang/Error;
sun/reflect/generics/parser/SignatureParser.remainder()Ljava/lang/String;
java/lang/reflect/GenericSignatureFormatError.<init>(Ljava/lang/String;)V
java/lang/ClassFormatError.<init>(Ljava/lang/String;)V
java/lang/LinkageError.<init>(Ljava/lang/String;)V
java/lang/Error.<init>(Ljava/lang/String;)V
sun/reflect/generics/parser/SignatureParser.advance()V
sun/reflect/generics/parser/SignatureParser.parseFormalTypeParameter()Lsun/reflect/generics/tree/FormalTypeParameter;
sun/reflect/generics/parser/SignatureParser.parseIdentifier()Ljava/lang/String;
sun/reflect/generics/parser/SignatureParser.mark()V
sun/reflect/generics/parser/SignatureParser.skipIdentifier()V
java/lang/Character.isWhitespace(C)Z
java/lang/Character.isWhitespace(I)Z
java/lang/CharacterData.of(I)Ljava/lang/CharacterData;
sun/reflect/generics/parser/SignatureParser.markToCurrent()Ljava/lang/String;
sun/reflect/generics/parser/SignatureParser.parseBounds()[Lsun/reflect/generics/tree/FieldTypeSignature;
sun/reflect/generics/parser/SignatureParser.parseFieldTypeSignature()Lsun/reflect/generics/tree/FieldTypeSignature;
sun/reflect/generics/parser/SignatureParser.parseFieldTypeSignature(Z)Lsun/reflect/generics/tree/FieldTypeSignature;
sun/reflect/generics/parser/SignatureParser.parseClassTypeSignature()Lsun/reflect/generics/tree/ClassTypeSignature;
sun/reflect/generics/parser/SignatureParser.parsePackageNameAndSimpleClassTypeSignature()Lsun/reflect/generics/tree/SimpleClassTypeSignature;
sun/reflect/generics/tree/SimpleClassTypeSignature.make(Ljava/lang/String;Z[Lsun/reflect/generics/tree/TypeArgument;)Lsun/reflect/generics/tree/SimpleClassTypeSignature;
sun/reflect/generics/tree/SimpleClassTypeSignature.<init>(Ljava/lang/String;Z[Lsun/reflect/generics/tree/TypeArgument;)V
sun/reflect/generics/parser/SignatureParser.parseTypeArguments()[Lsun/reflect/generics/tree/TypeArgument;
sun/reflect/generics/parser/SignatureParser.parseTypeArgument()Lsun/reflect/generics/tree/TypeArgument;
sun/reflect/generics/tree/BottomSignature.make()Lsun/reflect/generics/tree/BottomSignature;
sun/reflect/generics/tree/Wildcard.make([Lsun/reflect/generics/tree/FieldTypeSignature;[Lsun/reflect/generics/tree/FieldTypeSignature;)Lsun/reflect/generics/tree/Wildcard;
sun/reflect/generics/tree/Wildcard.<init>([Lsun/reflect/generics/tree/FieldTypeSignature;[Lsun/reflect/generics/tree/FieldTypeSignature;)V
java/util/ArrayList.add(Ljava/lang/Object;)Z
java/util/ArrayList.ensureCapacityInternal(I)V
java/util/ArrayList.calculateCapacity([Ljava/lang/Object;I)I
java/lang/Math.max(II)I
java/util/ArrayList.ensureExplicitCapacity(I)V
java/util/ArrayList.grow(I)V
java/util/ArrayList.hugeCapacity(I)I
java/util/Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;
java/util/Arrays.copyOf([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;
java/lang/reflect/Array.newInstance(Ljava/lang/Class;I)Ljava/lang/Object;
java/util/ArrayList.size()I
java/util/ArrayList.toArray([Ljava/lang/Object;)[Ljava/lang/Object;
java/lang/StringBuilder.append(C)Ljava/lang/StringBuilder;
java/lang/AbstractStringBuilder.append(C)Ljava/lang/AbstractStringBuilder;
sun/reflect/generics/parser/SignatureParser.parseClassTypeSignatureSuffix(Ljava/util/List;)V
sun/reflect/generics/parser/SignatureParser.parseSimpleClassTypeSignature(Z)Lsun/reflect/generics/tree/SimpleClassTypeSignature;
sun/reflect/generics/tree/ClassTypeSignature.make(Ljava/util/List;)Lsun/reflect/generics/tree/ClassTypeSignature;
sun/reflect/generics/tree/ClassTypeSignature.<init>(Ljava/util/List;)V
sun/reflect/generics/parser/SignatureParser.parseTypeVariableSignature()Lsun/reflect/generics/tree/TypeVariableSignature;
sun/reflect/generics/tree/TypeVariableSignature.make(Ljava/lang/String;)Lsun/reflect/generics/tree/TypeVariableSignature;
sun/reflect/generics/tree/TypeVariableSignature.<init>(Ljava/lang/String;)V
sun/reflect/generics/tree/TypeVariableSignature.getIdentifier()Ljava/lang/String;
sun/reflect/generics/parser/SignatureParser.parseArrayTypeSignature()Lsun/reflect/generics/tree/ArrayTypeSignature;
sun/reflect/generics/parser/SignatureParser.parseTypeSignature()Lsun/reflect/generics/tree/TypeSignature;
sun/reflect/generics/parser/SignatureParser.parseBaseType()Lsun/reflect/generics/tree/BaseType;
sun/reflect/generics/tree/ByteSignature.make()Lsun/reflect/generics/tree/ByteSignature;
sun/reflect/generics/tree/CharSignature.make()Lsun/reflect/generics/tree/CharSignature;
sun/reflect/generics/tree/DoubleSignature.make()Lsun/reflect/generics/tree/DoubleSignature;
sun/reflect/generics/tree/FloatSignature.make()Lsun/reflect/generics/tree/FloatSignature;
sun/reflect/generics/tree/IntSignature.make()Lsun/reflect/generics/tree/IntSignature;
sun/reflect/generics/tree/LongSignature.make()Lsun/reflect/generics/tree/LongSignature;
sun/reflect/generics/tree/ShortSignature.make()Lsun/reflect/generics/tree/ShortSignature;
sun/reflect/generics/tree/BooleanSignature.make()Lsun/reflect/generics/tree/BooleanSignature;
sun/reflect/generics/tree/ArrayTypeSignature.make(Lsun/reflect/generics/tree/TypeSignature;)Lsun/reflect/generics/tree/ArrayTypeSignature;
sun/reflect/generics/tree/ArrayTypeSignature.<init>(Lsun/reflect/generics/tree/TypeSignature;)V
sun/reflect/generics/tree/FormalTypeParameter.make(Ljava/lang/String;[Lsun/reflect/generics/tree/FieldTypeSignature;)Lsun/reflect/generics/tree/FormalTypeParameter;
sun/reflect/generics/tree/FormalTypeParameter.<init>(Ljava/lang/String;[Lsun/reflect/generics/tree/FieldTypeSignature;)V
sun/reflect/generics/parser/SignatureParser.progress(I)V
sun/reflect/generics/parser/SignatureParser.parseSuperInterfaces()[Lsun/reflect/generics/tree/ClassTypeSignature;
sun/reflect/generics/tree/ClassSignature.make([Lsun/reflect/generics/tree/FormalTypeParameter;Lsun/reflect/generics/tree/ClassTypeSignature;[Lsun/reflect/generics/tree/ClassTypeSignature;)Lsun/reflect/generics/tree/ClassSignature;
sun/reflect/generics/tree/ClassSignature.<init>([Lsun/reflect/generics/tree/FormalTypeParameter;Lsun/reflect/generics/tree/ClassTypeSignature;[Lsun/reflect/generics/tree/ClassTypeSignature;)V
java/util/concurrent/ConcurrentHashMap.compareComparables(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/Object;)I
java/util/concurrent/ConcurrentHashMap$TreeBin.tieBreakOrder(Ljava/lang/Object;Ljava/lang/Object;)I
java/util/concurrent/ConcurrentHashMap$TreeBin.balanceInsertion(Ljava/util/concurrent/ConcurrentHashMap$TreeNode;Ljava/util/concurrent/ConcurrentHashMap$TreeNode;)Ljava/util/concurrent/ConcurrentHashMap$TreeNode;
java/util/concurrent/ConcurrentHashMap$TreeBin.rotateLeft(Ljava/util/concurrent/ConcurrentHashMap$TreeNode;Ljava/util/concurrent/ConcurrentHashMap$TreeNode;)Ljava/util/concurrent/ConcurrentHashMap$TreeNode;
java/util/concurrent/ConcurrentHashMap$TreeBin.rotateRight(Ljava/util/concurrent/ConcurrentHashMap$TreeNode;Ljava/util/concurrent/ConcurrentHashMap$TreeNode;)Ljava/util/concurrent/ConcurrentHashMap$TreeNode;
java/util/concurrent/ConcurrentHashMap$TreeBin.checkInvariants(Ljava/util/concurrent/ConcurrentHashMap$TreeNode;)Z
java/util/concurrent/ConcurrentHashMap.treeifyBin([Ljava/util/concurrent/ConcurrentHashMap$Node;I)V
java/util/concurrent/ConcurrentHashMap.tryPresize(I)V
java/util/concurrent/ConcurrentHashMap.tableSizeFor(I)I
java/util/concurrent/ConcurrentHashMap.addCount(JI)V
java/util/concurrent/ThreadLocalRandom.getProbe()I
java/util/concurrent/ConcurrentHashMap.sumCount()J
java/util/concurrent/ConcurrentHashMap.fullAddCount(JZ)V
java/util/concurrent/ThreadLocalRandom.localInit()V
java/util/concurrent/ThreadLocalRandom.mix64(J)J
java/util/concurrent/ConcurrentHashMap$CounterCell.<init>(J)V
java/util/concurrent/ThreadLocalRandom.advanceProbe(I)I
java/util/concurrent/ConcurrentHashMap.initTable()[Ljava/util/concurrent/ConcurrentHashMap$Node;
java/lang/NullPointerException.<init>()V
java/lang/RuntimeException.<init>()V
java/lang/Exception.<init>()V
java/util/HashSet.contains(Ljava/lang/Object;)Z
soot/rtlib/tamiflex/UnexpectedReflectiveCall.constructorNewInstance(Ljava/lang/reflect/Constructor;)V
soot/rtlib/tamiflex/UnexpectedReflectiveCall.<clinit>()V
java/lang/System.getProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
java/lang/System.checkKey(Ljava/lang/String;)V
java/lang/NullPointerException.<init>(Ljava/lang/String;)V
java/lang/Class.forName(Ljava/lang/String;)Ljava/lang/Class;
java/lang/Class.newInstance()Ljava/lang/Object;
java/lang/IllegalAccessException.<init>(Ljava/lang/String;)V
java/lang/Class$1.<init>(Ljava/lang/Class;Ljava/lang/reflect/Constructor;)V
java/lang/InstantiationException.<init>(Ljava/lang/String;)V
java/lang/Throwable.initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;
java/util/Objects.toString(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
java/lang/IllegalStateException.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
java/lang/RuntimeException.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
java/lang/Exception.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
java/lang/Throwable.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
java/lang/IllegalArgumentException.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
sun/reflect/Reflection.quickCheckMemberAccess(Ljava/lang/Class;I)Z
java/lang/reflect/Modifier.isPublic(I)Z
sun/reflect/Reflection.ensureMemberAccess(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Object;I)V
sun/reflect/Reflection.verifyMemberAccess(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Object;I)Z
sun/reflect/Reflection.isSameClassPackage(Ljava/lang/Class;Ljava/lang/Class;)Z
java/lang/Class.getClassLoader()Ljava/lang/ClassLoader;
java/lang/ClassLoader.checkClassLoaderPermission(Ljava/lang/ClassLoader;Ljava/lang/Class;)V
java/lang/ClassLoader.needsClassLoaderPermissionCheck(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Z
sun/reflect/Reflection.isSameClassPackage(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/lang/String;)Z
java/lang/InternalError.<init>(Ljava/lang/String;)V
java/lang/VirtualMachineError.<init>(Ljava/lang/String;)V
java/lang/reflect/Modifier.isProtected(I)Z
sun/reflect/Reflection.isSubclassOf(Ljava/lang/Class;Ljava/lang/Class;)Z
java/lang/reflect/Modifier.isPrivate(I)Z
java/lang/reflect/Modifier.toString(I)Ljava/lang/String;
java/lang/StringBuilder.length()I
java/lang/AbstractStringBuilder.length()I
java/lang/InternalError.<init>()V
sun/misc/Unsafe.getUnsafe()Lsun/misc/Unsafe;
sun/misc/VM.isSystemDomainLoader(Ljava/lang/ClassLoader;)Z
java/lang/SecurityException.<init>(Ljava/lang/String;)V
java/lang/Error.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
soot/rtlib/tamiflex/OpaquePredicate.getFalse()Z
soot/rtlib/tamiflex/ReflectiveCallsWrapper.reflectiveCall9([Ljava/lang/Object;)Ljava/lang/Object;
LL.<init>()V
LL.Start()I
List.<init>()V
List.Init()Z
List.Print()Z
Element.<init>()V
Element.Init(IIZ)Z
List.Insert(LElement;)LList;
List.InitNew(LElement;LList;Z)Z
Element.GetAge()I
List.GetNext()LList;
List.GetEnd()Z
List.GetElem()LElement;
List.Search(LElement;)I
Element.Equal(LElement;)Z
Element.Compare(II)Z
Element.GetSalary()I
Element.GetMarried()Z
List.Delete(LElement;)LList;
List.SetNext(LList;)Z
