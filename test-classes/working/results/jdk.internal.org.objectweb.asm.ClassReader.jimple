public class jdk.internal.org.objectweb.asm.ClassReader extends java.lang.Object
{
    static final boolean SIGNATURES;
    static final boolean ANNOTATIONS;
    static final boolean FRAMES;
    static final boolean WRITER;
    static final boolean RESIZE;
    public static final int SKIP_CODE;
    public static final int SKIP_DEBUG;
    public static final int SKIP_FRAMES;
    public static final int EXPAND_FRAMES;
    public final byte[] b;
    private final int[] items;
    private final java.lang.String[] strings;
    private final int maxStringLength;
    public final int header;

    public void <init>(byte[])
    {
        jdk.internal.org.objectweb.asm.ClassReader l0;
        byte[] l1;
        int $stack2;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: byte[];

        $stack2 = lengthof l1;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: void <init>(byte[],int,int)>(l1, 0, $stack2);

        return;
    }

    public void <init>(byte[], int, int)
    {
        jdk.internal.org.objectweb.asm.ClassReader l0;
        byte[] l1;
        int l2, $stack9, $stack11, $stack12, l4, $stack16, $stack24, $stack26, l3, l5#1, l6#2, l7#3, l8#4, $stack23#15;
        short $stack10;
        int[] $stack13, $stack14, $stack17;
        java.lang.String[] $stack15;
        byte $stack18;
        java.lang.IllegalArgumentException $stack27;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: byte[];

        l2 := @parameter1: int;

        l3 := @parameter2: int;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b> = l1;

        $stack9 = l2 + 6;

        $stack10 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: short readShort(int)>($stack9);

        if $stack10 <= 52 goto label1;

        $stack27 = new java.lang.IllegalArgumentException;

        specialinvoke $stack27.<java.lang.IllegalArgumentException: void <init>()>();

        throw $stack27;

     label1:
        $stack11 = l2 + 8;

        $stack12 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack11);

        $stack13 = newarray (int)[$stack12];

        l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items> = $stack13;

        $stack14 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        l4 = lengthof $stack14;

        $stack15 = newarray (java.lang.String)[l4];

        l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String[] strings> = $stack15;

        l5#1 = 0;

        l6#2 = l2 + 10;

        l7#3 = 1;

     label2:
        if l7#3 >= l4 goto label9;

        $stack17 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack16 = l6#2 + 1;

        $stack17[l7#3] = $stack16;

        $stack18 = l1[l6#2];

        tableswitch($stack18)
        {
            case 1: goto label5;
            case 2: goto label7;
            case 3: goto label3;
            case 4: goto label3;
            case 5: goto label4;
            case 6: goto label4;
            case 7: goto label7;
            case 8: goto label7;
            case 9: goto label3;
            case 10: goto label3;
            case 11: goto label3;
            case 12: goto label3;
            case 13: goto label7;
            case 14: goto label7;
            case 15: goto label6;
            case 16: goto label7;
            case 17: goto label7;
            case 18: goto label3;
            default: goto label7;
        };

     label3:
        l8#4 = 5;

        goto label8;

     label4:
        l8#4 = 9;

        l7#3 = l7#3 + 1;

        goto label8;

     label5:
        $stack24 = l6#2 + 1;

        $stack26 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack24);

        l8#4 = 3 + $stack26;

        if l8#4 <= l5#1 goto label8;

        l5#1 = l8#4;

        goto label8;

     label6:
        l8#4 = 4;

        goto label8;

     label7:
        l8#4 = 3;

     label8:
        $stack23#15 = l6#2 + l8#4;

        l6#2 = $stack23#15;

        l7#3 = l7#3 + 1;

        goto label2;

     label9:
        l0.<jdk.internal.org.objectweb.asm.ClassReader: int maxStringLength> = l5#1;

        l0.<jdk.internal.org.objectweb.asm.ClassReader: int header> = l6#2;

        return;
    }

    public int getAccess()
    {
        jdk.internal.org.objectweb.asm.ClassReader l0;
        int $stack1, $stack2;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        $stack1 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int header>;

        $stack2 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack1);

        return $stack2;
    }

    public java.lang.String getClassName()
    {
        jdk.internal.org.objectweb.asm.ClassReader l0;
        int $stack1, $stack2, $stack4;
        char[] $stack3;
        java.lang.String $stack5;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        $stack1 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int header>;

        $stack4 = $stack1 + 2;

        $stack2 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int maxStringLength>;

        $stack3 = newarray (char)[$stack2];

        $stack5 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>($stack4, $stack3);

        return $stack5;
    }

    public java.lang.String getSuperName()
    {
        jdk.internal.org.objectweb.asm.ClassReader l0;
        int $stack1, $stack2, $stack4;
        char[] $stack3;
        java.lang.String $stack5;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        $stack1 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int header>;

        $stack4 = $stack1 + 4;

        $stack2 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int maxStringLength>;

        $stack3 = newarray (char)[$stack2];

        $stack5 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>($stack4, $stack3);

        return $stack5;
    }

    public java.lang.String[] getInterfaces()
    {
        jdk.internal.org.objectweb.asm.ClassReader l0;
        int $stack6, $stack7, $stack8, l1#1, l5#2;
        java.lang.String[] l3;
        char[] l4;
        java.lang.String $stack10;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        $stack6 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int header>;

        l1#1 = $stack6 + 6;

        $stack7 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1#1);

        l3 = newarray (java.lang.String)[$stack7];

        if $stack7 <= 0 goto label2;

        $stack8 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int maxStringLength>;

        l4 = newarray (char)[$stack8];

        l5#2 = 0;

     label1:
        if l5#2 >= $stack7 goto label2;

        l1#1 = l1#1 + 2;

        $stack10 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>(l1#1, l4);

        l3[l5#2] = $stack10;

        l5#2 = l5#2 + 1;

        goto label1;

     label2:
        return l3;
    }

    void copyPool(jdk.internal.org.objectweb.asm.ClassWriter)
    {
        jdk.internal.org.objectweb.asm.ClassReader l0;
        int $stack11, l3, $stack14, $stack15, $stack16, $stack22, $stack24, $stack28, $stack30, $stack32, $stack34, $stack44, $stack55, $stack57, $stack58, $stack60, $stack62, $stack63, $stack66, $stack78, $stack80, $stack82, $stack85, $stack90, $stack92, $stack96, $stack97, l5#1, l6#2, l9#3, l6#5, l10#6, l9#7, $stack36#18, $stack35#36, $stack70#45, l5#118;
        char[] l2;
        int[] $stack12, $stack13, $stack23, $stack29, $stack56, $stack59, $stack81, $stack94;
        jdk.internal.org.objectweb.asm.Item[] l4;
        jdk.internal.org.objectweb.asm.ClassWriter l1;
        byte[] $stack17, $stack25;
        jdk.internal.org.objectweb.asm.ByteVector $stack18, $stack27;
        double $stack20, $stack21, $stack88;
        byte l7;
        jdk.internal.org.objectweb.asm.Item $stack26, $stack37#82;
        java.lang.String $stack31, $stack33, $stack64, $stack65, $stack67, $stack77, $stack79, $stack83, $stack84, $stack86, $stack98, $stack104, l10#4;
        long $stack87, $stack89;
        float $stack91;
        java.lang.String[] $stack93, $stack95;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.ClassWriter;

        $stack11 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int maxStringLength>;

        l2 = newarray (char)[$stack11];

        $stack12 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        l3 = lengthof $stack12;

        l4 = newarray (jdk.internal.org.objectweb.asm.Item)[l3];

        l5#1 = 1;

     label01:
        if l5#1 >= l3 goto label15;

        $stack23 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        l6#2 = $stack23[l5#1];

        $stack25 = l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack24 = l6#2 - 1;

        l7 = $stack25[$stack24];

        $stack26 = new jdk.internal.org.objectweb.asm.Item;

        specialinvoke $stack26.<jdk.internal.org.objectweb.asm.Item: void <init>(int)>(l5#1);

        tableswitch(l7)
        {
            case 1: goto label08;
            case 2: goto label13;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label06;
            case 6: goto label07;
            case 7: goto label13;
            case 8: goto label13;
            case 9: goto label02;
            case 10: goto label02;
            case 11: goto label02;
            case 12: goto label05;
            case 13: goto label13;
            case 14: goto label13;
            case 15: goto label10;
            case 16: goto label13;
            case 17: goto label13;
            case 18: goto label11;
            default: goto label13;
        };

     label02:
        $stack81 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack80 = l6#2 + 2;

        $stack82 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack80);

        l9#3 = $stack81[$stack82];

        $stack83 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>(l6#2, l2);

        $stack84 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l9#3, l2);

        $stack85 = l9#3 + 2;

        $stack86 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack85, l2);

        virtualinvoke $stack26.<jdk.internal.org.objectweb.asm.Item: void set(int,java.lang.String,java.lang.String,java.lang.String)>(l7, $stack83, $stack84, $stack86);

        goto label14;

     label03:
        $stack92 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>(l6#2);

        virtualinvoke $stack26.<jdk.internal.org.objectweb.asm.Item: void set(int)>($stack92);

        goto label14;

     label04:
        $stack90 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>(l6#2);

        $stack91 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($stack90);

        virtualinvoke $stack26.<jdk.internal.org.objectweb.asm.Item: void set(float)>($stack91);

        goto label14;

     label05:
        $stack77 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l6#2, l2);

        $stack78 = l6#2 + 2;

        $stack79 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack78, l2);

        virtualinvoke $stack26.<jdk.internal.org.objectweb.asm.Item: void set(int,java.lang.String,java.lang.String,java.lang.String)>(l7, $stack77, $stack79, null);

        goto label14;

     label06:
        $stack89 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: long readLong(int)>(l6#2);

        virtualinvoke $stack26.<jdk.internal.org.objectweb.asm.Item: void set(long)>($stack89);

        l5#1 = l5#1 + 1;

        goto label14;

     label07:
        $stack87 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: long readLong(int)>(l6#2);

        $stack88 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($stack87);

        virtualinvoke $stack26.<jdk.internal.org.objectweb.asm.Item: void set(double)>($stack88);

        l5#1 = l5#1 + 1;

        goto label14;

     label08:
        $stack93 = l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String[] strings>;

        l10#4 = $stack93[l5#1];

        if l10#4 != null goto label09;

        $stack94 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        l6#5 = $stack94[l5#1];

        $stack95 = l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String[] strings>;

        $stack96 = l6#5 + 2;

        $stack97 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l6#5);

        $stack98 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF(int,int,char[])>($stack96, $stack97, l2);

        $stack95[l5#1] = $stack98;

        l10#4 = $stack98;

     label09:
        virtualinvoke $stack26.<jdk.internal.org.objectweb.asm.Item: void set(int,java.lang.String,java.lang.String,java.lang.String)>(l7, l10#4, null, null);

        goto label14;

     label10:
        $stack56 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack55 = l6#2 + 1;

        $stack57 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack55);

        l10#6 = $stack56[$stack57];

        $stack59 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack58 = l10#6 + 2;

        $stack60 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack58);

        l9#7 = $stack59[$stack60];

        $stack62 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readByte(int)>(l6#2);

        $stack63 = 20 + $stack62;

        $stack64 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>(l10#6, l2);

        $stack65 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l9#7, l2);

        $stack66 = l9#7 + 2;

        $stack67 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack66, l2);

        virtualinvoke $stack26.<jdk.internal.org.objectweb.asm.Item: void set(int,java.lang.String,java.lang.String,java.lang.String)>($stack63, $stack64, $stack65, $stack67);

        goto label14;

     label11:
        $stack27 = l1.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector bootstrapMethods>;

        if $stack27 != null goto label12;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: void copyBootstrapMethods(jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Item[],char[])>(l1, l4, l2);

     label12:
        $stack29 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack28 = l6#2 + 2;

        $stack30 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack28);

        $stack44 = $stack29[$stack30];

        $stack31 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack44, l2);

        $stack32 = $stack44 + 2;

        $stack33 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack32, l2);

        $stack34 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l6#2);

        virtualinvoke $stack26.<jdk.internal.org.objectweb.asm.Item: void set(java.lang.String,java.lang.String,int)>($stack31, $stack33, $stack34);

        goto label14;

     label13:
        $stack104 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l6#2, l2);

        virtualinvoke $stack26.<jdk.internal.org.objectweb.asm.Item: void set(int,java.lang.String,java.lang.String,java.lang.String)>(l7, $stack104, null, null);

     label14:
        $stack36#18 = $stack26.<jdk.internal.org.objectweb.asm.Item: int hashCode>;

        $stack35#36 = lengthof l4;

        $stack70#45 = $stack36#18 % $stack35#36;

        $stack37#82 = l4[$stack70#45];

        $stack26.<jdk.internal.org.objectweb.asm.Item: jdk.internal.org.objectweb.asm.Item next> = $stack37#82;

        l4[$stack70#45] = $stack26;

        l5#1 = l5#1 + 1;

        goto label01;

     label15:
        $stack13 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack14 = $stack13[1];

        l5#118 = $stack14 - 1;

        $stack18 = l1.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector pool>;

        $stack17 = l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack15 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int header>;

        $stack16 = $stack15 - l5#118;

        virtualinvoke $stack18.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($stack17, l5#118, $stack16);

        l1.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item[] items> = l4;

        $stack20 = (double) l3;

        $stack21 = 0.75 * $stack20;

        $stack22 = (int) $stack21;

        l1.<jdk.internal.org.objectweb.asm.ClassWriter: int threshold> = $stack22;

        l1.<jdk.internal.org.objectweb.asm.ClassWriter: int index> = l3;

        return;
    }

    private void copyBootstrapMethods(jdk.internal.org.objectweb.asm.ClassWriter, jdk.internal.org.objectweb.asm.Item[], char[])
    {
        jdk.internal.org.objectweb.asm.ClassReader l0;
        int $stack13, $stack14, $stack15, $stack16, $stack17, $stack18, $stack20, $stack21, $stack22, $stack25, l9, $stack26, $stack28, $stack29, $stack30, $stack32, $stack33, $stack34, l12, $stack38, $stack39, $stack41, $stack43, $stack47, $stack49, $stack50, l4#1, l6#3, l7#6, l8#7, l10#8, l11#9;
        jdk.internal.org.objectweb.asm.ByteVector $stack19;
        byte[] $stack23;
        jdk.internal.org.objectweb.asm.ClassWriter l1;
        char[] l3;
        java.lang.Object $stack27, $stack40;
        jdk.internal.org.objectweb.asm.Item $stack31, $stack35;
        jdk.internal.org.objectweb.asm.Item[] l2;
        java.lang.String $stack44, $stack45;
        boolean $stack46, l5#2;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.ClassWriter;

        l2 := @parameter1: jdk.internal.org.objectweb.asm.Item[];

        l3 := @parameter2: char[];

        $stack13 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int getAttributes()>();

        l4#1 = $stack13;

        l5#2 = 0;

        $stack14 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack13);

        l6#3 = $stack14;

     label1:
        if l6#3 <= 0 goto label3;

        $stack43 = l4#1 + 2;

        $stack44 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack43, l3);

        $stack45 = "BootstrapMethods";

        $stack46 = virtualinvoke $stack45.<java.lang.String: boolean equals(java.lang.Object)>($stack44);

        if $stack46 == 0 goto label2;

        l5#2 = 1;

        goto label3;

     label2:
        $stack47 = l4#1 + 4;

        $stack49 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack47);

        $stack50 = 6 + $stack49;

        l4#1 = l4#1 + $stack50;

        l6#3 = l6#3 + -1;

        goto label1;

     label3:
        if l5#2 != 0 goto label4;

        return;

     label4:
        $stack15 = l4#1 + 8;

        $stack16 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack15);

        l7#6 = 0;

        l8#7 = l4#1 + 10;

     label5:
        if l7#6 >= $stack16 goto label8;

        $stack25 = l8#7 - l4#1;

        l9 = $stack25 - 10;

        $stack26 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l8#7);

        $stack27 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.Object readConst(int,char[])>($stack26, l3);

        $stack28 = virtualinvoke $stack27.<java.lang.Object: int hashCode()>();

        l10#8 = $stack28;

        $stack29 = l8#7 + 2;

        $stack30 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack29);

        l11#9 = $stack30;

     label6:
        if l11#9 <= 0 goto label7;

        $stack38 = l8#7 + 4;

        $stack39 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack38);

        $stack40 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.Object readConst(int,char[])>($stack39, l3);

        $stack41 = virtualinvoke $stack40.<java.lang.Object: int hashCode()>();

        l10#8 = l10#8 ^ $stack41;

        l8#7 = l8#7 + 2;

        l11#9 = l11#9 + -1;

        goto label6;

     label7:
        l8#7 = l8#7 + 4;

        $stack31 = new jdk.internal.org.objectweb.asm.Item;

        specialinvoke $stack31.<jdk.internal.org.objectweb.asm.Item: void <init>(int)>(l7#6);

        $stack32 = l10#8 & 2147483647;

        virtualinvoke $stack31.<jdk.internal.org.objectweb.asm.Item: void set(int,int)>(l9, $stack32);

        $stack34 = $stack31.<jdk.internal.org.objectweb.asm.Item: int hashCode>;

        $stack33 = lengthof l2;

        l12 = $stack34 % $stack33;

        $stack35 = l2[l12];

        $stack31.<jdk.internal.org.objectweb.asm.Item: jdk.internal.org.objectweb.asm.Item next> = $stack35;

        l2[l12] = $stack31;

        l7#6 = l7#6 + 1;

        goto label5;

     label8:
        $stack17 = l4#1 + 4;

        $stack18 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack17);

        $stack19 = new jdk.internal.org.objectweb.asm.ByteVector;

        $stack20 = $stack18 + 62;

        specialinvoke $stack19.<jdk.internal.org.objectweb.asm.ByteVector: void <init>(int)>($stack20);

        $stack23 = l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack22 = l4#1 + 10;

        $stack21 = $stack18 - 2;

        virtualinvoke $stack19.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($stack23, $stack22, $stack21);

        l1.<jdk.internal.org.objectweb.asm.ClassWriter: int bootstrapMethodsCount> = $stack16;

        l1.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector bootstrapMethods> = $stack19;

        return;
    }

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        jdk.internal.org.objectweb.asm.ClassReader l0;
        java.io.InputStream l1;
        byte[] $stack2;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: java.io.InputStream;

        $stack2 = staticinvoke <jdk.internal.org.objectweb.asm.ClassReader: byte[] readClass(java.io.InputStream,boolean)>(l1, 0);

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: void <init>(byte[])>($stack2);

        return;
    }

    public void <init>(java.lang.String) throws java.io.IOException
    {
        jdk.internal.org.objectweb.asm.ClassReader l0;
        java.lang.StringBuilder $stack2, $stack4, $stack5;
        java.lang.String l1, $stack3, $stack6;
        java.io.InputStream $stack7;
        byte[] $stack8;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: java.lang.String;

        $stack2 = new java.lang.StringBuilder;

        specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>();

        $stack3 = virtualinvoke l1.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        $stack4 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack3);

        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".class");

        $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack7 = staticinvoke <java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)>($stack6);

        $stack8 = staticinvoke <jdk.internal.org.objectweb.asm.ClassReader: byte[] readClass(java.io.InputStream,boolean)>($stack7, 1);

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: void <init>(byte[])>($stack8);

        return;
    }

    private static byte[] readClass(java.io.InputStream, boolean) throws java.io.IOException
    {
        java.io.InputStream l0;
        int $stack8, $stack9, $stack10, $stack11, $stack12, $stack20, $stack21, $stack22, $stack23, $stack26, l3#2;
        byte $stack24;
        boolean l1;
        java.io.IOException $stack30;
        java.lang.Throwable $stack31;
        byte[] l2#1, l5#3, l5#4, l6#6, l6#7;

        l0 := @parameter0: java.io.InputStream;

        l1 := @parameter1: boolean;

        if l0 != null goto label01;

        $stack30 = new java.io.IOException;

        specialinvoke $stack30.<java.io.IOException: void <init>(java.lang.String)>("Class not found");

        throw $stack30;

     label01:
        $stack8 = virtualinvoke l0.<java.io.InputStream: int available()>();

        l2#1 = newarray (byte)[$stack8];

        l3#2 = 0;

     label02:
        $stack9 = lengthof l2#1;

        $stack10 = $stack9 - l3#2;

        $stack11 = virtualinvoke l0.<java.io.InputStream: int read(byte[],int,int)>(l2#1, l3#2, $stack10);

        if $stack11 != -1 goto label06;

        $stack26 = lengthof l2#1;

        if l3#2 >= $stack26 goto label03;

        l5#3 = newarray (byte)[l3#2];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(l2#1, 0, l5#3, 0, l3#2);

        l2#1 = l5#3;

     label03:
        l5#4 = l2#1;

     label04:
        if l1 == 0 goto label05;

        virtualinvoke l0.<java.io.InputStream: void close()>();

     label05:
        return l5#4;

     label06:
        l3#2 = l3#2 + $stack11;

        $stack12 = lengthof l2#1;

        if l3#2 != $stack12 goto label10;

        $stack20 = virtualinvoke l0.<java.io.InputStream: int read()>();

        if $stack20 >= 0 goto label09;

        l6#6 = l2#1;

     label07:
        if l1 == 0 goto label08;

        virtualinvoke l0.<java.io.InputStream: void close()>();

     label08:
        return l6#6;

     label09:
        $stack21 = lengthof l2#1;

        $stack22 = $stack21 + 1000;

        l6#7 = newarray (byte)[$stack22];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(l2#1, 0, l6#7, 0, l3#2);

        $stack23 = l3#2;

        l3#2 = l3#2 + 1;

        $stack24 = (byte) $stack20;

        l6#7[$stack23] = $stack24;

        l2#1 = l6#7;

     label10:
        goto label02;

     label11:
        $stack31 := @caughtexception;

     label12:
        if l1 == 0 goto label13;

        virtualinvoke l0.<java.io.InputStream: void close()>();

     label13:
        throw $stack31;

        catch java.lang.Throwable from label01 to label04 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label12 with label11;
    }

    public void accept(jdk.internal.org.objectweb.asm.ClassVisitor, int)
    {
        jdk.internal.org.objectweb.asm.ClassReader l0;
        jdk.internal.org.objectweb.asm.ClassVisitor l1;
        int l2;
        jdk.internal.org.objectweb.asm.Attribute[] $stack3;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.ClassVisitor;

        l2 := @parameter1: int;

        $stack3 = newarray (jdk.internal.org.objectweb.asm.Attribute)[0];

        virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: void accept(jdk.internal.org.objectweb.asm.ClassVisitor,jdk.internal.org.objectweb.asm.Attribute[],int)>(l1, $stack3, l2);

        return;
    }

    public void accept(jdk.internal.org.objectweb.asm.ClassVisitor, jdk.internal.org.objectweb.asm.Attribute[], int)
    {
        jdk.internal.org.objectweb.asm.ClassReader l0;
        int $stack28, l3, $stack30, $stack31, $stack33, $stack35, $stack36, $stack37, $stack38, $stack39, $stack41, $stack42, $stack43, $stack44, $stack45, $stack46, $stack47, $stack48, $stack49, $stack50, $stack51, $stack52, $stack53, $stack55, $stack57, $stack62, $stack67, $stack69, $stack71, $stack72, $stack75, $stack76, $stack77, $stack79, $stack83, $stack85, $stack87, $stack88, $stack90, $stack94, $stack96, $stack98, $stack102, $stack104, $stack106, $stack110, $stack117, $stack143, $stack144, $stack145, $stack157, $stack158, $stack159, $stack160, $stack162, $stack163, $stack164, $stack167, $stack168, $stack170, $stack171, $stack172, $stack174, $stack177, $stack179, $stack181, $stack182, $stack184, $stack187, $stack188, $stack190, l4#1, l7#2, l4#3, l11#4, l17#11, l18#12, l19#13, l20#14, l21#15, l4#17, l23#18, l26#23, l27#24, $stack147#91, $stack149#104, $stack150#117, $stack156#130, l23#146, l24#147, l23#148, l24#149, l23#150, l24#151, l23#153, l24#154, l23#159, l24#160, l4#161, l23#162, l4#165, l23#166;
        char[] l5, $stack173;
        jdk.internal.org.objectweb.asm.Context $stack29;
        jdk.internal.org.objectweb.asm.Attribute[] l2;
        java.lang.String $stack32, $stack34, $stack66, $stack68, $stack70, $stack81, $stack92, $stack100, $stack108, $stack118, $stack119, $stack121, $stack123, $stack125, $stack127, $stack129, $stack131, $stack133, $stack135, $stack137, $stack139, $stack141, $stack175, $stack178, $stack180, $stack185, $stack189, $stack191, $stack192, l11#5, l12#6, l13#7, l14#8, l15#9, l16#10;
        java.lang.String[] l10;
        jdk.internal.org.objectweb.asm.ClassVisitor l1;
        int[] $stack40, $stack183, $stack186, l25#22;
        jdk.internal.org.objectweb.asm.TypePath $stack80, $stack91;
        jdk.internal.org.objectweb.asm.AnnotationVisitor $stack82, $stack93, $stack101, $stack109;
        boolean $stack120, $stack122, $stack124, $stack126, $stack128, $stack130, $stack132, $stack134, $stack136, $stack138, $stack140, $stack142;
        jdk.internal.org.objectweb.asm.Attribute $stack146, l22#16, l23#158;
        byte[] $stack169;
        java.lang.IllegalArgumentException $stack176;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.ClassVisitor;

        l2 := @parameter1: jdk.internal.org.objectweb.asm.Attribute[];

        l3 := @parameter2: int;

        l4#1 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int header>;

        $stack28 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int maxStringLength>;

        l5 = newarray (char)[$stack28];

        $stack29 = new jdk.internal.org.objectweb.asm.Context;

        specialinvoke $stack29.<jdk.internal.org.objectweb.asm.Context: void <init>()>();

        $stack29.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Attribute[] attrs> = l2;

        $stack29.<jdk.internal.org.objectweb.asm.Context: int flags> = l3;

        $stack29.<jdk.internal.org.objectweb.asm.Context: char[] buffer> = l5;

        $stack30 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l4#1);

        l7#2 = $stack30;

        $stack31 = l4#1 + 2;

        $stack32 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>($stack31, l5);

        $stack33 = l4#1 + 4;

        $stack34 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>($stack33, l5);

        $stack35 = l4#1 + 6;

        $stack36 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack35);

        l10 = newarray (java.lang.String)[$stack36];

        l4#3 = l4#1 + 8;

        l11#4 = 0;

     label01:
        $stack37 = lengthof l10;

        if l11#4 >= $stack37 goto label02;

        $stack192 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>(l4#3, l5);

        l10[l11#4] = $stack192;

        l4#3 = l4#3 + 2;

        l11#4 = l11#4 + 1;

        goto label01;

     label02:
        l11#5 = null;

        l12#6 = null;

        l13#7 = null;

        l14#8 = null;

        l15#9 = null;

        l16#10 = null;

        l17#11 = 0;

        l18#12 = 0;

        l19#13 = 0;

        l20#14 = 0;

        l21#15 = 0;

        l22#16 = null;

        $stack38 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int getAttributes()>();

        l4#17 = $stack38;

        $stack39 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack38);

        l23#18 = $stack39;

     label03:
        if l23#18 <= 0 goto label21;

        $stack117 = l4#17 + 2;

        $stack118 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack117, l5);

        $stack119 = "SourceFile";

        $stack120 = virtualinvoke $stack119.<java.lang.String: boolean equals(java.lang.Object)>($stack118);

        if $stack120 == 0 goto label04;

        $stack190 = l4#17 + 8;

        $stack191 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack190, l5);

        l12#6 = $stack191;

        goto label20;

     label04:
        $stack121 = "InnerClasses";

        $stack122 = virtualinvoke $stack121.<java.lang.String: boolean equals(java.lang.Object)>($stack118);

        if $stack122 == 0 goto label05;

        l21#15 = l4#17 + 8;

        goto label20;

     label05:
        $stack123 = "EnclosingMethod";

        $stack124 = virtualinvoke $stack123.<java.lang.String: boolean equals(java.lang.Object)>($stack118);

        if $stack124 == 0 goto label07;

        $stack179 = l4#17 + 8;

        $stack180 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>($stack179, l5);

        l14#8 = $stack180;

        $stack181 = l4#17 + 10;

        $stack182 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack181);

        if $stack182 == 0 goto label06;

        $stack183 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack184 = $stack183[$stack182];

        $stack185 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack184, l5);

        l15#9 = $stack185;

        $stack186 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack187 = $stack186[$stack182];

        $stack188 = $stack187 + 2;

        $stack189 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack188, l5);

        l16#10 = $stack189;

     label06:
        goto label20;

     label07:
        $stack125 = "Signature";

        $stack126 = virtualinvoke $stack125.<java.lang.String: boolean equals(java.lang.Object)>($stack118);

        if $stack126 == 0 goto label08;

        $stack177 = l4#17 + 8;

        $stack178 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack177, l5);

        l11#5 = $stack178;

        goto label20;

     label08:
        $stack127 = "RuntimeVisibleAnnotations";

        $stack128 = virtualinvoke $stack127.<java.lang.String: boolean equals(java.lang.Object)>($stack118);

        if $stack128 == 0 goto label09;

        l17#11 = l4#17 + 8;

        goto label20;

     label09:
        $stack129 = "RuntimeVisibleTypeAnnotations";

        $stack130 = virtualinvoke $stack129.<java.lang.String: boolean equals(java.lang.Object)>($stack118);

        if $stack130 == 0 goto label10;

        l19#13 = l4#17 + 8;

        goto label20;

     label10:
        $stack131 = "Deprecated";

        $stack132 = virtualinvoke $stack131.<java.lang.String: boolean equals(java.lang.Object)>($stack118);

        if $stack132 == 0 goto label11;

        l7#2 = l7#2 | 131072;

        goto label20;

     label11:
        $stack133 = "Synthetic";

        $stack134 = virtualinvoke $stack133.<java.lang.String: boolean equals(java.lang.Object)>($stack118);

        if $stack134 == 0 goto label12;

        l7#2 = l7#2 | 266240;

        goto label20;

     label12:
        $stack135 = "SourceDebugExtension";

        $stack136 = virtualinvoke $stack135.<java.lang.String: boolean equals(java.lang.Object)>($stack118);

        if $stack136 == 0 goto label14;

        $stack167 = l4#17 + 4;

        $stack168 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack167);

        $stack169 = l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack171 = lengthof $stack169;

        $stack170 = l4#17 + 8;

        $stack172 = $stack171 - $stack170;

        if $stack168 <= $stack172 goto label13;

        $stack176 = new java.lang.IllegalArgumentException;

        specialinvoke $stack176.<java.lang.IllegalArgumentException: void <init>()>();

        throw $stack176;

     label13:
        $stack174 = l4#17 + 8;

        $stack173 = newarray (char)[$stack168];

        $stack175 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF(int,int,char[])>($stack174, $stack168, $stack173);

        l13#7 = $stack175;

        goto label20;

     label14:
        $stack137 = "RuntimeInvisibleAnnotations";

        $stack138 = virtualinvoke $stack137.<java.lang.String: boolean equals(java.lang.Object)>($stack118);

        if $stack138 == 0 goto label15;

        l18#12 = l4#17 + 8;

        goto label20;

     label15:
        $stack139 = "RuntimeInvisibleTypeAnnotations";

        $stack140 = virtualinvoke $stack139.<java.lang.String: boolean equals(java.lang.Object)>($stack118);

        if $stack140 == 0 goto label16;

        l20#14 = l4#17 + 8;

        goto label20;

     label16:
        $stack141 = "BootstrapMethods";

        $stack142 = virtualinvoke $stack141.<java.lang.String: boolean equals(java.lang.Object)>($stack118);

        if $stack142 == 0 goto label19;

        $stack157 = l4#17 + 8;

        $stack158 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack157);

        l25#22 = newarray (int)[$stack158];

        l26#23 = 0;

        l27#24 = l4#17 + 10;

     label17:
        $stack159 = lengthof l25#22;

        if l26#23 >= $stack159 goto label18;

        l25#22[l26#23] = l27#24;

        $stack160 = l27#24 + 2;

        $stack162 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack160);

        $stack163 = 2 + $stack162;

        $stack164 = $stack163 << 1;

        l27#24 = l27#24 + $stack164;

        l26#23 = l26#23 + 1;

        goto label17;

     label18:
        $stack29.<jdk.internal.org.objectweb.asm.Context: int[] bootstrapMethods> = l25#22;

        goto label20;

     label19:
        $stack144 = l4#17 + 8;

        $stack143 = l4#17 + 4;

        $stack145 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack143);

        $stack146 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Attribute readAttribute(jdk.internal.org.objectweb.asm.Attribute[],java.lang.String,int,int,char[],int,jdk.internal.org.objectweb.asm.Label[])>(l2, $stack118, $stack144, $stack145, l5, -1, null);

        if $stack146 == null goto label20;

        $stack146.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next> = l22#16;

        l22#16 = $stack146;

     label20:
        $stack147#91 = l4#17 + 4;

        $stack149#104 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack147#91);

        $stack150#117 = 6 + $stack149#104;

        $stack156#130 = l4#17 + $stack150#117;

        l4#17 = $stack156#130;

        l23#18 = l23#18 + -1;

        goto label03;

     label21:
        $stack40 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack41 = $stack40[1];

        $stack42 = $stack41 - 7;

        $stack43 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack42);

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ClassVisitor: void visit(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>($stack43, l7#2, $stack32, l11#5, $stack34, l10);

        $stack44 = l3 & 2;

        if $stack44 != 0 goto label23;

        if l12#6 != null goto label22;

        if l13#7 == null goto label23;

     label22:
        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ClassVisitor: void visitSource(java.lang.String,java.lang.String)>(l12#6, l13#7);

     label23:
        if l14#8 == null goto label24;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ClassVisitor: void visitOuterClass(java.lang.String,java.lang.String,java.lang.String)>(l14#8, l15#9, l16#10);

     label24:
        if l17#11 == 0 goto label26;

        $stack104 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l17#11);

        l23#146 = $stack104;

        l24#147 = l17#11 + 2;

     label25:
        if l23#146 <= 0 goto label26;

        $stack106 = l24#147 + 2;

        $stack108 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l24#147, l5);

        $stack109 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>($stack108, 1);

        $stack110 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack106, l5, 1, $stack109);

        l24#147 = $stack110;

        l23#146 = l23#146 + -1;

        goto label25;

     label26:
        if l18#12 == 0 goto label28;

        $stack96 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l18#12);

        l23#148 = $stack96;

        l24#149 = l18#12 + 2;

     label27:
        if l23#148 <= 0 goto label28;

        $stack98 = l24#149 + 2;

        $stack100 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l24#149, l5);

        $stack101 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>($stack100, 0);

        $stack102 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack98, l5, 1, $stack101);

        l24#149 = $stack102;

        l23#148 = l23#148 + -1;

        goto label27;

     label28:
        if l19#13 == 0 goto label30;

        $stack85 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l19#13);

        l23#150 = $stack85;

        l24#151 = l19#13 + 2;

     label29:
        if l23#150 <= 0 goto label30;

        $stack87 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationTarget(jdk.internal.org.objectweb.asm.Context,int)>($stack29, l24#151);

        $stack88 = $stack87 + 2;

        $stack90 = $stack29.<jdk.internal.org.objectweb.asm.Context: int typeRef>;

        $stack91 = $stack29.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.TypePath typePath>;

        $stack92 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack87, l5);

        $stack93 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,java.lang.String,boolean)>($stack90, $stack91, $stack92, 1);

        $stack94 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack88, l5, 1, $stack93);

        l24#151 = $stack94;

        l23#150 = l23#150 + -1;

        goto label29;

     label30:
        if l20#14 == 0 goto label32;

        $stack75 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l20#14);

        l23#153 = $stack75;

        l24#154 = l20#14 + 2;

     label31:
        if l23#153 <= 0 goto label32;

        $stack76 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationTarget(jdk.internal.org.objectweb.asm.Context,int)>($stack29, l24#154);

        $stack77 = $stack76 + 2;

        $stack79 = $stack29.<jdk.internal.org.objectweb.asm.Context: int typeRef>;

        $stack80 = $stack29.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.TypePath typePath>;

        $stack81 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack76, l5);

        $stack82 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,java.lang.String,boolean)>($stack79, $stack80, $stack81, 0);

        $stack83 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack77, l5, 1, $stack82);

        l24#154 = $stack83;

        l23#153 = l23#153 + -1;

        goto label31;

     label32:
        if l22#16 == null goto label33;

        l23#158 = l22#16.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next>;

        l22#16.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next> = null;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ClassVisitor: void visitAttribute(jdk.internal.org.objectweb.asm.Attribute)>(l22#16);

        l22#16 = l23#158;

        goto label32;

     label33:
        if l21#15 == 0 goto label35;

        l23#159 = l21#15 + 2;

        $stack57 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l21#15);

        l24#160 = $stack57;

     label34:
        if l24#160 <= 0 goto label35;

        $stack66 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>(l23#159, l5);

        $stack67 = l23#159 + 2;

        $stack68 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>($stack67, l5);

        $stack69 = l23#159 + 4;

        $stack70 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack69, l5);

        $stack71 = l23#159 + 6;

        $stack72 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack71);

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ClassVisitor: void visitInnerClass(java.lang.String,java.lang.String,java.lang.String,int)>($stack66, $stack68, $stack70, $stack72);

        l23#159 = l23#159 + 8;

        l24#160 = l24#160 + -1;

        goto label34;

     label35:
        $stack45 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int header>;

        $stack48 = $stack45 + 10;

        $stack46 = lengthof l10;

        $stack47 = 2 * $stack46;

        $stack62 = $stack48 + $stack47;

        l4#161 = $stack62;

        $stack49 = $stack62 - 2;

        $stack50 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack49);

        l23#162 = $stack50;

     label36:
        if l23#162 <= 0 goto label37;

        $stack55 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readField(jdk.internal.org.objectweb.asm.ClassVisitor,jdk.internal.org.objectweb.asm.Context,int)>(l1, $stack29, l4#161);

        l4#161 = $stack55;

        l23#162 = l23#162 + -1;

        goto label36;

     label37:
        l4#165 = l4#161 + 2;

        $stack51 = l4#165 - 2;

        $stack52 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack51);

        l23#166 = $stack52;

     label38:
        if l23#166 <= 0 goto label39;

        $stack53 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readMethod(jdk.internal.org.objectweb.asm.ClassVisitor,jdk.internal.org.objectweb.asm.Context,int)>(l1, $stack29, l4#165);

        l4#165 = $stack53;

        l23#166 = l23#166 + -1;

        goto label38;

     label39:
        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ClassVisitor: void visitEnd()>();

        return;
    }

    private int readField(jdk.internal.org.objectweb.asm.ClassVisitor, jdk.internal.org.objectweb.asm.Context, int)
    {
        jdk.internal.org.objectweb.asm.Context l2;
        char[] l4;
        jdk.internal.org.objectweb.asm.ClassReader l0;
        int $stack18, $stack19, $stack21, $stack23, $stack26, $stack27, $stack28, $stack30, $stack34, $stack36, $stack38, $stack39, $stack41, $stack45, $stack47, $stack49, $stack53, $stack55, $stack57, $stack61, $stack63, $stack81, $stack83, $stack84, $stack96, $stack98, $stack99, l3#1, l5#2, l3#3, l9#5, l10#6, l11#7, l12#8, l15#11, $stack86#61, $stack88#70, $stack89#79, $stack95#88, l3#97, l16#99, l17#100, l16#101, l17#102, l16#103, l17#104, l16#106, l17#107;
        java.lang.String $stack20, $stack22, $stack32, $stack43, $stack51, $stack59, $stack64, $stack65, $stack67, $stack69, $stack71, $stack73, $stack75, $stack77, $stack79, $stack97, l8#4;
        jdk.internal.org.objectweb.asm.ClassVisitor l1;
        jdk.internal.org.objectweb.asm.FieldVisitor $stack24;
        jdk.internal.org.objectweb.asm.TypePath $stack31, $stack42;
        jdk.internal.org.objectweb.asm.AnnotationVisitor $stack33, $stack44, $stack52, $stack60;
        boolean $stack66, $stack68, $stack70, $stack72, $stack74, $stack76, $stack78, $stack80;
        jdk.internal.org.objectweb.asm.Attribute[] $stack82;
        jdk.internal.org.objectweb.asm.Attribute $stack85, l14#10, l16#111;
        java.lang.Object l13#9, $stack100#14;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.ClassVisitor;

        l2 := @parameter1: jdk.internal.org.objectweb.asm.Context;

        l3#1 := @parameter2: int;

        l4 = l2.<jdk.internal.org.objectweb.asm.Context: char[] buffer>;

        $stack18 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l3#1);

        l5#2 = $stack18;

        $stack19 = l3#1 + 2;

        $stack20 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack19, l4);

        $stack21 = l3#1 + 4;

        $stack22 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack21, l4);

        l3#3 = l3#1 + 6;

        l8#4 = null;

        l9#5 = 0;

        l10#6 = 0;

        l11#7 = 0;

        l12#8 = 0;

        l13#9 = null;

        l14#10 = null;

        $stack23 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l3#3);

        l15#11 = $stack23;

     label01:
        if l15#11 <= 0 goto label13;

        $stack63 = l3#3 + 2;

        $stack64 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack63, l4);

        $stack65 = "ConstantValue";

        $stack66 = virtualinvoke $stack65.<java.lang.String: boolean equals(java.lang.Object)>($stack64);

        if $stack66 == 0 goto label04;

        $stack98 = l3#3 + 8;

        $stack99 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack98);

        if $stack99 != 0 goto label02;

        $stack100#14 = null;

        goto label03;

     label02:
        $stack100#14 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.Object readConst(int,char[])>($stack99, l4);

     label03:
        l13#9 = $stack100#14;

        goto label12;

     label04:
        $stack67 = "Signature";

        $stack68 = virtualinvoke $stack67.<java.lang.String: boolean equals(java.lang.Object)>($stack64);

        if $stack68 == 0 goto label05;

        $stack96 = l3#3 + 8;

        $stack97 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack96, l4);

        l8#4 = $stack97;

        goto label12;

     label05:
        $stack69 = "Deprecated";

        $stack70 = virtualinvoke $stack69.<java.lang.String: boolean equals(java.lang.Object)>($stack64);

        if $stack70 == 0 goto label06;

        l5#2 = l5#2 | 131072;

        goto label12;

     label06:
        $stack71 = "Synthetic";

        $stack72 = virtualinvoke $stack71.<java.lang.String: boolean equals(java.lang.Object)>($stack64);

        if $stack72 == 0 goto label07;

        l5#2 = l5#2 | 266240;

        goto label12;

     label07:
        $stack73 = "RuntimeVisibleAnnotations";

        $stack74 = virtualinvoke $stack73.<java.lang.String: boolean equals(java.lang.Object)>($stack64);

        if $stack74 == 0 goto label08;

        l9#5 = l3#3 + 8;

        goto label12;

     label08:
        $stack75 = "RuntimeVisibleTypeAnnotations";

        $stack76 = virtualinvoke $stack75.<java.lang.String: boolean equals(java.lang.Object)>($stack64);

        if $stack76 == 0 goto label09;

        l11#7 = l3#3 + 8;

        goto label12;

     label09:
        $stack77 = "RuntimeInvisibleAnnotations";

        $stack78 = virtualinvoke $stack77.<java.lang.String: boolean equals(java.lang.Object)>($stack64);

        if $stack78 == 0 goto label10;

        l10#6 = l3#3 + 8;

        goto label12;

     label10:
        $stack79 = "RuntimeInvisibleTypeAnnotations";

        $stack80 = virtualinvoke $stack79.<java.lang.String: boolean equals(java.lang.Object)>($stack64);

        if $stack80 == 0 goto label11;

        l12#8 = l3#3 + 8;

        goto label12;

     label11:
        $stack82 = l2.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Attribute[] attrs>;

        $stack83 = l3#3 + 8;

        $stack81 = l3#3 + 4;

        $stack84 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack81);

        $stack85 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Attribute readAttribute(jdk.internal.org.objectweb.asm.Attribute[],java.lang.String,int,int,char[],int,jdk.internal.org.objectweb.asm.Label[])>($stack82, $stack64, $stack83, $stack84, l4, -1, null);

        if $stack85 == null goto label12;

        $stack85.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next> = l14#10;

        l14#10 = $stack85;

     label12:
        $stack86#61 = l3#3 + 4;

        $stack88#70 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack86#61);

        $stack89#79 = 6 + $stack88#70;

        $stack95#88 = l3#3 + $stack89#79;

        l3#3 = $stack95#88;

        l15#11 = l15#11 + -1;

        goto label01;

     label13:
        l3#97 = l3#3 + 2;

        $stack24 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.FieldVisitor visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>(l5#2, $stack20, $stack22, l8#4, l13#9);

        if $stack24 != null goto label14;

        return l3#97;

     label14:
        if l9#5 == 0 goto label16;

        $stack55 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l9#5);

        l16#99 = $stack55;

        l17#100 = l9#5 + 2;

     label15:
        if l16#99 <= 0 goto label16;

        $stack57 = l17#100 + 2;

        $stack59 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l17#100, l4);

        $stack60 = virtualinvoke $stack24.<jdk.internal.org.objectweb.asm.FieldVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>($stack59, 1);

        $stack61 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack57, l4, 1, $stack60);

        l17#100 = $stack61;

        l16#99 = l16#99 + -1;

        goto label15;

     label16:
        if l10#6 == 0 goto label18;

        $stack47 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l10#6);

        l16#101 = $stack47;

        l17#102 = l10#6 + 2;

     label17:
        if l16#101 <= 0 goto label18;

        $stack49 = l17#102 + 2;

        $stack51 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l17#102, l4);

        $stack52 = virtualinvoke $stack24.<jdk.internal.org.objectweb.asm.FieldVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>($stack51, 0);

        $stack53 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack49, l4, 1, $stack52);

        l17#102 = $stack53;

        l16#101 = l16#101 + -1;

        goto label17;

     label18:
        if l11#7 == 0 goto label20;

        $stack36 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l11#7);

        l16#103 = $stack36;

        l17#104 = l11#7 + 2;

     label19:
        if l16#103 <= 0 goto label20;

        $stack38 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationTarget(jdk.internal.org.objectweb.asm.Context,int)>(l2, l17#104);

        $stack39 = $stack38 + 2;

        $stack41 = l2.<jdk.internal.org.objectweb.asm.Context: int typeRef>;

        $stack42 = l2.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.TypePath typePath>;

        $stack43 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack38, l4);

        $stack44 = virtualinvoke $stack24.<jdk.internal.org.objectweb.asm.FieldVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,java.lang.String,boolean)>($stack41, $stack42, $stack43, 1);

        $stack45 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack39, l4, 1, $stack44);

        l17#104 = $stack45;

        l16#103 = l16#103 + -1;

        goto label19;

     label20:
        if l12#8 == 0 goto label22;

        $stack26 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l12#8);

        l16#106 = $stack26;

        l17#107 = l12#8 + 2;

     label21:
        if l16#106 <= 0 goto label22;

        $stack27 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationTarget(jdk.internal.org.objectweb.asm.Context,int)>(l2, l17#107);

        $stack28 = $stack27 + 2;

        $stack30 = l2.<jdk.internal.org.objectweb.asm.Context: int typeRef>;

        $stack31 = l2.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.TypePath typePath>;

        $stack32 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack27, l4);

        $stack33 = virtualinvoke $stack24.<jdk.internal.org.objectweb.asm.FieldVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,java.lang.String,boolean)>($stack30, $stack31, $stack32, 0);

        $stack34 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack28, l4, 1, $stack33);

        l17#107 = $stack34;

        l16#106 = l16#106 + -1;

        goto label21;

     label22:
        if l14#10 == null goto label23;

        l16#111 = l14#10.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next>;

        l14#10.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next> = null;

        virtualinvoke $stack24.<jdk.internal.org.objectweb.asm.FieldVisitor: void visitAttribute(jdk.internal.org.objectweb.asm.Attribute)>(l14#10);

        l14#10 = l16#111;

        goto label22;

     label23:
        virtualinvoke $stack24.<jdk.internal.org.objectweb.asm.FieldVisitor: void visitEnd()>();

        return l3#97;
    }

    private int readMethod(jdk.internal.org.objectweb.asm.ClassVisitor, jdk.internal.org.objectweb.asm.Context, int)
    {
        jdk.internal.org.objectweb.asm.Context l2;
        char[] l4;
        jdk.internal.org.objectweb.asm.ClassReader l0, $stack87;
        int $stack23, $stack24, $stack26, l17, $stack28, $stack31, $stack38, $stack40, $stack41, $stack43, $stack47, $stack49, $stack51, $stack52, $stack54, $stack58, $stack60, $stack62, $stack66, $stack68, $stack70, $stack74, $stack83, $stack84, $stack90, $stack91, $stack92, $stack93, $stack96, $stack97, $stack99, $stack101, $stack129, $stack131, $stack132, $stack144, $stack145, $stack146, $stack147, $stack148, $stack150, $stack151, $stack152, $stack156, $stack157, l3#1, l3#2, l5#3, l6#4, l9#7, l10#8, l11#9, l12#10, l13#11, l14#12, l15#13, l16#14, l19#16, l21#18, $stack134#95, $stack136#110, $stack137#125, $stack143#140, l3#155, l22#160, l20#167, l21#168, l20#172, l21#173, l20#174, l21#175, l20#176, l21#177, l20#179, l21#180;
        java.lang.String $stack25, $stack27, $stack29, $stack30, $stack45, $stack56, $stack64, $stack72, $stack82, $stack89, $stack102, $stack103, $stack105, $stack107, $stack109, $stack111, $stack113, $stack115, $stack117, $stack119, $stack121, $stack123, $stack125, $stack127, $stack149, $stack153, l8#6;
        jdk.internal.org.objectweb.asm.ClassVisitor l1;
        jdk.internal.org.objectweb.asm.MethodVisitor $stack32;
        boolean $stack33, $stack104, $stack106, $stack108, $stack110, $stack112, $stack114, $stack116, $stack118, $stack120, $stack122, $stack124, $stack126, $stack128, l21#158, $stack100#159;
        jdk.internal.org.objectweb.asm.TypePath $stack44, $stack55;
        jdk.internal.org.objectweb.asm.AnnotationVisitor $stack46, $stack57, $stack65, $stack73, $stack76;
        byte[] $stack79;
        byte $stack80;
        jdk.internal.org.objectweb.asm.ClassWriter $stack86;
        int[] $stack95;
        jdk.internal.org.objectweb.asm.Attribute[] $stack130;
        jdk.internal.org.objectweb.asm.Attribute $stack133, l18#15, l20#184;
        java.lang.String[] l7#5;
        jdk.internal.org.objectweb.asm.MethodWriter l20#157;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.ClassVisitor;

        l2 := @parameter1: jdk.internal.org.objectweb.asm.Context;

        l3#1 := @parameter2: int;

        l4 = l2.<jdk.internal.org.objectweb.asm.Context: char[] buffer>;

        $stack23 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l3#1);

        l2.<jdk.internal.org.objectweb.asm.Context: int access> = $stack23;

        $stack24 = l3#1 + 2;

        $stack25 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack24, l4);

        l2.<jdk.internal.org.objectweb.asm.Context: java.lang.String name> = $stack25;

        $stack26 = l3#1 + 4;

        $stack27 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack26, l4);

        l2.<jdk.internal.org.objectweb.asm.Context: java.lang.String desc> = $stack27;

        l3#2 = l3#1 + 6;

        l5#3 = 0;

        l6#4 = 0;

        l7#5 = null;

        l8#6 = null;

        l9#7 = 0;

        l10#8 = 0;

        l11#9 = 0;

        l12#10 = 0;

        l13#11 = 0;

        l14#12 = 0;

        l15#13 = 0;

        l16#14 = 0;

        l17 = l3#2;

        l18#15 = null;

        $stack28 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l3#2);

        l19#16 = $stack28;

     label01:
        if l19#16 <= 0 goto label18;

        $stack101 = l3#2 + 2;

        $stack102 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack101, l4);

        $stack103 = "Code";

        $stack104 = virtualinvoke $stack103.<java.lang.String: boolean equals(java.lang.Object)>($stack102);

        if $stack104 == 0 goto label02;

        $stack156 = l2.<jdk.internal.org.objectweb.asm.Context: int flags>;

        $stack157 = $stack156 & 1;

        if $stack157 != 0 goto label17;

        l5#3 = l3#2 + 8;

        goto label17;

     label02:
        $stack105 = "Exceptions";

        $stack106 = virtualinvoke $stack105.<java.lang.String: boolean equals(java.lang.Object)>($stack102);

        if $stack106 == 0 goto label05;

        $stack150 = l3#2 + 8;

        $stack151 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack150);

        l7#5 = newarray (java.lang.String)[$stack151];

        l6#4 = l3#2 + 10;

        l21#18 = 0;

     label03:
        $stack152 = lengthof l7#5;

        if l21#18 >= $stack152 goto label04;

        $stack153 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>(l6#4, l4);

        l7#5[l21#18] = $stack153;

        l6#4 = l6#4 + 2;

        l21#18 = l21#18 + 1;

        goto label03;

     label04:
        goto label17;

     label05:
        $stack107 = "Signature";

        $stack108 = virtualinvoke $stack107.<java.lang.String: boolean equals(java.lang.Object)>($stack102);

        if $stack108 == 0 goto label06;

        $stack148 = l3#2 + 8;

        $stack149 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack148, l4);

        l8#6 = $stack149;

        goto label17;

     label06:
        $stack109 = "Deprecated";

        $stack110 = virtualinvoke $stack109.<java.lang.String: boolean equals(java.lang.Object)>($stack102);

        if $stack110 == 0 goto label07;

        $stack146 = l2.<jdk.internal.org.objectweb.asm.Context: int access>;

        $stack147 = $stack146 | 131072;

        l2.<jdk.internal.org.objectweb.asm.Context: int access> = $stack147;

        goto label17;

     label07:
        $stack111 = "RuntimeVisibleAnnotations";

        $stack112 = virtualinvoke $stack111.<java.lang.String: boolean equals(java.lang.Object)>($stack102);

        if $stack112 == 0 goto label08;

        l10#8 = l3#2 + 8;

        goto label17;

     label08:
        $stack113 = "RuntimeVisibleTypeAnnotations";

        $stack114 = virtualinvoke $stack113.<java.lang.String: boolean equals(java.lang.Object)>($stack102);

        if $stack114 == 0 goto label09;

        l12#10 = l3#2 + 8;

        goto label17;

     label09:
        $stack115 = "AnnotationDefault";

        $stack116 = virtualinvoke $stack115.<java.lang.String: boolean equals(java.lang.Object)>($stack102);

        if $stack116 == 0 goto label10;

        l14#12 = l3#2 + 8;

        goto label17;

     label10:
        $stack117 = "Synthetic";

        $stack118 = virtualinvoke $stack117.<java.lang.String: boolean equals(java.lang.Object)>($stack102);

        if $stack118 == 0 goto label11;

        $stack144 = l2.<jdk.internal.org.objectweb.asm.Context: int access>;

        $stack145 = $stack144 | 266240;

        l2.<jdk.internal.org.objectweb.asm.Context: int access> = $stack145;

        goto label17;

     label11:
        $stack119 = "RuntimeInvisibleAnnotations";

        $stack120 = virtualinvoke $stack119.<java.lang.String: boolean equals(java.lang.Object)>($stack102);

        if $stack120 == 0 goto label12;

        l11#9 = l3#2 + 8;

        goto label17;

     label12:
        $stack121 = "RuntimeInvisibleTypeAnnotations";

        $stack122 = virtualinvoke $stack121.<java.lang.String: boolean equals(java.lang.Object)>($stack102);

        if $stack122 == 0 goto label13;

        l13#11 = l3#2 + 8;

        goto label17;

     label13:
        $stack123 = "RuntimeVisibleParameterAnnotations";

        $stack124 = virtualinvoke $stack123.<java.lang.String: boolean equals(java.lang.Object)>($stack102);

        if $stack124 == 0 goto label14;

        l15#13 = l3#2 + 8;

        goto label17;

     label14:
        $stack125 = "RuntimeInvisibleParameterAnnotations";

        $stack126 = virtualinvoke $stack125.<java.lang.String: boolean equals(java.lang.Object)>($stack102);

        if $stack126 == 0 goto label15;

        l16#14 = l3#2 + 8;

        goto label17;

     label15:
        $stack127 = "MethodParameters";

        $stack128 = virtualinvoke $stack127.<java.lang.String: boolean equals(java.lang.Object)>($stack102);

        if $stack128 == 0 goto label16;

        l9#7 = l3#2 + 8;

        goto label17;

     label16:
        $stack130 = l2.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Attribute[] attrs>;

        $stack131 = l3#2 + 8;

        $stack129 = l3#2 + 4;

        $stack132 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack129);

        $stack133 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Attribute readAttribute(jdk.internal.org.objectweb.asm.Attribute[],java.lang.String,int,int,char[],int,jdk.internal.org.objectweb.asm.Label[])>($stack130, $stack102, $stack131, $stack132, l4, -1, null);

        if $stack133 == null goto label17;

        $stack133.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next> = l18#15;

        l18#15 = $stack133;

     label17:
        $stack134#95 = l3#2 + 4;

        $stack136#110 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack134#95);

        $stack137#125 = 6 + $stack136#110;

        $stack143#140 = l3#2 + $stack137#125;

        l3#2 = $stack143#140;

        l19#16 = l19#16 + -1;

        goto label01;

     label18:
        l3#155 = l3#2 + 2;

        $stack31 = l2.<jdk.internal.org.objectweb.asm.Context: int access>;

        $stack30 = l2.<jdk.internal.org.objectweb.asm.Context: java.lang.String name>;

        $stack29 = l2.<jdk.internal.org.objectweb.asm.Context: java.lang.String desc>;

        $stack32 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>($stack31, $stack30, $stack29, l8#6, l7#5);

        if $stack32 != null goto label19;

        return l3#155;

     label19:
        $stack33 = $stack32 instanceof jdk.internal.org.objectweb.asm.MethodWriter;

        if $stack33 == 0 goto label26;

        l20#157 = (jdk.internal.org.objectweb.asm.MethodWriter) $stack32;

        $stack86 = l20#157.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack87 = $stack86.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ClassReader cr>;

        if $stack87 != l0 goto label26;

        $stack89 = l20#157.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String signature>;

        if l8#6 != $stack89 goto label26;

        l21#158 = 0;

        if l7#5 != null goto label22;

        $stack99 = l20#157.<jdk.internal.org.objectweb.asm.MethodWriter: int exceptionCount>;

        if $stack99 != 0 goto label20;

        $stack100#159 = 1;

        goto label21;

     label20:
        $stack100#159 = 0;

     label21:
        l21#158 = $stack100#159;

        goto label25;

     label22:
        $stack91 = lengthof l7#5;

        $stack90 = l20#157.<jdk.internal.org.objectweb.asm.MethodWriter: int exceptionCount>;

        if $stack91 != $stack90 goto label25;

        l21#158 = 1;

        $stack93 = lengthof l7#5;

        l22#160 = $stack93 - 1;

     label23:
        if l22#160 < 0 goto label25;

        l6#4 = l6#4 + -2;

        $stack95 = l20#157.<jdk.internal.org.objectweb.asm.MethodWriter: int[] exceptions>;

        $stack96 = $stack95[l22#160];

        $stack97 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l6#4);

        if $stack96 == $stack97 goto label24;

        l21#158 = 0;

        goto label25;

     label24:
        l22#160 = l22#160 + -1;

        goto label23;

     label25:
        if l21#158 == 0 goto label26;

        l20#157.<jdk.internal.org.objectweb.asm.MethodWriter: int classReaderOffset> = l17;

        $stack92 = l3#155 - l17;

        l20#157.<jdk.internal.org.objectweb.asm.MethodWriter: int classReaderLength> = $stack92;

        return l3#155;

     label26:
        if l9#7 == 0 goto label28;

        $stack79 = l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack80 = $stack79[l9#7];

        l20#167 = $stack80 & 255;

        l21#168 = l9#7 + 1;

     label27:
        if l20#167 <= 0 goto label28;

        $stack82 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l21#168, l4);

        $stack83 = l21#168 + 2;

        $stack84 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack83);

        virtualinvoke $stack32.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitParameter(java.lang.String,int)>($stack82, $stack84);

        l20#167 = l20#167 + -1;

        l21#168 = l21#168 + 4;

        goto label27;

     label28:
        if l14#12 == 0 goto label29;

        $stack76 = virtualinvoke $stack32.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotationDefault()>();

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValue(int,char[],java.lang.String,jdk.internal.org.objectweb.asm.AnnotationVisitor)>(l14#12, l4, null, $stack76);

        if $stack76 == null goto label29;

        virtualinvoke $stack76.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visitEnd()>();

     label29:
        if l10#8 == 0 goto label31;

        $stack68 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l10#8);

        l20#172 = $stack68;

        l21#173 = l10#8 + 2;

     label30:
        if l20#172 <= 0 goto label31;

        $stack70 = l21#173 + 2;

        $stack72 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l21#173, l4);

        $stack73 = virtualinvoke $stack32.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>($stack72, 1);

        $stack74 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack70, l4, 1, $stack73);

        l21#173 = $stack74;

        l20#172 = l20#172 + -1;

        goto label30;

     label31:
        if l11#9 == 0 goto label33;

        $stack60 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l11#9);

        l20#174 = $stack60;

        l21#175 = l11#9 + 2;

     label32:
        if l20#174 <= 0 goto label33;

        $stack62 = l21#175 + 2;

        $stack64 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l21#175, l4);

        $stack65 = virtualinvoke $stack32.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>($stack64, 0);

        $stack66 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack62, l4, 1, $stack65);

        l21#175 = $stack66;

        l20#174 = l20#174 + -1;

        goto label32;

     label33:
        if l12#10 == 0 goto label35;

        $stack49 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l12#10);

        l20#176 = $stack49;

        l21#177 = l12#10 + 2;

     label34:
        if l20#176 <= 0 goto label35;

        $stack51 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationTarget(jdk.internal.org.objectweb.asm.Context,int)>(l2, l21#177);

        $stack52 = $stack51 + 2;

        $stack54 = l2.<jdk.internal.org.objectweb.asm.Context: int typeRef>;

        $stack55 = l2.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.TypePath typePath>;

        $stack56 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack51, l4);

        $stack57 = virtualinvoke $stack32.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,java.lang.String,boolean)>($stack54, $stack55, $stack56, 1);

        $stack58 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack52, l4, 1, $stack57);

        l21#177 = $stack58;

        l20#176 = l20#176 + -1;

        goto label34;

     label35:
        if l13#11 == 0 goto label37;

        $stack38 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l13#11);

        l20#179 = $stack38;

        l21#180 = l13#11 + 2;

     label36:
        if l20#179 <= 0 goto label37;

        $stack40 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationTarget(jdk.internal.org.objectweb.asm.Context,int)>(l2, l21#180);

        $stack41 = $stack40 + 2;

        $stack43 = l2.<jdk.internal.org.objectweb.asm.Context: int typeRef>;

        $stack44 = l2.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.TypePath typePath>;

        $stack45 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack40, l4);

        $stack46 = virtualinvoke $stack32.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,java.lang.String,boolean)>($stack43, $stack44, $stack45, 0);

        $stack47 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack41, l4, 1, $stack46);

        l21#180 = $stack47;

        l20#179 = l20#179 + -1;

        goto label36;

     label37:
        if l15#13 == 0 goto label38;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: void readParameterAnnotations(jdk.internal.org.objectweb.asm.MethodVisitor,jdk.internal.org.objectweb.asm.Context,int,boolean)>($stack32, l2, l15#13, 1);

     label38:
        if l16#14 == 0 goto label39;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: void readParameterAnnotations(jdk.internal.org.objectweb.asm.MethodVisitor,jdk.internal.org.objectweb.asm.Context,int,boolean)>($stack32, l2, l16#14, 0);

     label39:
        if l18#15 == null goto label40;

        l20#184 = l18#15.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next>;

        l18#15.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next> = null;

        virtualinvoke $stack32.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitAttribute(jdk.internal.org.objectweb.asm.Attribute)>(l18#15);

        l18#15 = l20#184;

        goto label39;

     label40:
        if l5#3 == 0 goto label41;

        virtualinvoke $stack32.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitCode()>();

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: void readCode(jdk.internal.org.objectweb.asm.MethodVisitor,jdk.internal.org.objectweb.asm.Context,int)>($stack32, l2, l5#3);

     label41:
        virtualinvoke $stack32.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitEnd()>();

        return l3#155;
    }

    private void readCode(jdk.internal.org.objectweb.asm.MethodVisitor, jdk.internal.org.objectweb.asm.Context, int)
    {
        jdk.internal.org.objectweb.asm.ClassReader l0;
        byte[] l4, $stack149, $stack505;
        jdk.internal.org.objectweb.asm.Context l2, l25#29;
        char[] l5;
        int $stack37, $stack38, $stack39, $stack40, $stack41, $stack42, $stack43, l9, l10, $stack44, $stack46, $stack48, $stack49, $stack50, $stack51, $stack53, $stack54, $stack56, $stack57, $stack58, $stack59, $stack62, $stack63, $stack64, $stack66, $stack74, $stack76, $stack77, $stack78, $stack81, $stack82, $stack83, $stack85, $stack94, $stack95, $stack96, $stack97, $stack98, $stack99, $stack108, $stack125, $stack128, $stack129, $stack130, $stack131, $stack133, $stack134, $stack137, $stack140, $stack141, $stack142, $stack143, $stack151, $stack153, $stack154, $stack157, $stack158, $stack160, $stack161, $stack162, $stack163, $stack165, $stack166, $stack167, $stack169, $stack176, $stack177, $stack179, $stack180, $stack181, $stack182, $stack184, $stack185, $stack186, $stack188, $stack195, $stack196, $stack197, $stack199, $stack200, $stack201, $stack202, $stack203, $stack205, $stack206, $stack207, $stack208, $stack212, $stack213, $stack214, $stack215, $stack216, $stack217, $stack218, $stack219, $stack220, $stack221, $stack223, $stack224, $stack228, $stack230, $stack232, $stack233, $stack234, $stack236, $stack238, $stack240, $stack241, $stack242, $stack243, $stack245, $stack247, $stack249, $stack251, $stack253, $stack254, $stack256, $stack257, $stack258, $stack260, $stack262, $stack264, $stack268, $stack270, $stack271, $stack274, $stack276, $stack278, $stack290, $stack300, $stack302, $stack303, $stack304, $stack305, $stack306, $stack307, $stack308, $stack310, $stack311, $stack313, $stack315, $stack317, $stack319, $stack320, $stack321, $stack323, $stack325, $stack327, $stack330, $stack332, $stack333, $stack340, $stack344, $stack348, $stack349, $stack350, $stack351, $stack362, $stack363, $stack364, $stack366, $stack369, $stack386, $stack399, $stack401, $stack402, $stack403, $stack405, $stack406, $stack412, $stack413, $stack414, $stack415, $stack416, $stack417, $stack418, $stack419, $stack420, $stack421, $stack422, $stack424, $stack425, $stack426, $stack427, $stack428, $stack430, $stack432, $stack433, $stack434, $stack435, $stack436, $stack438, $stack439, $stack440, $stack441, $stack442, $stack443, $stack445, $stack447, $stack450, $stack451, $stack457, $stack458, $stack459, $stack460, $stack461, $stack462, $stack464, $stack465, $stack469, $stack470, $stack472, $stack473, $stack478, $stack489, $stack490, $stack492, $stack493, $stack495, $stack496, $stack498, $stack500, $stack501, $stack507, $stack511, $stack512, $stack513, $stack514, $stack516, $stack517, $stack518, $stack519, $stack520, $stack523, $stack524, $stack525, $stack526, $stack528, $stack529, $stack530, $stack531, $stack532, $stack533, $stack534, $stack535, $stack538, $stack539, $stack540, $stack542, $stack544, l3#1, l3#2, l12#3, l13#4, l13#5, l3#6, l14#7, l3#8, l14#9, l12#10, l3#15, l14#18, l15#19, l16#20, l17#21, l18#22, l19#23, l22#26, l23#27, l24#28, l27#31, l29#35, l30#36, l29#39, l30#40, $stack437#42, $stack429#43, l29#44, $stack387#101, $stack389#112, $stack390#123, $stack411#134, l27#146, $stack354#153, $stack355#157, l3#160, l27#165, l29#175, l29#176, l29#177, l3#178, l30#179, l34#183, l3#184, l30#185, l34#189, l30#190, l30#197, l31#198, l31#202, l35#203, l30#204, $stack183#226, $stack164#231, l3#233, l28#234, l28#235, l28#236, l3#237, l28#238, l33#245, $stack100#254, $stack102#266, $stack104#286, l27#294, l27#297;
        jdk.internal.org.objectweb.asm.Label[] $stack45, $stack68, $stack69, $stack87, $stack88, l33#182, l33#188;
        boolean l21, $stack372, $stack374, $stack376, $stack378, $stack380, $stack382, $stack384, $stack395, l20#24, $stack481#25, $stack282#191;
        jdk.internal.org.objectweb.asm.Label $stack52, $stack145, $stack204, $stack209, $stack222, $stack225, $stack244, $stack248, $stack444, $stack446, $stack449, $stack463, $stack466, $stack468, $stack471, $stack491, $stack494, $stack497, l28#166, $stack106#278, $stack105#288;
        jdk.internal.org.objectweb.asm.MethodVisitor l1;
        jdk.internal.org.objectweb.asm.TypePath $stack67, $stack86, $stack170, $stack189;
        int[] $stack70, $stack89, $stack250, $stack252, $stack259, $stack269, $stack275, $stack423, $stack431, $stack499, l12#16, l13#17, l32#187, l27#232;
        java.lang.String $stack71, $stack90, $stack132, $stack171, $stack190, $stack261, $stack263, $stack273, $stack277, $stack279, $stack301, $stack316, $stack370, $stack371, $stack373, $stack375, $stack377, $stack379, $stack381, $stack383, $stack394, $stack502, l32#244, $stack101#258, $stack103#270;
        jdk.internal.org.objectweb.asm.AnnotationVisitor $stack72, $stack91, $stack172, $stack191;
        byte $stack148, $stack150, $stack152, $stack229, $stack231, $stack237, $stack272, $stack309, $stack314, $stack318, $stack357, $stack365, $stack504, $stack506, $stack508;
        short $stack198, $stack246, $stack312, $stack543;
        java.lang.Object $stack235, $stack239, $stack255, $stack265;
        java.lang.Object[] $stack324, $stack326, $stack329, $stack331, $stack352, $stack353, l34#201;
        jdk.internal.org.objectweb.asm.Attribute[] $stack385, $stack392, $stack398;
        jdk.internal.org.objectweb.asm.Attribute $stack393, $stack400, $stack404, l26#30, l27#302;
        java.lang.IllegalArgumentException $stack546;
        jdk.internal.org.objectweb.asm.Handle l32#199;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.MethodVisitor;

        l2 := @parameter1: jdk.internal.org.objectweb.asm.Context;

        l3#1 := @parameter2: int;

        l4 = l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        l5 = l2.<jdk.internal.org.objectweb.asm.Context: char[] buffer>;

        $stack37 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l3#1);

        $stack38 = l3#1 + 2;

        $stack39 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack38);

        $stack40 = l3#1 + 4;

        $stack41 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack40);

        l3#2 = l3#1 + 8;

        $stack42 = lengthof l4;

        $stack43 = $stack42 - l3#2;

        if $stack41 <= $stack43 goto label001;

        $stack546 = new java.lang.IllegalArgumentException;

        specialinvoke $stack546.<java.lang.IllegalArgumentException: void <init>()>();

        throw $stack546;

     label001:
        l9 = l3#2;

        l10 = l3#2 + $stack41;

        $stack44 = $stack41 + 2;

        $stack45 = newarray (jdk.internal.org.objectweb.asm.Label)[$stack44];

        l2.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] labels> = $stack45;

        $stack46 = $stack41 + 1;

        virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack46, $stack45);

     label002:
        if l3#2 >= l10 goto label019;

        l12#3 = l3#2 - l9;

        $stack504 = l4[l3#2];

        l13#4 = $stack504 & 255;

        $stack505 = <jdk.internal.org.objectweb.asm.ClassWriter: byte[] TYPE>;

        $stack506 = $stack505[l13#4];

        tableswitch($stack506)
        {
            case 0: goto label003;
            case 1: goto label014;
            case 2: goto label015;
            case 3: goto label014;
            case 4: goto label003;
            case 5: goto label015;
            case 6: goto label015;
            case 7: goto label016;
            case 8: goto label016;
            case 9: goto label004;
            case 10: goto label005;
            case 11: goto label014;
            case 12: goto label015;
            case 13: goto label015;
            case 14: goto label008;
            case 15: goto label011;
            case 16: goto label017;
            case 17: goto label006;
            default: goto label017;
        };

     label003:
        l3#2 = l3#2 + 1;

        goto label018;

     label004:
        $stack542 = l3#2 + 1;

        $stack543 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: short readShort(int)>($stack542);

        $stack544 = l12#3 + $stack543;

        virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack544, $stack45);

        l3#2 = l3#2 + 3;

        goto label018;

     label005:
        $stack538 = l3#2 + 1;

        $stack539 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack538);

        $stack540 = l12#3 + $stack539;

        virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack540, $stack45);

        l3#2 = l3#2 + 5;

        goto label018;

     label006:
        $stack507 = l3#2 + 1;

        $stack508 = l4[$stack507];

        l13#5 = $stack508 & 255;

        if l13#5 != 132 goto label007;

        l3#2 = l3#2 + 6;

        goto label018;

     label007:
        l3#2 = l3#2 + 4;

        goto label018;

     label008:
        $stack524 = l3#2 + 4;

        $stack523 = l12#3 & 3;

        l3#6 = $stack524 - $stack523;

        $stack525 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>(l3#6);

        $stack526 = l12#3 + $stack525;

        virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack526, $stack45);

        $stack528 = l3#6 + 8;

        $stack529 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack528);

        $stack530 = l3#6 + 4;

        $stack531 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack530);

        $stack532 = $stack529 - $stack531;

        l14#7 = $stack532 + 1;

     label009:
        if l14#7 <= 0 goto label010;

        $stack533 = l3#6 + 12;

        $stack534 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack533);

        $stack535 = l12#3 + $stack534;

        virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack535, $stack45);

        l3#6 = l3#6 + 4;

        l14#7 = l14#7 + -1;

        goto label009;

     label010:
        l3#2 = l3#6 + 12;

        goto label018;

     label011:
        $stack512 = l3#2 + 4;

        $stack511 = l12#3 & 3;

        l3#8 = $stack512 - $stack511;

        $stack513 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>(l3#8);

        $stack514 = l12#3 + $stack513;

        virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack514, $stack45);

        $stack516 = l3#8 + 4;

        $stack517 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack516);

        l14#9 = $stack517;

     label012:
        if l14#9 <= 0 goto label013;

        $stack518 = l3#8 + 12;

        $stack519 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack518);

        $stack520 = l12#3 + $stack519;

        virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack520, $stack45);

        l3#8 = l3#8 + 8;

        l14#9 = l14#9 + -1;

        goto label012;

     label013:
        l3#2 = l3#8 + 8;

        goto label018;

     label014:
        l3#2 = l3#2 + 2;

        goto label018;

     label015:
        l3#2 = l3#2 + 3;

        goto label018;

     label016:
        l3#2 = l3#2 + 5;

        goto label018;

     label017:
        l3#2 = l3#2 + 4;

     label018:
        goto label002;

     label019:
        $stack48 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l3#2);

        l12#10 = $stack48;

     label020:
        if l12#10 <= 0 goto label021;

        $stack489 = l3#2 + 2;

        $stack490 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack489);

        $stack491 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack490, $stack45);

        $stack492 = l3#2 + 4;

        $stack493 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack492);

        $stack494 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack493, $stack45);

        $stack495 = l3#2 + 6;

        $stack496 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack495);

        $stack497 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack496, $stack45);

        $stack499 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack498 = l3#2 + 8;

        $stack500 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack498);

        $stack501 = $stack499[$stack500];

        $stack502 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack501, l5);

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitTryCatchBlock(jdk.internal.org.objectweb.asm.Label,jdk.internal.org.objectweb.asm.Label,jdk.internal.org.objectweb.asm.Label,java.lang.String)>($stack491, $stack494, $stack497, $stack502);

        l3#2 = l3#2 + 8;

        l12#10 = l12#10 + -1;

        goto label020;

     label021:
        l3#15 = l3#2 + 2;

        l12#16 = null;

        l13#17 = null;

        l14#18 = 0;

        l15#19 = 0;

        l16#20 = -1;

        l17#21 = -1;

        l18#22 = 0;

        l19#23 = 0;

        l20#24 = 1;

        $stack49 = l2.<jdk.internal.org.objectweb.asm.Context: int flags>;

        $stack50 = $stack49 & 8;

        if $stack50 == 0 goto label022;

        $stack481#25 = 1;

        goto label023;

     label022:
        $stack481#25 = 0;

     label023:
        l21 = $stack481#25;

        l22#26 = 0;

        l23#27 = 0;

        l24#28 = 0;

        l25#29 = null;

        l26#30 = null;

        $stack51 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l3#15);

        l27#31 = $stack51;

     label024:
        if l27#31 <= 0 goto label048;

        $stack369 = l3#15 + 2;

        $stack370 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack369, l5);

        $stack371 = "LocalVariableTable";

        $stack372 = virtualinvoke $stack371.<java.lang.String: boolean equals(java.lang.Object)>($stack370);

        if $stack372 == 0 goto label029;

        $stack457 = l2.<jdk.internal.org.objectweb.asm.Context: int flags>;

        $stack458 = $stack457 & 2;

        if $stack458 != 0 goto label047;

        l18#22 = l3#15 + 8;

        $stack459 = l3#15 + 8;

        $stack460 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack459);

        l29#35 = $stack460;

        l30#36 = l3#15;

     label025:
        if l29#35 <= 0 goto label028;

        $stack461 = l30#36 + 10;

        $stack462 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack461);

        $stack463 = $stack45[$stack462];

        if $stack463 != null goto label026;

        $stack471 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack462, $stack45);

        $stack472 = $stack471.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack473 = $stack472 | 1;

        $stack471.<jdk.internal.org.objectweb.asm.Label: int status> = $stack473;

     label026:
        $stack464 = l30#36 + 12;

        $stack465 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack464);

        $stack478 = $stack462 + $stack465;

        $stack466 = $stack45[$stack478];

        if $stack466 != null goto label027;

        $stack468 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack478, $stack45);

        $stack469 = $stack468.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack470 = $stack469 | 1;

        $stack468.<jdk.internal.org.objectweb.asm.Label: int status> = $stack470;

     label027:
        l30#36 = l30#36 + 10;

        l29#35 = l29#35 + -1;

        goto label025;

     label028:
        goto label047;

     label029:
        $stack373 = "LocalVariableTypeTable";

        $stack374 = virtualinvoke $stack373.<java.lang.String: boolean equals(java.lang.Object)>($stack370);

        if $stack374 == 0 goto label030;

        l19#23 = l3#15 + 8;

        goto label047;

     label030:
        $stack375 = "LineNumberTable";

        $stack376 = virtualinvoke $stack375.<java.lang.String: boolean equals(java.lang.Object)>($stack370);

        if $stack376 == 0 goto label034;

        $stack438 = l2.<jdk.internal.org.objectweb.asm.Context: int flags>;

        $stack439 = $stack438 & 2;

        if $stack439 != 0 goto label047;

        $stack440 = l3#15 + 8;

        $stack441 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack440);

        l29#39 = $stack441;

        l30#40 = l3#15;

     label031:
        if l29#39 <= 0 goto label033;

        $stack442 = l30#40 + 10;

        $stack443 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack442);

        $stack444 = $stack45[$stack443];

        if $stack444 != null goto label032;

        $stack449 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack443, $stack45);

        $stack450 = $stack449.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack451 = $stack450 | 1;

        $stack449.<jdk.internal.org.objectweb.asm.Label: int status> = $stack451;

     label032:
        $stack446 = $stack45[$stack443];

        $stack445 = l30#40 + 12;

        $stack447 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack445);

        $stack446.<jdk.internal.org.objectweb.asm.Label: int line> = $stack447;

        l30#40 = l30#40 + 4;

        l29#39 = l29#39 + -1;

        goto label031;

     label033:
        goto label047;

     label034:
        $stack377 = "RuntimeVisibleTypeAnnotations";

        $stack378 = virtualinvoke $stack377.<java.lang.String: boolean equals(java.lang.Object)>($stack370);

        if $stack378 == 0 goto label038;

        $stack430 = l3#15 + 8;

        $stack431 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] readTypeAnnotations(jdk.internal.org.objectweb.asm.MethodVisitor,jdk.internal.org.objectweb.asm.Context,int,boolean)>(l1, l2, $stack430, 1);

        l12#16 = $stack431;

        $stack432 = lengthof $stack431;

        if $stack432 == 0 goto label035;

        $stack433 = $stack431[0];

        $stack434 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readByte(int)>($stack433);

        if $stack434 >= 67 goto label036;

     label035:
        $stack437#42 = -1;

        goto label037;

     label036:
        $stack435 = $stack431[0];

        $stack436 = $stack435 + 1;

        $stack437#42 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack436);

     label037:
        l16#20 = $stack437#42;

        goto label047;

     label038:
        $stack379 = "RuntimeInvisibleTypeAnnotations";

        $stack380 = virtualinvoke $stack379.<java.lang.String: boolean equals(java.lang.Object)>($stack370);

        if $stack380 == 0 goto label042;

        $stack422 = l3#15 + 8;

        $stack423 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] readTypeAnnotations(jdk.internal.org.objectweb.asm.MethodVisitor,jdk.internal.org.objectweb.asm.Context,int,boolean)>(l1, l2, $stack422, 0);

        l13#17 = $stack423;

        $stack424 = lengthof $stack423;

        if $stack424 == 0 goto label039;

        $stack425 = $stack423[0];

        $stack426 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readByte(int)>($stack425);

        if $stack426 >= 67 goto label040;

     label039:
        $stack429#43 = -1;

        goto label041;

     label040:
        $stack427 = $stack423[0];

        $stack428 = $stack427 + 1;

        $stack429#43 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack428);

     label041:
        l17#21 = $stack429#43;

        goto label047;

     label042:
        $stack381 = "StackMapTable";

        $stack382 = virtualinvoke $stack381.<java.lang.String: boolean equals(java.lang.Object)>($stack370);

        if $stack382 == 0 goto label043;

        $stack416 = l2.<jdk.internal.org.objectweb.asm.Context: int flags>;

        $stack417 = $stack416 & 4;

        if $stack417 != 0 goto label047;

        l22#26 = l3#15 + 10;

        $stack418 = l3#15 + 4;

        $stack419 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack418);

        l23#27 = $stack419;

        $stack420 = l3#15 + 8;

        $stack421 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack420);

        l24#28 = $stack421;

        goto label047;

     label043:
        $stack383 = "StackMap";

        $stack384 = virtualinvoke $stack383.<java.lang.String: boolean equals(java.lang.Object)>($stack370);

        if $stack384 == 0 goto label044;

        $stack405 = l2.<jdk.internal.org.objectweb.asm.Context: int flags>;

        $stack406 = $stack405 & 4;

        if $stack406 != 0 goto label047;

        l20#24 = 0;

        l22#26 = l3#15 + 10;

        $stack412 = l3#15 + 4;

        $stack413 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack412);

        l23#27 = $stack413;

        $stack414 = l3#15 + 8;

        $stack415 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack414);

        l24#28 = $stack415;

        goto label047;

     label044:
        l29#44 = 0;

     label045:
        $stack385 = l2.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Attribute[] attrs>;

        $stack386 = lengthof $stack385;

        if l29#44 >= $stack386 goto label047;

        $stack392 = l2.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Attribute[] attrs>;

        $stack393 = $stack392[l29#44];

        $stack394 = $stack393.<jdk.internal.org.objectweb.asm.Attribute: java.lang.String type>;

        $stack395 = virtualinvoke $stack394.<java.lang.String: boolean equals(java.lang.Object)>($stack370);

        if $stack395 == 0 goto label046;

        $stack398 = l2.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Attribute[] attrs>;

        $stack400 = $stack398[l29#44];

        $stack401 = l3#15 + 8;

        $stack399 = l3#15 + 4;

        $stack402 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack399);

        $stack403 = l9 - 8;

        $stack404 = virtualinvoke $stack400.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute read(jdk.internal.org.objectweb.asm.ClassReader,int,int,char[],int,jdk.internal.org.objectweb.asm.Label[])>(l0, $stack401, $stack402, l5, $stack403, $stack45);

        if $stack404 == null goto label046;

        $stack404.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next> = l26#30;

        l26#30 = $stack404;

     label046:
        l29#44 = l29#44 + 1;

        goto label045;

     label047:
        $stack387#101 = l3#15 + 4;

        $stack389#112 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack387#101);

        $stack390#123 = 6 + $stack389#112;

        $stack411#134 = l3#15 + $stack390#123;

        l3#15 = $stack411#134;

        l27#31 = l27#31 + -1;

        goto label024;

     label048:
        if l22#26 == 0 goto label052;

        l25#29 = l2;

        l2.<jdk.internal.org.objectweb.asm.Context: int offset> = -1;

        l2.<jdk.internal.org.objectweb.asm.Context: int mode> = 0;

        l2.<jdk.internal.org.objectweb.asm.Context: int localCount> = 0;

        l2.<jdk.internal.org.objectweb.asm.Context: int localDiff> = 0;

        l2.<jdk.internal.org.objectweb.asm.Context: int stackCount> = 0;

        $stack352 = newarray (java.lang.Object)[$stack39];

        l2.<jdk.internal.org.objectweb.asm.Context: java.lang.Object[] local> = $stack352;

        $stack353 = newarray (java.lang.Object)[$stack37];

        l2.<jdk.internal.org.objectweb.asm.Context: java.lang.Object[] stack> = $stack353;

        if l21 == 0 goto label049;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: void getImplicitFrame(jdk.internal.org.objectweb.asm.Context)>(l2);

     label049:
        l27#146 = l22#26;

     label050:
        $stack354#153 = l22#26 + l23#27;

        $stack355#157 = $stack354#153 - 2;

        if l27#146 >= $stack355#157 goto label052;

        $stack357 = l4[l27#146];

        if $stack357 != 8 goto label051;

        $stack362 = l27#146 + 1;

        $stack363 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack362);

        if $stack363 < 0 goto label051;

        if $stack363 >= $stack41 goto label051;

        $stack364 = l9 + $stack363;

        $stack365 = l4[$stack364];

        $stack366 = $stack365 & 255;

        if $stack366 != 187 goto label051;

        virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack363, $stack45);

     label051:
        l27#146 = l27#146 + 1;

        goto label050;

     label052:
        l3#160 = l9;

     label053:
        if l3#160 >= l10 goto label103;

        l27#165 = l3#160 - l9;

        l28#166 = $stack45[l27#165];

        if l28#166 == null goto label054;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitLabel(jdk.internal.org.objectweb.asm.Label)>(l28#166);

        $stack348 = l2.<jdk.internal.org.objectweb.asm.Context: int flags>;

        $stack349 = $stack348 & 2;

        if $stack349 != 0 goto label054;

        $stack350 = l28#166.<jdk.internal.org.objectweb.asm.Label: int line>;

        if $stack350 <= 0 goto label054;

        $stack351 = l28#166.<jdk.internal.org.objectweb.asm.Label: int line>;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitLineNumber(int,jdk.internal.org.objectweb.asm.Label)>($stack351, l28#166);

     label054:
        if l25#29 == null goto label060;

        $stack320 = l25#29.<jdk.internal.org.objectweb.asm.Context: int offset>;

        if $stack320 == l27#165 goto label055;

        $stack340 = l25#29.<jdk.internal.org.objectweb.asm.Context: int offset>;

        if $stack340 != -1 goto label060;

     label055:
        $stack321 = l25#29.<jdk.internal.org.objectweb.asm.Context: int offset>;

        if $stack321 == -1 goto label058;

        if l20#24 == 0 goto label056;

        if l21 == 0 goto label057;

     label056:
        $stack327 = l25#29.<jdk.internal.org.objectweb.asm.Context: int localCount>;

        $stack326 = l25#29.<jdk.internal.org.objectweb.asm.Context: java.lang.Object[] local>;

        $stack325 = l25#29.<jdk.internal.org.objectweb.asm.Context: int stackCount>;

        $stack324 = l25#29.<jdk.internal.org.objectweb.asm.Context: java.lang.Object[] stack>;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitFrame(int,int,java.lang.Object[],int,java.lang.Object[])>(-1, $stack327, $stack326, $stack325, $stack324);

        goto label058;

     label057:
        $stack333 = l25#29.<jdk.internal.org.objectweb.asm.Context: int mode>;

        $stack332 = l25#29.<jdk.internal.org.objectweb.asm.Context: int localDiff>;

        $stack331 = l25#29.<jdk.internal.org.objectweb.asm.Context: java.lang.Object[] local>;

        $stack330 = l25#29.<jdk.internal.org.objectweb.asm.Context: int stackCount>;

        $stack329 = l25#29.<jdk.internal.org.objectweb.asm.Context: java.lang.Object[] stack>;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitFrame(int,int,java.lang.Object[],int,java.lang.Object[])>($stack333, $stack332, $stack331, $stack330, $stack329);

     label058:
        if l24#28 <= 0 goto label059;

        $stack323 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readFrame(int,boolean,boolean,jdk.internal.org.objectweb.asm.Context)>(l22#26, l20#24, l21, l25#29);

        l22#26 = $stack323;

        l24#28 = l24#28 + -1;

        goto label054;

     label059:
        l25#29 = null;

        goto label054;

     label060:
        $stack148 = l4[l3#160];

        $stack344 = $stack148 & 255;

        $stack149 = <jdk.internal.org.objectweb.asm.ClassWriter: byte[] TYPE>;

        $stack150 = $stack149[$stack344];

        tableswitch($stack150)
        {
            case 0: goto label061;
            case 1: goto label076;
            case 2: goto label077;
            case 3: goto label075;
            case 4: goto label062;
            case 5: goto label089;
            case 6: goto label080;
            case 7: goto label080;
            case 8: goto label086;
            case 9: goto label065;
            case 10: goto label066;
            case 11: goto label078;
            case 12: goto label079;
            case 13: goto label090;
            case 14: goto label069;
            case 15: goto label072;
            case 16: goto label091;
            case 17: goto label067;
            default: goto label091;
        };

     label061:
        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitInsn(int)>($stack344);

        l3#160 = l3#160 + 1;

        goto label092;

     label062:
        if $stack344 <= 54 goto label063;

        l29#175 = $stack344 + -59;

        $stack305 = l29#175 >> 2;

        $stack307 = 54 + $stack305;

        $stack306 = l29#175 & 3;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitVarInsn(int,int)>($stack307, $stack306);

        goto label064;

     label063:
        l29#176 = $stack344 + -26;

        $stack302 = l29#176 >> 2;

        $stack304 = 21 + $stack302;

        $stack303 = l29#176 & 3;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitVarInsn(int,int)>($stack304, $stack303);

     label064:
        l3#160 = l3#160 + 1;

        goto label092;

     label065:
        $stack245 = l3#160 + 1;

        $stack246 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: short readShort(int)>($stack245);

        $stack247 = l27#165 + $stack246;

        $stack248 = $stack45[$stack247];

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitJumpInsn(int,jdk.internal.org.objectweb.asm.Label)>($stack344, $stack248);

        l3#160 = l3#160 + 3;

        goto label092;

     label066:
        $stack241 = $stack344 - 33;

        $stack240 = l3#160 + 1;

        $stack242 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack240);

        $stack243 = l27#165 + $stack242;

        $stack244 = $stack45[$stack243];

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitJumpInsn(int,jdk.internal.org.objectweb.asm.Label)>($stack241, $stack244);

        l3#160 = l3#160 + 5;

        goto label092;

     label067:
        $stack151 = l3#160 + 1;

        $stack152 = l4[$stack151];

        l29#177 = $stack152 & 255;

        if l29#177 != 132 goto label068;

        $stack195 = l3#160 + 2;

        $stack196 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack195);

        $stack197 = l3#160 + 4;

        $stack198 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: short readShort(int)>($stack197);

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitIincInsn(int,int)>($stack196, $stack198);

        l3#160 = l3#160 + 6;

        goto label092;

     label068:
        $stack153 = l3#160 + 2;

        $stack154 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack153);

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitVarInsn(int,int)>(l29#177, $stack154);

        l3#160 = l3#160 + 4;

        goto label092;

     label069:
        $stack213 = l3#160 + 4;

        $stack212 = l27#165 & 3;

        l3#178 = $stack213 - $stack212;

        $stack214 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>(l3#178);

        l30#179 = l27#165 + $stack214;

        $stack215 = l3#178 + 4;

        $stack216 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack215);

        $stack217 = l3#178 + 8;

        $stack218 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack217);

        $stack219 = $stack218 - $stack216;

        $stack220 = $stack219 + 1;

        l33#182 = newarray (jdk.internal.org.objectweb.asm.Label)[$stack220];

        l3#160 = l3#178 + 12;

        l34#183 = 0;

     label070:
        $stack221 = lengthof l33#182;

        if l34#183 >= $stack221 goto label071;

        $stack223 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>(l3#160);

        $stack224 = l27#165 + $stack223;

        $stack225 = $stack45[$stack224];

        l33#182[l34#183] = $stack225;

        l3#160 = l3#160 + 4;

        l34#183 = l34#183 + 1;

        goto label070;

     label071:
        $stack222 = $stack45[l30#179];

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitTableSwitchInsn(int,int,jdk.internal.org.objectweb.asm.Label,jdk.internal.org.objectweb.asm.Label[])>($stack216, $stack218, $stack222, l33#182);

        goto label092;

     label072:
        $stack200 = l3#160 + 4;

        $stack199 = l27#165 & 3;

        l3#184 = $stack200 - $stack199;

        $stack201 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>(l3#184);

        l30#185 = l27#165 + $stack201;

        $stack202 = l3#184 + 4;

        $stack203 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack202);

        l32#187 = newarray (int)[$stack203];

        l33#188 = newarray (jdk.internal.org.objectweb.asm.Label)[$stack203];

        l3#160 = l3#184 + 8;

        l34#189 = 0;

     label073:
        if l34#189 >= $stack203 goto label074;

        $stack205 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>(l3#160);

        l32#187[l34#189] = $stack205;

        $stack206 = l3#160 + 4;

        $stack207 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack206);

        $stack208 = l27#165 + $stack207;

        $stack209 = $stack45[$stack208];

        l33#188[l34#189] = $stack209;

        l3#160 = l3#160 + 8;

        l34#189 = l34#189 + 1;

        goto label073;

     label074:
        $stack204 = $stack45[l30#185];

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitLookupSwitchInsn(jdk.internal.org.objectweb.asm.Label,int[],jdk.internal.org.objectweb.asm.Label[])>($stack204, l32#187, l33#188);

        goto label092;

     label075:
        $stack308 = l3#160 + 1;

        $stack309 = l4[$stack308];

        $stack310 = $stack309 & 255;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitVarInsn(int,int)>($stack344, $stack310);

        l3#160 = l3#160 + 2;

        goto label092;

     label076:
        $stack313 = l3#160 + 1;

        $stack314 = l4[$stack313];

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitIntInsn(int,int)>($stack344, $stack314);

        l3#160 = l3#160 + 2;

        goto label092;

     label077:
        $stack311 = l3#160 + 1;

        $stack312 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: short readShort(int)>($stack311);

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitIntInsn(int,int)>($stack344, $stack312);

        l3#160 = l3#160 + 3;

        goto label092;

     label078:
        $stack236 = l3#160 + 1;

        $stack237 = l4[$stack236];

        $stack238 = $stack237 & 255;

        $stack239 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.Object readConst(int,char[])>($stack238, l5);

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitLdcInsn(java.lang.Object)>($stack239);

        l3#160 = l3#160 + 2;

        goto label092;

     label079:
        $stack233 = l3#160 + 1;

        $stack234 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack233);

        $stack235 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.Object readConst(int,char[])>($stack234, l5);

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitLdcInsn(java.lang.Object)>($stack235);

        l3#160 = l3#160 + 3;

        goto label092;

     label080:
        $stack269 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack268 = l3#160 + 1;

        $stack270 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack268);

        l30#190 = $stack269[$stack270];

        $stack271 = l30#190 - 1;

        $stack272 = l4[$stack271];

        if $stack272 != 11 goto label081;

        $stack282#191 = 1;

        goto label082;

     label081:
        $stack282#191 = 0;

     label082:
        $stack273 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>(l30#190, l5);

        $stack275 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack274 = l30#190 + 2;

        $stack276 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack274);

        $stack290 = $stack275[$stack276];

        $stack277 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack290, l5);

        $stack278 = $stack290 + 2;

        $stack279 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack278, l5);

        if $stack344 >= 182 goto label083;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String)>($stack344, $stack273, $stack277, $stack279);

        goto label084;

     label083:
        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String,boolean)>($stack344, $stack273, $stack277, $stack279, $stack282#191);

     label084:
        if $stack344 != 185 goto label085;

        l3#160 = l3#160 + 5;

        goto label092;

     label085:
        l3#160 = l3#160 + 3;

        goto label092;

     label086:
        $stack250 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack249 = l3#160 + 1;

        $stack251 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack249);

        l30#197 = $stack250[$stack251];

        $stack252 = l2.<jdk.internal.org.objectweb.asm.Context: int[] bootstrapMethods>;

        $stack253 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l30#197);

        l31#198 = $stack252[$stack253];

        $stack254 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l31#198);

        $stack255 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.Object readConst(int,char[])>($stack254, l5);

        l32#199 = (jdk.internal.org.objectweb.asm.Handle) $stack255;

        $stack256 = l31#198 + 2;

        $stack257 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack256);

        l34#201 = newarray (java.lang.Object)[$stack257];

        l31#202 = l31#198 + 4;

        l35#203 = 0;

     label087:
        if l35#203 >= $stack257 goto label088;

        $stack264 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l31#202);

        $stack265 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.Object readConst(int,char[])>($stack264, l5);

        l34#201[l35#203] = $stack265;

        l31#202 = l31#202 + 2;

        l35#203 = l35#203 + 1;

        goto label087;

     label088:
        $stack259 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack258 = l30#197 + 2;

        $stack260 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack258);

        l30#204 = $stack259[$stack260];

        $stack261 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l30#204, l5);

        $stack262 = l30#204 + 2;

        $stack263 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack262, l5);

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitInvokeDynamicInsn(java.lang.String,java.lang.String,jdk.internal.org.objectweb.asm.Handle,java.lang.Object[])>($stack261, $stack263, l32#199, l34#201);

        l3#160 = l3#160 + 5;

        goto label092;

     label089:
        $stack300 = l3#160 + 1;

        $stack301 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>($stack300, l5);

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitTypeInsn(int,java.lang.String)>($stack344, $stack301);

        l3#160 = l3#160 + 3;

        goto label092;

     label090:
        $stack228 = l3#160 + 1;

        $stack229 = l4[$stack228];

        $stack232 = $stack229 & 255;

        $stack230 = l3#160 + 2;

        $stack231 = l4[$stack230];

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitIincInsn(int,int)>($stack232, $stack231);

        l3#160 = l3#160 + 3;

        goto label092;

     label091:
        $stack315 = l3#160 + 1;

        $stack316 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>($stack315, l5);

        $stack317 = l3#160 + 3;

        $stack318 = l4[$stack317];

        $stack319 = $stack318 & 255;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitMultiANewArrayInsn(java.lang.String,int)>($stack316, $stack319);

        l3#160 = l3#160 + 4;

     label092:
        if l12#16 == null goto label097;

        $stack176 = lengthof l12#16;

        if l14#18 >= $stack176 goto label097;

        if l16#20 > l27#165 goto label097;

        if l16#20 != l27#165 goto label093;

        $stack184 = l12#16[l14#18];

        $stack185 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationTarget(jdk.internal.org.objectweb.asm.Context,int)>(l2, $stack184);

        $stack186 = $stack185 + 2;

        $stack188 = l2.<jdk.internal.org.objectweb.asm.Context: int typeRef>;

        $stack189 = l2.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.TypePath typePath>;

        $stack190 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack185, l5);

        $stack191 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitInsnAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,java.lang.String,boolean)>($stack188, $stack189, $stack190, 1);

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack186, l5, 1, $stack191);

     label093:
        l14#18 = l14#18 + 1;

        $stack177 = lengthof l12#16;

        if l14#18 >= $stack177 goto label094;

        $stack179 = l12#16[l14#18];

        $stack180 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readByte(int)>($stack179);

        if $stack180 >= 67 goto label095;

     label094:
        $stack183#226 = -1;

        goto label096;

     label095:
        $stack181 = l12#16[l14#18];

        $stack182 = $stack181 + 1;

        $stack183#226 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack182);

     label096:
        l16#20 = $stack183#226;

        goto label092;

     label097:
        if l13#17 == null goto label102;

        $stack157 = lengthof l13#17;

        if l15#19 >= $stack157 goto label102;

        if l17#21 > l27#165 goto label102;

        if l17#21 != l27#165 goto label098;

        $stack165 = l13#17[l15#19];

        $stack166 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationTarget(jdk.internal.org.objectweb.asm.Context,int)>(l2, $stack165);

        $stack167 = $stack166 + 2;

        $stack169 = l2.<jdk.internal.org.objectweb.asm.Context: int typeRef>;

        $stack170 = l2.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.TypePath typePath>;

        $stack171 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack166, l5);

        $stack172 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitInsnAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,java.lang.String,boolean)>($stack169, $stack170, $stack171, 0);

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack167, l5, 1, $stack172);

     label098:
        l15#19 = l15#19 + 1;

        $stack158 = lengthof l13#17;

        if l15#19 >= $stack158 goto label099;

        $stack160 = l13#17[l15#19];

        $stack161 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readByte(int)>($stack160);

        if $stack161 >= 67 goto label100;

     label099:
        $stack164#231 = -1;

        goto label101;

     label100:
        $stack162 = l13#17[l15#19];

        $stack163 = $stack162 + 1;

        $stack164#231 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack163);

     label101:
        l17#21 = $stack164#231;

        goto label097;

     label102:
        goto label053;

     label103:
        $stack52 = $stack45[$stack41];

        if $stack52 == null goto label104;

        $stack145 = $stack45[$stack41];

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitLabel(jdk.internal.org.objectweb.asm.Label)>($stack145);

     label104:
        $stack53 = l2.<jdk.internal.org.objectweb.asm.Context: int flags>;

        $stack54 = $stack53 & 2;

        if $stack54 != 0 goto label111;

        if l18#22 == 0 goto label111;

        l27#232 = null;

        if l19#23 == 0 goto label106;

        l3#233 = l19#23 + 2;

        $stack133 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l19#23);

        $stack134 = $stack133 * 3;

        l27#232 = newarray (int)[$stack134];

        l28#234 = lengthof l27#232;

     label105:
        if l28#234 <= 0 goto label106;

        l28#235 = l28#234 + -1;

        $stack140 = l3#233 + 6;

        l27#232[l28#235] = $stack140;

        l28#236 = l28#235 + -1;

        $stack141 = l3#233 + 8;

        $stack142 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack141);

        l27#232[l28#236] = $stack142;

        l28#234 = l28#236 + -1;

        $stack143 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l3#233);

        l27#232[l28#234] = $stack143;

        l3#233 = l3#233 + 10;

        goto label105;

     label106:
        $stack137 = l18#22 + 2;

        l3#237 = $stack137;

        $stack94 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l18#22);

        l28#238 = $stack94;

     label107:
        if l28#238 <= 0 goto label111;

        $stack95 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l3#237);

        $stack96 = l3#237 + 2;

        $stack97 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack96);

        $stack98 = l3#237 + 8;

        $stack99 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack98);

        l32#244 = null;

        if l27#232 == null goto label110;

        l33#245 = 0;

     label108:
        $stack108 = lengthof l27#232;

        if l33#245 >= $stack108 goto label110;

        $stack125 = l27#232[l33#245];

        if $stack125 != $stack95 goto label109;

        $stack128 = l33#245 + 1;

        $stack129 = l27#232[$stack128];

        if $stack129 != $stack99 goto label109;

        $stack130 = l33#245 + 2;

        $stack131 = l27#232[$stack130];

        $stack132 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack131, l5);

        l32#244 = $stack132;

        goto label110;

     label109:
        l33#245 = l33#245 + 3;

        goto label108;

     label110:
        $stack100#254 = l3#237 + 4;

        $stack101#258 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack100#254, l5);

        $stack102#266 = l3#237 + 6;

        $stack103#270 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack102#266, l5);

        $stack106#278 = $stack45[$stack95];

        $stack104#286 = $stack95 + $stack97;

        $stack105#288 = $stack45[$stack104#286];

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitLocalVariable(java.lang.String,java.lang.String,java.lang.String,jdk.internal.org.objectweb.asm.Label,jdk.internal.org.objectweb.asm.Label,int)>($stack101#258, $stack103#270, l32#244, $stack106#278, $stack105#288, $stack99);

        l3#237 = l3#237 + 10;

        l28#238 = l28#238 + -1;

        goto label107;

     label111:
        if l12#16 == null goto label114;

        l27#294 = 0;

     label112:
        $stack74 = lengthof l12#16;

        if l27#294 >= $stack74 goto label114;

        $stack76 = l12#16[l27#294];

        $stack77 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readByte(int)>($stack76);

        $stack78 = $stack77 >> 1;

        if $stack78 != 32 goto label113;

        $stack81 = l12#16[l27#294];

        $stack82 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationTarget(jdk.internal.org.objectweb.asm.Context,int)>(l2, $stack81);

        $stack83 = $stack82 + 2;

        $stack85 = l2.<jdk.internal.org.objectweb.asm.Context: int typeRef>;

        $stack86 = l2.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.TypePath typePath>;

        $stack87 = l2.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] start>;

        $stack88 = l2.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] end>;

        $stack89 = l2.<jdk.internal.org.objectweb.asm.Context: int[] index>;

        $stack90 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack82, l5);

        $stack91 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitLocalVariableAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,jdk.internal.org.objectweb.asm.Label[],jdk.internal.org.objectweb.asm.Label[],int[],java.lang.String,boolean)>($stack85, $stack86, $stack87, $stack88, $stack89, $stack90, 1);

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack83, l5, 1, $stack91);

     label113:
        l27#294 = l27#294 + 1;

        goto label112;

     label114:
        if l13#17 == null goto label117;

        l27#297 = 0;

     label115:
        $stack56 = lengthof l13#17;

        if l27#297 >= $stack56 goto label117;

        $stack57 = l13#17[l27#297];

        $stack58 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readByte(int)>($stack57);

        $stack59 = $stack58 >> 1;

        if $stack59 != 32 goto label116;

        $stack62 = l13#17[l27#297];

        $stack63 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationTarget(jdk.internal.org.objectweb.asm.Context,int)>(l2, $stack62);

        $stack64 = $stack63 + 2;

        $stack66 = l2.<jdk.internal.org.objectweb.asm.Context: int typeRef>;

        $stack67 = l2.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.TypePath typePath>;

        $stack68 = l2.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] start>;

        $stack69 = l2.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] end>;

        $stack70 = l2.<jdk.internal.org.objectweb.asm.Context: int[] index>;

        $stack71 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack63, l5);

        $stack72 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitLocalVariableAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,jdk.internal.org.objectweb.asm.Label[],jdk.internal.org.objectweb.asm.Label[],int[],java.lang.String,boolean)>($stack66, $stack67, $stack68, $stack69, $stack70, $stack71, 0);

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack64, l5, 1, $stack72);

     label116:
        l27#297 = l27#297 + 1;

        goto label115;

     label117:
        if l26#30 == null goto label118;

        l27#302 = l26#30.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next>;

        l26#30.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next> = null;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitAttribute(jdk.internal.org.objectweb.asm.Attribute)>(l26#30);

        l26#30 = l27#302;

        goto label117;

     label118:
        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitMaxs(int,int)>($stack37, $stack39);

        return;
    }

    private int[] readTypeAnnotations(jdk.internal.org.objectweb.asm.MethodVisitor, jdk.internal.org.objectweb.asm.Context, int, boolean)
    {
        jdk.internal.org.objectweb.asm.Context l2;
        char[] l5;
        jdk.internal.org.objectweb.asm.ClassReader l0;
        int $stack12, $stack13, $stack14, $stack15, $stack18, $stack19, $stack20, $stack21, $stack26, $stack27, $stack28, $stack32, $stack37, $stack49, $stack50, $stack56, $stack57, $stack58, $stack59, $stack63, l3#1, l3#2, l7#3, l3#4, l9#5, $stack16#15, $stack17#28;
        int[] l6;
        byte[] $stack25;
        jdk.internal.org.objectweb.asm.MethodVisitor l1;
        java.lang.String $stack30;
        boolean l4;
        jdk.internal.org.objectweb.asm.AnnotationVisitor $stack31;
        jdk.internal.org.objectweb.asm.Label[] $stack60, $stack62;
        jdk.internal.org.objectweb.asm.TypePath $stack24#36;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.MethodVisitor;

        l2 := @parameter1: jdk.internal.org.objectweb.asm.Context;

        l3#1 := @parameter2: int;

        l4 := @parameter3: boolean;

        l5 = l2.<jdk.internal.org.objectweb.asm.Context: char[] buffer>;

        $stack12 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l3#1);

        l6 = newarray (int)[$stack12];

        l3#2 = l3#1 + 2;

        l7#3 = 0;

     label01:
        $stack13 = lengthof l6;

        if l7#3 >= $stack13 goto label14;

        l6[l7#3] = l3#2;

        $stack14 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>(l3#2);

        $stack15 = $stack14 >>> 24;

        lookupswitch($stack15)
        {
            case 0: goto label02;
            case 1: goto label02;
            case 19: goto label03;
            case 20: goto label03;
            case 21: goto label03;
            case 22: goto label02;
            case 64: goto label04;
            case 65: goto label04;
            case 71: goto label07;
            case 72: goto label07;
            case 73: goto label07;
            case 74: goto label07;
            case 75: goto label07;
            default: goto label08;
        };

     label02:
        l3#4 = l3#2 + 2;

        goto label09;

     label03:
        l3#4 = l3#2 + 1;

        goto label09;

     label04:
        $stack49 = l3#2 + 1;

        $stack50 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack49);

        l9#5 = $stack50;

     label05:
        if l9#5 <= 0 goto label06;

        $stack56 = l3#2 + 3;

        $stack57 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack56);

        $stack58 = l3#2 + 5;

        $stack59 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack58);

        $stack60 = l2.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] labels>;

        virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack57, $stack60);

        $stack63 = $stack57 + $stack59;

        $stack62 = l2.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] labels>;

        virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack63, $stack62);

        l3#2 = l3#2 + 6;

        l9#5 = l9#5 + -1;

        goto label05;

     label06:
        l3#4 = l3#2 + 3;

        goto label09;

     label07:
        l3#4 = l3#2 + 4;

        goto label09;

     label08:
        l3#4 = l3#2 + 3;

     label09:
        $stack16#15 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readByte(int)>(l3#4);

        $stack17#28 = $stack14 >>> 24;

        if $stack17#28 != 66 goto label12;

        if $stack16#15 != 0 goto label10;

        $stack24#36 = null;

        goto label11;

     label10:
        $stack24#36 = new jdk.internal.org.objectweb.asm.TypePath;

        $stack25 = l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        specialinvoke $stack24#36.<jdk.internal.org.objectweb.asm.TypePath: void <init>(byte[],int)>($stack25, l3#4);

     label11:
        $stack26 = 2 * $stack16#15;

        $stack27 = 1 + $stack26;

        $stack37 = l3#4 + $stack27;

        $stack28 = $stack37 + 2;

        $stack30 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack37, l5);

        $stack31 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitTryCatchAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,java.lang.String,boolean)>($stack14, $stack24#36, $stack30, l4);

        $stack32 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack28, l5, 1, $stack31);

        l3#2 = $stack32;

        goto label13;

     label12:
        $stack19 = l3#4 + 3;

        $stack18 = 2 * $stack16#15;

        $stack20 = $stack19 + $stack18;

        $stack21 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack20, l5, 1, null);

        l3#2 = $stack21;

     label13:
        l7#3 = l7#3 + 1;

        goto label01;

     label14:
        return l6;
    }

    private int readAnnotationTarget(jdk.internal.org.objectweb.asm.Context, int)
    {
        jdk.internal.org.objectweb.asm.ClassReader l0;
        int $stack8, $stack9, $stack13, $stack14, $stack15, $stack21, $stack22, $stack31, $stack32, $stack33, $stack38, $stack41, $stack43, $stack46, $stack49, l2#1, l3#3, l2#4, l5#6, $stack47#7, $stack10#18;
        jdk.internal.org.objectweb.asm.Context l1;
        byte[] $stack12;
        jdk.internal.org.objectweb.asm.Label[] $stack23, $stack24, $stack34, $stack35, $stack37, $stack39;
        int[] $stack25, $stack42;
        jdk.internal.org.objectweb.asm.Label $stack36, $stack40;
        jdk.internal.org.objectweb.asm.TypePath $stack11#39;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.Context;

        l2#1 := @parameter1: int;

        $stack8 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>(l2#1);

        $stack9 = $stack8 >>> 24;

        lookupswitch($stack9)
        {
            case 0: goto label01;
            case 1: goto label01;
            case 19: goto label02;
            case 20: goto label02;
            case 21: goto label02;
            case 22: goto label01;
            case 64: goto label03;
            case 65: goto label03;
            case 71: goto label06;
            case 72: goto label06;
            case 73: goto label06;
            case 74: goto label06;
            case 75: goto label06;
            default: goto label07;
        };

     label01:
        l3#3 = $stack8 & -65536;

        l2#4 = l2#1 + 2;

        goto label10;

     label02:
        l3#3 = $stack8 & -16777216;

        l2#4 = l2#1 + 1;

        goto label10;

     label03:
        l3#3 = $stack8 & -16777216;

        $stack21 = l2#1 + 1;

        $stack22 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack21);

        $stack23 = newarray (jdk.internal.org.objectweb.asm.Label)[$stack22];

        l1.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] start> = $stack23;

        $stack24 = newarray (jdk.internal.org.objectweb.asm.Label)[$stack22];

        l1.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] end> = $stack24;

        $stack25 = newarray (int)[$stack22];

        l1.<jdk.internal.org.objectweb.asm.Context: int[] index> = $stack25;

        l2#4 = l2#1 + 3;

        l5#6 = 0;

     label04:
        if l5#6 >= $stack22 goto label05;

        $stack31 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l2#4);

        $stack32 = l2#4 + 2;

        $stack33 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack32);

        $stack35 = l1.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] start>;

        $stack34 = l1.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] labels>;

        $stack36 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack31, $stack34);

        $stack35[l5#6] = $stack36;

        $stack39 = l1.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] end>;

        $stack38 = $stack31 + $stack33;

        $stack37 = l1.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] labels>;

        $stack40 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack38, $stack37);

        $stack39[l5#6] = $stack40;

        $stack42 = l1.<jdk.internal.org.objectweb.asm.Context: int[] index>;

        $stack41 = l2#4 + 4;

        $stack43 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack41);

        $stack42[l5#6] = $stack43;

        l2#4 = l2#4 + 6;

        l5#6 = l5#6 + 1;

        goto label04;

     label05:
        goto label10;

     label06:
        l3#3 = $stack8 & -16776961;

        l2#4 = l2#1 + 4;

        goto label10;

     label07:
        $stack46 = $stack8 >>> 24;

        if $stack46 >= 67 goto label08;

        $stack47#7 = -256;

        goto label09;

     label08:
        $stack47#7 = -16777216;

     label09:
        $stack49 = $stack8 & $stack47#7;

        l3#3 = $stack49;

        l2#4 = l2#1 + 3;

     label10:
        $stack10#18 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readByte(int)>(l2#4);

        l1.<jdk.internal.org.objectweb.asm.Context: int typeRef> = l3#3;

        if $stack10#18 != 0 goto label11;

        $stack11#39 = null;

        goto label12;

     label11:
        $stack11#39 = new jdk.internal.org.objectweb.asm.TypePath;

        $stack12 = l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        specialinvoke $stack11#39.<jdk.internal.org.objectweb.asm.TypePath: void <init>(byte[],int)>($stack12, l2#4);

     label12:
        l1.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.TypePath typePath> = $stack11#39;

        $stack14 = l2#4 + 1;

        $stack13 = 2 * $stack10#18;

        $stack15 = $stack14 + $stack13;

        return $stack15;
    }

    private void readParameterAnnotations(jdk.internal.org.objectweb.asm.MethodVisitor, jdk.internal.org.objectweb.asm.Context, int, boolean)
    {
        jdk.internal.org.objectweb.asm.ClassReader l0;
        byte[] $stack12;
        byte $stack13;
        int l6, $stack16, l7, $stack17, $stack18, $stack24, $stack25, l3#1, l3#2, l5#3, l10#5;
        jdk.internal.org.objectweb.asm.Context l2;
        java.lang.String $stack14, $stack22;
        jdk.internal.org.objectweb.asm.Type[] $stack15;
        char[] l9;
        jdk.internal.org.objectweb.asm.MethodVisitor l1;
        boolean l4;
        jdk.internal.org.objectweb.asm.AnnotationVisitor $stack23, $stack27;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.MethodVisitor;

        l2 := @parameter1: jdk.internal.org.objectweb.asm.Context;

        l3#1 := @parameter2: int;

        l4 := @parameter3: boolean;

        $stack12 = l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        l3#2 = l3#1 + 1;

        $stack13 = $stack12[l3#1];

        l6 = $stack13 & 255;

        $stack14 = l2.<jdk.internal.org.objectweb.asm.Context: java.lang.String desc>;

        $stack15 = staticinvoke <jdk.internal.org.objectweb.asm.Type: jdk.internal.org.objectweb.asm.Type[] getArgumentTypes(java.lang.String)>($stack14);

        $stack16 = lengthof $stack15;

        l7 = $stack16 - l6;

        l5#3 = 0;

     label1:
        if l5#3 >= l7 goto label3;

        $stack27 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitParameterAnnotation(int,java.lang.String,boolean)>(l5#3, "Ljava/lang/Synthetic;", 0);

        if $stack27 == null goto label2;

        virtualinvoke $stack27.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visitEnd()>();

     label2:
        l5#3 = l5#3 + 1;

        goto label1;

     label3:
        l9 = l2.<jdk.internal.org.objectweb.asm.Context: char[] buffer>;

     label4:
        $stack17 = l6 + l7;

        if l5#3 >= $stack17 goto label7;

        $stack18 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l3#2);

        l10#5 = $stack18;

        l3#2 = l3#2 + 2;

     label5:
        if l10#5 <= 0 goto label6;

        $stack22 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l3#2, l9);

        $stack23 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitParameterAnnotation(int,java.lang.String,boolean)>(l5#3, $stack22, l4);

        $stack24 = l3#2 + 2;

        $stack25 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack24, l9, 1, $stack23);

        l3#2 = $stack25;

        l10#5 = l10#5 + -1;

        goto label5;

     label6:
        l5#3 = l5#3 + 1;

        goto label4;

     label7:
        return;
    }

    private int readAnnotationValues(int, char[], boolean, jdk.internal.org.objectweb.asm.AnnotationVisitor)
    {
        jdk.internal.org.objectweb.asm.ClassReader l0;
        int $stack6, $stack8, $stack11, $stack13, l1#1, l5#2, l1#3;
        boolean l3;
        jdk.internal.org.objectweb.asm.AnnotationVisitor l4;
        char[] l2;
        java.lang.String $stack12;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1#1 := @parameter0: int;

        l2 := @parameter1: char[];

        l3 := @parameter2: boolean;

        l4 := @parameter3: jdk.internal.org.objectweb.asm.AnnotationVisitor;

        $stack6 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1#1);

        l5#2 = $stack6;

        l1#3 = l1#1 + 2;

        if l3 == 0 goto label2;

     label1:
        if l5#2 <= 0 goto label3;

        $stack11 = l1#3 + 2;

        $stack12 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l1#3, l2);

        $stack13 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValue(int,char[],java.lang.String,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack11, l2, $stack12, l4);

        l1#3 = $stack13;

        l5#2 = l5#2 + -1;

        goto label1;

     label2:
        if l5#2 <= 0 goto label3;

        $stack8 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValue(int,char[],java.lang.String,jdk.internal.org.objectweb.asm.AnnotationVisitor)>(l1#3, l2, null, l4);

        l1#3 = $stack8;

        l5#2 = l5#2 + -1;

        goto label2;

     label3:
        if l4 == null goto label4;

        virtualinvoke l4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visitEnd()>();

     label4:
        return l1#3;
    }

    private int readAnnotationValue(int, char[], java.lang.String, jdk.internal.org.objectweb.asm.AnnotationVisitor)
    {
        jdk.internal.org.objectweb.asm.AnnotationVisitor l4, $stack89, $stack93, $stack125;
        jdk.internal.org.objectweb.asm.ClassReader l0;
        byte[] $stack16, $stack28, l7, $stack127;
        byte $stack17, $stack29, $stack84, $stack120, $stack128;
        int $stack18, $stack21, $stack26, $stack30, $stack32, $stack33, $stack34, $stack38, $stack41, $stack42, $stack43, $stack48, $stack49, $stack54, $stack55, $stack56, $stack60, $stack61, $stack62, $stack67, $stack68, $stack74, $stack75, $stack76, $stack81, $stack82, $stack83, $stack87, $stack90, $stack91, $stack94, $stack96, $stack97, $stack98, $stack103, $stack104, $stack105, $stack108, $stack111, $stack112, $stack113, $stack117, $stack118, $stack119, $stack122, $stack126, $stack129, $stack130, $stack131, $stack132, $stack133, $stack134, $stack135, l1#1, l1#2, l1#4, l1#5, l5#6, l5#7, l5#9, l5#10, l5#11, l5#12, l5#13, l5#14;
        java.lang.String l3, $stack19, $stack20, $stack22, $stack24, $stack124;
        char[] l2, l10;
        jdk.internal.org.objectweb.asm.Type $stack25;
        boolean[] l8;
        int[] $stack31, $stack40, $stack47, l11, $stack53, $stack59, $stack66, $stack73, $stack80, $stack95, $stack102, $stack110, $stack116;
        short[] l9;
        short $stack44, $stack106;
        long[] l12;
        long $stack50, $stack69;
        float[] l13;
        float $stack63;
        double[] l14;
        double $stack70;
        char $stack77, $stack114;
        java.lang.Short $stack107;
        java.lang.Object $stack109;
        java.lang.Character $stack115;
        java.lang.Byte $stack121;
        java.lang.Boolean $stack99#3;
        boolean $stack37#8;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1#1 := @parameter0: int;

        l2 := @parameter1: char[];

        l3 := @parameter2: java.lang.String;

        l4 := @parameter3: jdk.internal.org.objectweb.asm.AnnotationVisitor;

        if l4 != null goto label05;

        $stack127 = l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack128 = $stack127[l1#1];

        $stack129 = $stack128 & 255;

        lookupswitch($stack129)
        {
            case 64: goto label02;
            case 91: goto label03;
            case 101: goto label01;
            default: goto label04;
        };

     label01:
        $stack130 = l1#1 + 5;

        return $stack130;

     label02:
        $stack133 = l1#1 + 3;

        $stack134 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack133, l2, 1, null);

        return $stack134;

     label03:
        $stack131 = l1#1 + 1;

        $stack132 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack131, l2, 0, null);

        return $stack132;

     label04:
        $stack135 = l1#1 + 3;

        return $stack135;

     label05:
        $stack16 = l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        l1#2 = l1#1 + 1;

        $stack17 = $stack16[l1#1];

        $stack18 = $stack17 & 255;

        tableswitch($stack18)
        {
            case 64: goto label16;
            case 65: goto label46;
            case 66: goto label07;
            case 67: goto label12;
            case 68: goto label06;
            case 69: goto label46;
            case 70: goto label06;
            case 71: goto label46;
            case 72: goto label46;
            case 73: goto label06;
            case 74: goto label06;
            case 75: goto label46;
            case 76: goto label46;
            case 77: goto label46;
            case 78: goto label46;
            case 79: goto label46;
            case 80: goto label46;
            case 81: goto label46;
            case 82: goto label46;
            case 83: goto label11;
            case 84: goto label46;
            case 85: goto label46;
            case 86: goto label46;
            case 87: goto label46;
            case 88: goto label46;
            case 89: goto label46;
            case 90: goto label08;
            case 91: goto label17;
            case 92: goto label46;
            case 93: goto label46;
            case 94: goto label46;
            case 95: goto label46;
            case 96: goto label46;
            case 97: goto label46;
            case 98: goto label46;
            case 99: goto label15;
            case 100: goto label46;
            case 101: goto label14;
            case 102: goto label46;
            case 103: goto label46;
            case 104: goto label46;
            case 105: goto label46;
            case 106: goto label46;
            case 107: goto label46;
            case 108: goto label46;
            case 109: goto label46;
            case 110: goto label46;
            case 111: goto label46;
            case 112: goto label46;
            case 113: goto label46;
            case 114: goto label46;
            case 115: goto label13;
            default: goto label46;
        };

     label06:
        $stack108 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1#2);

        $stack109 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.Object readConst(int,char[])>($stack108, l2);

        virtualinvoke l4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(l3, $stack109);

        l1#2 = l1#2 + 2;

        goto label46;

     label07:
        $stack116 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack117 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1#2);

        $stack118 = $stack116[$stack117];

        $stack119 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack118);

        $stack120 = (byte) $stack119;

        $stack121 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($stack120);

        virtualinvoke l4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(l3, $stack121);

        l1#2 = l1#2 + 2;

        goto label46;

     label08:
        $stack95 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack96 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1#2);

        $stack97 = $stack95[$stack96];

        $stack98 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack97);

        if $stack98 != 0 goto label09;

        $stack99#3 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        goto label10;

     label09:
        $stack99#3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

     label10:
        virtualinvoke l4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(l3, $stack99#3);

        l1#2 = l1#2 + 2;

        goto label46;

     label11:
        $stack102 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack103 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1#2);

        $stack104 = $stack102[$stack103];

        $stack105 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack104);

        $stack106 = (short) $stack105;

        $stack107 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($stack106);

        virtualinvoke l4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(l3, $stack107);

        l1#2 = l1#2 + 2;

        goto label46;

     label12:
        $stack110 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack111 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1#2);

        $stack112 = $stack110[$stack111];

        $stack113 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack112);

        $stack114 = (char) $stack113;

        $stack115 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($stack114);

        virtualinvoke l4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(l3, $stack115);

        l1#2 = l1#2 + 2;

        goto label46;

     label13:
        $stack19 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l1#2, l2);

        virtualinvoke l4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(l3, $stack19);

        l1#2 = l1#2 + 2;

        goto label46;

     label14:
        $stack20 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l1#2, l2);

        $stack21 = l1#2 + 2;

        $stack22 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack21, l2);

        virtualinvoke l4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visitEnum(java.lang.String,java.lang.String,java.lang.String)>(l3, $stack20, $stack22);

        l1#2 = l1#2 + 4;

        goto label46;

     label15:
        $stack24 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l1#2, l2);

        $stack25 = staticinvoke <jdk.internal.org.objectweb.asm.Type: jdk.internal.org.objectweb.asm.Type getType(java.lang.String)>($stack24);

        virtualinvoke l4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(l3, $stack25);

        l1#2 = l1#2 + 2;

        goto label46;

     label16:
        $stack122 = l1#2 + 2;

        $stack124 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l1#2, l2);

        $stack125 = virtualinvoke l4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,java.lang.String)>(l3, $stack124);

        $stack126 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack122, l2, 1, $stack125);

        l1#2 = $stack126;

        goto label46;

     label17:
        $stack26 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1#2);

        l1#4 = l1#2 + 2;

        if $stack26 != 0 goto label18;

        $stack91 = l1#4 - 2;

        $stack93 = virtualinvoke l4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitArray(java.lang.String)>(l3);

        $stack94 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack91, l2, 0, $stack93);

        return $stack94;

     label18:
        $stack28 = l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        l1#5 = l1#4 + 1;

        $stack29 = $stack28[l1#4];

        $stack30 = $stack29 & 255;

        tableswitch($stack30)
        {
            case 66: goto label19;
            case 67: goto label30;
            case 68: goto label42;
            case 69: goto label45;
            case 70: goto label39;
            case 71: goto label45;
            case 72: goto label45;
            case 73: goto label33;
            case 74: goto label36;
            case 75: goto label45;
            case 76: goto label45;
            case 77: goto label45;
            case 78: goto label45;
            case 79: goto label45;
            case 80: goto label45;
            case 81: goto label45;
            case 82: goto label45;
            case 83: goto label27;
            case 84: goto label45;
            case 85: goto label45;
            case 86: goto label45;
            case 87: goto label45;
            case 88: goto label45;
            case 89: goto label45;
            case 90: goto label22;
            default: goto label45;
        };

     label19:
        l7 = newarray (byte)[$stack26];

        l5#6 = 0;

     label20:
        if l5#6 >= $stack26 goto label21;

        $stack80 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack81 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1#5);

        $stack82 = $stack80[$stack81];

        $stack83 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack82);

        $stack84 = (byte) $stack83;

        l7[l5#6] = $stack84;

        l1#5 = l1#5 + 3;

        l5#6 = l5#6 + 1;

        goto label20;

     label21:
        virtualinvoke l4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(l3, l7);

        l1#2 = l1#5 + -1;

        goto label46;

     label22:
        l8 = newarray (boolean)[$stack26];

        l5#7 = 0;

     label23:
        if l5#7 >= $stack26 goto label26;

        $stack38 = l5#7;

        $stack31 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack32 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1#5);

        $stack33 = $stack31[$stack32];

        $stack34 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack33);

        if $stack34 == 0 goto label24;

        $stack37#8 = 1;

        goto label25;

     label24:
        $stack37#8 = 0;

     label25:
        l8[$stack38] = $stack37#8;

        l1#5 = l1#5 + 3;

        l5#7 = l5#7 + 1;

        goto label23;

     label26:
        virtualinvoke l4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(l3, l8);

        l1#2 = l1#5 + -1;

        goto label46;

     label27:
        l9 = newarray (short)[$stack26];

        l5#9 = 0;

     label28:
        if l5#9 >= $stack26 goto label29;

        $stack40 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack41 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1#5);

        $stack42 = $stack40[$stack41];

        $stack43 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack42);

        $stack44 = (short) $stack43;

        l9[l5#9] = $stack44;

        l1#5 = l1#5 + 3;

        l5#9 = l5#9 + 1;

        goto label28;

     label29:
        virtualinvoke l4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(l3, l9);

        l1#2 = l1#5 + -1;

        goto label46;

     label30:
        l10 = newarray (char)[$stack26];

        l5#10 = 0;

     label31:
        if l5#10 >= $stack26 goto label32;

        $stack73 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack74 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1#5);

        $stack75 = $stack73[$stack74];

        $stack76 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack75);

        $stack77 = (char) $stack76;

        l10[l5#10] = $stack77;

        l1#5 = l1#5 + 3;

        l5#10 = l5#10 + 1;

        goto label31;

     label32:
        virtualinvoke l4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(l3, l10);

        l1#2 = l1#5 + -1;

        goto label46;

     label33:
        l11 = newarray (int)[$stack26];

        l5#11 = 0;

     label34:
        if l5#11 >= $stack26 goto label35;

        $stack53 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack54 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1#5);

        $stack55 = $stack53[$stack54];

        $stack56 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack55);

        l11[l5#11] = $stack56;

        l1#5 = l1#5 + 3;

        l5#11 = l5#11 + 1;

        goto label34;

     label35:
        virtualinvoke l4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(l3, l11);

        l1#2 = l1#5 + -1;

        goto label46;

     label36:
        l12 = newarray (long)[$stack26];

        l5#12 = 0;

     label37:
        if l5#12 >= $stack26 goto label38;

        $stack47 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack48 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1#5);

        $stack49 = $stack47[$stack48];

        $stack50 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: long readLong(int)>($stack49);

        l12[l5#12] = $stack50;

        l1#5 = l1#5 + 3;

        l5#12 = l5#12 + 1;

        goto label37;

     label38:
        virtualinvoke l4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(l3, l12);

        l1#2 = l1#5 + -1;

        goto label46;

     label39:
        l13 = newarray (float)[$stack26];

        l5#13 = 0;

     label40:
        if l5#13 >= $stack26 goto label41;

        $stack59 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack60 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1#5);

        $stack61 = $stack59[$stack60];

        $stack62 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack61);

        $stack63 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($stack62);

        l13[l5#13] = $stack63;

        l1#5 = l1#5 + 3;

        l5#13 = l5#13 + 1;

        goto label40;

     label41:
        virtualinvoke l4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(l3, l13);

        l1#2 = l1#5 + -1;

        goto label46;

     label42:
        l14 = newarray (double)[$stack26];

        l5#14 = 0;

     label43:
        if l5#14 >= $stack26 goto label44;

        $stack66 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack67 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1#5);

        $stack68 = $stack66[$stack67];

        $stack69 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: long readLong(int)>($stack68);

        $stack70 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($stack69);

        l14[l5#14] = $stack70;

        l1#5 = l1#5 + 3;

        l5#14 = l5#14 + 1;

        goto label43;

     label44:
        virtualinvoke l4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(l3, l14);

        l1#2 = l1#5 + -1;

        goto label46;

     label45:
        $stack87 = l1#5 - 3;

        $stack89 = virtualinvoke l4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitArray(java.lang.String)>(l3);

        $stack90 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack87, l2, 0, $stack89);

        l1#2 = $stack90;

     label46:
        return l1#2;
    }

    private void getImplicitFrame(jdk.internal.org.objectweb.asm.Context)
    {
        jdk.internal.org.objectweb.asm.Context l1;
        java.lang.String l2, $stack14, $stack32, $stack44, $stack45, $stack51;
        java.lang.Object[] l3;
        int $stack7, $stack8, l6, $stack13, $stack29, $stack30, $stack31, $stack36, $stack38, $stack40, $stack42, $stack48, $stack50, l4#1, l5#4, $stack9#13;
        char $stack11, $stack12, $stack17, $stack28, $stack10#14;
        java.lang.Integer $stack37, $stack39, $stack41, $stack43, $stack54;
        boolean $stack46;
        jdk.internal.org.objectweb.asm.ClassReader l0;
        char[] $stack49;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.Context;

        l2 = l1.<jdk.internal.org.objectweb.asm.Context: java.lang.String desc>;

        l3 = l1.<jdk.internal.org.objectweb.asm.Context: java.lang.Object[] local>;

        l4#1 = 0;

        $stack7 = l1.<jdk.internal.org.objectweb.asm.Context: int access>;

        $stack8 = $stack7 & 8;

        if $stack8 != 0 goto label02;

        $stack45 = "<init>";

        $stack44 = l1.<jdk.internal.org.objectweb.asm.Context: java.lang.String name>;

        $stack46 = virtualinvoke $stack45.<java.lang.String: boolean equals(java.lang.Object)>($stack44);

        if $stack46 == 0 goto label01;

        l4#1 = 0 + 1;

        $stack54 = <jdk.internal.org.objectweb.asm.Opcodes: java.lang.Integer UNINITIALIZED_THIS>;

        l3[0] = $stack54;

        goto label02;

     label01:
        l4#1 = 0 + 1;

        $stack48 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int header>;

        $stack50 = $stack48 + 2;

        $stack49 = l1.<jdk.internal.org.objectweb.asm.Context: char[] buffer>;

        $stack51 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>($stack50, $stack49);

        l3[0] = $stack51;

     label02:
        l5#4 = 1;

     label03:
        l6 = l5#4;

        $stack9#13 = l5#4;

        l5#4 = l5#4 + 1;

        $stack10#14 = virtualinvoke l2.<java.lang.String: char charAt(int)>($stack9#13);

        tableswitch($stack10#14)
        {
            case 66: goto label04;
            case 67: goto label04;
            case 68: goto label07;
            case 69: goto label14;
            case 70: goto label05;
            case 71: goto label14;
            case 72: goto label14;
            case 73: goto label04;
            case 74: goto label06;
            case 75: goto label14;
            case 76: goto label12;
            case 77: goto label14;
            case 78: goto label14;
            case 79: goto label14;
            case 80: goto label14;
            case 81: goto label14;
            case 82: goto label14;
            case 83: goto label04;
            case 84: goto label14;
            case 85: goto label14;
            case 86: goto label14;
            case 87: goto label14;
            case 88: goto label14;
            case 89: goto label14;
            case 90: goto label04;
            case 91: goto label08;
            default: goto label14;
        };

     label04:
        $stack42 = l4#1;

        l4#1 = l4#1 + 1;

        $stack43 = <jdk.internal.org.objectweb.asm.Opcodes: java.lang.Integer INTEGER>;

        l3[$stack42] = $stack43;

        goto label15;

     label05:
        $stack38 = l4#1;

        l4#1 = l4#1 + 1;

        $stack39 = <jdk.internal.org.objectweb.asm.Opcodes: java.lang.Integer FLOAT>;

        l3[$stack38] = $stack39;

        goto label15;

     label06:
        $stack36 = l4#1;

        l4#1 = l4#1 + 1;

        $stack37 = <jdk.internal.org.objectweb.asm.Opcodes: java.lang.Integer LONG>;

        l3[$stack36] = $stack37;

        goto label15;

     label07:
        $stack40 = l4#1;

        l4#1 = l4#1 + 1;

        $stack41 = <jdk.internal.org.objectweb.asm.Opcodes: java.lang.Integer DOUBLE>;

        l3[$stack40] = $stack41;

        goto label15;

     label08:
        $stack11 = virtualinvoke l2.<java.lang.String: char charAt(int)>(l5#4);

        if $stack11 != 91 goto label09;

        l5#4 = l5#4 + 1;

        goto label08;

     label09:
        $stack12 = virtualinvoke l2.<java.lang.String: char charAt(int)>(l5#4);

        if $stack12 != 76 goto label11;

        l5#4 = l5#4 + 1;

     label10:
        $stack17 = virtualinvoke l2.<java.lang.String: char charAt(int)>(l5#4);

        if $stack17 == 59 goto label11;

        l5#4 = l5#4 + 1;

        goto label10;

     label11:
        $stack13 = l4#1;

        l4#1 = l4#1 + 1;

        l5#4 = l5#4 + 1;

        $stack14 = virtualinvoke l2.<java.lang.String: java.lang.String substring(int,int)>(l6, l5#4);

        l3[$stack13] = $stack14;

        goto label15;

     label12:
        $stack28 = virtualinvoke l2.<java.lang.String: char charAt(int)>(l5#4);

        if $stack28 == 59 goto label13;

        l5#4 = l5#4 + 1;

        goto label12;

     label13:
        $stack29 = l4#1;

        l4#1 = l4#1 + 1;

        $stack31 = l6 + 1;

        $stack30 = l5#4;

        l5#4 = l5#4 + 1;

        $stack32 = virtualinvoke l2.<java.lang.String: java.lang.String substring(int,int)>($stack31, $stack30);

        l3[$stack29] = $stack32;

        goto label15;

     label14:
        goto label16;

     label15:
        goto label03;

     label16:
        l1.<jdk.internal.org.objectweb.asm.Context: int localCount> = l4#1;

        return;
    }

    private int readFrame(int, boolean, boolean, jdk.internal.org.objectweb.asm.Context)
    {
        jdk.internal.org.objectweb.asm.Context l4;
        char[] l5;
        jdk.internal.org.objectweb.asm.Label[] l6;
        boolean l2, l3;
        jdk.internal.org.objectweb.asm.ClassReader l0;
        int $stack11, $stack12, $stack13, $stack19, $stack21, $stack23, $stack25, $stack27, $stack28, $stack29, $stack30, $stack38, $stack40, $stack45, $stack48, $stack49, $stack50, $stack51, $stack53, $stack55, $stack56, l1#1, l7#2, l8#3, $stack42#4, l9#5, l10#6, l9#9, l1#10, l10#11, l9#12, l10#13, $stack15#25, $stack14#43, $stack16#49, $stack17#67;
        java.lang.Object[] $stack20, $stack24, $stack39, $stack52, $stack54;
        byte[] $stack57;
        byte $stack58;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1#1 := @parameter0: int;

        l2 := @parameter1: boolean;

        l3 := @parameter2: boolean;

        l4 := @parameter3: jdk.internal.org.objectweb.asm.Context;

        l5 = l4.<jdk.internal.org.objectweb.asm.Context: char[] buffer>;

        l6 = l4.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] labels>;

        if l2 == 0 goto label01;

        $stack57 = l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack56 = l1#1;

        l1#1 = l1#1 + 1;

        $stack58 = $stack57[$stack56];

        l7#2 = $stack58 & 255;

        goto label02;

     label01:
        l7#2 = 255;

        l4.<jdk.internal.org.objectweb.asm.Context: int offset> = -1;

     label02:
        l4.<jdk.internal.org.objectweb.asm.Context: int localDiff> = 0;

        if l7#2 >= 64 goto label03;

        l8#3 = l7#2;

        l4.<jdk.internal.org.objectweb.asm.Context: int mode> = 3;

        l4.<jdk.internal.org.objectweb.asm.Context: int stackCount> = 0;

        goto label16;

     label03:
        if l7#2 >= 128 goto label04;

        l8#3 = l7#2 - 64;

        $stack54 = l4.<jdk.internal.org.objectweb.asm.Context: java.lang.Object[] stack>;

        $stack55 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readFrameType(java.lang.Object[],int,int,char[],jdk.internal.org.objectweb.asm.Label[])>($stack54, 0, l1#1, l5, l6);

        l1#1 = $stack55;

        l4.<jdk.internal.org.objectweb.asm.Context: int mode> = 4;

        l4.<jdk.internal.org.objectweb.asm.Context: int stackCount> = 1;

        goto label16;

     label04:
        $stack11 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1#1);

        l8#3 = $stack11;

        l1#1 = l1#1 + 2;

        if l7#2 != 247 goto label05;

        $stack52 = l4.<jdk.internal.org.objectweb.asm.Context: java.lang.Object[] stack>;

        $stack53 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readFrameType(java.lang.Object[],int,int,char[],jdk.internal.org.objectweb.asm.Label[])>($stack52, 0, l1#1, l5, l6);

        l1#1 = $stack53;

        l4.<jdk.internal.org.objectweb.asm.Context: int mode> = 4;

        l4.<jdk.internal.org.objectweb.asm.Context: int stackCount> = 1;

        goto label16;

     label05:
        if l7#2 < 248 goto label06;

        if l7#2 >= 251 goto label06;

        l4.<jdk.internal.org.objectweb.asm.Context: int mode> = 2;

        $stack48 = 251 - l7#2;

        l4.<jdk.internal.org.objectweb.asm.Context: int localDiff> = $stack48;

        $stack50 = l4.<jdk.internal.org.objectweb.asm.Context: int localCount>;

        $stack49 = l4.<jdk.internal.org.objectweb.asm.Context: int localDiff>;

        $stack51 = $stack50 - $stack49;

        l4.<jdk.internal.org.objectweb.asm.Context: int localCount> = $stack51;

        l4.<jdk.internal.org.objectweb.asm.Context: int stackCount> = 0;

        goto label16;

     label06:
        if l7#2 != 251 goto label07;

        l4.<jdk.internal.org.objectweb.asm.Context: int mode> = 3;

        l4.<jdk.internal.org.objectweb.asm.Context: int stackCount> = 0;

        goto label16;

     label07:
        if l7#2 >= 255 goto label12;

        if l3 == 0 goto label08;

        $stack42#4 = l4.<jdk.internal.org.objectweb.asm.Context: int localCount>;

        goto label09;

     label08:
        $stack42#4 = 0;

     label09:
        l9#5 = $stack42#4;

        $stack45 = l7#2 - 251;

        l10#6 = $stack45;

     label10:
        if l10#6 <= 0 goto label11;

        $stack39 = l4.<jdk.internal.org.objectweb.asm.Context: java.lang.Object[] local>;

        $stack38 = l9#5;

        l9#5 = l9#5 + 1;

        $stack40 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readFrameType(java.lang.Object[],int,int,char[],jdk.internal.org.objectweb.asm.Label[])>($stack39, $stack38, l1#1, l5, l6);

        l1#1 = $stack40;

        l10#6 = l10#6 + -1;

        goto label10;

     label11:
        l4.<jdk.internal.org.objectweb.asm.Context: int mode> = 1;

        $stack27 = l7#2 - 251;

        l4.<jdk.internal.org.objectweb.asm.Context: int localDiff> = $stack27;

        $stack29 = l4.<jdk.internal.org.objectweb.asm.Context: int localCount>;

        $stack28 = l4.<jdk.internal.org.objectweb.asm.Context: int localDiff>;

        $stack30 = $stack29 + $stack28;

        l4.<jdk.internal.org.objectweb.asm.Context: int localCount> = $stack30;

        l4.<jdk.internal.org.objectweb.asm.Context: int stackCount> = 0;

        goto label16;

     label12:
        l4.<jdk.internal.org.objectweb.asm.Context: int mode> = 0;

        $stack12 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1#1);

        l9#9 = $stack12;

        l1#10 = l1#1 + 2;

        l4.<jdk.internal.org.objectweb.asm.Context: int localDiff> = $stack12;

        l4.<jdk.internal.org.objectweb.asm.Context: int localCount> = $stack12;

        l10#11 = 0;

     label13:
        if l9#9 <= 0 goto label14;

        $stack24 = l4.<jdk.internal.org.objectweb.asm.Context: java.lang.Object[] local>;

        $stack23 = l10#11;

        l10#11 = l10#11 + 1;

        $stack25 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readFrameType(java.lang.Object[],int,int,char[],jdk.internal.org.objectweb.asm.Label[])>($stack24, $stack23, l1#10, l5, l6);

        l1#10 = $stack25;

        l9#9 = l9#9 + -1;

        goto label13;

     label14:
        $stack13 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1#10);

        l9#12 = $stack13;

        l1#1 = l1#10 + 2;

        l4.<jdk.internal.org.objectweb.asm.Context: int stackCount> = $stack13;

        l10#13 = 0;

     label15:
        if l9#12 <= 0 goto label16;

        $stack20 = l4.<jdk.internal.org.objectweb.asm.Context: java.lang.Object[] stack>;

        $stack19 = l10#13;

        l10#13 = l10#13 + 1;

        $stack21 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readFrameType(java.lang.Object[],int,int,char[],jdk.internal.org.objectweb.asm.Label[])>($stack20, $stack19, l1#1, l5, l6);

        l1#1 = $stack21;

        l9#12 = l9#12 + -1;

        goto label15;

     label16:
        $stack15#25 = l4.<jdk.internal.org.objectweb.asm.Context: int offset>;

        $stack14#43 = l8#3 + 1;

        $stack16#49 = $stack15#25 + $stack14#43;

        l4.<jdk.internal.org.objectweb.asm.Context: int offset> = $stack16#49;

        $stack17#67 = l4.<jdk.internal.org.objectweb.asm.Context: int offset>;

        virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack17#67, l6);

        return l1#1;
    }

    private int readFrameType(java.lang.Object[], int, int, char[], jdk.internal.org.objectweb.asm.Label[])
    {
        jdk.internal.org.objectweb.asm.ClassReader l0;
        byte[] $stack8;
        byte $stack9;
        int l6, l2, $stack19, l3#1, l3#2;
        java.lang.Object[] l1;
        char[] l4;
        java.lang.String $stack10;
        java.lang.Integer $stack11, $stack13, $stack14, $stack15, $stack16, $stack17, $stack18;
        jdk.internal.org.objectweb.asm.Label[] l5;
        jdk.internal.org.objectweb.asm.Label $stack20;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: java.lang.Object[];

        l2 := @parameter1: int;

        l3#1 := @parameter2: int;

        l4 := @parameter3: char[];

        l5 := @parameter4: jdk.internal.org.objectweb.asm.Label[];

        $stack8 = l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        l3#2 = l3#1 + 1;

        $stack9 = $stack8[l3#1];

        l6 = $stack9 & 255;

        tableswitch(l6)
        {
            case 0: goto label01;
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label07;
            case 7: goto label08;
            default: goto label09;
        };

     label01:
        $stack18 = <jdk.internal.org.objectweb.asm.Opcodes: java.lang.Integer TOP>;

        l1[l2] = $stack18;

        goto label10;

     label02:
        $stack17 = <jdk.internal.org.objectweb.asm.Opcodes: java.lang.Integer INTEGER>;

        l1[l2] = $stack17;

        goto label10;

     label03:
        $stack16 = <jdk.internal.org.objectweb.asm.Opcodes: java.lang.Integer FLOAT>;

        l1[l2] = $stack16;

        goto label10;

     label04:
        $stack15 = <jdk.internal.org.objectweb.asm.Opcodes: java.lang.Integer DOUBLE>;

        l1[l2] = $stack15;

        goto label10;

     label05:
        $stack14 = <jdk.internal.org.objectweb.asm.Opcodes: java.lang.Integer LONG>;

        l1[l2] = $stack14;

        goto label10;

     label06:
        $stack13 = <jdk.internal.org.objectweb.asm.Opcodes: java.lang.Integer NULL>;

        l1[l2] = $stack13;

        goto label10;

     label07:
        $stack11 = <jdk.internal.org.objectweb.asm.Opcodes: java.lang.Integer UNINITIALIZED_THIS>;

        l1[l2] = $stack11;

        goto label10;

     label08:
        $stack10 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>(l3#2, l4);

        l1[l2] = $stack10;

        l3#2 = l3#2 + 2;

        goto label10;

     label09:
        $stack19 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l3#2);

        $stack20 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack19, l5);

        l1[l2] = $stack20;

        l3#2 = l3#2 + 2;

     label10:
        return l3#2;
    }

    protected jdk.internal.org.objectweb.asm.Label readLabel(int, jdk.internal.org.objectweb.asm.Label[])
    {
        jdk.internal.org.objectweb.asm.Label[] l2;
        int l1;
        jdk.internal.org.objectweb.asm.Label $stack3, $stack4, $stack5;
        jdk.internal.org.objectweb.asm.ClassReader l0;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: int;

        l2 := @parameter1: jdk.internal.org.objectweb.asm.Label[];

        $stack3 = l2[l1];

        if $stack3 != null goto label1;

        $stack5 = new jdk.internal.org.objectweb.asm.Label;

        specialinvoke $stack5.<jdk.internal.org.objectweb.asm.Label: void <init>()>();

        l2[l1] = $stack5;

     label1:
        $stack4 = l2[l1];

        return $stack4;
    }

    private int getAttributes()
    {
        jdk.internal.org.objectweb.asm.ClassReader l0;
        int $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $stack12, $stack13, $stack14, $stack16, $stack18, $stack19, $stack21, $stack22, $stack24, $stack26, $stack27, l1#1, l2#2, l3#3, l1#4, l2#5, l3#6;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        $stack4 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int header>;

        $stack7 = $stack4 + 8;

        $stack5 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int header>;

        $stack6 = $stack5 + 6;

        $stack8 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack6);

        $stack9 = $stack8 * 2;

        l1#1 = $stack7 + $stack9;

        $stack10 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1#1);

        l2#2 = $stack10;

     label1:
        if l2#2 <= 0 goto label4;

        $stack21 = l1#1 + 8;

        $stack22 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack21);

        l3#3 = $stack22;

     label2:
        if l3#3 <= 0 goto label3;

        $stack24 = l1#1 + 12;

        $stack26 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack24);

        $stack27 = 6 + $stack26;

        l1#1 = l1#1 + $stack27;

        l3#3 = l3#3 + -1;

        goto label2;

     label3:
        l1#1 = l1#1 + 8;

        l2#2 = l2#2 + -1;

        goto label1;

     label4:
        l1#4 = l1#1 + 2;

        $stack11 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1#4);

        l2#5 = $stack11;

     label5:
        if l2#5 <= 0 goto label8;

        $stack13 = l1#4 + 8;

        $stack14 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack13);

        l3#6 = $stack14;

     label6:
        if l3#6 <= 0 goto label7;

        $stack16 = l1#4 + 12;

        $stack18 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack16);

        $stack19 = 6 + $stack18;

        l1#4 = l1#4 + $stack19;

        l3#6 = l3#6 + -1;

        goto label6;

     label7:
        l1#4 = l1#4 + 8;

        l2#5 = l2#5 + -1;

        goto label5;

     label8:
        $stack12 = l1#4 + 2;

        return $stack12;
    }

    private jdk.internal.org.objectweb.asm.Attribute readAttribute(jdk.internal.org.objectweb.asm.Attribute[], java.lang.String, int, int, char[], int, jdk.internal.org.objectweb.asm.Label[])
    {
        jdk.internal.org.objectweb.asm.Attribute[] l1;
        int $stack9, l3, l4, l6, l8#1;
        jdk.internal.org.objectweb.asm.Attribute $stack10, $stack11, $stack12, $stack17, $stack18;
        java.lang.String l2, $stack13;
        jdk.internal.org.objectweb.asm.ClassReader l0;
        boolean $stack14;
        char[] l5;
        jdk.internal.org.objectweb.asm.Label[] l7;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.Attribute[];

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: int;

        l4 := @parameter3: int;

        l5 := @parameter4: char[];

        l6 := @parameter5: int;

        l7 := @parameter6: jdk.internal.org.objectweb.asm.Label[];

        l8#1 = 0;

     label1:
        $stack9 = lengthof l1;

        if l8#1 >= $stack9 goto label3;

        $stack12 = l1[l8#1];

        $stack13 = $stack12.<jdk.internal.org.objectweb.asm.Attribute: java.lang.String type>;

        $stack14 = virtualinvoke $stack13.<java.lang.String: boolean equals(java.lang.Object)>(l2);

        if $stack14 == 0 goto label2;

        $stack17 = l1[l8#1];

        $stack18 = virtualinvoke $stack17.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute read(jdk.internal.org.objectweb.asm.ClassReader,int,int,char[],int,jdk.internal.org.objectweb.asm.Label[])>(l0, l3, l4, l5, l6, l7);

        return $stack18;

     label2:
        l8#1 = l8#1 + 1;

        goto label1;

     label3:
        $stack10 = new jdk.internal.org.objectweb.asm.Attribute;

        specialinvoke $stack10.<jdk.internal.org.objectweb.asm.Attribute: void <init>(java.lang.String)>(l2);

        $stack11 = virtualinvoke $stack10.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute read(jdk.internal.org.objectweb.asm.ClassReader,int,int,char[],int,jdk.internal.org.objectweb.asm.Label[])>(l0, l3, l4, null, -1, null);

        return $stack11;
    }

    public int getItemCount()
    {
        jdk.internal.org.objectweb.asm.ClassReader l0;
        int[] $stack1;
        int $stack2;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        $stack1 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack2 = lengthof $stack1;

        return $stack2;
    }

    public int getItem(int)
    {
        jdk.internal.org.objectweb.asm.ClassReader l0;
        int l1, $stack3;
        int[] $stack2;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: int;

        $stack2 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack3 = $stack2[l1];

        return $stack3;
    }

    public int getMaxStringLength()
    {
        jdk.internal.org.objectweb.asm.ClassReader l0;
        int $stack1;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        $stack1 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int maxStringLength>;

        return $stack1;
    }

    public int readByte(int)
    {
        jdk.internal.org.objectweb.asm.ClassReader l0;
        int l1, $stack4;
        byte[] $stack2;
        byte $stack3;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: int;

        $stack2 = l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack3 = $stack2[l1];

        $stack4 = $stack3 & 255;

        return $stack4;
    }

    public int readUnsignedShort(int)
    {
        jdk.internal.org.objectweb.asm.ClassReader l0;
        byte[] l2;
        int l1, $stack4, $stack5, $stack7, $stack8, $stack9;
        byte $stack3, $stack6;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: int;

        l2 = l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack3 = l2[l1];

        $stack4 = $stack3 & 255;

        $stack8 = $stack4 << 8;

        $stack5 = l1 + 1;

        $stack6 = l2[$stack5];

        $stack7 = $stack6 & 255;

        $stack9 = $stack8 | $stack7;

        return $stack9;
    }

    public short readShort(int)
    {
        jdk.internal.org.objectweb.asm.ClassReader l0;
        byte[] l2;
        int l1, $stack4, $stack5, $stack7, $stack8, $stack9;
        byte $stack3, $stack6;
        short $stack10;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: int;

        l2 = l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack3 = l2[l1];

        $stack4 = $stack3 & 255;

        $stack8 = $stack4 << 8;

        $stack5 = l1 + 1;

        $stack6 = l2[$stack5];

        $stack7 = $stack6 & 255;

        $stack9 = $stack8 | $stack7;

        $stack10 = (short) $stack9;

        return $stack10;
    }

    public int readInt(int)
    {
        jdk.internal.org.objectweb.asm.ClassReader l0;
        byte[] l2;
        int l1, $stack4, $stack5, $stack7, $stack8, $stack9, $stack10, $stack12, $stack13, $stack14, $stack15, $stack17, $stack18, $stack19;
        byte $stack3, $stack6, $stack11, $stack16;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: int;

        l2 = l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack3 = l2[l1];

        $stack4 = $stack3 & 255;

        $stack9 = $stack4 << 24;

        $stack5 = l1 + 1;

        $stack6 = l2[$stack5];

        $stack7 = $stack6 & 255;

        $stack8 = $stack7 << 16;

        $stack14 = $stack9 | $stack8;

        $stack10 = l1 + 2;

        $stack11 = l2[$stack10];

        $stack12 = $stack11 & 255;

        $stack13 = $stack12 << 8;

        $stack18 = $stack14 | $stack13;

        $stack15 = l1 + 3;

        $stack16 = l2[$stack15];

        $stack17 = $stack16 & 255;

        $stack19 = $stack18 | $stack17;

        return $stack19;
    }

    public long readLong(int)
    {
        jdk.internal.org.objectweb.asm.ClassReader l0;
        int l1, $stack6, $stack7, $stack8;
        long l2, $stack9, l4, $stack10, $stack11;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: int;

        $stack6 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>(l1);

        l2 = (long) $stack6;

        $stack7 = l1 + 4;

        $stack8 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack7);

        $stack9 = (long) $stack8;

        l4 = $stack9 & 4294967295L;

        $stack10 = l2 << 32;

        $stack11 = $stack10 | l4;

        return $stack11;
    }

    public java.lang.String readUTF8(int, char[])
    {
        jdk.internal.org.objectweb.asm.ClassReader l0;
        int $stack5, $stack9, $stack10, l1#1, l1#2;
        java.lang.String[] $stack6, $stack8;
        java.lang.String l4, $stack11;
        int[] $stack7;
        char[] l2;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1#1 := @parameter0: int;

        l2 := @parameter1: char[];

        $stack5 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1#1);

        if l1#1 == 0 goto label1;

        if $stack5 != 0 goto label2;

     label1:
        return null;

     label2:
        $stack6 = l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String[] strings>;

        l4 = $stack6[$stack5];

        if l4 == null goto label3;

        return l4;

     label3:
        $stack7 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        l1#2 = $stack7[$stack5];

        $stack8 = l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String[] strings>;

        $stack9 = l1#2 + 2;

        $stack10 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1#2);

        $stack11 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF(int,int,char[])>($stack9, $stack10, l2);

        $stack8[$stack5] = $stack11;

        return $stack11;
    }

    private java.lang.String readUTF(int, int, char[])
    {
        int l2, l4, $stack11, $stack12, $stack13, $stack14, $stack17, $stack18, $stack19, $stack20, $stack22, $stack27, $stack28, l1#1, l6#2, l7#6;
        jdk.internal.org.objectweb.asm.ClassReader l0;
        byte[] l5;
        java.lang.String $stack10;
        char[] l3;
        char $stack21, $stack25, $stack29, l9#4;
        byte l8#3, l7#5;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1#1 := @parameter0: int;

        l2 := @parameter1: int;

        l3 := @parameter2: char[];

        l4 = l1#1 + l2;

        l5 = l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        l6#2 = 0;

        l8#3 = 0;

        l9#4 = 0;

     label1:
        if l1#1 >= l4 goto label8;

        $stack11 = l1#1;

        l1#1 = l1#1 + 1;

        l7#5 = l5[$stack11];

        tableswitch(l8#3)
        {
            case 0: goto label2;
            case 1: goto label5;
            case 2: goto label6;
            default: goto label7;
        };

     label2:
        l7#6 = l7#5 & 255;

        if l7#6 >= 128 goto label3;

        $stack28 = l6#2;

        l6#2 = l6#2 + 1;

        $stack29 = (char) l7#6;

        l3[$stack28] = $stack29;

        goto label7;

     label3:
        if l7#6 >= 224 goto label4;

        if l7#6 <= 191 goto label4;

        $stack27 = l7#6 & 31;

        l9#4 = (char) $stack27;

        l8#3 = 1;

        goto label7;

     label4:
        $stack22 = l7#6 & 15;

        $stack25 = (char) $stack22;

        l9#4 = $stack25;

        l8#3 = 2;

        goto label7;

     label5:
        $stack17 = l6#2;

        l6#2 = l6#2 + 1;

        $stack19 = l9#4 << 6;

        $stack18 = l7#5 & 63;

        $stack20 = $stack19 | $stack18;

        $stack21 = (char) $stack20;

        l3[$stack17] = $stack21;

        l8#3 = 0;

        goto label7;

     label6:
        $stack13 = l9#4 << 6;

        $stack12 = l7#5 & 63;

        $stack14 = $stack13 | $stack12;

        l9#4 = (char) $stack14;

        l8#3 = 1;

     label7:
        goto label1;

     label8:
        $stack10 = new java.lang.String;

        specialinvoke $stack10.<java.lang.String: void <init>(char[],int,int)>(l3, 0, l6#2);

        return $stack10;
    }

    public java.lang.String readClass(int, char[])
    {
        jdk.internal.org.objectweb.asm.ClassReader l0;
        int l1, $stack4, $stack5;
        int[] $stack3;
        char[] l2;
        java.lang.String $stack6;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: int;

        l2 := @parameter1: char[];

        $stack3 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack4 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1);

        $stack5 = $stack3[$stack4];

        $stack6 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack5, l2);

        return $stack6;
    }

    public java.lang.Object readConst(int, char[])
    {
        jdk.internal.org.objectweb.asm.ClassReader l0;
        int l1, l3, $stack11, $stack24, $stack27, $stack29, $stack30, $stack31, $stack33, $stack34, $stack36, l6#1, l6#2;
        int[] $stack10, l5;
        byte[] $stack12;
        byte $stack13;
        char[] l2;
        java.lang.String $stack14, $stack16, $stack17, $stack32, $stack35, $stack37;
        jdk.internal.org.objectweb.asm.Type $stack15, $stack18;
        long $stack19, $stack22;
        double $stack20;
        java.lang.Double $stack21;
        java.lang.Long $stack23;
        float $stack25;
        java.lang.Float $stack26;
        java.lang.Integer $stack28;
        jdk.internal.org.objectweb.asm.Handle $stack38;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: int;

        l2 := @parameter1: char[];

        $stack10 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        l3 = $stack10[l1];

        $stack12 = l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack11 = l3 - 1;

        $stack13 = $stack12[$stack11];

        tableswitch($stack13)
        {
            case 3: goto label1;
            case 4: goto label2;
            case 5: goto label3;
            case 6: goto label4;
            case 7: goto label5;
            case 8: goto label6;
            case 9: goto label8;
            case 10: goto label8;
            case 11: goto label8;
            case 12: goto label8;
            case 13: goto label8;
            case 14: goto label8;
            case 15: goto label8;
            case 16: goto label7;
            default: goto label8;
        };

     label1:
        $stack27 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>(l3);

        $stack28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack27);

        return $stack28;

     label2:
        $stack24 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>(l3);

        $stack25 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($stack24);

        $stack26 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($stack25);

        return $stack26;

     label3:
        $stack22 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: long readLong(int)>(l3);

        $stack23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack22);

        return $stack23;

     label4:
        $stack19 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: long readLong(int)>(l3);

        $stack20 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($stack19);

        $stack21 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($stack20);

        return $stack21;

     label5:
        $stack17 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l3, l2);

        $stack18 = staticinvoke <jdk.internal.org.objectweb.asm.Type: jdk.internal.org.objectweb.asm.Type getObjectType(java.lang.String)>($stack17);

        return $stack18;

     label6:
        $stack16 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l3, l2);

        return $stack16;

     label7:
        $stack14 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l3, l2);

        $stack15 = staticinvoke <jdk.internal.org.objectweb.asm.Type: jdk.internal.org.objectweb.asm.Type getMethodType(java.lang.String)>($stack14);

        return $stack15;

     label8:
        $stack29 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readByte(int)>(l3);

        l5 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack30 = l3 + 1;

        $stack31 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack30);

        l6#1 = l5[$stack31];

        $stack32 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>(l6#1, l2);

        $stack33 = l6#1 + 2;

        $stack34 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack33);

        l6#2 = l5[$stack34];

        $stack35 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l6#2, l2);

        $stack36 = l6#2 + 2;

        $stack37 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack36, l2);

        $stack38 = new jdk.internal.org.objectweb.asm.Handle;

        specialinvoke $stack38.<jdk.internal.org.objectweb.asm.Handle: void <init>(int,java.lang.String,java.lang.String,java.lang.String)>($stack29, $stack32, $stack35, $stack37);

        return $stack38;
    }

    public static void <clinit>()
    {
        <jdk.internal.org.objectweb.asm.ClassReader: int EXPAND_FRAMES> = 8;

        <jdk.internal.org.objectweb.asm.ClassReader: int SKIP_FRAMES> = 4;

        <jdk.internal.org.objectweb.asm.ClassReader: int SKIP_DEBUG> = 2;

        <jdk.internal.org.objectweb.asm.ClassReader: int SKIP_CODE> = 1;

        <jdk.internal.org.objectweb.asm.ClassReader: boolean RESIZE> = 1;

        <jdk.internal.org.objectweb.asm.ClassReader: boolean WRITER> = 1;

        <jdk.internal.org.objectweb.asm.ClassReader: boolean FRAMES> = 1;

        <jdk.internal.org.objectweb.asm.ClassReader: boolean ANNOTATIONS> = 1;

        <jdk.internal.org.objectweb.asm.ClassReader: boolean SIGNATURES> = 1;

        return;
    }
}
