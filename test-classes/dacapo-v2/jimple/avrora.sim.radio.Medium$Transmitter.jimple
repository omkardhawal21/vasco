public abstract class avrora.sim.radio.Medium$Transmitter extends avrora.sim.radio.Medium$TXRX
{
    protected avrora.sim.radio.Medium$Transmission transmission;
    protected final avrora.sim.radio.Medium$Transmitter$Ticker ticker;
    protected boolean shutdown;

    protected void <init>(avrora.sim.radio.Medium, avrora.sim.clock.Clock)
    {
        avrora.sim.radio.Medium$Transmitter r0;
        avrora.sim.radio.Medium r1;
        avrora.sim.clock.Clock r2;
        avrora.sim.radio.Medium$Transmitter$Ticker $r3;

        r0 := @this: avrora.sim.radio.Medium$Transmitter;

        r1 := @parameter0: avrora.sim.radio.Medium;

        r2 := @parameter1: avrora.sim.clock.Clock;

        specialinvoke r0.<avrora.sim.radio.Medium$TXRX: void <init>(avrora.sim.radio.Medium,avrora.sim.clock.Clock)>(r1, r2);

        $r3 = new avrora.sim.radio.Medium$Transmitter$Ticker;

        specialinvoke $r3.<avrora.sim.radio.Medium$Transmitter$Ticker: void <init>(avrora.sim.radio.Medium$Transmitter)>(r0);

        r0.<avrora.sim.radio.Medium$Transmitter: avrora.sim.radio.Medium$Transmitter$Ticker ticker> = $r3;

        return;
    }

    public final void beginTransmit(double, double)
    {
        avrora.sim.radio.Medium$Transmitter r0;
        boolean $z0;
        double d0, d1;
        avrora.sim.radio.Medium $r1;
        avrora.sim.radio.Medium$Transmission $r2;
        long $l0;
        avrora.sim.radio.Medium$Transmitter$Ticker $r3;
        avrora.sim.clock.Clock $r4;

        r0 := @this: avrora.sim.radio.Medium$Transmitter;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $z0 = r0.<avrora.sim.radio.Medium$Transmitter: boolean activated>;

        if $z0 != 0 goto label1;

        $r1 = r0.<avrora.sim.radio.Medium$Transmitter: avrora.sim.radio.Medium medium>;

        $r2 = virtualinvoke $r1.<avrora.sim.radio.Medium: avrora.sim.radio.Medium$Transmission newTransmission(avrora.sim.radio.Medium$Transmitter,double,double)>(r0, d0, d1);

        r0.<avrora.sim.radio.Medium$Transmitter: avrora.sim.radio.Medium$Transmission transmission> = $r2;

        r0.<avrora.sim.radio.Medium$Transmitter: boolean activated> = 1;

        $r4 = r0.<avrora.sim.radio.Medium$Transmitter: avrora.sim.clock.Clock clock>;

        $r3 = r0.<avrora.sim.radio.Medium$Transmitter: avrora.sim.radio.Medium$Transmitter$Ticker ticker>;

        $l0 = r0.<avrora.sim.radio.Medium$Transmitter: long leadCycles>;

        virtualinvoke $r4.<avrora.sim.clock.Clock: void insertEvent(avrora.sim.Simulator$Event,long)>($r3, $l0);

     label1:
        return;
    }

    public final void endTransmit()
    {
        avrora.sim.radio.Medium$Transmitter r0;
        boolean $z0;
        avrora.sim.radio.Medium$Transmission $r1;

        r0 := @this: avrora.sim.radio.Medium$Transmitter;

        $z0 = r0.<avrora.sim.radio.Medium$Transmitter: boolean activated>;

        if $z0 == 0 goto label1;

        r0.<avrora.sim.radio.Medium$Transmitter: boolean shutdown> = 1;

        $r1 = r0.<avrora.sim.radio.Medium$Transmitter: avrora.sim.radio.Medium$Transmission transmission>;

        virtualinvoke $r1.<avrora.sim.radio.Medium$Transmission: void end()>();

     label1:
        return;
    }

    public abstract byte nextByte();

    public volatile void removeProbe(avrora.sim.radio.Medium$Probe)
    {
        avrora.sim.radio.Medium$Transmitter r0;
        avrora.sim.radio.Medium$Probe r1;

        r0 := @this: avrora.sim.radio.Medium$Transmitter;

        r1 := @parameter0: avrora.sim.radio.Medium$Probe;

        specialinvoke r0.<avrora.sim.radio.Medium$TXRX: void removeProbe(avrora.sim.radio.Medium$Probe)>(r1);

        return;
    }

    public volatile void insertProbe(avrora.sim.radio.Medium$Probe)
    {
        avrora.sim.radio.Medium$Transmitter r0;
        avrora.sim.radio.Medium$Probe r1;

        r0 := @this: avrora.sim.radio.Medium$Transmitter;

        r1 := @parameter0: avrora.sim.radio.Medium$Probe;

        specialinvoke r0.<avrora.sim.radio.Medium$TXRX: void insertProbe(avrora.sim.radio.Medium$Probe)>(r1);

        return;
    }
}
