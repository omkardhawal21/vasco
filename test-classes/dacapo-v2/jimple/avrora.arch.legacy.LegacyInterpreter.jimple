public class avrora.arch.legacy.LegacyInterpreter extends avrora.sim.AtmelInterpreter implements avrora.arch.legacy.LegacyInstrVisitor
{
    public static final avrora.arch.legacy.LegacyInterpreter$Factory FACTORY;
    public static final avrora.arch.legacy.LegacyRegister R0;
    public static final avrora.arch.legacy.LegacyRegister R1;
    public static final avrora.arch.legacy.LegacyRegister RZ;

    protected void <init>(avrora.sim.Simulator, avrora.core.Program, avrora.arch.avr.AVRProperties)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        avrora.sim.Simulator r1;
        avrora.core.Program r2;
        avrora.arch.avr.AVRProperties r3;
        java.lang.Class $r4;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.sim.Simulator;

        r2 := @parameter1: avrora.core.Program;

        r3 := @parameter2: avrora.arch.avr.AVRProperties;

        specialinvoke r0.<avrora.sim.AtmelInterpreter: void <init>(avrora.sim.Simulator,avrora.core.Program,avrora.arch.avr.AVRProperties)>(r1, r2, r3);

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        staticinvoke <java.lang.Compiler: boolean compileClass(java.lang.Class)>($r4);

        return;
    }

    protected void runLoop()
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1;
        long $l2, l4, $l6;
        byte $b3, $b5;
        boolean $z0, $z1, $z2, $z3, $z4;
        avrora.sim.util.MulticastProbe $r1;
        avrora.sim.InterruptTable $r2;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int bootPC>;

        r0.<avrora.arch.legacy.LegacyInterpreter: int pc> = $i0;

        $i1 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = 0;

     label1:
        $z3 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean shouldRun>;

        if $z3 == 0 goto label7;

        $l2 = r0.<avrora.arch.legacy.LegacyInterpreter: long delayCycles>;

        $b3 = $l2 cmp 0L;

        if $b3 <= 0 goto label2;

        $l6 = r0.<avrora.arch.legacy.LegacyInterpreter: long delayCycles>;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void advanceClock(long)>($l6);

        r0.<avrora.arch.legacy.LegacyInterpreter: long delayCycles> = 0L;

     label2:
        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean justReturnedFromInterrupt>;

        if $z0 == 0 goto label3;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean justReturnedFromInterrupt> = 0;

        goto label4;

     label3:
        $z1 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean I>;

        if $z1 == 0 goto label4;

        $r2 = r0.<avrora.arch.legacy.LegacyInterpreter: avrora.sim.InterruptTable interrupts>;

        l4 = virtualinvoke $r2.<avrora.sim.InterruptTable: long getPendingInterrupts()>();

        $b5 = l4 cmp 0L;

        if $b5 == 0 goto label4;

        specialinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void invokeInterrupt(long)>(l4);

     label4:
        $z4 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean sleeping>;

        if $z4 == 0 goto label5;

        specialinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void sleepLoop()>();

        goto label1;

     label5:
        $r1 = r0.<avrora.arch.legacy.LegacyInterpreter: avrora.sim.util.MulticastProbe globalProbe>;

        $z2 = virtualinvoke $r1.<avrora.sim.util.MulticastProbe: boolean isEmpty()>();

        if $z2 == 0 goto label6;

        specialinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void fastLoop()>();

        goto label1;

     label6:
        specialinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void instrumentedLoop()>();

        goto label1;

     label7:
        return;
    }

    public int step()
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i3, $i6;
        long $l1, l4, $l7, $l8;
        byte $b2, $b5;
        boolean $z0, $z1, $z2;
        avrora.sim.InterruptTable $r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i0;

        $l1 = r0.<avrora.arch.legacy.LegacyInterpreter: long delayCycles>;

        $b2 = $l1 cmp 0L;

        if $b2 <= 0 goto label1;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void advanceClock(long)>(1L);

        $l7 = r0.<avrora.arch.legacy.LegacyInterpreter: long delayCycles>;

        $l8 = $l7 - 1L;

        r0.<avrora.arch.legacy.LegacyInterpreter: long delayCycles> = $l8;

        return 1;

     label1:
        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean justReturnedFromInterrupt>;

        if $z0 == 0 goto label2;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean justReturnedFromInterrupt> = 0;

        goto label3;

     label2:
        $z1 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean I>;

        if $z1 == 0 goto label3;

        $r1 = r0.<avrora.arch.legacy.LegacyInterpreter: avrora.sim.InterruptTable interrupts>;

        l4 = virtualinvoke $r1.<avrora.sim.InterruptTable: long getPendingInterrupts()>();

        $b5 = l4 cmp 0L;

        if $b5 == 0 goto label3;

        $i6 = specialinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int stepInterrupt(long)>(l4);

        return $i6;

     label3:
        $z2 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean sleeping>;

        if $z2 == 0 goto label4;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void advanceClock(long)>(1L);

        return 1;

     label4:
        $i3 = specialinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int stepInstruction()>();

        return $i3;
    }

    private int stepInstruction()
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        avrora.sim.util.MulticastProbe $r1, $r5, $r7;
        boolean $z0;
        int $i0, $i1, i2, i3;
        avrora.arch.legacy.LegacyInstr[] $r2, $r8;
        avrora.arch.legacy.LegacyInstr r3, r9;
        avrora.sim.AtmelInterpreter$StateImpl $r4, $r6;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        $r1 = r0.<avrora.arch.legacy.LegacyInterpreter: avrora.sim.util.MulticastProbe globalProbe>;

        $z0 = virtualinvoke $r1.<avrora.sim.util.MulticastProbe: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r8 = r0.<avrora.arch.legacy.LegacyInterpreter: avrora.arch.legacy.LegacyInstr[] shared_instr>;

        $i1 = r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC>;

        r9 = $r8[$i1];

        virtualinvoke r9.<avrora.arch.legacy.LegacyInstr: void accept(avrora.arch.legacy.LegacyInstrVisitor)>(r0);

        i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void commit()>();

        goto label2;

     label1:
        i3 = r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC>;

        $r2 = r0.<avrora.arch.legacy.LegacyInterpreter: avrora.arch.legacy.LegacyInstr[] shared_instr>;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC>;

        r3 = $r2[$i0];

        $r5 = r0.<avrora.arch.legacy.LegacyInterpreter: avrora.sim.util.MulticastProbe globalProbe>;

        $r4 = r0.<avrora.arch.legacy.LegacyInterpreter: avrora.sim.AtmelInterpreter$StateImpl state>;

        virtualinvoke $r5.<avrora.sim.util.MulticastProbe: void fireBefore(avrora.sim.State,int)>($r4, i3);

        virtualinvoke r3.<avrora.arch.legacy.LegacyInstr: void accept(avrora.arch.legacy.LegacyInstrVisitor)>(r0);

        i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void commit()>();

        $r7 = r0.<avrora.arch.legacy.LegacyInterpreter: avrora.sim.util.MulticastProbe globalProbe>;

        $r6 = r0.<avrora.arch.legacy.LegacyInterpreter: avrora.sim.AtmelInterpreter$StateImpl state>;

        virtualinvoke $r7.<avrora.sim.util.MulticastProbe: void fireAfter(avrora.sim.State,int)>($r6, i3);

     label2:
        return i2;
    }

    private int stepInterrupt(long)
    {
        long l0, $l5;
        int i1, $i2, $i3, $i4, $i6, i7;
        avrora.arch.legacy.LegacyInterpreter r0;
        avrora.sim.InterruptTable $r1;
        boolean $z0;
        avrora.sim.Simulator $r2;
        avrora.sim.mcu.Microcontroller $r3;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        l0 := @parameter0: long;

        i1 = staticinvoke <cck.util.Arithmetic: int lowestBit(long)>(l0);

        $r1 = r0.<avrora.arch.legacy.LegacyInterpreter: avrora.sim.InterruptTable interrupts>;

        virtualinvoke $r1.<avrora.sim.InterruptTable: void beforeInvoke(int)>(i1);

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC>;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void pushPC(int)>($i2);

        $i3 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int getInterruptVectorAddress(int)>(i1);

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i3;

        $i4 = r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC>;

        r0.<avrora.arch.legacy.LegacyInterpreter: int pc> = $i4;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean I> = 0;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void advanceClock(long)>(1L);

        i7 = 3;

        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean sleeping>;

        if $z0 == 0 goto label1;

        $r2 = r0.<avrora.arch.legacy.LegacyInterpreter: avrora.sim.Simulator simulator>;

        $r3 = virtualinvoke $r2.<avrora.sim.Simulator: avrora.sim.mcu.Microcontroller getMicrocontroller()>();

        $i6 = interfaceinvoke $r3.<avrora.sim.mcu.Microcontroller: int wakeup()>();

        i7 = 3 + $i6;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean sleeping> = 0;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean innerLoop> = 0;

     label1:
        $l5 = (long) i7;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void delay(long)>($l5);

        return 1;
    }

    private void invokeInterrupt(long)
    {
        long l0;
        int i1, $i2, $i3, $i4;
        avrora.arch.legacy.LegacyInterpreter r0;
        avrora.sim.InterruptTable $r1, $r2;
        boolean $z0;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        l0 := @parameter0: long;

        i1 = staticinvoke <cck.util.Arithmetic: int lowestBit(long)>(l0);

        $r1 = r0.<avrora.arch.legacy.LegacyInterpreter: avrora.sim.InterruptTable interrupts>;

        virtualinvoke $r1.<avrora.sim.InterruptTable: void beforeInvoke(int)>(i1);

        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean sleeping>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void leaveSleepMode()>();

     label1:
        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC>;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void pushPC(int)>($i2);

        $i3 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int getInterruptVectorAddress(int)>(i1);

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i3;

        $i4 = r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC>;

        r0.<avrora.arch.legacy.LegacyInterpreter: int pc> = $i4;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean I> = 0;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void advanceClock(long)>(4L);

        $r2 = r0.<avrora.arch.legacy.LegacyInterpreter: avrora.sim.InterruptTable interrupts>;

        virtualinvoke $r2.<avrora.sim.InterruptTable: void afterInvoke(int)>(i1);

        return;
    }

    private void sleepLoop()
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        boolean $z0;
        avrora.sim.clock.MainClock $r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean innerLoop> = 1;

     label1:
        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean innerLoop>;

        if $z0 == 0 goto label2;

        $r1 = r0.<avrora.arch.legacy.LegacyInterpreter: avrora.sim.clock.MainClock clock>;

        virtualinvoke $r1.<avrora.sim.clock.MainClock: void skipAhead()>();

        goto label1;

     label2:
        return;
    }

    private void fastLoop()
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        boolean $z0;
        int $i0;
        avrora.arch.legacy.LegacyInstr[] $r1;
        avrora.arch.legacy.LegacyInstr r2;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean innerLoop> = 1;

     label1:
        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean innerLoop>;

        if $z0 == 0 goto label2;

        $r1 = r0.<avrora.arch.legacy.LegacyInterpreter: avrora.arch.legacy.LegacyInstr[] shared_instr>;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC>;

        r2 = $r1[$i0];

        virtualinvoke r2.<avrora.arch.legacy.LegacyInstr: void accept(avrora.arch.legacy.LegacyInstrVisitor)>(r0);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void commit()>();

        goto label1;

     label2:
        return;
    }

    private void instrumentedLoop()
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        boolean $z0;
        int i0, $i1;
        avrora.arch.legacy.LegacyInstr[] $r1;
        avrora.arch.legacy.LegacyInstr r2;
        avrora.sim.AtmelInterpreter$StateImpl $r3, $r5;
        avrora.sim.util.MulticastProbe $r4, $r6;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean innerLoop> = 1;

     label1:
        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean innerLoop>;

        if $z0 == 0 goto label2;

        i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC>;

        $r1 = r0.<avrora.arch.legacy.LegacyInterpreter: avrora.arch.legacy.LegacyInstr[] shared_instr>;

        $i1 = r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC>;

        r2 = $r1[$i1];

        $r4 = r0.<avrora.arch.legacy.LegacyInterpreter: avrora.sim.util.MulticastProbe globalProbe>;

        $r3 = r0.<avrora.arch.legacy.LegacyInterpreter: avrora.sim.AtmelInterpreter$StateImpl state>;

        virtualinvoke $r4.<avrora.sim.util.MulticastProbe: void fireBefore(avrora.sim.State,int)>($r3, i0);

        virtualinvoke r2.<avrora.arch.legacy.LegacyInstr: void accept(avrora.arch.legacy.LegacyInstrVisitor)>(r0);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void commit()>();

        $r6 = r0.<avrora.arch.legacy.LegacyInterpreter: avrora.sim.util.MulticastProbe globalProbe>;

        $r5 = r0.<avrora.arch.legacy.LegacyInterpreter: avrora.sim.AtmelInterpreter$StateImpl state>;

        virtualinvoke $r6.<avrora.sim.util.MulticastProbe: void fireAfter(avrora.sim.State,int)>($r5, i0);

        goto label1;

     label2:
        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$ADC)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, i2, i3, $i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i19, $i20;
        avrora.arch.legacy.LegacyInstr$ADC r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3, $r4;
        boolean $z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        byte b4, $b17, b18;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$ADC;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$ADC: avrora.arch.legacy.LegacyRegister r1>;

        i2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int getRegisterUnsigned(avrora.arch.legacy.LegacyRegister)>($r2);

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$ADC: avrora.arch.legacy.LegacyRegister r2>;

        i3 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int getRegisterUnsigned(avrora.arch.legacy.LegacyRegister)>($r3);

        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean C>;

        b4 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte bit(boolean)>($z0);

        $i5 = i2 + i3;

        i6 = $i5 + b4;

        i7 = i2 & 15;

        i8 = i3 & 15;

        $i9 = i2 & 128;

        if $i9 == 0 goto label01;

        $z4 = 1;

        goto label02;

     label01:
        $z4 = 0;

     label02:
        z1 = $z4;

        $i10 = i3 & 128;

        if $i10 == 0 goto label03;

        $z5 = 1;

        goto label04;

     label03:
        $z5 = 0;

     label04:
        z2 = $z5;

        $i11 = i6 & 128;

        if $i11 == 0 goto label05;

        $z6 = 1;

        goto label06;

     label05:
        $z6 = 0;

     label06:
        z3 = $z6;

        $i12 = i7 + i8;

        $i13 = $i12 + b4;

        $i14 = $i13 & 16;

        if $i14 == 0 goto label07;

        $z7 = 1;

        goto label08;

     label07:
        $z7 = 0;

     label08:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean H> = $z7;

        $i15 = i6 & 256;

        if $i15 == 0 goto label09;

        $z8 = 1;

        goto label10;

     label09:
        $z8 = 0;

     label10:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean C> = $z8;

        $i16 = i6 & 128;

        if $i16 == 0 goto label11;

        $z9 = 1;

        goto label12;

     label11:
        $z9 = 0;

     label12:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean N> = $z9;

        $b17 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i6);

        if $b17 != 0 goto label13;

        $z10 = 1;

        goto label14;

     label13:
        $z10 = 0;

     label14:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z> = $z10;

        if z1 == 0 goto label15;

        if z2 == 0 goto label15;

        if z3 == 0 goto label16;

     label15:
        if z1 != 0 goto label17;

        if z2 != 0 goto label17;

        if z3 == 0 goto label17;

     label16:
        $z11 = 1;

        goto label18;

     label17:
        $z11 = 0;

     label18:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean V> = $z11;

        $z12 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean N>;

        $z13 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean V>;

        if $z12 == $z13 goto label19;

        $z14 = 1;

        goto label20;

     label19:
        $z14 = 0;

     label20:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean S> = $z14;

        b18 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i6);

        $r4 = r1.<avrora.arch.legacy.LegacyInstr$ADC: avrora.arch.legacy.LegacyRegister r1>;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r4, b18);

        $i19 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i20 = $i19 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i20;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$ADD)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, i2, i3, $i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i19, $i20;
        avrora.arch.legacy.LegacyInstr$ADD r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3, $r4;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        byte $b17, b18;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$ADD;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$ADD: avrora.arch.legacy.LegacyRegister r1>;

        i2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int getRegisterUnsigned(avrora.arch.legacy.LegacyRegister)>($r2);

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$ADD: avrora.arch.legacy.LegacyRegister r2>;

        i3 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int getRegisterUnsigned(avrora.arch.legacy.LegacyRegister)>($r3);

        $i5 = i2 + i3;

        i6 = $i5 + 0;

        i7 = i2 & 15;

        i8 = i3 & 15;

        $i9 = i2 & 128;

        if $i9 == 0 goto label01;

        $z3 = 1;

        goto label02;

     label01:
        $z3 = 0;

     label02:
        z0 = $z3;

        $i10 = i3 & 128;

        if $i10 == 0 goto label03;

        $z4 = 1;

        goto label04;

     label03:
        $z4 = 0;

     label04:
        z1 = $z4;

        $i11 = i6 & 128;

        if $i11 == 0 goto label05;

        $z5 = 1;

        goto label06;

     label05:
        $z5 = 0;

     label06:
        z2 = $z5;

        $i12 = i7 + i8;

        $i13 = $i12 + 0;

        $i14 = $i13 & 16;

        if $i14 == 0 goto label07;

        $z6 = 1;

        goto label08;

     label07:
        $z6 = 0;

     label08:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean H> = $z6;

        $i15 = i6 & 256;

        if $i15 == 0 goto label09;

        $z7 = 1;

        goto label10;

     label09:
        $z7 = 0;

     label10:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean C> = $z7;

        $i16 = i6 & 128;

        if $i16 == 0 goto label11;

        $z8 = 1;

        goto label12;

     label11:
        $z8 = 0;

     label12:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean N> = $z8;

        $b17 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i6);

        if $b17 != 0 goto label13;

        $z9 = 1;

        goto label14;

     label13:
        $z9 = 0;

     label14:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z> = $z9;

        if z0 == 0 goto label15;

        if z1 == 0 goto label15;

        if z2 == 0 goto label16;

     label15:
        if z0 != 0 goto label17;

        if z1 != 0 goto label17;

        if z2 == 0 goto label17;

     label16:
        $z10 = 1;

        goto label18;

     label17:
        $z10 = 0;

     label18:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean V> = $z10;

        $z11 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean N>;

        $z12 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean V>;

        if $z11 == $z12 goto label19;

        $z13 = 1;

        goto label20;

     label19:
        $z13 = 0;

     label20:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean S> = $z13;

        b18 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i6);

        $r4 = r1.<avrora.arch.legacy.LegacyInstr$ADD: avrora.arch.legacy.LegacyRegister r1>;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r4, b18);

        $i19 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i20 = $i19 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i20;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$ADIW)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, i2, $i3, i4, $i5, $i6, $i7, $i8, $i9;
        avrora.arch.legacy.LegacyInstr$ADIW r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$ADIW;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$ADIW: avrora.arch.legacy.LegacyRegister r1>;

        i2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int getRegisterWord(avrora.arch.legacy.LegacyRegister)>($r2);

        $i3 = r1.<avrora.arch.legacy.LegacyInstr$ADIW: int imm1>;

        i4 = i2 + $i3;

        $i5 = i4 & 32768;

        if $i5 == 0 goto label01;

        $z4 = 1;

        goto label02;

     label01:
        $z4 = 0;

     label02:
        z0 = $z4;

        $i6 = i2 & 32768;

        if $i6 == 0 goto label03;

        $z5 = 1;

        goto label04;

     label03:
        $z5 = 0;

     label04:
        z1 = $z5;

        if z0 != 0 goto label05;

        if $z5 == 0 goto label05;

        $z6 = 1;

        goto label06;

     label05:
        $z6 = 0;

     label06:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean C> = $z6;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean N> = z0;

        if z1 != 0 goto label07;

        if z0 == 0 goto label07;

        $z7 = 1;

        goto label08;

     label07:
        $z7 = 0;

     label08:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean V> = $z7;

        $i9 = i4 & 65535;

        if $i9 != 0 goto label09;

        $z8 = 1;

        goto label10;

     label09:
        $z8 = 0;

     label10:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z> = $z8;

        $z3 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean N>;

        $z2 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean V>;

        if $z3 == $z2 goto label11;

        $z9 = 1;

        goto label12;

     label11:
        $z9 = 0;

     label12:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean S> = $z9;

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$ADIW: avrora.arch.legacy.LegacyRegister r1>;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterWord(avrora.arch.legacy.LegacyRegister,int)>($r3, i4);

        $i7 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i8 = $i7 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i8;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$AND)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, i4, $i5, $i8, $i9;
        avrora.arch.legacy.LegacyInstr$AND r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3, $r4;
        byte b2, b3, $b6, b7;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$AND;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$AND: avrora.arch.legacy.LegacyRegister r1>;

        b2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r2);

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$AND: avrora.arch.legacy.LegacyRegister r2>;

        b3 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r3);

        i4 = b2 & b3;

        $i5 = i4 & 128;

        if $i5 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean N> = $z2;

        $b6 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i4);

        if $b6 != 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z> = $z3;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean V> = 0;

        $z1 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean N>;

        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean V>;

        if $z1 == $z0 goto label5;

        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean S> = $z4;

        b7 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i4);

        $r4 = r1.<avrora.arch.legacy.LegacyInstr$AND: avrora.arch.legacy.LegacyRegister r1>;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r4, b7);

        $i8 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i9 = $i8 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i9;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$ANDI)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, i3, i4, $i5, $i8, $i9;
        avrora.arch.legacy.LegacyInstr$ANDI r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3;
        byte b2, $b6, b7;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$ANDI;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$ANDI: avrora.arch.legacy.LegacyRegister r1>;

        b2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r2);

        i3 = r1.<avrora.arch.legacy.LegacyInstr$ANDI: int imm1>;

        i4 = b2 & i3;

        $i5 = i4 & 128;

        if $i5 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean N> = $z2;

        $b6 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i4);

        if $b6 != 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z> = $z3;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean V> = 0;

        $z1 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean N>;

        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean V>;

        if $z1 == $z0 goto label5;

        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean S> = $z4;

        b7 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i4);

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$ANDI: avrora.arch.legacy.LegacyRegister r1>;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r3, b7);

        $i8 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i9 = $i8 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i9;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$ASR)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i3, $i4, $i5, $i8, $i9, i10, i11;
        avrora.arch.legacy.LegacyInstr$ASR r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3;
        byte b2, $b6, b7;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$ASR;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$ASR: avrora.arch.legacy.LegacyRegister r1>;

        b2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r2);

        $i3 = b2 & 128;

        if $i3 == 0 goto label01;

        $z5 = 1;

        goto label02;

     label01:
        $z5 = 0;

     label02:
        z0 = $z5;

        $i4 = b2 & 255;

        i10 = $i4 >> 1;

        i11 = staticinvoke <cck.util.Arithmetic: int setBit(int,int,boolean)>(i10, 7, $z5);

        $i5 = b2 & 1;

        if $i5 == 0 goto label03;

        $z6 = 1;

        goto label04;

     label03:
        $z6 = 0;

     label04:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean C> = $z6;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean N> = z0;

        $b6 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i11);

        if $b6 != 0 goto label05;

        $z7 = 1;

        goto label06;

     label05:
        $z7 = 0;

     label06:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z> = $z7;

        $z2 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean N>;

        $z1 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean C>;

        if $z2 == $z1 goto label07;

        $z8 = 1;

        goto label08;

     label07:
        $z8 = 0;

     label08:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean V> = $z8;

        $z4 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean N>;

        $z3 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean V>;

        if $z4 == $z3 goto label09;

        $z9 = 1;

        goto label10;

     label09:
        $z9 = 0;

     label10:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean S> = $z9;

        b7 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i11);

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$ASR: avrora.arch.legacy.LegacyRegister r1>;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r3, b7);

        $i8 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i9 = $i8 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i9;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$BCLR)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i3, $i4;
        avrora.arch.legacy.LegacyInstr$BCLR r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$BCLR;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $i2 = r1.<avrora.arch.legacy.LegacyInstr$BCLR: int imm1>;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void setFlag(int,boolean)>($i2, 0);

        $i3 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i4 = $i3 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i4;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$BLD)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i3, $i5, $i6;
        avrora.arch.legacy.LegacyInstr$BLD r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3;
        byte $b2, $b4;
        boolean $z0;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$BLD;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$BLD: avrora.arch.legacy.LegacyRegister r1>;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$BLD: avrora.arch.legacy.LegacyRegister r1>;

        $b2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r2);

        $i3 = r1.<avrora.arch.legacy.LegacyInstr$BLD: int imm1>;

        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean T>;

        $b4 = staticinvoke <cck.util.Arithmetic: byte setBit(byte,int,boolean)>($b2, $i3, $z0);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r3, $b4);

        $i5 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i6 = $i5 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i6;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$BRBC)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        avrora.arch.legacy.LegacyInstr$BRBC r1;
        boolean $z0;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$BRBC;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        i1 = $i0 + 2;

        $i2 = r1.<avrora.arch.legacy.LegacyInstr$BRBC: int imm1>;

        $z0 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: boolean getFlag(int)>($i2);

        if $z0 != 0 goto label1;

        $i5 = r1.<avrora.arch.legacy.LegacyInstr$BRBC: int imm2>;

        $i6 = $i5 * 2;

        $i7 = $i6 + i1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i7;

        $i8 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i9 = $i8 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i9;

        goto label2;

     label1:
        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = i1;

        $i3 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i4 = $i3 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i4;

     label2:
        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$BRBS)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        avrora.arch.legacy.LegacyInstr$BRBS r1;
        boolean $z0;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$BRBS;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        i1 = $i0 + 2;

        $i2 = r1.<avrora.arch.legacy.LegacyInstr$BRBS: int imm1>;

        $z0 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: boolean getFlag(int)>($i2);

        if $z0 == 0 goto label1;

        $i5 = r1.<avrora.arch.legacy.LegacyInstr$BRBS: int imm2>;

        $i6 = $i5 * 2;

        $i7 = $i6 + i1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i7;

        $i8 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i9 = $i8 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i9;

        goto label2;

     label1:
        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = i1;

        $i3 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i4 = $i3 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i4;

     label2:
        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$BRCC)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0;
        avrora.arch.legacy.LegacyInstr$BRCC r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$BRCC;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        i1 = $i0 + 2;

        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean C>;

        if $z0 != 0 goto label1;

        $i4 = r1.<avrora.arch.legacy.LegacyInstr$BRCC: int imm1>;

        $i5 = $i4 * 2;

        $i6 = $i5 + i1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i6;

        $i7 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i8 = $i7 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i8;

        goto label2;

     label1:
        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = i1;

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

     label2:
        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$BRCS)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0;
        avrora.arch.legacy.LegacyInstr$BRCS r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$BRCS;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        i1 = $i0 + 2;

        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean C>;

        if $z0 == 0 goto label1;

        $i4 = r1.<avrora.arch.legacy.LegacyInstr$BRCS: int imm1>;

        $i5 = $i4 * 2;

        $i6 = $i5 + i1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i6;

        $i7 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i8 = $i7 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i8;

        goto label2;

     label1:
        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = i1;

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

     label2:
        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$BREAK)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i3;
        avrora.arch.legacy.LegacyInstr$BREAK r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$BREAK;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void stop()>();

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$BREQ)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0;
        avrora.arch.legacy.LegacyInstr$BREQ r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$BREQ;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        i1 = $i0 + 2;

        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z>;

        if $z0 == 0 goto label1;

        $i4 = r1.<avrora.arch.legacy.LegacyInstr$BREQ: int imm1>;

        $i5 = $i4 * 2;

        $i6 = $i5 + i1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i6;

        $i7 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i8 = $i7 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i8;

        goto label2;

     label1:
        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = i1;

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

     label2:
        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$BRGE)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0;
        avrora.arch.legacy.LegacyInstr$BRGE r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$BRGE;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        i1 = $i0 + 2;

        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean S>;

        if $z0 != 0 goto label1;

        $i4 = r1.<avrora.arch.legacy.LegacyInstr$BRGE: int imm1>;

        $i5 = $i4 * 2;

        $i6 = $i5 + i1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i6;

        $i7 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i8 = $i7 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i8;

        goto label2;

     label1:
        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = i1;

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

     label2:
        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$BRHC)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0;
        avrora.arch.legacy.LegacyInstr$BRHC r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$BRHC;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        i1 = $i0 + 2;

        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean H>;

        if $z0 != 0 goto label1;

        $i4 = r1.<avrora.arch.legacy.LegacyInstr$BRHC: int imm1>;

        $i5 = $i4 * 2;

        $i6 = $i5 + i1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i6;

        $i7 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i8 = $i7 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i8;

        goto label2;

     label1:
        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = i1;

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

     label2:
        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$BRHS)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0;
        avrora.arch.legacy.LegacyInstr$BRHS r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$BRHS;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        i1 = $i0 + 2;

        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean H>;

        if $z0 == 0 goto label1;

        $i4 = r1.<avrora.arch.legacy.LegacyInstr$BRHS: int imm1>;

        $i5 = $i4 * 2;

        $i6 = $i5 + i1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i6;

        $i7 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i8 = $i7 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i8;

        goto label2;

     label1:
        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = i1;

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

     label2:
        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$BRID)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0;
        avrora.arch.legacy.LegacyInstr$BRID r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$BRID;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        i1 = $i0 + 2;

        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean I>;

        if $z0 != 0 goto label1;

        $i4 = r1.<avrora.arch.legacy.LegacyInstr$BRID: int imm1>;

        $i5 = $i4 * 2;

        $i6 = $i5 + i1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i6;

        $i7 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i8 = $i7 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i8;

        goto label2;

     label1:
        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = i1;

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

     label2:
        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$BRIE)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0;
        avrora.arch.legacy.LegacyInstr$BRIE r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$BRIE;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        i1 = $i0 + 2;

        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean I>;

        if $z0 == 0 goto label1;

        $i4 = r1.<avrora.arch.legacy.LegacyInstr$BRIE: int imm1>;

        $i5 = $i4 * 2;

        $i6 = $i5 + i1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i6;

        $i7 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i8 = $i7 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i8;

        goto label2;

     label1:
        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = i1;

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

     label2:
        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$BRLO)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0;
        avrora.arch.legacy.LegacyInstr$BRLO r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$BRLO;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        i1 = $i0 + 2;

        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean C>;

        if $z0 == 0 goto label1;

        $i4 = r1.<avrora.arch.legacy.LegacyInstr$BRLO: int imm1>;

        $i5 = $i4 * 2;

        $i6 = $i5 + i1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i6;

        $i7 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i8 = $i7 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i8;

        goto label2;

     label1:
        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = i1;

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

     label2:
        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$BRLT)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0;
        avrora.arch.legacy.LegacyInstr$BRLT r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$BRLT;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        i1 = $i0 + 2;

        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean S>;

        if $z0 == 0 goto label1;

        $i4 = r1.<avrora.arch.legacy.LegacyInstr$BRLT: int imm1>;

        $i5 = $i4 * 2;

        $i6 = $i5 + i1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i6;

        $i7 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i8 = $i7 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i8;

        goto label2;

     label1:
        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = i1;

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

     label2:
        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$BRMI)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0;
        avrora.arch.legacy.LegacyInstr$BRMI r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$BRMI;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        i1 = $i0 + 2;

        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean N>;

        if $z0 == 0 goto label1;

        $i4 = r1.<avrora.arch.legacy.LegacyInstr$BRMI: int imm1>;

        $i5 = $i4 * 2;

        $i6 = $i5 + i1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i6;

        $i7 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i8 = $i7 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i8;

        goto label2;

     label1:
        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = i1;

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

     label2:
        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$BRNE)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0;
        avrora.arch.legacy.LegacyInstr$BRNE r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$BRNE;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        i1 = $i0 + 2;

        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z>;

        if $z0 != 0 goto label1;

        $i4 = r1.<avrora.arch.legacy.LegacyInstr$BRNE: int imm1>;

        $i5 = $i4 * 2;

        $i6 = $i5 + i1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i6;

        $i7 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i8 = $i7 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i8;

        goto label2;

     label1:
        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = i1;

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

     label2:
        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$BRPL)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0;
        avrora.arch.legacy.LegacyInstr$BRPL r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$BRPL;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        i1 = $i0 + 2;

        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean N>;

        if $z0 != 0 goto label1;

        $i4 = r1.<avrora.arch.legacy.LegacyInstr$BRPL: int imm1>;

        $i5 = $i4 * 2;

        $i6 = $i5 + i1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i6;

        $i7 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i8 = $i7 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i8;

        goto label2;

     label1:
        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = i1;

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

     label2:
        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$BRSH)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0;
        avrora.arch.legacy.LegacyInstr$BRSH r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$BRSH;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        i1 = $i0 + 2;

        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean C>;

        if $z0 != 0 goto label1;

        $i4 = r1.<avrora.arch.legacy.LegacyInstr$BRSH: int imm1>;

        $i5 = $i4 * 2;

        $i6 = $i5 + i1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i6;

        $i7 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i8 = $i7 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i8;

        goto label2;

     label1:
        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = i1;

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

     label2:
        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$BRTC)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0;
        avrora.arch.legacy.LegacyInstr$BRTC r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$BRTC;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        i1 = $i0 + 2;

        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean T>;

        if $z0 != 0 goto label1;

        $i4 = r1.<avrora.arch.legacy.LegacyInstr$BRTC: int imm1>;

        $i5 = $i4 * 2;

        $i6 = $i5 + i1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i6;

        $i7 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i8 = $i7 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i8;

        goto label2;

     label1:
        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = i1;

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

     label2:
        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$BRTS)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0;
        avrora.arch.legacy.LegacyInstr$BRTS r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$BRTS;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        i1 = $i0 + 2;

        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean T>;

        if $z0 == 0 goto label1;

        $i4 = r1.<avrora.arch.legacy.LegacyInstr$BRTS: int imm1>;

        $i5 = $i4 * 2;

        $i6 = $i5 + i1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i6;

        $i7 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i8 = $i7 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i8;

        goto label2;

     label1:
        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = i1;

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

     label2:
        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$BRVC)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0;
        avrora.arch.legacy.LegacyInstr$BRVC r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$BRVC;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        i1 = $i0 + 2;

        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean V>;

        if $z0 != 0 goto label1;

        $i4 = r1.<avrora.arch.legacy.LegacyInstr$BRVC: int imm1>;

        $i5 = $i4 * 2;

        $i6 = $i5 + i1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i6;

        $i7 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i8 = $i7 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i8;

        goto label2;

     label1:
        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = i1;

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

     label2:
        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$BRVS)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0;
        avrora.arch.legacy.LegacyInstr$BRVS r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$BRVS;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        i1 = $i0 + 2;

        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean V>;

        if $z0 == 0 goto label1;

        $i4 = r1.<avrora.arch.legacy.LegacyInstr$BRVS: int imm1>;

        $i5 = $i4 * 2;

        $i6 = $i5 + i1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i6;

        $i7 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i8 = $i7 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i8;

        goto label2;

     label1:
        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = i1;

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

     label2:
        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$BSET)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i3, $i4;
        avrora.arch.legacy.LegacyInstr$BSET r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$BSET;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $i2 = r1.<avrora.arch.legacy.LegacyInstr$BSET: int imm1>;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void setFlag(int,boolean)>($i2, 1);

        $i3 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i4 = $i3 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i4;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$BST)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i3, $i4, $i5;
        avrora.arch.legacy.LegacyInstr$BST r1;
        avrora.arch.legacy.LegacyRegister $r2;
        byte $b2;
        boolean $z0;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$BST;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$BST: avrora.arch.legacy.LegacyRegister r1>;

        $b2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r2);

        $i3 = r1.<avrora.arch.legacy.LegacyInstr$BST: int imm1>;

        $z0 = staticinvoke <cck.util.Arithmetic: boolean getBit(byte,int)>($b2, $i3);

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean T> = $z0;

        $i4 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i5 = $i4 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i5;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$CALL)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, i2, $i5, $i6, $i7, $i8;
        byte $b3, $b4;
        avrora.arch.legacy.LegacyInstr$CALL r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$CALL;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 4;

        i2 = $i1 / 2;

        $b3 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i2);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void pushByte(byte)>($b3);

        $b4 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte high(int)>(i2);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void pushByte(byte)>($b4);

        $i5 = r1.<avrora.arch.legacy.LegacyInstr$CALL: int imm1>;

        $i6 = $i5 * 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i6;

        $i7 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i8 = $i7 + 4;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i8;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$CBI)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        avrora.arch.legacy.LegacyInstr$CBI r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$CBI;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $i3 = r1.<avrora.arch.legacy.LegacyInstr$CBI: int imm1>;

        $i2 = r1.<avrora.arch.legacy.LegacyInstr$CBI: int imm2>;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void setIORegBit(int,int,boolean)>($i3, $i2, 0);

        $i4 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i5 = $i4 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i5;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$CBR)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i3, i4, i5, $i6, $i9, $i10;
        avrora.arch.legacy.LegacyInstr$CBR r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3;
        byte b2, $b7, b8;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$CBR;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$CBR: avrora.arch.legacy.LegacyRegister r1>;

        b2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r2);

        $i3 = r1.<avrora.arch.legacy.LegacyInstr$CBR: int imm1>;

        i4 = $i3 ^ -1;

        i5 = b2 & i4;

        $i6 = i5 & 128;

        if $i6 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean N> = $z2;

        $b7 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i5);

        if $b7 != 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z> = $z3;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean V> = 0;

        $z1 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean N>;

        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean V>;

        if $z1 == $z0 goto label5;

        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean S> = $z4;

        b8 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i5);

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$CBR: avrora.arch.legacy.LegacyRegister r1>;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r3, b8);

        $i9 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i10 = $i9 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i10;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$CLC)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i3;
        avrora.arch.legacy.LegacyInstr$CLC r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$CLC;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean C> = 0;

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$CLH)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i3;
        avrora.arch.legacy.LegacyInstr$CLH r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$CLH;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean H> = 0;

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$CLI)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i3;
        avrora.arch.legacy.LegacyInstr$CLI r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$CLI;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void disableInterrupts()>();

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$CLN)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i3;
        avrora.arch.legacy.LegacyInstr$CLN r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$CLN;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean N> = 0;

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$CLR)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i3, $i4;
        avrora.arch.legacy.LegacyInstr$CLR r1;
        avrora.arch.legacy.LegacyRegister $r2;
        byte $b2;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$CLR;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean S> = 0;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean V> = 0;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean N> = 0;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z> = 1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$CLR: avrora.arch.legacy.LegacyRegister r1>;

        $b2 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(0);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r2, $b2);

        $i3 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i4 = $i3 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i4;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$CLS)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i3;
        avrora.arch.legacy.LegacyInstr$CLS r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$CLS;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean S> = 0;

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$CLT)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i3;
        avrora.arch.legacy.LegacyInstr$CLT r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$CLT;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean T> = 0;

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$CLV)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i3;
        avrora.arch.legacy.LegacyInstr$CLV r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$CLV;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean V> = 0;

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$CLZ)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i3;
        avrora.arch.legacy.LegacyInstr$CLZ r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$CLZ;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z> = 0;

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$COM)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, i3, $i4, $i7, $i8;
        avrora.arch.legacy.LegacyInstr$COM r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3;
        byte $b2, $b5, $b6;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$COM;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$COM: avrora.arch.legacy.LegacyRegister r1>;

        $b2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r2);

        i3 = 255 - $b2;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean C> = 1;

        $i4 = i3 & 128;

        if $i4 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean N> = $z2;

        $b5 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i3);

        if $b5 != 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z> = $z3;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean V> = 0;

        $z1 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean N>;

        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean V>;

        if $z1 == $z0 goto label5;

        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean S> = $z4;

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$COM: avrora.arch.legacy.LegacyRegister r1>;

        $b6 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i3);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r3, $b6);

        $i7 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i8 = $i7 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i8;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$CP)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        avrora.arch.legacy.LegacyInstr$CP r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3;
        byte b2, b3, $b15;
        boolean z0, z1, z2, z3, z4, z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$CP;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$CP: avrora.arch.legacy.LegacyRegister r1>;

        b2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r2);

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$CP: avrora.arch.legacy.LegacyRegister r2>;

        b3 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r3);

        $i5 = b2 - b3;

        i6 = $i5 - 0;

        $i7 = b2 & 128;

        if $i7 == 0 goto label01;

        $z6 = 1;

        goto label02;

     label01:
        $z6 = 0;

     label02:
        z0 = $z6;

        $i8 = b3 & 128;

        if $i8 == 0 goto label03;

        $z7 = 1;

        goto label04;

     label03:
        $z7 = 0;

     label04:
        z1 = $z7;

        $i9 = i6 & 128;

        if $i9 == 0 goto label05;

        $z8 = 1;

        goto label06;

     label05:
        $z8 = 0;

     label06:
        z2 = $z8;

        $i10 = b2 & 8;

        if $i10 == 0 goto label07;

        $z9 = 1;

        goto label08;

     label07:
        $z9 = 0;

     label08:
        z3 = $z9;

        $i11 = b3 & 8;

        if $i11 == 0 goto label09;

        $z10 = 1;

        goto label10;

     label09:
        $z10 = 0;

     label10:
        z4 = $z10;

        $i12 = i6 & 8;

        if $i12 == 0 goto label11;

        $z11 = 1;

        goto label12;

     label11:
        $z11 = 0;

     label12:
        z5 = $z11;

        if z3 != 0 goto label13;

        if z4 != 0 goto label15;

     label13:
        if z4 == 0 goto label14;

        if z5 != 0 goto label15;

     label14:
        if z5 == 0 goto label16;

        if z3 != 0 goto label16;

     label15:
        $z12 = 1;

        goto label17;

     label16:
        $z12 = 0;

     label17:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean H> = $z12;

        if z0 != 0 goto label18;

        if z1 != 0 goto label20;

     label18:
        if z1 == 0 goto label19;

        if z2 != 0 goto label20;

     label19:
        if z2 == 0 goto label21;

        if z0 != 0 goto label21;

     label20:
        $z13 = 1;

        goto label22;

     label21:
        $z13 = 0;

     label22:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean C> = $z13;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean N> = z2;

        $b15 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i6);

        if $b15 != 0 goto label23;

        $z14 = 1;

        goto label24;

     label23:
        $z14 = 0;

     label24:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z> = $z14;

        if z0 == 0 goto label25;

        if z1 != 0 goto label25;

        if z2 == 0 goto label26;

     label25:
        if z0 != 0 goto label27;

        if z1 == 0 goto label27;

        if z2 == 0 goto label27;

     label26:
        $z15 = 1;

        goto label28;

     label27:
        $z15 = 0;

     label28:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean V> = $z15;

        $z16 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean N>;

        $z17 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean V>;

        if $z16 == $z17 goto label29;

        $z18 = 1;

        goto label30;

     label29:
        $z18 = 0;

     label30:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean S> = $z18;

        $i13 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i14 = $i13 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i14;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$CPC)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        avrora.arch.legacy.LegacyInstr$CPC r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3;
        byte b2, b3, b4, $b15;
        boolean $z0, z1, z2, z3, z4, z5, z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$CPC;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$CPC: avrora.arch.legacy.LegacyRegister r1>;

        b2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r2);

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$CPC: avrora.arch.legacy.LegacyRegister r2>;

        b3 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r3);

        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean C>;

        b4 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte bit(boolean)>($z0);

        $i5 = b2 - b3;

        i6 = $i5 - b4;

        $i7 = b2 & 128;

        if $i7 == 0 goto label01;

        $z8 = 1;

        goto label02;

     label01:
        $z8 = 0;

     label02:
        z1 = $z8;

        $i8 = b3 & 128;

        if $i8 == 0 goto label03;

        $z9 = 1;

        goto label04;

     label03:
        $z9 = 0;

     label04:
        z2 = $z9;

        $i9 = i6 & 128;

        if $i9 == 0 goto label05;

        $z10 = 1;

        goto label06;

     label05:
        $z10 = 0;

     label06:
        z3 = $z10;

        $i10 = b2 & 8;

        if $i10 == 0 goto label07;

        $z11 = 1;

        goto label08;

     label07:
        $z11 = 0;

     label08:
        z4 = $z11;

        $i11 = b3 & 8;

        if $i11 == 0 goto label09;

        $z12 = 1;

        goto label10;

     label09:
        $z12 = 0;

     label10:
        z5 = $z12;

        $i12 = i6 & 8;

        if $i12 == 0 goto label11;

        $z13 = 1;

        goto label12;

     label11:
        $z13 = 0;

     label12:
        z6 = $z13;

        if z4 != 0 goto label13;

        if z5 != 0 goto label15;

     label13:
        if z5 == 0 goto label14;

        if z6 != 0 goto label15;

     label14:
        if z6 == 0 goto label16;

        if z4 != 0 goto label16;

     label15:
        $z14 = 1;

        goto label17;

     label16:
        $z14 = 0;

     label17:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean H> = $z14;

        if z1 != 0 goto label18;

        if z2 != 0 goto label20;

     label18:
        if z2 == 0 goto label19;

        if z3 != 0 goto label20;

     label19:
        if z3 == 0 goto label21;

        if z1 != 0 goto label21;

     label20:
        $z15 = 1;

        goto label22;

     label21:
        $z15 = 0;

     label22:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean C> = $z15;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean N> = z3;

        $b15 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i6);

        if $b15 != 0 goto label23;

        $z7 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z>;

        if $z7 == 0 goto label23;

        $z16 = 1;

        goto label24;

     label23:
        $z16 = 0;

     label24:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z> = $z16;

        if z1 == 0 goto label25;

        if z2 != 0 goto label25;

        if z3 == 0 goto label26;

     label25:
        if z1 != 0 goto label27;

        if z2 == 0 goto label27;

        if z3 == 0 goto label27;

     label26:
        $z17 = 1;

        goto label28;

     label27:
        $z17 = 0;

     label28:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean V> = $z17;

        $z18 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean N>;

        $z19 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean V>;

        if $z18 == $z19 goto label29;

        $z20 = 1;

        goto label30;

     label29:
        $z20 = 0;

     label30:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean S> = $z20;

        $i13 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i14 = $i13 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i14;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$CPI)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, i3, $i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        avrora.arch.legacy.LegacyInstr$CPI r1;
        avrora.arch.legacy.LegacyRegister $r2;
        byte b2, $b15;
        boolean z0, z1, z2, z3, z4, z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$CPI;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$CPI: avrora.arch.legacy.LegacyRegister r1>;

        b2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r2);

        i3 = r1.<avrora.arch.legacy.LegacyInstr$CPI: int imm1>;

        $i5 = b2 - i3;

        i6 = $i5 - 0;

        $i7 = b2 & 128;

        if $i7 == 0 goto label01;

        $z6 = 1;

        goto label02;

     label01:
        $z6 = 0;

     label02:
        z0 = $z6;

        $i8 = i3 & 128;

        if $i8 == 0 goto label03;

        $z7 = 1;

        goto label04;

     label03:
        $z7 = 0;

     label04:
        z1 = $z7;

        $i9 = i6 & 128;

        if $i9 == 0 goto label05;

        $z8 = 1;

        goto label06;

     label05:
        $z8 = 0;

     label06:
        z2 = $z8;

        $i10 = b2 & 8;

        if $i10 == 0 goto label07;

        $z9 = 1;

        goto label08;

     label07:
        $z9 = 0;

     label08:
        z3 = $z9;

        $i11 = i3 & 8;

        if $i11 == 0 goto label09;

        $z10 = 1;

        goto label10;

     label09:
        $z10 = 0;

     label10:
        z4 = $z10;

        $i12 = i6 & 8;

        if $i12 == 0 goto label11;

        $z11 = 1;

        goto label12;

     label11:
        $z11 = 0;

     label12:
        z5 = $z11;

        if z3 != 0 goto label13;

        if z4 != 0 goto label15;

     label13:
        if z4 == 0 goto label14;

        if z5 != 0 goto label15;

     label14:
        if z5 == 0 goto label16;

        if z3 != 0 goto label16;

     label15:
        $z12 = 1;

        goto label17;

     label16:
        $z12 = 0;

     label17:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean H> = $z12;

        if z0 != 0 goto label18;

        if z1 != 0 goto label20;

     label18:
        if z1 == 0 goto label19;

        if z2 != 0 goto label20;

     label19:
        if z2 == 0 goto label21;

        if z0 != 0 goto label21;

     label20:
        $z13 = 1;

        goto label22;

     label21:
        $z13 = 0;

     label22:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean C> = $z13;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean N> = z2;

        $b15 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i6);

        if $b15 != 0 goto label23;

        $z14 = 1;

        goto label24;

     label23:
        $z14 = 0;

     label24:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z> = $z14;

        if z0 == 0 goto label25;

        if z1 != 0 goto label25;

        if z2 == 0 goto label26;

     label25:
        if z0 != 0 goto label27;

        if z1 == 0 goto label27;

        if z2 == 0 goto label27;

     label26:
        $z15 = 1;

        goto label28;

     label27:
        $z15 = 0;

     label28:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean V> = $z15;

        $z16 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean N>;

        $z17 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean V>;

        if $z16 == $z17 goto label29;

        $z18 = 1;

        goto label30;

     label29:
        $z18 = 0;

     label30:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean S> = $z18;

        $i13 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i14 = $i13 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i14;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$CPSE)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, $i15, $i16, $i17, $i18, $i19, $i20, $i22, $i23;
        avrora.arch.legacy.LegacyInstr$CPSE r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3;
        byte b2, b3, $b21;
        boolean z0, z1, z2, z3, z4, z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$CPSE;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$CPSE: avrora.arch.legacy.LegacyRegister r1>;

        b2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r2);

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$CPSE: avrora.arch.legacy.LegacyRegister r2>;

        b3 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r3);

        $i5 = b2 - b3;

        i6 = $i5 - 0;

        $i7 = b2 & 128;

        if $i7 == 0 goto label01;

        $z6 = 1;

        goto label02;

     label01:
        $z6 = 0;

     label02:
        z0 = $z6;

        $i8 = b3 & 128;

        if $i8 == 0 goto label03;

        $z7 = 1;

        goto label04;

     label03:
        $z7 = 0;

     label04:
        z1 = $z7;

        $i9 = i6 & 128;

        if $i9 == 0 goto label05;

        $z8 = 1;

        goto label06;

     label05:
        $z8 = 0;

     label06:
        z2 = $z8;

        $i10 = b2 & 8;

        if $i10 == 0 goto label07;

        $z9 = 1;

        goto label08;

     label07:
        $z9 = 0;

     label08:
        z3 = $z9;

        $i11 = b3 & 8;

        if $i11 == 0 goto label09;

        $z10 = 1;

        goto label10;

     label09:
        $z10 = 0;

     label10:
        z4 = $z10;

        $i12 = i6 & 8;

        if $i12 == 0 goto label11;

        $z11 = 1;

        goto label12;

     label11:
        $z11 = 0;

     label12:
        z5 = $z11;

        if z3 != 0 goto label13;

        if z4 != 0 goto label15;

     label13:
        if z4 == 0 goto label14;

        if z5 != 0 goto label15;

     label14:
        if z5 == 0 goto label16;

        if z3 != 0 goto label16;

     label15:
        $z12 = 1;

        goto label17;

     label16:
        $z12 = 0;

     label17:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean H> = $z12;

        if z0 != 0 goto label18;

        if z1 != 0 goto label20;

     label18:
        if z1 == 0 goto label19;

        if z2 != 0 goto label20;

     label19:
        if z2 == 0 goto label21;

        if z0 != 0 goto label21;

     label20:
        $z13 = 1;

        goto label22;

     label21:
        $z13 = 0;

     label22:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean C> = $z13;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean N> = z2;

        $b21 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i6);

        if $b21 != 0 goto label23;

        $z14 = 1;

        goto label24;

     label23:
        $z14 = 0;

     label24:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z> = $z14;

        if z0 == 0 goto label25;

        if z1 != 0 goto label25;

        if z2 == 0 goto label26;

     label25:
        if z0 != 0 goto label27;

        if z1 == 0 goto label27;

        if z2 == 0 goto label27;

     label26:
        $z15 = 1;

        goto label28;

     label27:
        $z15 = 0;

     label28:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean V> = $z15;

        $z16 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean N>;

        $z17 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean V>;

        if $z16 == $z17 goto label29;

        $z18 = 1;

        goto label30;

     label29:
        $z18 = 0;

     label30:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean S> = $z18;

        if b2 != b3 goto label32;

        $i13 = r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC>;

        i14 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int getInstrSize(int)>($i13);

        $i15 = r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC>;

        $i16 = $i15 + i14;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i16;

        if i14 != 4 goto label31;

        $i19 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i20 = $i19 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i20;

        goto label32;

     label31:
        $i17 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i18 = $i17 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i18;

     label32:
        $i22 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i23 = $i22 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i23;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$DEC)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, i2, $i3, $i5, $i6, $i7;
        avrora.arch.legacy.LegacyInstr$DEC r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3;
        byte b4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$DEC;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$DEC: avrora.arch.legacy.LegacyRegister r1>;

        i2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int getRegisterUnsigned(avrora.arch.legacy.LegacyRegister)>($r2);

        $i3 = i2 - 1;

        b4 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>($i3);

        $i5 = b4 & 128;

        if $i5 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean N> = $z2;

        if b4 != 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z> = $z3;

        if i2 != 128 goto label5;

        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean V> = $z4;

        $z1 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean N>;

        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean V>;

        if $z1 == $z0 goto label7;

        $z5 = 1;

        goto label8;

     label7:
        $z5 = 0;

     label8:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean S> = $z5;

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$DEC: avrora.arch.legacy.LegacyRegister r1>;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r3, b4);

        $i6 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i7 = $i6 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i7;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$EICALL)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i3;
        avrora.arch.legacy.LegacyInstr$EICALL r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$EICALL;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 4;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$EIJMP)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i3;
        avrora.arch.legacy.LegacyInstr$EIJMP r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$EIJMP;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$ELPM)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, i3, $i5, $i6;
        avrora.arch.legacy.LegacyRegister $r1, $r2;
        byte $b4;
        avrora.arch.legacy.LegacyInstr$ELPM r3;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r3 := @parameter0: avrora.arch.legacy.LegacyInstr$ELPM;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r1 = <avrora.arch.legacy.LegacyInterpreter: avrora.arch.legacy.LegacyRegister RZ>;

        $i2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int getRegisterWord(avrora.arch.legacy.LegacyRegister)>($r1);

        i3 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int extended(int)>($i2);

        $r2 = <avrora.arch.legacy.LegacyInterpreter: avrora.arch.legacy.LegacyRegister R0>;

        $b4 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getFlashByte(int)>(i3);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r2, $b4);

        $i5 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i6 = $i5 + 3;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i6;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$ELPMD)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, i3, $i5, $i6;
        avrora.arch.legacy.LegacyRegister $r1, $r3;
        avrora.arch.legacy.LegacyInstr$ELPMD r2;
        byte $b4;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r2 := @parameter0: avrora.arch.legacy.LegacyInstr$ELPMD;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r1 = <avrora.arch.legacy.LegacyInterpreter: avrora.arch.legacy.LegacyRegister RZ>;

        $i2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int getRegisterWord(avrora.arch.legacy.LegacyRegister)>($r1);

        i3 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int extended(int)>($i2);

        $r3 = r2.<avrora.arch.legacy.LegacyInstr$ELPMD: avrora.arch.legacy.LegacyRegister r1>;

        $b4 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getFlashByte(int)>(i3);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r3, $b4);

        $i5 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i6 = $i5 + 3;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i6;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$ELPMPI)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, i3, $i5, $i6, $i7, $i8, $i9, $i10, $i12;
        avrora.arch.legacy.LegacyRegister $r1, $r3, $r4;
        avrora.arch.legacy.LegacyInstr$ELPMPI r2;
        byte $b4, $b11, $b13;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r2 := @parameter0: avrora.arch.legacy.LegacyInstr$ELPMPI;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r1 = <avrora.arch.legacy.LegacyInterpreter: avrora.arch.legacy.LegacyRegister RZ>;

        $i2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int getRegisterWord(avrora.arch.legacy.LegacyRegister)>($r1);

        i3 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int extended(int)>($i2);

        $r3 = r2.<avrora.arch.legacy.LegacyInstr$ELPMPI: avrora.arch.legacy.LegacyRegister r1>;

        $b4 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getFlashByte(int)>(i3);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r3, $b4);

        $r4 = <avrora.arch.legacy.LegacyInterpreter: avrora.arch.legacy.LegacyRegister RZ>;

        $i5 = i3 + 1;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterWord(avrora.arch.legacy.LegacyRegister,int)>($r4, $i5);

        $i6 = i3 & 65535;

        if $i6 != 65535 goto label1;

        $i10 = r0.<avrora.arch.legacy.LegacyInterpreter: int RAMPZ>;

        $i9 = r0.<avrora.arch.legacy.LegacyInterpreter: int RAMPZ>;

        $b11 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getIORegisterByte(int)>($i9);

        $i12 = $b11 + 1;

        $b13 = (byte) $i12;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeIORegisterByte(int,byte)>($i10, $b13);

     label1:
        $i7 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i8 = $i7 + 3;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i8;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$EOR)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i4, $i6, $i7, $i8;
        avrora.arch.legacy.LegacyInstr$EOR r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3, $r4;
        byte $b2, $b3, b5;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$EOR;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$EOR: avrora.arch.legacy.LegacyRegister r1>;

        $b2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r2);

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$EOR: avrora.arch.legacy.LegacyRegister r2>;

        $b3 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r3);

        $i4 = $b2 ^ $b3;

        b5 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>($i4);

        $i6 = b5 & 128;

        if $i6 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean N> = $z2;

        if b5 != 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z> = $z3;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean V> = 0;

        $z1 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean N>;

        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean V>;

        if $z1 == $z0 goto label5;

        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean S> = $z4;

        $r4 = r1.<avrora.arch.legacy.LegacyInstr$EOR: avrora.arch.legacy.LegacyRegister r1>;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r4, b5);

        $i7 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i8 = $i7 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i8;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$FMUL)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, $i10, $i11;
        avrora.arch.legacy.LegacyInstr$FMUL r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3, $r4, $r5;
        byte $b8, $b9;
        boolean $z0, $z1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$FMUL;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$FMUL: avrora.arch.legacy.LegacyRegister r1>;

        $i2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int getRegisterUnsigned(avrora.arch.legacy.LegacyRegister)>($r2);

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$FMUL: avrora.arch.legacy.LegacyRegister r2>;

        $i3 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int getRegisterUnsigned(avrora.arch.legacy.LegacyRegister)>($r3);

        $i4 = $i2 * $i3;

        i5 = $i4 << 1;

        $i6 = i5 & 65535;

        if $i6 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z> = $z0;

        $i7 = i5 & 65536;

        if $i7 == 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean C> = $z1;

        $r4 = <avrora.arch.legacy.LegacyInterpreter: avrora.arch.legacy.LegacyRegister R0>;

        $b8 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i5);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r4, $b8);

        $r5 = <avrora.arch.legacy.LegacyInterpreter: avrora.arch.legacy.LegacyRegister R1>;

        $b9 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte high(int)>(i5);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r5, $b9);

        $i10 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i11 = $i10 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i11;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$FMULS)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i4, i5, $i6, $i7, $i10, $i11;
        avrora.arch.legacy.LegacyInstr$FMULS r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3, $r4, $r5;
        byte $b2, $b3, $b8, $b9;
        boolean $z0, $z1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$FMULS;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$FMULS: avrora.arch.legacy.LegacyRegister r1>;

        $b2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r2);

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$FMULS: avrora.arch.legacy.LegacyRegister r2>;

        $b3 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r3);

        $i4 = $b2 * $b3;

        i5 = $i4 << 1;

        $i6 = i5 & 65535;

        if $i6 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z> = $z0;

        $i7 = i5 & 65536;

        if $i7 == 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean C> = $z1;

        $r4 = <avrora.arch.legacy.LegacyInterpreter: avrora.arch.legacy.LegacyRegister R0>;

        $b8 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i5);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r4, $b8);

        $r5 = <avrora.arch.legacy.LegacyInterpreter: avrora.arch.legacy.LegacyRegister R1>;

        $b9 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte high(int)>(i5);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r5, $b9);

        $i10 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i11 = $i10 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i11;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$FMULSU)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i3, $i4, i5, $i6, $i7, $i10, $i11;
        avrora.arch.legacy.LegacyInstr$FMULSU r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3, $r4, $r5;
        byte $b2, $b8, $b9;
        boolean $z0, $z1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$FMULSU;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$FMULSU: avrora.arch.legacy.LegacyRegister r1>;

        $b2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r2);

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$FMULSU: avrora.arch.legacy.LegacyRegister r2>;

        $i3 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int getRegisterUnsigned(avrora.arch.legacy.LegacyRegister)>($r3);

        $i4 = $b2 * $i3;

        i5 = $i4 << 1;

        $i6 = i5 & 65535;

        if $i6 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z> = $z0;

        $i7 = i5 & 65536;

        if $i7 == 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean C> = $z1;

        $r4 = <avrora.arch.legacy.LegacyInterpreter: avrora.arch.legacy.LegacyRegister R0>;

        $b8 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i5);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r4, $b8);

        $r5 = <avrora.arch.legacy.LegacyInterpreter: avrora.arch.legacy.LegacyRegister R1>;

        $b9 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte high(int)>(i5);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r5, $b9);

        $i10 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i11 = $i10 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i11;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$ICALL)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, i2, $i5, $i6, $i7, $i8;
        byte $b3, $b4;
        avrora.arch.legacy.LegacyRegister $r1;
        avrora.arch.legacy.LegacyInstr$ICALL r2;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r2 := @parameter0: avrora.arch.legacy.LegacyInstr$ICALL;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        i2 = $i1 / 2;

        $b3 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i2);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void pushByte(byte)>($b3);

        $b4 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte high(int)>(i2);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void pushByte(byte)>($b4);

        $r1 = <avrora.arch.legacy.LegacyInterpreter: avrora.arch.legacy.LegacyRegister RZ>;

        $i5 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int getRegisterWord(avrora.arch.legacy.LegacyRegister)>($r1);

        $i6 = $i5 * 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i6;

        $i7 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i8 = $i7 + 3;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i8;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$IJMP)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        avrora.arch.legacy.LegacyRegister $r1;
        int $i0, $i1, $i2, $i3;
        avrora.arch.legacy.LegacyInstr$IJMP r2;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r2 := @parameter0: avrora.arch.legacy.LegacyInstr$IJMP;

        $r1 = <avrora.arch.legacy.LegacyInterpreter: avrora.arch.legacy.LegacyRegister RZ>;

        $i0 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int getRegisterWord(avrora.arch.legacy.LegacyRegister)>($r1);

        $i1 = $i0 * 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$IN)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i4, $i5;
        avrora.arch.legacy.LegacyInstr$IN r1;
        avrora.arch.legacy.LegacyRegister $r2;
        byte $b3;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$IN;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$IN: avrora.arch.legacy.LegacyRegister r1>;

        $i2 = r1.<avrora.arch.legacy.LegacyInstr$IN: int imm1>;

        $b3 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getIORegisterByte(int)>($i2);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r2, $b3);

        $i4 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i5 = $i4 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i5;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$INC)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, i2, $i3, $i5, $i6, $i7;
        avrora.arch.legacy.LegacyInstr$INC r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3;
        byte b4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$INC;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$INC: avrora.arch.legacy.LegacyRegister r1>;

        i2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int getRegisterUnsigned(avrora.arch.legacy.LegacyRegister)>($r2);

        $i3 = i2 + 1;

        b4 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>($i3);

        $i5 = b4 & 128;

        if $i5 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean N> = $z2;

        if b4 != 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z> = $z3;

        if i2 != 127 goto label5;

        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean V> = $z4;

        $z1 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean N>;

        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean V>;

        if $z1 == $z0 goto label7;

        $z5 = 1;

        goto label8;

     label7:
        $z5 = 0;

     label8:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean S> = $z5;

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$INC: avrora.arch.legacy.LegacyRegister r1>;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r3, b4);

        $i6 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i7 = $i6 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i7;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$JMP)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        avrora.arch.legacy.LegacyInstr$JMP r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$JMP;

        $i0 = r1.<avrora.arch.legacy.LegacyInstr$JMP: int imm1>;

        $i1 = $i0 * 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 3;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$LD)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i4, $i5;
        avrora.arch.legacy.LegacyInstr$LD r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3;
        byte $b3;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$LD;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$LD: avrora.arch.legacy.LegacyRegister r1>;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$LD: avrora.arch.legacy.LegacyRegister r2>;

        $i2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int getRegisterWord(avrora.arch.legacy.LegacyRegister)>($r2);

        $b3 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getDataByte(int)>($i2);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r3, $b3);

        $i4 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i5 = $i4 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i5;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$LDD)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7;
        avrora.arch.legacy.LegacyInstr$LDD r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3;
        byte $b5;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$LDD;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$LDD: avrora.arch.legacy.LegacyRegister r1>;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$LDD: avrora.arch.legacy.LegacyRegister r2>;

        $i2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int getRegisterWord(avrora.arch.legacy.LegacyRegister)>($r2);

        $i3 = r1.<avrora.arch.legacy.LegacyInstr$LDD: int imm1>;

        $i4 = $i2 + $i3;

        $b5 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getDataByte(int)>($i4);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r3, $b5);

        $i6 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i7 = $i6 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i7;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$LDI)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i4, $i5;
        avrora.arch.legacy.LegacyInstr$LDI r1;
        avrora.arch.legacy.LegacyRegister $r2;
        byte $b3;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$LDI;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$LDI: avrora.arch.legacy.LegacyRegister r1>;

        $i2 = r1.<avrora.arch.legacy.LegacyInstr$LDI: int imm1>;

        $b3 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>($i2);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r2, $b3);

        $i4 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i5 = $i4 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i5;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$LDPD)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, i3, $i5, $i6;
        avrora.arch.legacy.LegacyInstr$LDPD r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3, $r4;
        byte $b4;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$LDPD;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$LDPD: avrora.arch.legacy.LegacyRegister r2>;

        $i2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int getRegisterWord(avrora.arch.legacy.LegacyRegister)>($r2);

        i3 = $i2 - 1;

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$LDPD: avrora.arch.legacy.LegacyRegister r1>;

        $b4 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getDataByte(int)>(i3);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r3, $b4);

        $r4 = r1.<avrora.arch.legacy.LegacyInstr$LDPD: avrora.arch.legacy.LegacyRegister r2>;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterWord(avrora.arch.legacy.LegacyRegister,int)>($r4, i3);

        $i5 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i6 = $i5 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i6;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$LDPI)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, i2, $i4, $i5, $i6;
        avrora.arch.legacy.LegacyInstr$LDPI r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3, $r4;
        byte $b3;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$LDPI;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$LDPI: avrora.arch.legacy.LegacyRegister r2>;

        i2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int getRegisterWord(avrora.arch.legacy.LegacyRegister)>($r2);

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$LDPI: avrora.arch.legacy.LegacyRegister r1>;

        $b3 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getDataByte(int)>(i2);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r3, $b3);

        $r4 = r1.<avrora.arch.legacy.LegacyInstr$LDPI: avrora.arch.legacy.LegacyRegister r2>;

        $i4 = i2 + 1;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterWord(avrora.arch.legacy.LegacyRegister,int)>($r4, $i4);

        $i5 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i6 = $i5 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i6;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$LDS)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i4, $i5;
        avrora.arch.legacy.LegacyInstr$LDS r1;
        avrora.arch.legacy.LegacyRegister $r2;
        byte $b3;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$LDS;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 4;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$LDS: avrora.arch.legacy.LegacyRegister r1>;

        $i2 = r1.<avrora.arch.legacy.LegacyInstr$LDS: int imm1>;

        $b3 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getDataByte(int)>($i2);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r2, $b3);

        $i4 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i5 = $i4 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i5;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$LPM)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i4, $i5;
        avrora.arch.legacy.LegacyRegister $r1, $r2;
        byte $b3;
        avrora.arch.legacy.LegacyInstr$LPM r3;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r3 := @parameter0: avrora.arch.legacy.LegacyInstr$LPM;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = <avrora.arch.legacy.LegacyInterpreter: avrora.arch.legacy.LegacyRegister R0>;

        $r1 = <avrora.arch.legacy.LegacyInterpreter: avrora.arch.legacy.LegacyRegister RZ>;

        $i2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int getRegisterWord(avrora.arch.legacy.LegacyRegister)>($r1);

        $b3 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getFlashByte(int)>($i2);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r2, $b3);

        $i4 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i5 = $i4 + 3;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i5;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$LPMD)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i4, $i5;
        avrora.arch.legacy.LegacyInstr$LPMD r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3;
        byte $b3;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$LPMD;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$LPMD: avrora.arch.legacy.LegacyRegister r1>;

        $r2 = <avrora.arch.legacy.LegacyInterpreter: avrora.arch.legacy.LegacyRegister RZ>;

        $i2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int getRegisterWord(avrora.arch.legacy.LegacyRegister)>($r2);

        $b3 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getFlashByte(int)>($i2);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r3, $b3);

        $i4 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i5 = $i4 + 3;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i5;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$LPMPI)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, i2, $i4, $i5, $i6;
        avrora.arch.legacy.LegacyRegister $r1, $r3, $r4;
        avrora.arch.legacy.LegacyInstr$LPMPI r2;
        byte $b3;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r2 := @parameter0: avrora.arch.legacy.LegacyInstr$LPMPI;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r1 = <avrora.arch.legacy.LegacyInterpreter: avrora.arch.legacy.LegacyRegister RZ>;

        i2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int getRegisterWord(avrora.arch.legacy.LegacyRegister)>($r1);

        $r3 = r2.<avrora.arch.legacy.LegacyInstr$LPMPI: avrora.arch.legacy.LegacyRegister r1>;

        $b3 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getFlashByte(int)>(i2);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r3, $b3);

        $r4 = <avrora.arch.legacy.LegacyInterpreter: avrora.arch.legacy.LegacyRegister RZ>;

        $i4 = i2 + 1;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterWord(avrora.arch.legacy.LegacyRegister,int)>($r4, $i4);

        $i5 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i6 = $i5 + 3;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i6;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$LSL)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i3, $i4, $i5, $i8, $i9, i10, i11;
        avrora.arch.legacy.LegacyInstr$LSL r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3;
        byte b2, $b6, b7;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$LSL;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$LSL: avrora.arch.legacy.LegacyRegister r1>;

        b2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r2);

        i10 = b2 << 1;

        i11 = staticinvoke <cck.util.Arithmetic: int setBit(int,int,boolean)>(i10, 0, 0);

        $i3 = i11 & 16;

        if $i3 == 0 goto label01;

        $z5 = 1;

        goto label02;

     label01:
        $z5 = 0;

     label02:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean H> = $z5;

        $i4 = i11 & 256;

        if $i4 == 0 goto label03;

        $z6 = 1;

        goto label04;

     label03:
        $z6 = 0;

     label04:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean C> = $z6;

        $i5 = i11 & 128;

        if $i5 == 0 goto label05;

        $z7 = 1;

        goto label06;

     label05:
        $z7 = 0;

     label06:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean N> = $z7;

        $b6 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i11);

        if $b6 != 0 goto label07;

        $z8 = 1;

        goto label08;

     label07:
        $z8 = 0;

     label08:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z> = $z8;

        $z2 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean N>;

        $z1 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean C>;

        if $z2 == $z1 goto label09;

        $z9 = 1;

        goto label10;

     label09:
        $z9 = 0;

     label10:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean V> = $z9;

        $z4 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean N>;

        $z3 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean V>;

        if $z4 == $z3 goto label11;

        $z10 = 1;

        goto label12;

     label11:
        $z10 = 0;

     label12:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean S> = $z10;

        b7 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i11);

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$LSL: avrora.arch.legacy.LegacyRegister r1>;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r3, b7);

        $i8 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i9 = $i8 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i9;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$LSR)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i3, $i4, $i7, $i8, i9, i10;
        avrora.arch.legacy.LegacyInstr$LSR r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3;
        byte b2, $b5, b6;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$LSR;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$LSR: avrora.arch.legacy.LegacyRegister r1>;

        b2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r2);

        $i3 = b2 & 255;

        i9 = $i3 >> 1;

        i10 = staticinvoke <cck.util.Arithmetic: int setBit(int,int,boolean)>(i9, 7, 0);

        $i4 = b2 & 1;

        if $i4 == 0 goto label1;

        $z5 = 1;

        goto label2;

     label1:
        $z5 = 0;

     label2:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean C> = $z5;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean N> = 0;

        $b5 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i10);

        if $b5 != 0 goto label3;

        $z6 = 1;

        goto label4;

     label3:
        $z6 = 0;

     label4:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z> = $z6;

        $z2 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean N>;

        $z1 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean C>;

        if $z2 == $z1 goto label5;

        $z7 = 1;

        goto label6;

     label5:
        $z7 = 0;

     label6:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean V> = $z7;

        $z4 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean N>;

        $z3 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean V>;

        if $z4 == $z3 goto label7;

        $z8 = 1;

        goto label8;

     label7:
        $z8 = 0;

     label8:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean S> = $z8;

        b6 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i10);

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$LSR: avrora.arch.legacy.LegacyRegister r1>;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r3, b6);

        $i7 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i8 = $i7 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i8;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$MOV)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i3, $i4;
        avrora.arch.legacy.LegacyInstr$MOV r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3;
        byte $b2;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$MOV;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$MOV: avrora.arch.legacy.LegacyRegister r1>;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$MOV: avrora.arch.legacy.LegacyRegister r2>;

        $b2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r2);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r3, $b2);

        $i3 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i4 = $i3 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i4;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$MOVW)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i3, $i4;
        avrora.arch.legacy.LegacyInstr$MOVW r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$MOVW;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$MOVW: avrora.arch.legacy.LegacyRegister r1>;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$MOVW: avrora.arch.legacy.LegacyRegister r2>;

        $i2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int getRegisterWord(avrora.arch.legacy.LegacyRegister)>($r2);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterWord(avrora.arch.legacy.LegacyRegister,int)>($r3, $i2);

        $i3 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i4 = $i3 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i4;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$MUL)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8;
        avrora.arch.legacy.LegacyInstr$MUL r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$MUL;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$MUL: avrora.arch.legacy.LegacyRegister r1>;

        $i2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int getRegisterUnsigned(avrora.arch.legacy.LegacyRegister)>($r2);

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$MUL: avrora.arch.legacy.LegacyRegister r2>;

        $i3 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int getRegisterUnsigned(avrora.arch.legacy.LegacyRegister)>($r3);

        i4 = $i2 * $i3;

        $i5 = i4 & 32768;

        if $i5 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean C> = $z0;

        $i6 = i4 & 65535;

        if $i6 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z> = $z1;

        $r4 = <avrora.arch.legacy.LegacyInterpreter: avrora.arch.legacy.LegacyRegister R0>;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterWord(avrora.arch.legacy.LegacyRegister,int)>($r4, i4);

        $i7 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i8 = $i7 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i8;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$MULS)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, i4, $i5, $i6, $i7, $i8;
        avrora.arch.legacy.LegacyInstr$MULS r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3, $r4;
        byte $b2, $b3;
        boolean $z0, $z1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$MULS;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$MULS: avrora.arch.legacy.LegacyRegister r1>;

        $b2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r2);

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$MULS: avrora.arch.legacy.LegacyRegister r2>;

        $b3 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r3);

        i4 = $b2 * $b3;

        $i5 = i4 & 32768;

        if $i5 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean C> = $z0;

        $i6 = i4 & 65535;

        if $i6 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z> = $z1;

        $r4 = <avrora.arch.legacy.LegacyInterpreter: avrora.arch.legacy.LegacyRegister R0>;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterWord(avrora.arch.legacy.LegacyRegister,int)>($r4, i4);

        $i7 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i8 = $i7 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i8;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$MULSU)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i3, i4, $i5, $i6, $i7, $i8;
        avrora.arch.legacy.LegacyInstr$MULSU r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3, $r4;
        byte $b2;
        boolean $z0, $z1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$MULSU;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$MULSU: avrora.arch.legacy.LegacyRegister r1>;

        $b2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r2);

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$MULSU: avrora.arch.legacy.LegacyRegister r2>;

        $i3 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int getRegisterUnsigned(avrora.arch.legacy.LegacyRegister)>($r3);

        i4 = $b2 * $i3;

        $i5 = i4 & 32768;

        if $i5 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean C> = $z0;

        $i6 = i4 & 65535;

        if $i6 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z> = $z1;

        $r4 = <avrora.arch.legacy.LegacyInterpreter: avrora.arch.legacy.LegacyRegister R0>;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterWord(avrora.arch.legacy.LegacyRegister,int)>($r4, i4);

        $i7 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i8 = $i7 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i8;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$NEG)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i15;
        avrora.arch.legacy.LegacyInstr$NEG r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3;
        byte b3, b13, $b16;
        boolean z0, z1, z2, z3, z4, z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$NEG;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$NEG: avrora.arch.legacy.LegacyRegister r1>;

        b3 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r2);

        $i5 = 0 - b3;

        i6 = $i5 - 0;

        $i7 = 0 & 128;

        if $i7 == 0 goto label01;

        $z6 = 1;

        goto label02;

     label01:
        $z6 = 0;

     label02:
        z0 = $z6;

        $i8 = b3 & 128;

        if $i8 == 0 goto label03;

        $z7 = 1;

        goto label04;

     label03:
        $z7 = 0;

     label04:
        z1 = $z7;

        $i9 = i6 & 128;

        if $i9 == 0 goto label05;

        $z8 = 1;

        goto label06;

     label05:
        $z8 = 0;

     label06:
        z2 = $z8;

        $i10 = 0 & 8;

        if $i10 == 0 goto label07;

        $z9 = 1;

        goto label08;

     label07:
        $z9 = 0;

     label08:
        z3 = $z9;

        $i11 = b3 & 8;

        if $i11 == 0 goto label09;

        $z10 = 1;

        goto label10;

     label09:
        $z10 = 0;

     label10:
        z4 = $z10;

        $i12 = i6 & 8;

        if $i12 == 0 goto label11;

        $z11 = 1;

        goto label12;

     label11:
        $z11 = 0;

     label12:
        z5 = $z11;

        if z3 != 0 goto label13;

        if z4 != 0 goto label15;

     label13:
        if z4 == 0 goto label14;

        if z5 != 0 goto label15;

     label14:
        if z5 == 0 goto label16;

        if z3 != 0 goto label16;

     label15:
        $z12 = 1;

        goto label17;

     label16:
        $z12 = 0;

     label17:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean H> = $z12;

        if z0 != 0 goto label18;

        if z1 != 0 goto label20;

     label18:
        if z1 == 0 goto label19;

        if z2 != 0 goto label20;

     label19:
        if z2 == 0 goto label21;

        if z0 != 0 goto label21;

     label20:
        $z13 = 1;

        goto label22;

     label21:
        $z13 = 0;

     label22:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean C> = $z13;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean N> = z2;

        $b16 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i6);

        if $b16 != 0 goto label23;

        $z14 = 1;

        goto label24;

     label23:
        $z14 = 0;

     label24:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z> = $z14;

        if z0 == 0 goto label25;

        if z1 != 0 goto label25;

        if z2 == 0 goto label26;

     label25:
        if z0 != 0 goto label27;

        if z1 == 0 goto label27;

        if z2 == 0 goto label27;

     label26:
        $z15 = 1;

        goto label28;

     label27:
        $z15 = 0;

     label28:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean V> = $z15;

        $z16 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean N>;

        $z17 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean V>;

        if $z16 == $z17 goto label29;

        $z18 = 1;

        goto label30;

     label29:
        $z18 = 0;

     label30:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean S> = $z18;

        b13 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i6);

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$NEG: avrora.arch.legacy.LegacyRegister r1>;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r3, b13);

        $i14 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i15 = $i14 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i15;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$NOP)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i3;
        avrora.arch.legacy.LegacyInstr$NOP r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$NOP;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$OR)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, i4, $i5, $i8, $i9;
        avrora.arch.legacy.LegacyInstr$OR r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3, $r4;
        byte b2, b3, $b6, b7;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$OR;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$OR: avrora.arch.legacy.LegacyRegister r1>;

        b2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r2);

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$OR: avrora.arch.legacy.LegacyRegister r2>;

        b3 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r3);

        i4 = b2 | b3;

        $i5 = i4 & 128;

        if $i5 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean N> = $z2;

        $b6 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i4);

        if $b6 != 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z> = $z3;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean V> = 0;

        $z1 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean N>;

        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean V>;

        if $z1 == $z0 goto label5;

        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean S> = $z4;

        b7 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i4);

        $r4 = r1.<avrora.arch.legacy.LegacyInstr$OR: avrora.arch.legacy.LegacyRegister r1>;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r4, b7);

        $i8 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i9 = $i8 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i9;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$ORI)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, i3, i4, $i5, $i8, $i9;
        avrora.arch.legacy.LegacyInstr$ORI r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3;
        byte b2, $b6, b7;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$ORI;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$ORI: avrora.arch.legacy.LegacyRegister r1>;

        b2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r2);

        i3 = r1.<avrora.arch.legacy.LegacyInstr$ORI: int imm1>;

        i4 = b2 | i3;

        $i5 = i4 & 128;

        if $i5 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean N> = $z2;

        $b6 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i4);

        if $b6 != 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z> = $z3;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean V> = 0;

        $z1 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean N>;

        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean V>;

        if $z1 == $z0 goto label5;

        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean S> = $z4;

        b7 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i4);

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$ORI: avrora.arch.legacy.LegacyRegister r1>;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r3, b7);

        $i8 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i9 = $i8 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i9;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$OUT)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i4, $i5;
        avrora.arch.legacy.LegacyInstr$OUT r1;
        avrora.arch.legacy.LegacyRegister $r2;
        byte $b3;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$OUT;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $i2 = r1.<avrora.arch.legacy.LegacyInstr$OUT: int imm1>;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$OUT: avrora.arch.legacy.LegacyRegister r1>;

        $b3 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r2);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeIORegisterByte(int,byte)>($i2, $b3);

        $i4 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i5 = $i4 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i5;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$POP)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i3, $i4;
        avrora.arch.legacy.LegacyInstr$POP r1;
        avrora.arch.legacy.LegacyRegister $r2;
        byte $b2;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$POP;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$POP: avrora.arch.legacy.LegacyRegister r1>;

        $b2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte popByte()>();

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r2, $b2);

        $i3 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i4 = $i3 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i4;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$PUSH)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i3, $i4;
        avrora.arch.legacy.LegacyInstr$PUSH r1;
        avrora.arch.legacy.LegacyRegister $r2;
        byte $b2;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$PUSH;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$PUSH: avrora.arch.legacy.LegacyRegister r1>;

        $b2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r2);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void pushByte(byte)>($b2);

        $i3 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i4 = $i3 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i4;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$RCALL)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, i2, $i5, $i6, $i7, $i8, $i9;
        byte $b3, $b4;
        avrora.arch.legacy.LegacyInstr$RCALL r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$RCALL;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        i2 = $i1 / 2;

        $b3 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i2);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void pushByte(byte)>($b3);

        $b4 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte high(int)>(i2);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void pushByte(byte)>($b4);

        $i5 = r1.<avrora.arch.legacy.LegacyInstr$RCALL: int imm1>;

        $i6 = $i5 + i2;

        $i7 = $i6 * 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i7;

        $i8 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i9 = $i8 + 3;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i9;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$RET)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        byte b0, b1;
        int $i2, $i3, $i4, $i5;
        avrora.arch.legacy.LegacyInstr$RET r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$RET;

        b0 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte popByte()>();

        b1 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte popByte()>();

        $i2 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: int uword(byte,byte)>(b1, b0);

        $i3 = $i2 * 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i3;

        $i4 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i5 = $i4 + 4;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i5;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$RETI)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        byte b0, b1;
        int $i2, $i3, $i4, $i5;
        avrora.arch.legacy.LegacyInstr$RETI r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$RETI;

        b0 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte popByte()>();

        b1 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte popByte()>();

        $i2 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: int uword(byte,byte)>(b1, b0);

        $i3 = $i2 * 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i3;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void enableInterrupts()>();

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean justReturnedFromInterrupt> = 1;

        $i4 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i5 = $i4 + 4;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i5;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$RJMP)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        avrora.arch.legacy.LegacyInstr$RJMP r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$RJMP;

        $i0 = r1.<avrora.arch.legacy.LegacyInstr$RJMP: int imm1>;

        $i2 = $i0 * 2;

        $i1 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i3 = $i2 + $i1;

        $i4 = $i3 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i4;

        $i5 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i6 = $i5 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i6;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$ROL)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, i2, $i3, $i4, $i5, $i8, $i9, i10, i11;
        avrora.arch.legacy.LegacyInstr$ROL r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        byte $b6, b7;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$ROL;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$ROL: avrora.arch.legacy.LegacyRegister r1>;

        i2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int getRegisterUnsigned(avrora.arch.legacy.LegacyRegister)>($r2);

        z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean C>;

        i10 = i2 << 1;

        i11 = staticinvoke <cck.util.Arithmetic: int setBit(int,int,boolean)>(i10, 0, z0);

        $i3 = i11 & 16;

        if $i3 == 0 goto label01;

        $z5 = 1;

        goto label02;

     label01:
        $z5 = 0;

     label02:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean H> = $z5;

        $i4 = i11 & 256;

        if $i4 == 0 goto label03;

        $z6 = 1;

        goto label04;

     label03:
        $z6 = 0;

     label04:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean C> = $z6;

        $i5 = i11 & 128;

        if $i5 == 0 goto label05;

        $z7 = 1;

        goto label06;

     label05:
        $z7 = 0;

     label06:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean N> = $z7;

        $b6 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i11);

        if $b6 != 0 goto label07;

        $z8 = 1;

        goto label08;

     label07:
        $z8 = 0;

     label08:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z> = $z8;

        $z2 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean N>;

        $z1 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean C>;

        if $z2 == $z1 goto label09;

        $z9 = 1;

        goto label10;

     label09:
        $z9 = 0;

     label10:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean V> = $z9;

        $z4 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean N>;

        $z3 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean V>;

        if $z4 == $z3 goto label11;

        $z10 = 1;

        goto label12;

     label11:
        $z10 = 0;

     label12:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean S> = $z10;

        b7 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i11);

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$ROL: avrora.arch.legacy.LegacyRegister r1>;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r3, b7);

        $i8 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i9 = $i8 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i9;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$ROR)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i3, $i4, $i7, $i8, i9, i10;
        avrora.arch.legacy.LegacyInstr$ROR r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3;
        byte b2, $b5, b6;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$ROR;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$ROR: avrora.arch.legacy.LegacyRegister r1>;

        b2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r2);

        z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean C>;

        $i3 = b2 & 255;

        i9 = $i3 >> 1;

        i10 = staticinvoke <cck.util.Arithmetic: int setBit(int,int,boolean)>(i9, 7, z0);

        $i4 = b2 & 1;

        if $i4 == 0 goto label1;

        $z5 = 1;

        goto label2;

     label1:
        $z5 = 0;

     label2:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean C> = $z5;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean N> = z0;

        $b5 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i10);

        if $b5 != 0 goto label3;

        $z6 = 1;

        goto label4;

     label3:
        $z6 = 0;

     label4:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z> = $z6;

        $z2 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean N>;

        $z1 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean C>;

        if $z2 == $z1 goto label5;

        $z7 = 1;

        goto label6;

     label5:
        $z7 = 0;

     label6:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean V> = $z7;

        $z4 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean N>;

        $z3 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean V>;

        if $z4 == $z3 goto label7;

        $z8 = 1;

        goto label8;

     label7:
        $z8 = 0;

     label8:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean S> = $z8;

        b6 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i10);

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$ROR: avrora.arch.legacy.LegacyRegister r1>;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r3, b6);

        $i7 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i8 = $i7 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i8;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$SBC)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i15;
        avrora.arch.legacy.LegacyInstr$SBC r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3, $r4;
        byte b2, b3, b4, b13, $b16;
        boolean $z0, z1, z2, z3, z4, z5, z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$SBC;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$SBC: avrora.arch.legacy.LegacyRegister r1>;

        b2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r2);

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$SBC: avrora.arch.legacy.LegacyRegister r2>;

        b3 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r3);

        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean C>;

        b4 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte bit(boolean)>($z0);

        $i5 = b2 - b3;

        i6 = $i5 - b4;

        $i7 = b2 & 128;

        if $i7 == 0 goto label01;

        $z8 = 1;

        goto label02;

     label01:
        $z8 = 0;

     label02:
        z1 = $z8;

        $i8 = b3 & 128;

        if $i8 == 0 goto label03;

        $z9 = 1;

        goto label04;

     label03:
        $z9 = 0;

     label04:
        z2 = $z9;

        $i9 = i6 & 128;

        if $i9 == 0 goto label05;

        $z10 = 1;

        goto label06;

     label05:
        $z10 = 0;

     label06:
        z3 = $z10;

        $i10 = b2 & 8;

        if $i10 == 0 goto label07;

        $z11 = 1;

        goto label08;

     label07:
        $z11 = 0;

     label08:
        z4 = $z11;

        $i11 = b3 & 8;

        if $i11 == 0 goto label09;

        $z12 = 1;

        goto label10;

     label09:
        $z12 = 0;

     label10:
        z5 = $z12;

        $i12 = i6 & 8;

        if $i12 == 0 goto label11;

        $z13 = 1;

        goto label12;

     label11:
        $z13 = 0;

     label12:
        z6 = $z13;

        if z4 != 0 goto label13;

        if z5 != 0 goto label15;

     label13:
        if z5 == 0 goto label14;

        if z6 != 0 goto label15;

     label14:
        if z6 == 0 goto label16;

        if z4 != 0 goto label16;

     label15:
        $z14 = 1;

        goto label17;

     label16:
        $z14 = 0;

     label17:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean H> = $z14;

        if z1 != 0 goto label18;

        if z2 != 0 goto label20;

     label18:
        if z2 == 0 goto label19;

        if z3 != 0 goto label20;

     label19:
        if z3 == 0 goto label21;

        if z1 != 0 goto label21;

     label20:
        $z15 = 1;

        goto label22;

     label21:
        $z15 = 0;

     label22:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean C> = $z15;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean N> = z3;

        $b16 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i6);

        if $b16 != 0 goto label23;

        $z7 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z>;

        if $z7 == 0 goto label23;

        $z16 = 1;

        goto label24;

     label23:
        $z16 = 0;

     label24:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z> = $z16;

        if z1 == 0 goto label25;

        if z2 != 0 goto label25;

        if z3 == 0 goto label26;

     label25:
        if z1 != 0 goto label27;

        if z2 == 0 goto label27;

        if z3 == 0 goto label27;

     label26:
        $z17 = 1;

        goto label28;

     label27:
        $z17 = 0;

     label28:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean V> = $z17;

        $z18 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean N>;

        $z19 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean V>;

        if $z18 == $z19 goto label29;

        $z20 = 1;

        goto label30;

     label29:
        $z20 = 0;

     label30:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean S> = $z20;

        b13 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i6);

        $r4 = r1.<avrora.arch.legacy.LegacyInstr$SBC: avrora.arch.legacy.LegacyRegister r1>;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r4, b13);

        $i14 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i15 = $i14 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i15;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$SBCI)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, i3, $i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i15;
        avrora.arch.legacy.LegacyInstr$SBCI r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3;
        byte b2, b4, b13, $b16;
        boolean $z0, z1, z2, z3, z4, z5, z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$SBCI;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$SBCI: avrora.arch.legacy.LegacyRegister r1>;

        b2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r2);

        i3 = r1.<avrora.arch.legacy.LegacyInstr$SBCI: int imm1>;

        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean C>;

        b4 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte bit(boolean)>($z0);

        $i5 = b2 - i3;

        i6 = $i5 - b4;

        $i7 = b2 & 128;

        if $i7 == 0 goto label01;

        $z8 = 1;

        goto label02;

     label01:
        $z8 = 0;

     label02:
        z1 = $z8;

        $i8 = i3 & 128;

        if $i8 == 0 goto label03;

        $z9 = 1;

        goto label04;

     label03:
        $z9 = 0;

     label04:
        z2 = $z9;

        $i9 = i6 & 128;

        if $i9 == 0 goto label05;

        $z10 = 1;

        goto label06;

     label05:
        $z10 = 0;

     label06:
        z3 = $z10;

        $i10 = b2 & 8;

        if $i10 == 0 goto label07;

        $z11 = 1;

        goto label08;

     label07:
        $z11 = 0;

     label08:
        z4 = $z11;

        $i11 = i3 & 8;

        if $i11 == 0 goto label09;

        $z12 = 1;

        goto label10;

     label09:
        $z12 = 0;

     label10:
        z5 = $z12;

        $i12 = i6 & 8;

        if $i12 == 0 goto label11;

        $z13 = 1;

        goto label12;

     label11:
        $z13 = 0;

     label12:
        z6 = $z13;

        if z4 != 0 goto label13;

        if z5 != 0 goto label15;

     label13:
        if z5 == 0 goto label14;

        if z6 != 0 goto label15;

     label14:
        if z6 == 0 goto label16;

        if z4 != 0 goto label16;

     label15:
        $z14 = 1;

        goto label17;

     label16:
        $z14 = 0;

     label17:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean H> = $z14;

        if z1 != 0 goto label18;

        if z2 != 0 goto label20;

     label18:
        if z2 == 0 goto label19;

        if z3 != 0 goto label20;

     label19:
        if z3 == 0 goto label21;

        if z1 != 0 goto label21;

     label20:
        $z15 = 1;

        goto label22;

     label21:
        $z15 = 0;

     label22:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean C> = $z15;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean N> = z3;

        $b16 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i6);

        if $b16 != 0 goto label23;

        $z7 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z>;

        if $z7 == 0 goto label23;

        $z16 = 1;

        goto label24;

     label23:
        $z16 = 0;

     label24:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z> = $z16;

        if z1 == 0 goto label25;

        if z2 != 0 goto label25;

        if z3 == 0 goto label26;

     label25:
        if z1 != 0 goto label27;

        if z2 == 0 goto label27;

        if z3 == 0 goto label27;

     label26:
        $z17 = 1;

        goto label28;

     label27:
        $z17 = 0;

     label28:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean V> = $z17;

        $z18 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean N>;

        $z19 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean V>;

        if $z18 == $z19 goto label29;

        $z20 = 1;

        goto label30;

     label29:
        $z20 = 0;

     label30:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean S> = $z20;

        b13 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i6);

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$SBCI: avrora.arch.legacy.LegacyRegister r1>;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r3, b13);

        $i14 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i15 = $i14 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i15;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$SBI)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        avrora.arch.legacy.LegacyInstr$SBI r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$SBI;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $i3 = r1.<avrora.arch.legacy.LegacyInstr$SBI: int imm1>;

        $i2 = r1.<avrora.arch.legacy.LegacyInstr$SBI: int imm2>;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void setIORegBit(int,int,boolean)>($i3, $i2, 1);

        $i4 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i5 = $i4 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i5;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$SBIC)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        avrora.arch.legacy.LegacyInstr$SBIC r1;
        boolean $z0;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$SBIC;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $i3 = r1.<avrora.arch.legacy.LegacyInstr$SBIC: int imm1>;

        $i2 = r1.<avrora.arch.legacy.LegacyInstr$SBIC: int imm2>;

        $z0 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: boolean getIORegBit(int,int)>($i3, $i2);

        if $z0 != 0 goto label2;

        $i4 = r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC>;

        i5 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int getInstrSize(int)>($i4);

        $i6 = r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC>;

        $i7 = $i6 + i5;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i7;

        if i5 != 4 goto label1;

        $i10 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i11 = $i10 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i11;

        goto label2;

     label1:
        $i8 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i9 = $i8 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i9;

     label2:
        $i12 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i13 = $i12 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i13;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$SBIS)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        avrora.arch.legacy.LegacyInstr$SBIS r1;
        boolean $z0;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$SBIS;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $i3 = r1.<avrora.arch.legacy.LegacyInstr$SBIS: int imm1>;

        $i2 = r1.<avrora.arch.legacy.LegacyInstr$SBIS: int imm2>;

        $z0 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: boolean getIORegBit(int,int)>($i3, $i2);

        if $z0 == 0 goto label2;

        $i4 = r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC>;

        i5 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int getInstrSize(int)>($i4);

        $i6 = r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC>;

        $i7 = $i6 + i5;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i7;

        if i5 != 4 goto label1;

        $i10 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i11 = $i10 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i11;

        goto label2;

     label1:
        $i8 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i9 = $i8 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i9;

     label2:
        $i12 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i13 = $i12 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i13;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$SBIW)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, i2, $i3, i4, $i5, $i6, $i7, $i8, $i9;
        avrora.arch.legacy.LegacyInstr$SBIW r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$SBIW;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$SBIW: avrora.arch.legacy.LegacyRegister r1>;

        i2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int getRegisterWord(avrora.arch.legacy.LegacyRegister)>($r2);

        $i3 = r1.<avrora.arch.legacy.LegacyInstr$SBIW: int imm1>;

        i4 = i2 - $i3;

        $i5 = i2 & 32768;

        if $i5 == 0 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        z0 = $z2;

        $i6 = i4 & 32768;

        if $i6 == 0 goto label03;

        $z3 = 1;

        goto label04;

     label03:
        $z3 = 0;

     label04:
        z1 = $z3;

        if z0 == 0 goto label05;

        if $z3 != 0 goto label05;

        $z4 = 1;

        goto label06;

     label05:
        $z4 = 0;

     label06:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean V> = $z4;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean N> = z1;

        $i9 = i4 & 65535;

        if $i9 != 0 goto label07;

        $z5 = 1;

        goto label08;

     label07:
        $z5 = 0;

     label08:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z> = $z5;

        if z1 == 0 goto label09;

        if z0 != 0 goto label09;

        $z6 = 1;

        goto label10;

     label09:
        $z6 = 0;

     label10:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean C> = $z6;

        $z7 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean N>;

        $z8 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean V>;

        if $z7 == $z8 goto label11;

        $z9 = 1;

        goto label12;

     label11:
        $z9 = 0;

     label12:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean S> = $z9;

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$SBIW: avrora.arch.legacy.LegacyRegister r1>;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterWord(avrora.arch.legacy.LegacyRegister,int)>($r3, i4);

        $i7 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i8 = $i7 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i8;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$SBR)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, i3, i4, $i5, $i8, $i9;
        avrora.arch.legacy.LegacyInstr$SBR r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3;
        byte b2, $b6, b7;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$SBR;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$SBR: avrora.arch.legacy.LegacyRegister r1>;

        b2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r2);

        i3 = r1.<avrora.arch.legacy.LegacyInstr$SBR: int imm1>;

        i4 = b2 | i3;

        $i5 = i4 & 128;

        if $i5 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean N> = $z2;

        $b6 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i4);

        if $b6 != 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z> = $z3;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean V> = 0;

        $z1 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean N>;

        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean V>;

        if $z1 == $z0 goto label5;

        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean S> = $z4;

        b7 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i4);

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$SBR: avrora.arch.legacy.LegacyRegister r1>;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r3, b7);

        $i8 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i9 = $i8 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i9;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$SBRC)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i3, $i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        avrora.arch.legacy.LegacyInstr$SBRC r1;
        avrora.arch.legacy.LegacyRegister $r2;
        byte $b2;
        boolean $z0;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$SBRC;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$SBRC: avrora.arch.legacy.LegacyRegister r1>;

        $b2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r2);

        $i3 = r1.<avrora.arch.legacy.LegacyInstr$SBRC: int imm1>;

        $z0 = staticinvoke <cck.util.Arithmetic: boolean getBit(byte,int)>($b2, $i3);

        if $z0 != 0 goto label2;

        $i4 = r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC>;

        i5 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int getInstrSize(int)>($i4);

        $i6 = r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC>;

        $i7 = $i6 + i5;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i7;

        if i5 != 4 goto label1;

        $i10 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i11 = $i10 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i11;

        goto label2;

     label1:
        $i8 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i9 = $i8 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i9;

     label2:
        $i12 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i13 = $i12 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i13;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$SBRS)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i3, $i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        avrora.arch.legacy.LegacyInstr$SBRS r1;
        avrora.arch.legacy.LegacyRegister $r2;
        byte $b2;
        boolean $z0;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$SBRS;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$SBRS: avrora.arch.legacy.LegacyRegister r1>;

        $b2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r2);

        $i3 = r1.<avrora.arch.legacy.LegacyInstr$SBRS: int imm1>;

        $z0 = staticinvoke <cck.util.Arithmetic: boolean getBit(byte,int)>($b2, $i3);

        if $z0 == 0 goto label2;

        $i4 = r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC>;

        i5 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int getInstrSize(int)>($i4);

        $i6 = r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC>;

        $i7 = $i6 + i5;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i7;

        if i5 != 4 goto label1;

        $i10 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i11 = $i10 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i11;

        goto label2;

     label1:
        $i8 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i9 = $i8 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i9;

     label2:
        $i12 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i13 = $i12 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i13;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$SEC)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i3;
        avrora.arch.legacy.LegacyInstr$SEC r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$SEC;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean C> = 1;

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$SEH)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i3;
        avrora.arch.legacy.LegacyInstr$SEH r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$SEH;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean H> = 1;

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$SEI)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i3;
        avrora.arch.legacy.LegacyInstr$SEI r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$SEI;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void enableInterrupts()>();

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$SEN)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i3;
        avrora.arch.legacy.LegacyInstr$SEN r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$SEN;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean N> = 1;

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$SER)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i3, $i4;
        avrora.arch.legacy.LegacyInstr$SER r1;
        avrora.arch.legacy.LegacyRegister $r2;
        byte $b2;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$SER;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$SER: avrora.arch.legacy.LegacyRegister r1>;

        $b2 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(255);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r2, $b2);

        $i3 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i4 = $i3 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i4;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$SES)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i3;
        avrora.arch.legacy.LegacyInstr$SES r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$SES;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean S> = 1;

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$SET)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i3;
        avrora.arch.legacy.LegacyInstr$SET r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$SET;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean T> = 1;

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$SEV)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i3;
        avrora.arch.legacy.LegacyInstr$SEV r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$SEV;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean V> = 1;

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$SEZ)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i3;
        avrora.arch.legacy.LegacyInstr$SEZ r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$SEZ;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z> = 1;

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$SLEEP)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i3;
        avrora.arch.legacy.LegacyInstr$SLEEP r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$SLEEP;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void enterSleepMode()>();

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$SPM)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i3;
        avrora.arch.legacy.LegacyInstr$SPM r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$SPM;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void storeProgramMemory()>();

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$ST)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i4, $i5;
        avrora.arch.legacy.LegacyInstr$ST r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3;
        byte $b3;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$ST;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$ST: avrora.arch.legacy.LegacyRegister r1>;

        $i2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int getRegisterWord(avrora.arch.legacy.LegacyRegister)>($r2);

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$ST: avrora.arch.legacy.LegacyRegister r2>;

        $b3 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r3);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeDataByte(int,byte)>($i2, $b3);

        $i4 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i5 = $i4 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i5;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$STD)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7;
        avrora.arch.legacy.LegacyInstr$STD r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3;
        byte $b5;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$STD;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$STD: avrora.arch.legacy.LegacyRegister r1>;

        $i2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int getRegisterWord(avrora.arch.legacy.LegacyRegister)>($r2);

        $i3 = r1.<avrora.arch.legacy.LegacyInstr$STD: int imm1>;

        $i4 = $i2 + $i3;

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$STD: avrora.arch.legacy.LegacyRegister r2>;

        $b5 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r3);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeDataByte(int,byte)>($i4, $b5);

        $i6 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i7 = $i6 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i7;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$STPD)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, i3, $i5, $i6;
        avrora.arch.legacy.LegacyInstr$STPD r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3, $r4;
        byte $b4;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$STPD;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$STPD: avrora.arch.legacy.LegacyRegister r1>;

        $i2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int getRegisterWord(avrora.arch.legacy.LegacyRegister)>($r2);

        i3 = $i2 - 1;

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$STPD: avrora.arch.legacy.LegacyRegister r2>;

        $b4 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r3);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeDataByte(int,byte)>(i3, $b4);

        $r4 = r1.<avrora.arch.legacy.LegacyInstr$STPD: avrora.arch.legacy.LegacyRegister r1>;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterWord(avrora.arch.legacy.LegacyRegister,int)>($r4, i3);

        $i5 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i6 = $i5 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i6;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$STPI)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, i2, $i4, $i5, $i6;
        avrora.arch.legacy.LegacyInstr$STPI r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3, $r4;
        byte $b3;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$STPI;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$STPI: avrora.arch.legacy.LegacyRegister r1>;

        i2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int getRegisterWord(avrora.arch.legacy.LegacyRegister)>($r2);

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$STPI: avrora.arch.legacy.LegacyRegister r2>;

        $b3 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r3);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeDataByte(int,byte)>(i2, $b3);

        $r4 = r1.<avrora.arch.legacy.LegacyInstr$STPI: avrora.arch.legacy.LegacyRegister r1>;

        $i4 = i2 + 1;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterWord(avrora.arch.legacy.LegacyRegister,int)>($r4, $i4);

        $i5 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i6 = $i5 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i6;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$STS)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i4, $i5;
        avrora.arch.legacy.LegacyInstr$STS r1;
        avrora.arch.legacy.LegacyRegister $r2;
        byte $b3;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$STS;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 4;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $i2 = r1.<avrora.arch.legacy.LegacyInstr$STS: int imm1>;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$STS: avrora.arch.legacy.LegacyRegister r1>;

        $b3 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r2);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeDataByte(int,byte)>($i2, $b3);

        $i4 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i5 = $i4 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i5;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$SUB)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i15;
        avrora.arch.legacy.LegacyInstr$SUB r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3, $r4;
        byte b2, b3, b13, $b16;
        boolean z0, z1, z2, z3, z4, z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$SUB;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$SUB: avrora.arch.legacy.LegacyRegister r1>;

        b2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r2);

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$SUB: avrora.arch.legacy.LegacyRegister r2>;

        b3 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r3);

        $i5 = b2 - b3;

        i6 = $i5 - 0;

        $i7 = b2 & 128;

        if $i7 == 0 goto label01;

        $z6 = 1;

        goto label02;

     label01:
        $z6 = 0;

     label02:
        z0 = $z6;

        $i8 = b3 & 128;

        if $i8 == 0 goto label03;

        $z7 = 1;

        goto label04;

     label03:
        $z7 = 0;

     label04:
        z1 = $z7;

        $i9 = i6 & 128;

        if $i9 == 0 goto label05;

        $z8 = 1;

        goto label06;

     label05:
        $z8 = 0;

     label06:
        z2 = $z8;

        $i10 = b2 & 8;

        if $i10 == 0 goto label07;

        $z9 = 1;

        goto label08;

     label07:
        $z9 = 0;

     label08:
        z3 = $z9;

        $i11 = b3 & 8;

        if $i11 == 0 goto label09;

        $z10 = 1;

        goto label10;

     label09:
        $z10 = 0;

     label10:
        z4 = $z10;

        $i12 = i6 & 8;

        if $i12 == 0 goto label11;

        $z11 = 1;

        goto label12;

     label11:
        $z11 = 0;

     label12:
        z5 = $z11;

        if z3 != 0 goto label13;

        if z4 != 0 goto label15;

     label13:
        if z4 == 0 goto label14;

        if z5 != 0 goto label15;

     label14:
        if z5 == 0 goto label16;

        if z3 != 0 goto label16;

     label15:
        $z12 = 1;

        goto label17;

     label16:
        $z12 = 0;

     label17:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean H> = $z12;

        if z0 != 0 goto label18;

        if z1 != 0 goto label20;

     label18:
        if z1 == 0 goto label19;

        if z2 != 0 goto label20;

     label19:
        if z2 == 0 goto label21;

        if z0 != 0 goto label21;

     label20:
        $z13 = 1;

        goto label22;

     label21:
        $z13 = 0;

     label22:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean C> = $z13;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean N> = z2;

        $b16 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i6);

        if $b16 != 0 goto label23;

        $z14 = 1;

        goto label24;

     label23:
        $z14 = 0;

     label24:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z> = $z14;

        if z0 == 0 goto label25;

        if z1 != 0 goto label25;

        if z2 == 0 goto label26;

     label25:
        if z0 != 0 goto label27;

        if z1 == 0 goto label27;

        if z2 == 0 goto label27;

     label26:
        $z15 = 1;

        goto label28;

     label27:
        $z15 = 0;

     label28:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean V> = $z15;

        $z16 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean N>;

        $z17 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean V>;

        if $z16 == $z17 goto label29;

        $z18 = 1;

        goto label30;

     label29:
        $z18 = 0;

     label30:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean S> = $z18;

        b13 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i6);

        $r4 = r1.<avrora.arch.legacy.LegacyInstr$SUB: avrora.arch.legacy.LegacyRegister r1>;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r4, b13);

        $i14 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i15 = $i14 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i15;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$SUBI)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, i3, $i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i15;
        avrora.arch.legacy.LegacyInstr$SUBI r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3;
        byte b2, b13, $b16;
        boolean z0, z1, z2, z3, z4, z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$SUBI;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$SUBI: avrora.arch.legacy.LegacyRegister r1>;

        b2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r2);

        i3 = r1.<avrora.arch.legacy.LegacyInstr$SUBI: int imm1>;

        $i5 = b2 - i3;

        i6 = $i5 - 0;

        $i7 = b2 & 128;

        if $i7 == 0 goto label01;

        $z6 = 1;

        goto label02;

     label01:
        $z6 = 0;

     label02:
        z0 = $z6;

        $i8 = i3 & 128;

        if $i8 == 0 goto label03;

        $z7 = 1;

        goto label04;

     label03:
        $z7 = 0;

     label04:
        z1 = $z7;

        $i9 = i6 & 128;

        if $i9 == 0 goto label05;

        $z8 = 1;

        goto label06;

     label05:
        $z8 = 0;

     label06:
        z2 = $z8;

        $i10 = b2 & 8;

        if $i10 == 0 goto label07;

        $z9 = 1;

        goto label08;

     label07:
        $z9 = 0;

     label08:
        z3 = $z9;

        $i11 = i3 & 8;

        if $i11 == 0 goto label09;

        $z10 = 1;

        goto label10;

     label09:
        $z10 = 0;

     label10:
        z4 = $z10;

        $i12 = i6 & 8;

        if $i12 == 0 goto label11;

        $z11 = 1;

        goto label12;

     label11:
        $z11 = 0;

     label12:
        z5 = $z11;

        if z3 != 0 goto label13;

        if z4 != 0 goto label15;

     label13:
        if z4 == 0 goto label14;

        if z5 != 0 goto label15;

     label14:
        if z5 == 0 goto label16;

        if z3 != 0 goto label16;

     label15:
        $z12 = 1;

        goto label17;

     label16:
        $z12 = 0;

     label17:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean H> = $z12;

        if z0 != 0 goto label18;

        if z1 != 0 goto label20;

     label18:
        if z1 == 0 goto label19;

        if z2 != 0 goto label20;

     label19:
        if z2 == 0 goto label21;

        if z0 != 0 goto label21;

     label20:
        $z13 = 1;

        goto label22;

     label21:
        $z13 = 0;

     label22:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean C> = $z13;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean N> = z2;

        $b16 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i6);

        if $b16 != 0 goto label23;

        $z14 = 1;

        goto label24;

     label23:
        $z14 = 0;

     label24:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z> = $z14;

        if z0 == 0 goto label25;

        if z1 != 0 goto label25;

        if z2 == 0 goto label26;

     label25:
        if z0 != 0 goto label27;

        if z1 == 0 goto label27;

        if z2 == 0 goto label27;

     label26:
        $z15 = 1;

        goto label28;

     label27:
        $z15 = 0;

     label28:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean V> = $z15;

        $z16 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean N>;

        $z17 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean V>;

        if $z16 == $z17 goto label29;

        $z18 = 1;

        goto label30;

     label29:
        $z18 = 0;

     label30:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean S> = $z18;

        b13 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i6);

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$SUBI: avrora.arch.legacy.LegacyRegister r1>;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r3, b13);

        $i14 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i15 = $i14 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i15;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$SWAP)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, i15, i16;
        avrora.arch.legacy.LegacyInstr$SWAP r1;
        avrora.arch.legacy.LegacyRegister $r2, $r3;
        byte $b11;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$SWAP;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$SWAP: avrora.arch.legacy.LegacyRegister r1>;

        i2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: int getRegisterUnsigned(avrora.arch.legacy.LegacyRegister)>($r2);

        $i6 = 0 & -16;

        $i3 = i2 >> 4;

        $i4 = $i3 & 15;

        $i5 = $i4 & 15;

        i15 = $i6 | $i5;

        $i10 = i15 & -241;

        $i7 = i2 & 15;

        $i8 = $i7 & 15;

        $i9 = $i8 << 4;

        i16 = $i10 | $i9;

        $r3 = r1.<avrora.arch.legacy.LegacyInstr$SWAP: avrora.arch.legacy.LegacyRegister r1>;

        $b11 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(i16);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void writeRegisterByte(avrora.arch.legacy.LegacyRegister,byte)>($r3, $b11);

        $i12 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i13 = $i12 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i13;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$TST)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i4, $i5, $i6;
        avrora.arch.legacy.LegacyInstr$TST r1;
        avrora.arch.legacy.LegacyRegister $r2;
        byte b2, $b3;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$TST;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $r2 = r1.<avrora.arch.legacy.LegacyInstr$TST: avrora.arch.legacy.LegacyRegister r1>;

        b2 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getRegisterByte(avrora.arch.legacy.LegacyRegister)>($r2);

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean V> = 0;

        $b3 = staticinvoke <avrora.arch.legacy.LegacyInterpreter: byte low(int)>(b2);

        if $b3 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean Z> = $z2;

        $i4 = b2 & 128;

        if $i4 == 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean N> = $z3;

        $z1 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean N>;

        $z0 = r0.<avrora.arch.legacy.LegacyInterpreter: boolean V>;

        if $z1 == $z0 goto label5;

        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        r0.<avrora.arch.legacy.LegacyInterpreter: boolean S> = $z4;

        $i5 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i6 = $i5 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i6;

        return;
    }

    public void visit(avrora.arch.legacy.LegacyInstr$WDR)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, $i1, $i2, $i3;
        avrora.arch.legacy.LegacyInstr$WDR r1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r1 := @parameter0: avrora.arch.legacy.LegacyInstr$WDR;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int pc>;

        $i1 = $i0 + 2;

        r0.<avrora.arch.legacy.LegacyInterpreter: int nextPC> = $i1;

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed>;

        $i3 = $i2 + 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: int cyclesConsumed> = $i3;

        return;
    }

    public void pushPC(int)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        byte $b0, $b1;
        int i2, i3;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        i2 := @parameter0: int;

        i3 = i2 / 2;

        $b0 = staticinvoke <cck.util.Arithmetic: byte low(int)>(i3);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void pushByte(byte)>($b0);

        $b1 = staticinvoke <cck.util.Arithmetic: byte high(int)>(i3);

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void pushByte(byte)>($b1);

        return;
    }

    public static byte low(int)
    {
        int i0;
        byte $b1;

        i0 := @parameter0: int;

        $b1 = (byte) i0;

        return $b1;
    }

    public static byte high(int)
    {
        int i0, $i1;
        byte $b2;

        i0 := @parameter0: int;

        $i1 = i0 >> 8;

        $b2 = (byte) $i1;

        return $b2;
    }

    public static byte bit(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static int uword(byte, byte)
    {
        byte b0, b1;
        char $c2;

        b0 := @parameter0: byte;

        b1 := @parameter1: byte;

        $c2 = staticinvoke <cck.util.Arithmetic: char uword(byte,byte)>(b0, b1);

        return $c2;
    }

    public int extended(int)
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        int $i0, i1, $i2, $i4, $i5, $i6;
        byte $b3;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        i1 := @parameter0: int;

        $i0 = r0.<avrora.arch.legacy.LegacyInterpreter: int RAMPZ>;

        if $i0 <= 0 goto label1;

        $i2 = r0.<avrora.arch.legacy.LegacyInterpreter: int RAMPZ>;

        $b3 = virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: byte getIORegisterByte(int)>($i2);

        $i4 = $b3 & 1;

        $i5 = $i4 << 16;

        $i6 = $i5 | i1;

        return $i6;

     label1:
        return i1;
    }

    public void enterSleepMode()
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        avrora.sim.Simulator $r1;
        avrora.sim.mcu.Microcontroller $r2;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean sleeping> = 1;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean innerLoop> = 0;

        $r1 = r0.<avrora.arch.legacy.LegacyInterpreter: avrora.sim.Simulator simulator>;

        $r2 = virtualinvoke $r1.<avrora.sim.Simulator: avrora.sim.mcu.Microcontroller getMicrocontroller()>();

        interfaceinvoke $r2.<avrora.sim.mcu.Microcontroller: void sleep()>();

        return;
    }

    public void leaveSleepMode()
    {
        avrora.arch.legacy.LegacyInterpreter r0;
        avrora.sim.Simulator $r1;
        avrora.sim.mcu.Microcontroller $r2;
        int $i0;
        long $l1;

        r0 := @this: avrora.arch.legacy.LegacyInterpreter;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean sleeping> = 0;

        r0.<avrora.arch.legacy.LegacyInterpreter: boolean innerLoop> = 0;

        $r1 = r0.<avrora.arch.legacy.LegacyInterpreter: avrora.sim.Simulator simulator>;

        $r2 = virtualinvoke $r1.<avrora.sim.Simulator: avrora.sim.mcu.Microcontroller getMicrocontroller()>();

        $i0 = interfaceinvoke $r2.<avrora.sim.mcu.Microcontroller: int wakeup()>();

        $l1 = (long) $i0;

        virtualinvoke r0.<avrora.arch.legacy.LegacyInterpreter: void advanceClock(long)>($l1);

        return;
    }

    static void <clinit>()
    {
        avrora.arch.legacy.LegacyInterpreter$Factory $r0;
        avrora.arch.legacy.LegacyRegister $r1, $r2, $r3;

        $r0 = new avrora.arch.legacy.LegacyInterpreter$Factory;

        specialinvoke $r0.<avrora.arch.legacy.LegacyInterpreter$Factory: void <init>()>();

        <avrora.arch.legacy.LegacyInterpreter: avrora.arch.legacy.LegacyInterpreter$Factory FACTORY> = $r0;

        $r1 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R0>;

        <avrora.arch.legacy.LegacyInterpreter: avrora.arch.legacy.LegacyRegister R0> = $r1;

        $r2 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister R1>;

        <avrora.arch.legacy.LegacyInterpreter: avrora.arch.legacy.LegacyRegister R1> = $r2;

        $r3 = <avrora.arch.legacy.LegacyRegister: avrora.arch.legacy.LegacyRegister Z>;

        <avrora.arch.legacy.LegacyInterpreter: avrora.arch.legacy.LegacyRegister RZ> = $r3;

        return;
    }
}
