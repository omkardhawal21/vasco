public abstract class avrora.sim.mcu.ATMegaFamily extends avrora.sim.mcu.AtmelMicrocontroller
{
    protected static final int[] periods0;
    protected static final int[] periods2;
    protected static final int[] periods1;
    protected static final int[] periods3;
    protected avrora.sim.mcu.ATMegaFamily$FlagRegister EIFR_reg;
    protected avrora.sim.mcu.ATMegaFamily$FlagRegister TIFR_reg;
    protected avrora.sim.mcu.ATMegaFamily$MaskRegister TIMSK_reg;
    protected avrora.sim.mcu.ATMegaFamily$FlagRegister ETIFR_reg;
    protected avrora.sim.mcu.ATMegaFamily$MaskRegister ETIMSK_reg;

    protected void <init>(avrora.sim.clock.ClockDomain, avrora.arch.avr.AVRProperties, avrora.sim.FiniteStateMachine)
    {
        avrora.sim.mcu.ATMegaFamily r0;
        avrora.sim.clock.ClockDomain r1;
        avrora.arch.avr.AVRProperties r2;
        avrora.sim.FiniteStateMachine r3;

        r0 := @this: avrora.sim.mcu.ATMegaFamily;

        r1 := @parameter0: avrora.sim.clock.ClockDomain;

        r2 := @parameter1: avrora.arch.avr.AVRProperties;

        r3 := @parameter2: avrora.sim.FiniteStateMachine;

        specialinvoke r0.<avrora.sim.mcu.AtmelMicrocontroller: void <init>(avrora.sim.clock.ClockDomain,avrora.arch.avr.AVRProperties,avrora.sim.FiniteStateMachine)>(r1, r2, r3);

        return;
    }

    protected void buildPort(char)
    {
        avrora.sim.mcu.DefaultMCU$Pin[] r0;
        avrora.sim.mcu.ATMegaFamily r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r8, $r9, $r10, $r14, $r15, $r16, $r20, $r21, $r22, $r23;
        char c0;
        java.lang.String $r5, $r11, $r17, $r24;
        avrora.sim.mcu.ATMegaFamily$PortRegister $r6;
        avrora.sim.mcu.ATMegaFamily$DirectionRegister $r12;
        avrora.sim.mcu.ATMegaFamily$PinRegister $r18;
        avrora.sim.mcu.Microcontroller$Pin $r25;
        avrora.sim.mcu.DefaultMCU$Pin $r26;
        int i1;

        r1 := @this: avrora.sim.mcu.ATMegaFamily;

        c0 := @parameter0: char;

        r0 = newarray (avrora.sim.mcu.DefaultMCU$Pin)[8];

        i1 = 0;

     label1:
        if i1 >= 8 goto label2;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("P");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $r25 = virtualinvoke r1.<avrora.sim.mcu.ATMegaFamily: avrora.sim.mcu.Microcontroller$Pin getPin(java.lang.String)>($r24);

        $r26 = (avrora.sim.mcu.DefaultMCU$Pin) $r25;

        r0[i1] = $r26;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PORT");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = new avrora.sim.mcu.ATMegaFamily$PortRegister;

        specialinvoke $r6.<avrora.sim.mcu.ATMegaFamily$PortRegister: void <init>(avrora.sim.mcu.DefaultMCU$Pin[])>(r0);

        virtualinvoke r1.<avrora.sim.mcu.ATMegaFamily: avrora.sim.ActiveRegister installIOReg(java.lang.String,avrora.sim.ActiveRegister)>($r5, $r6);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DDR");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = new avrora.sim.mcu.ATMegaFamily$DirectionRegister;

        specialinvoke $r12.<avrora.sim.mcu.ATMegaFamily$DirectionRegister: void <init>(avrora.sim.mcu.DefaultMCU$Pin[])>(r0);

        virtualinvoke r1.<avrora.sim.mcu.ATMegaFamily: avrora.sim.ActiveRegister installIOReg(java.lang.String,avrora.sim.ActiveRegister)>($r11, $r12);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PIN");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18 = new avrora.sim.mcu.ATMegaFamily$PinRegister;

        specialinvoke $r18.<avrora.sim.mcu.ATMegaFamily$PinRegister: void <init>(avrora.sim.mcu.DefaultMCU$Pin[])>(r0);

        virtualinvoke r1.<avrora.sim.mcu.ATMegaFamily: avrora.sim.ActiveRegister installIOReg(java.lang.String,avrora.sim.ActiveRegister)>($r17, $r18);

        return;
    }

    protected avrora.sim.mcu.ATMegaFamily$FlagRegister buildInterruptRange(boolean, java.lang.String, java.lang.String, int, int)
    {
        int[] r0;
        boolean z0;
        avrora.sim.mcu.ATMegaFamily$FlagRegister $r1;
        avrora.sim.mcu.ATMegaFamily r2;
        avrora.sim.AtmelInterpreter $r3, $r5;
        avrora.sim.mcu.ATMegaFamily$MaskRegister $r4;
        java.lang.String r7, r9;
        int i0, $i1, $i2, i3, i4, i5;

        r2 := @this: avrora.sim.mcu.ATMegaFamily;

        z0 := @parameter0: boolean;

        r7 := @parameter1: java.lang.String;

        r9 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i3 := @parameter4: int;

        r0 = newarray (int)[8];

        if z0 == 0 goto label3;

        i4 = 0;

     label1:
        if i4 >= 8 goto label2;

        $i2 = i0 + i4;

        r0[i4] = $i2;

        i4 = i4 + 1;

        goto label1;

     label2:
        goto label5;

     label3:
        i5 = 0;

     label4:
        if i5 >= 8 goto label5;

        $i1 = i0 - i5;

        r0[i5] = $i1;

        i5 = i5 + 1;

        goto label4;

     label5:
        $r1 = new avrora.sim.mcu.ATMegaFamily$FlagRegister;

        $r3 = r2.<avrora.sim.mcu.ATMegaFamily: avrora.sim.AtmelInterpreter interpreter>;

        specialinvoke $r1.<avrora.sim.mcu.ATMegaFamily$FlagRegister: void <init>(avrora.sim.AtmelInterpreter,int[])>($r3, r0);

        $r4 = new avrora.sim.mcu.ATMegaFamily$MaskRegister;

        $r5 = r2.<avrora.sim.mcu.ATMegaFamily: avrora.sim.AtmelInterpreter interpreter>;

        specialinvoke $r4.<avrora.sim.mcu.ATMegaFamily$MaskRegister: void <init>(avrora.sim.AtmelInterpreter,int[])>($r5, r0);

        virtualinvoke r2.<avrora.sim.mcu.ATMegaFamily: avrora.sim.ActiveRegister installIOReg(java.lang.String,avrora.sim.ActiveRegister)>(r7, $r4);

        virtualinvoke r2.<avrora.sim.mcu.ATMegaFamily: avrora.sim.ActiveRegister installIOReg(java.lang.String,avrora.sim.ActiveRegister)>(r9, $r1);

        return $r1;
    }

    public avrora.sim.mcu.ATMegaFamily$FlagRegister getEIFR_reg()
    {
        avrora.sim.mcu.ATMegaFamily r0;
        avrora.sim.mcu.ATMegaFamily$FlagRegister $r1;

        r0 := @this: avrora.sim.mcu.ATMegaFamily;

        $r1 = r0.<avrora.sim.mcu.ATMegaFamily: avrora.sim.mcu.ATMegaFamily$FlagRegister EIFR_reg>;

        return $r1;
    }

    static void <clinit>()
    {
        int[] $r0, $r1, $r2, $r3;

        $r0 = newarray (int)[8];

        $r0[0] = 0;

        $r0[1] = 1;

        $r0[2] = 8;

        $r0[3] = 32;

        $r0[4] = 64;

        $r0[5] = 128;

        $r0[6] = 256;

        $r0[7] = 1024;

        <avrora.sim.mcu.ATMegaFamily: int[] periods0> = $r0;

        $r1 = newarray (int)[8];

        $r1[0] = 0;

        $r1[1] = 1;

        $r1[2] = 8;

        $r1[3] = 64;

        $r1[4] = 256;

        $r1[5] = 1024;

        $r1[6] = 0;

        $r1[7] = 0;

        <avrora.sim.mcu.ATMegaFamily: int[] periods2> = $r1;

        $r2 = newarray (int)[6];

        $r2[0] = 0;

        $r2[1] = 1;

        $r2[2] = 8;

        $r2[3] = 64;

        $r2[4] = 256;

        $r2[5] = 1024;

        <avrora.sim.mcu.ATMegaFamily: int[] periods1> = $r2;

        $r3 = newarray (int)[6];

        $r3[0] = 0;

        $r3[1] = 1;

        $r3[2] = 8;

        $r3[3] = 64;

        $r3[4] = 256;

        $r3[5] = 1024;

        <avrora.sim.mcu.ATMegaFamily: int[] periods3> = $r3;

        return;
    }
}
