class avrora.sim.mcu.Timer8Bit$Mode_PWM extends java.lang.Object implements avrora.sim.Simulator$Event
{
    protected byte increment;
    final avrora.sim.mcu.Timer8Bit this$0;

    void <init>(avrora.sim.mcu.Timer8Bit)
    {
        avrora.sim.mcu.Timer8Bit$Mode_PWM r0;
        avrora.sim.mcu.Timer8Bit r1;

        r0 := @this: avrora.sim.mcu.Timer8Bit$Mode_PWM;

        r1 := @parameter0: avrora.sim.mcu.Timer8Bit;

        r0.<avrora.sim.mcu.Timer8Bit$Mode_PWM: avrora.sim.mcu.Timer8Bit this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<avrora.sim.mcu.Timer8Bit$Mode_PWM: byte increment> = 1;

        return;
    }

    public void fire()
    {
        avrora.sim.mcu.Timer8Bit$Mode_PWM r0;
        avrora.sim.mcu.Timer8Bit $r1, $r3, $r4, $r5, $r7;
        avrora.sim.mcu.Timer8Bit$TCNTnRegister $r2;
        byte $b0, $b2;
        avrora.sim.mcu.Timer8Bit$BufferedRegister $r6;
        int i1, i3;

        r0 := @this: avrora.sim.mcu.Timer8Bit$Mode_PWM;

        $r1 = r0.<avrora.sim.mcu.Timer8Bit$Mode_PWM: avrora.sim.mcu.Timer8Bit this$0>;

        $r2 = $r1.<avrora.sim.mcu.Timer8Bit: avrora.sim.mcu.Timer8Bit$TCNTnRegister TCNTn_reg>;

        $b0 = virtualinvoke $r2.<avrora.sim.mcu.Timer8Bit$TCNTnRegister: byte read()>();

        i1 = $b0 & 255;

        $r3 = r0.<avrora.sim.mcu.Timer8Bit$Mode_PWM: avrora.sim.mcu.Timer8Bit this$0>;

        staticinvoke <avrora.sim.mcu.Timer8Bit: void access$000(avrora.sim.mcu.Timer8Bit,int)>($r3, i1);

        if i1 < 255 goto label1;

        r0.<avrora.sim.mcu.Timer8Bit$Mode_PWM: byte increment> = -1;

        i1 = 255;

        $r5 = r0.<avrora.sim.mcu.Timer8Bit$Mode_PWM: avrora.sim.mcu.Timer8Bit this$0>;

        $r6 = $r5.<avrora.sim.mcu.Timer8Bit: avrora.sim.mcu.Timer8Bit$BufferedRegister OCRn_reg>;

        virtualinvoke $r6.<avrora.sim.mcu.Timer8Bit$BufferedRegister: void flush()>();

        goto label2;

     label1:
        if i1 > 0 goto label2;

        $r4 = r0.<avrora.sim.mcu.Timer8Bit$Mode_PWM: avrora.sim.mcu.Timer8Bit this$0>;

        virtualinvoke $r4.<avrora.sim.mcu.Timer8Bit: void overflow()>();

        r0.<avrora.sim.mcu.Timer8Bit$Mode_PWM: byte increment> = 1;

        i1 = 0;

     label2:
        $b2 = r0.<avrora.sim.mcu.Timer8Bit$Mode_PWM: byte increment>;

        i3 = i1 + $b2;

        $r7 = r0.<avrora.sim.mcu.Timer8Bit$Mode_PWM: avrora.sim.mcu.Timer8Bit this$0>;

        staticinvoke <avrora.sim.mcu.Timer8Bit: void access$100(avrora.sim.mcu.Timer8Bit,avrora.sim.Simulator$Event,int)>($r7, r0, i3);

        return;
    }
}
