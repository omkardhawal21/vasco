public class avrora.sim.mcu.RegisterLayout extends java.lang.Object
{
    public static final avrora.sim.mcu.RegisterLayout$Field UNUSED;
    public static final avrora.sim.mcu.RegisterLayout$Field RESERVED;
    public final int ioreg_size;
    public final int ioreg_length;
    protected final java.util.HashMap ioregAssignments;
    protected final avrora.sim.mcu.RegisterLayout$RegisterInfo[] info;
    protected final java.util.HashMap fields;

    public void <init>(int, int)
    {
        avrora.sim.mcu.RegisterLayout r0;
        int i0, i1;
        java.util.HashMap $r1, $r2;
        avrora.sim.mcu.RegisterLayout$RegisterInfo[] $r3;

        r0 := @this: avrora.sim.mcu.RegisterLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<avrora.sim.mcu.RegisterLayout: int ioreg_size> = i0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<avrora.sim.mcu.RegisterLayout: java.util.HashMap ioregAssignments> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<avrora.sim.mcu.RegisterLayout: java.util.HashMap fields> = $r2;

        $r3 = newarray (avrora.sim.mcu.RegisterLayout$RegisterInfo)[i0];

        r0.<avrora.sim.mcu.RegisterLayout: avrora.sim.mcu.RegisterLayout$RegisterInfo[] info> = $r3;

        r0.<avrora.sim.mcu.RegisterLayout: int ioreg_length> = i1;

        return;
    }

    public void addIOReg(java.lang.String, int)
    {
        int i0, $i1;
        avrora.sim.mcu.RegisterLayout r0;
        avrora.sim.mcu.RegisterLayout$RegisterInfo $r1;
        java.lang.String r2, $r12, $r14;
        avrora.sim.mcu.RegisterLayout$RegisterInfo[] $r4;
        java.util.HashMap $r5;
        cck.util.Util$Error $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r13;

        r0 := @this: avrora.sim.mcu.RegisterLayout;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = r0.<avrora.sim.mcu.RegisterLayout: int ioreg_size>;

        if i0 < $i1 goto label1;

        $r7 = new cck.util.Util$Error;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid register address ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for register ");

        $r12 = staticinvoke <cck.text.StringUtil: java.lang.String quote(java.lang.Object)>(r2);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<cck.util.Util$Error: void <init>(java.lang.String,java.lang.String)>("Layout Error", $r14);

        throw $r7;

     label1:
        $r1 = new avrora.sim.mcu.RegisterLayout$RegisterInfo;

        specialinvoke $r1.<avrora.sim.mcu.RegisterLayout$RegisterInfo: void <init>(java.lang.String,int)>(r2, i0);

        $r4 = r0.<avrora.sim.mcu.RegisterLayout: avrora.sim.mcu.RegisterLayout$RegisterInfo[] info>;

        $r4[i0] = $r1;

        $r5 = r0.<avrora.sim.mcu.RegisterLayout: java.util.HashMap ioregAssignments>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r1);

        return;
    }

    public void addIOReg(java.lang.String, int, java.lang.String)
    {
        int i0, $i1;
        avrora.sim.mcu.RegisterLayout r0;
        avrora.sim.mcu.RegisterLayout$RegisterInfo $r1;
        java.lang.String r2, r4, $r14, $r16;
        avrora.sim.mcu.RegisterLayout$SubField[] $r5;
        avrora.sim.mcu.RegisterLayout$RegisterInfo[] $r6;
        java.util.HashMap $r7;
        cck.util.Util$Error $r9;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r15;

        r0 := @this: avrora.sim.mcu.RegisterLayout;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r4 := @parameter2: java.lang.String;

        $i1 = r0.<avrora.sim.mcu.RegisterLayout: int ioreg_size>;

        if i0 < $i1 goto label1;

        $r9 = new cck.util.Util$Error;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid register address ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for register ");

        $r14 = staticinvoke <cck.text.StringUtil: java.lang.String quote(java.lang.Object)>(r2);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<cck.util.Util$Error: void <init>(java.lang.String,java.lang.String)>("Layout Error", $r16);

        throw $r9;

     label1:
        $r1 = new avrora.sim.mcu.RegisterLayout$RegisterInfo;

        specialinvoke $r1.<avrora.sim.mcu.RegisterLayout$RegisterInfo: void <init>(java.lang.String,int)>(r2, i0);

        $r5 = specialinvoke r0.<avrora.sim.mcu.RegisterLayout: avrora.sim.mcu.RegisterLayout$SubField[] parseSubFields(java.lang.String,int,java.lang.String)>(r2, i0, r4);

        $r1.<avrora.sim.mcu.RegisterLayout$RegisterInfo: avrora.sim.mcu.RegisterLayout$SubField[] subfields> = $r5;

        $r6 = r0.<avrora.sim.mcu.RegisterLayout: avrora.sim.mcu.RegisterLayout$RegisterInfo[] info>;

        $r6[i0] = $r1;

        $r7 = r0.<avrora.sim.mcu.RegisterLayout: java.util.HashMap ioregAssignments>;

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r1);

        return;
    }

    public int getIOReg(java.lang.String)
    {
        avrora.sim.mcu.RegisterLayout r0;
        java.lang.String r1, $r7, $r10;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        avrora.sim.mcu.RegisterLayout$RegisterInfo r4;
        int $i0;
        java.util.NoSuchElementException $r5;
        java.lang.StringBuilder $r6, $r8, $r9;

        r0 := @this: avrora.sim.mcu.RegisterLayout;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<avrora.sim.mcu.RegisterLayout: java.util.HashMap ioregAssignments>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (avrora.sim.mcu.RegisterLayout$RegisterInfo) $r3;

        if r4 != null goto label1;

        $r5 = new java.util.NoSuchElementException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = staticinvoke <cck.text.StringUtil: java.lang.String quote(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" IO register not found");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label1:
        $i0 = r4.<avrora.sim.mcu.RegisterLayout$RegisterInfo: int ior_num>;

        return $i0;
    }

    public boolean hasIOReg(java.lang.String)
    {
        avrora.sim.mcu.RegisterLayout r0;
        java.lang.String r1;
        java.util.HashMap $r2;
        boolean $z0;

        r0 := @this: avrora.sim.mcu.RegisterLayout;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<avrora.sim.mcu.RegisterLayout: java.util.HashMap ioregAssignments>;

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public avrora.sim.mcu.RegisterSet instantiate()
    {
        avrora.sim.mcu.RegisterSet $r0;
        avrora.sim.mcu.RegisterLayout r1;

        r1 := @this: avrora.sim.mcu.RegisterLayout;

        $r0 = new avrora.sim.mcu.RegisterSet;

        specialinvoke $r0.<avrora.sim.mcu.RegisterSet: void <init>(avrora.sim.mcu.RegisterLayout)>(r1);

        return $r0;
    }

    public java.lang.String getRegisterName(int)
    {
        avrora.sim.mcu.RegisterLayout r0;
        int i0;
        avrora.sim.mcu.RegisterLayout$RegisterInfo[] $r1;
        avrora.sim.mcu.RegisterLayout$RegisterInfo r2;
        java.lang.String $r3;

        r0 := @this: avrora.sim.mcu.RegisterLayout;

        i0 := @parameter0: int;

        $r1 = r0.<avrora.sim.mcu.RegisterLayout: avrora.sim.mcu.RegisterLayout$RegisterInfo[] info>;

        r2 = $r1[i0];

        if r2 == null goto label1;

        $r3 = r2.<avrora.sim.mcu.RegisterLayout$RegisterInfo: java.lang.String name>;

        goto label2;

     label1:
        $r3 = "";

     label2:
        return $r3;
    }

    private avrora.sim.mcu.RegisterLayout$SubField[] parseSubFields(java.lang.String, int, java.lang.String)
    {
        avrora.sim.mcu.RegisterLayout$SubField[] r0, r5;
        java.text.StringCharacterIterator $r1;
        java.lang.String r2, r18, $r19, $r21;
        avrora.sim.mcu.RegisterLayout r4;
        int $i0, $i1, $i2, i6, $i7, $i8, $i9, i10, i11, i12, i13;
        java.util.HashSet $r6;
        avrora.sim.mcu.RegisterLayout$SubField r8, $r22, $r23, $r24;
        avrora.sim.mcu.RegisterLayout$Field $r9, $r10;
        boolean $z0;
        cck.util.Util$Error $r11;
        java.lang.StringBuilder $r12, $r13, $r14, $r15, $r16, $r17, $r20;
        char $c3, $c4, $c5;

        r4 := @this: avrora.sim.mcu.RegisterLayout;

        r18 := @parameter0: java.lang.String;

        i6 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        i10 = 0;

        i11 = 0;

        r0 = newarray (avrora.sim.mcu.RegisterLayout$SubField)[8];

        $r1 = new java.text.StringCharacterIterator;

        specialinvoke $r1.<java.text.StringCharacterIterator: void <init>(java.lang.String)>(r2);

        i12 = 7;

     label1:
        if i12 < 0 goto label5;

        $c3 = virtualinvoke $r1.<java.text.StringCharacterIterator: char current()>();

        if $c3 == 65535 goto label5;

        $c4 = virtualinvoke $r1.<java.text.StringCharacterIterator: char current()>();

        if $c4 != 46 goto label2;

        i12 = specialinvoke r4.<avrora.sim.mcu.RegisterLayout: int readUnusedField(java.text.StringCharacterIterator,avrora.sim.mcu.RegisterLayout$SubField[],int,int)>($r1, r0, i11, i12);

        $r24 = r0[i11];

        $i9 = $r24.<avrora.sim.mcu.RegisterLayout$SubField: int length>;

        i10 = i10 + $i9;

        goto label4;

     label2:
        $c5 = virtualinvoke $r1.<java.text.StringCharacterIterator: char current()>();

        if $c5 != 120 goto label3;

        i12 = specialinvoke r4.<avrora.sim.mcu.RegisterLayout: int readReservedField(java.text.StringCharacterIterator,avrora.sim.mcu.RegisterLayout$SubField[],int,int)>($r1, r0, i11, i12);

        $r23 = r0[i11];

        $i8 = $r23.<avrora.sim.mcu.RegisterLayout$SubField: int length>;

        i10 = i10 + $i8;

        goto label4;

     label3:
        i12 = specialinvoke r4.<avrora.sim.mcu.RegisterLayout: int readNamedField(java.text.StringCharacterIterator,int,avrora.sim.mcu.RegisterLayout$SubField[],int,int)>($r1, i6, r0, i11, i12);

        $r22 = r0[i11];

        $i7 = $r22.<avrora.sim.mcu.RegisterLayout$SubField: int length>;

        i10 = i10 + $i7;

     label4:
        i11 = i11 + 1;

        staticinvoke <cck.text.StringUtil: boolean peekAndEat(java.text.CharacterIterator,char)>($r1, 44);

        staticinvoke <cck.text.StringUtil: void skipWhiteSpace(java.text.CharacterIterator)>($r1);

        goto label1;

     label5:
        $i0 = r4.<avrora.sim.mcu.RegisterLayout: int ioreg_length>;

        if i10 == $i0 goto label6;

        $r11 = new cck.util.Util$Error;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected ");

        $i2 = r4.<avrora.sim.mcu.RegisterLayout: int ioreg_length>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bits, found: ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r19 = staticinvoke <cck.text.StringUtil: java.lang.String quote(java.lang.Object)>(r18);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<cck.util.Util$Error: void <init>(java.lang.String,java.lang.String)>("Layout Error", $r21);

        throw $r11;

     label6:
        r5 = newarray (avrora.sim.mcu.RegisterLayout$SubField)[i11];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r5, 0, i11);

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        $i1 = lengthof r5;

        i13 = $i1 - 1;

     label7:
        if i13 < 0 goto label9;

        r8 = r5[i13];

        $r9 = r8.<avrora.sim.mcu.RegisterLayout$SubField: avrora.sim.mcu.RegisterLayout$Field field>;

        $z0 = virtualinvoke $r6.<java.util.HashSet: boolean contains(java.lang.Object)>($r9);

        if $z0 != 0 goto label8;

        r8.<avrora.sim.mcu.RegisterLayout$SubField: boolean commit> = 1;

     label8:
        $r10 = r8.<avrora.sim.mcu.RegisterLayout$SubField: avrora.sim.mcu.RegisterLayout$Field field>;

        virtualinvoke $r6.<java.util.HashSet: boolean add(java.lang.Object)>($r10);

        i13 = i13 + -1;

        goto label7;

     label9:
        return r5;
    }

    private int readNamedField(java.text.StringCharacterIterator, int, avrora.sim.mcu.RegisterLayout$SubField[], int, int)
    {
        java.text.StringCharacterIterator r0;
        java.lang.String r1;
        avrora.sim.mcu.RegisterLayout r2;
        avrora.sim.mcu.RegisterLayout$Field r3;
        avrora.sim.mcu.RegisterLayout$SubField $r4;
        int i0, i1, i2, i3;
        avrora.sim.mcu.RegisterLayout$SubField[] r6;
        boolean $z0;

        r2 := @this: avrora.sim.mcu.RegisterLayout;

        r0 := @parameter0: java.text.StringCharacterIterator;

        i0 := @parameter1: int;

        r6 := @parameter2: avrora.sim.mcu.RegisterLayout$SubField[];

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r1 = staticinvoke <cck.text.StringUtil: java.lang.String readIdentifier(java.text.CharacterIterator)>(r0);

        r3 = specialinvoke r2.<avrora.sim.mcu.RegisterLayout: avrora.sim.mcu.RegisterLayout$Field getField(java.lang.String)>(r1);

        $r4 = new avrora.sim.mcu.RegisterLayout$SubField;

        specialinvoke $r4.<avrora.sim.mcu.RegisterLayout$SubField: void <init>(avrora.sim.mcu.RegisterLayout$Field,int)>(r3, i0);

        virtualinvoke r3.<avrora.sim.mcu.RegisterLayout$Field: void add(avrora.sim.mcu.RegisterLayout$SubField)>($r4);

        r6[i1] = $r4;

        $z0 = staticinvoke <cck.text.StringUtil: boolean peekAndEat(java.text.CharacterIterator,char)>(r0, 91);

        if $z0 == 0 goto label1;

        i3 = specialinvoke r2.<avrora.sim.mcu.RegisterLayout: int readBitRange(java.text.StringCharacterIterator,int,avrora.sim.mcu.RegisterLayout$SubField)>(r0, i2, $r4);

        goto label2;

     label1:
        i3 = specialinvoke r2.<avrora.sim.mcu.RegisterLayout: int readBit(int,avrora.sim.mcu.RegisterLayout$SubField)>(i2, $r4);

     label2:
        return i3;
    }

    private int readReservedField(java.text.StringCharacterIterator, avrora.sim.mcu.RegisterLayout$SubField[], int, int)
    {
        avrora.sim.mcu.RegisterLayout$SubField $r0;
        avrora.sim.mcu.RegisterLayout$Field $r1;
        avrora.sim.mcu.RegisterLayout$SubField[] r3;
        int i0, i1, i2;
        avrora.sim.mcu.RegisterLayout r4;
        java.text.StringCharacterIterator r5;

        r4 := @this: avrora.sim.mcu.RegisterLayout;

        r5 := @parameter0: java.text.StringCharacterIterator;

        r3 := @parameter1: avrora.sim.mcu.RegisterLayout$SubField[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r0 = new avrora.sim.mcu.RegisterLayout$SubField;

        $r1 = <avrora.sim.mcu.RegisterLayout: avrora.sim.mcu.RegisterLayout$Field RESERVED>;

        specialinvoke $r0.<avrora.sim.mcu.RegisterLayout$SubField: void <init>(avrora.sim.mcu.RegisterLayout$Field,int)>($r1, -1);

        r3[i0] = $r0;

        i2 = specialinvoke r4.<avrora.sim.mcu.RegisterLayout: int eat(int,java.text.StringCharacterIterator,avrora.sim.mcu.RegisterLayout$SubField,char)>(i1, r5, $r0, 120);

        return i2;
    }

    private int readUnusedField(java.text.StringCharacterIterator, avrora.sim.mcu.RegisterLayout$SubField[], int, int)
    {
        avrora.sim.mcu.RegisterLayout$SubField $r0;
        avrora.sim.mcu.RegisterLayout$Field $r1;
        avrora.sim.mcu.RegisterLayout$SubField[] r3;
        int i0, i1, i2;
        avrora.sim.mcu.RegisterLayout r4;
        java.text.StringCharacterIterator r5;

        r4 := @this: avrora.sim.mcu.RegisterLayout;

        r5 := @parameter0: java.text.StringCharacterIterator;

        r3 := @parameter1: avrora.sim.mcu.RegisterLayout$SubField[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r0 = new avrora.sim.mcu.RegisterLayout$SubField;

        $r1 = <avrora.sim.mcu.RegisterLayout: avrora.sim.mcu.RegisterLayout$Field UNUSED>;

        specialinvoke $r0.<avrora.sim.mcu.RegisterLayout$SubField: void <init>(avrora.sim.mcu.RegisterLayout$Field,int)>($r1, -1);

        r3[i0] = $r0;

        i2 = specialinvoke r4.<avrora.sim.mcu.RegisterLayout: int eat(int,java.text.StringCharacterIterator,avrora.sim.mcu.RegisterLayout$SubField,char)>(i1, r5, $r0, 46);

        return i2;
    }

    private int readBit(int, avrora.sim.mcu.RegisterLayout$SubField)
    {
        avrora.sim.mcu.RegisterLayout$SubField r0;
        avrora.sim.mcu.RegisterLayout r1;
        int i0, i1;

        r1 := @this: avrora.sim.mcu.RegisterLayout;

        i0 := @parameter0: int;

        r0 := @parameter1: avrora.sim.mcu.RegisterLayout$SubField;

        r0.<avrora.sim.mcu.RegisterLayout$SubField: int ior_low_bit> = i0;

        r0.<avrora.sim.mcu.RegisterLayout$SubField: int field_low_bit> = 0;

        r0.<avrora.sim.mcu.RegisterLayout$SubField: int mask> = 1;

        r0.<avrora.sim.mcu.RegisterLayout$SubField: int length> = 1;

        i1 = i0 + -1;

        return i1;
    }

    private int readBitRange(java.text.StringCharacterIterator, int, avrora.sim.mcu.RegisterLayout$SubField)
    {
        java.text.StringCharacterIterator r0;
        int i0, $i1, i2, $i3, $i4, $i5, $i6, i7, i8, i9;
        boolean $z0;
        avrora.sim.mcu.RegisterLayout$SubField r1;
        avrora.sim.mcu.RegisterLayout r2;

        r2 := @this: avrora.sim.mcu.RegisterLayout;

        r0 := @parameter0: java.text.StringCharacterIterator;

        i7 := @parameter1: int;

        r1 := @parameter2: avrora.sim.mcu.RegisterLayout$SubField;

        i0 = staticinvoke <cck.text.StringUtil: int readDecimalValue(java.text.CharacterIterator,int)>(r0, 1);

        i8 = i0;

        $z0 = staticinvoke <cck.text.StringUtil: boolean peekAndEat(java.text.CharacterIterator,char)>(r0, 58);

        if $z0 == 0 goto label1;

        i8 = staticinvoke <cck.text.StringUtil: int readDecimalValue(java.text.CharacterIterator,int)>(r0, 1);

     label1:
        $i1 = i0 - i8;

        i2 = $i1 + 1;

        $i3 = i7 - i2;

        $i4 = $i3 + 1;

        r1.<avrora.sim.mcu.RegisterLayout$SubField: int ior_low_bit> = $i4;

        r1.<avrora.sim.mcu.RegisterLayout$SubField: int field_low_bit> = i8;

        $i5 = 8 - i2;

        $i6 = 255 >> $i5;

        r1.<avrora.sim.mcu.RegisterLayout$SubField: int mask> = $i6;

        r1.<avrora.sim.mcu.RegisterLayout$SubField: int length> = i2;

        staticinvoke <cck.text.StringUtil: boolean peekAndEat(java.text.CharacterIterator,char)>(r0, 93);

        i9 = i7 - i2;

        return i9;
    }

    private int eat(int, java.text.StringCharacterIterator, avrora.sim.mcu.RegisterLayout$SubField, char)
    {
        java.text.StringCharacterIterator r0;
        char $c1, c2;
        avrora.sim.mcu.RegisterLayout$SubField r1;
        int $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i12, i13;
        avrora.sim.mcu.RegisterLayout r2;

        r2 := @this: avrora.sim.mcu.RegisterLayout;

        i12 := @parameter0: int;

        r0 := @parameter1: java.text.StringCharacterIterator;

        r1 := @parameter2: avrora.sim.mcu.RegisterLayout$SubField;

        c2 := @parameter3: char;

     label1:
        $c1 = virtualinvoke r0.<java.text.StringCharacterIterator: char current()>();

        if $c1 != c2 goto label2;

        $i9 = r1.<avrora.sim.mcu.RegisterLayout$SubField: int length>;

        $i10 = $i9 + 1;

        r1.<avrora.sim.mcu.RegisterLayout$SubField: int length> = $i10;

        virtualinvoke r0.<java.text.StringCharacterIterator: char next()>();

        goto label1;

     label2:
        $i3 = r1.<avrora.sim.mcu.RegisterLayout$SubField: int length>;

        $i4 = i12 - $i3;

        $i5 = $i4 + 1;

        r1.<avrora.sim.mcu.RegisterLayout$SubField: int ior_low_bit> = $i5;

        $i6 = r1.<avrora.sim.mcu.RegisterLayout$SubField: int length>;

        $i7 = staticinvoke <cck.util.Arithmetic: int getBitMask(int)>($i6);

        r1.<avrora.sim.mcu.RegisterLayout$SubField: int mask> = $i7;

        $i8 = r1.<avrora.sim.mcu.RegisterLayout$SubField: int length>;

        i13 = i12 - $i8;

        return i13;
    }

    private avrora.sim.mcu.RegisterLayout$Field getField(java.lang.String)
    {
        avrora.sim.mcu.RegisterLayout r0;
        java.lang.String r1;
        java.util.HashMap $r2, $r5;
        java.lang.Object $r3;
        avrora.sim.mcu.RegisterLayout$Field $r4, r7;

        r0 := @this: avrora.sim.mcu.RegisterLayout;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<avrora.sim.mcu.RegisterLayout: java.util.HashMap fields>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r7 = (avrora.sim.mcu.RegisterLayout$Field) $r3;

        if r7 != null goto label1;

        $r4 = new avrora.sim.mcu.RegisterLayout$Field;

        specialinvoke $r4.<avrora.sim.mcu.RegisterLayout$Field: void <init>(java.lang.String)>(r1);

        r7 = $r4;

        $r5 = r0.<avrora.sim.mcu.RegisterLayout: java.util.HashMap fields>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

     label1:
        return r7;
    }

    static void <clinit>()
    {
        avrora.sim.mcu.RegisterLayout$Field $r0, $r1;

        $r0 = new avrora.sim.mcu.RegisterLayout$Field;

        specialinvoke $r0.<avrora.sim.mcu.RegisterLayout$Field: void <init>(java.lang.String)>("UNUSED");

        <avrora.sim.mcu.RegisterLayout: avrora.sim.mcu.RegisterLayout$Field UNUSED> = $r0;

        $r1 = new avrora.sim.mcu.RegisterLayout$Field;

        specialinvoke $r1.<avrora.sim.mcu.RegisterLayout$Field: void <init>(java.lang.String)>("RESERVED");

        <avrora.sim.mcu.RegisterLayout: avrora.sim.mcu.RegisterLayout$Field RESERVED> = $r1;

        return;
    }
}
