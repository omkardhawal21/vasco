public class avrora.sim.mcu.USART$Receiver extends java.lang.Object
{
    boolean receiving;
    avrora.sim.mcu.USART$Receiver$Receive receive;
    final avrora.sim.mcu.USART this$0;

    protected void <init>(avrora.sim.mcu.USART)
    {
        avrora.sim.mcu.USART$Receiver r0;
        avrora.sim.mcu.USART r1;
        avrora.sim.mcu.USART$Receiver$Receive $r2;

        r0 := @this: avrora.sim.mcu.USART$Receiver;

        r1 := @parameter0: avrora.sim.mcu.USART;

        r0.<avrora.sim.mcu.USART$Receiver: avrora.sim.mcu.USART this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new avrora.sim.mcu.USART$Receiver$Receive;

        specialinvoke $r2.<avrora.sim.mcu.USART$Receiver$Receive: void <init>(avrora.sim.mcu.USART$Receiver)>(r0);

        r0.<avrora.sim.mcu.USART$Receiver: avrora.sim.mcu.USART$Receiver$Receive receive> = $r2;

        return;
    }

    protected void enableReceive()
    {
        avrora.sim.mcu.USART$Receiver r0;
        boolean $z0;
        avrora.sim.mcu.USART $r1, $r5, $r6, $r10, $r12;
        avrora.sim.mcu.USART$USARTDevice $r2;
        avrora.sim.mcu.USART$Receiver$Receive $r3, $r9;
        avrora.sim.mcu.USART$Frame $r4;
        avrora.sim.mcu.USART$ControlRegisterC $r7, $r11;
        avrora.sim.clock.Clock $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        long $l6;

        r0 := @this: avrora.sim.mcu.USART$Receiver;

        $z0 = r0.<avrora.sim.mcu.USART$Receiver: boolean receiving>;

        if $z0 != 0 goto label1;

        $r3 = r0.<avrora.sim.mcu.USART$Receiver: avrora.sim.mcu.USART$Receiver$Receive receive>;

        $r1 = r0.<avrora.sim.mcu.USART$Receiver: avrora.sim.mcu.USART this$0>;

        $r2 = $r1.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$USARTDevice connectedDevice>;

        $r4 = interfaceinvoke $r2.<avrora.sim.mcu.USART$USARTDevice: avrora.sim.mcu.USART$Frame transmitFrame()>();

        $r3.<avrora.sim.mcu.USART$Receiver$Receive: avrora.sim.mcu.USART$Frame frame> = $r4;

        $r5 = r0.<avrora.sim.mcu.USART$Receiver: avrora.sim.mcu.USART this$0>;

        $r8 = $r5.<avrora.sim.mcu.USART: avrora.sim.clock.Clock mainClock>;

        $r9 = r0.<avrora.sim.mcu.USART$Receiver: avrora.sim.mcu.USART$Receiver$Receive receive>;

        $r6 = r0.<avrora.sim.mcu.USART$Receiver: avrora.sim.mcu.USART this$0>;

        $r7 = $r6.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$ControlRegisterC UCSRnC_reg>;

        $i0 = virtualinvoke $r7.<avrora.sim.mcu.USART$ControlRegisterC: int getFrameSize()>();

        $i1 = 1 + $i0;

        $r10 = r0.<avrora.sim.mcu.USART$Receiver: avrora.sim.mcu.USART this$0>;

        $r11 = $r10.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$ControlRegisterC UCSRnC_reg>;

        $i2 = virtualinvoke $r11.<avrora.sim.mcu.USART$ControlRegisterC: int getStopBits()>();

        $i4 = $i1 + $i2;

        $r12 = r0.<avrora.sim.mcu.USART$Receiver: avrora.sim.mcu.USART this$0>;

        $i3 = $r12.<avrora.sim.mcu.USART: int period>;

        $i5 = $i4 * $i3;

        $l6 = (long) $i5;

        virtualinvoke $r8.<avrora.sim.clock.Clock: void insertEvent(avrora.sim.Simulator$Event,long)>($r9, $l6);

        r0.<avrora.sim.mcu.USART$Receiver: boolean receiving> = 1;

     label1:
        return;
    }
}
