class avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg extends avrora.sim.RWRegister
{
    avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg$ResetEvent reset;
    final avrora.sim.mcu.ReprogrammableCodeSegment this$0;

    private void <init>(avrora.sim.mcu.ReprogrammableCodeSegment)
    {
        avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg r0;
        avrora.sim.mcu.ReprogrammableCodeSegment r1;
        avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg$ResetEvent $r2;

        r0 := @this: avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg;

        r1 := @parameter0: avrora.sim.mcu.ReprogrammableCodeSegment;

        r0.<avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg: avrora.sim.mcu.ReprogrammableCodeSegment this$0> = r1;

        specialinvoke r0.<avrora.sim.RWRegister: void <init>()>();

        $r2 = new avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg$ResetEvent;

        specialinvoke $r2.<avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg$ResetEvent: void <init>(avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg)>(r0);

        r0.<avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg: avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg$ResetEvent reset> = $r2;

        return;
    }

    public void write(byte)
    {
        byte b0, $b3, $b4, $b5;
        avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg r0;
        avrora.sim.mcu.ReprogrammableCodeSegment $r1, $r4, $r7, $r9;
        avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg$ResetEvent $r2, $r5;
        avrora.sim.clock.MainClock $r3, $r6;
        int $i1, $i2, i7;
        avrora.sim.AtmelInterpreter $r8, $r10;
        boolean $z0, $z1, $z2;

        r0 := @this: avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg;

        b0 := @parameter0: byte;

        i7 = b0 & 31;

        lookupswitch(i7)
        {
            case 1: goto label1;
            case 3: goto label1;
            case 5: goto label1;
            case 9: goto label1;
            case 17: goto label1;
            default: goto label2;
        };

     label1:
        $r1 = r0.<avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg: avrora.sim.mcu.ReprogrammableCodeSegment this$0>;

        $r3 = $r1.<avrora.sim.mcu.ReprogrammableCodeSegment: avrora.sim.clock.MainClock mainClock>;

        $r2 = r0.<avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg: avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg$ResetEvent reset>;

        virtualinvoke $r3.<avrora.sim.clock.MainClock: void removeEvent(avrora.sim.Simulator$Event)>($r2);

        $r4 = r0.<avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg: avrora.sim.mcu.ReprogrammableCodeSegment this$0>;

        $r6 = $r4.<avrora.sim.mcu.ReprogrammableCodeSegment: avrora.sim.clock.MainClock mainClock>;

        $r5 = r0.<avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg: avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg$ResetEvent reset>;

        virtualinvoke $r6.<avrora.sim.clock.MainClock: void insertEvent(avrora.sim.Simulator$Event,long)>($r5, 6L);

        goto label3;

     label2:
        i7 = 0;

     label3:
        $i1 = b0 & -32;

        $i2 = $i1 | i7;

        $b3 = (byte) $i2;

        r0.<avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg: byte value> = $b3;

        $r7 = r0.<avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg: avrora.sim.mcu.ReprogrammableCodeSegment this$0>;

        $r8 = staticinvoke <avrora.sim.mcu.ReprogrammableCodeSegment: avrora.sim.AtmelInterpreter access$000(avrora.sim.mcu.ReprogrammableCodeSegment)>($r7);

        $b4 = r0.<avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg: byte value>;

        $z0 = staticinvoke <cck.util.Arithmetic: boolean getBit(byte,int)>($b4, 7);

        virtualinvoke $r8.<avrora.sim.AtmelInterpreter: void setEnabled(int,boolean)>(35, $z0);

        $r9 = r0.<avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg: avrora.sim.mcu.ReprogrammableCodeSegment this$0>;

        $r10 = staticinvoke <avrora.sim.mcu.ReprogrammableCodeSegment: avrora.sim.AtmelInterpreter access$100(avrora.sim.mcu.ReprogrammableCodeSegment)>($r9);

        $b5 = r0.<avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg: byte value>;

        $z1 = staticinvoke <cck.util.Arithmetic: boolean getBit(byte,int)>($b5, 0);

        if $z1 != 0 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        virtualinvoke $r10.<avrora.sim.AtmelInterpreter: void setPosted(int,boolean)>(35, $z2);

        return;
    }

    int getState()
    {
        avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg r0;
        byte $b0;
        int $i1;

        r0 := @this: avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg;

        $b0 = r0.<avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg: byte value>;

        $i1 = $b0 & 31;

        return $i1;
    }

    void reset()
    {
        avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg r0;
        byte $b0, $b2;
        int $i1;

        r0 := @this: avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg;

        $b0 = r0.<avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg: byte value>;

        $i1 = $b0 & -32;

        $b2 = (byte) $i1;

        virtualinvoke r0.<avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg: void write(byte)>($b2);

        return;
    }

    boolean isBusy()
    {
        avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg r0;
        byte $b0;
        boolean $z0;

        r0 := @this: avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg;

        $b0 = r0.<avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg: byte value>;

        $z0 = staticinvoke <cck.util.Arithmetic: boolean getBit(byte,int)>($b0, 6);

        return $z0;
    }

    void setBusy()
    {
        avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg r0;
        byte $b0, $b1;

        r0 := @this: avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg;

        $b0 = r0.<avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg: byte value>;

        $b1 = staticinvoke <cck.util.Arithmetic: byte setBit(byte,int)>($b0, 6);

        r0.<avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg: byte value> = $b1;

        return;
    }

    void clearBusy()
    {
        avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg r0;
        byte $b0, $b1;

        r0 := @this: avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg;

        $b0 = r0.<avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg: byte value>;

        $b1 = staticinvoke <cck.util.Arithmetic: byte clearBit(byte,int)>($b0, 6);

        r0.<avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg: byte value> = $b1;

        return;
    }

    void <init>(avrora.sim.mcu.ReprogrammableCodeSegment, avrora.sim.mcu.ReprogrammableCodeSegment$1)
    {
        avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg r0;
        avrora.sim.mcu.ReprogrammableCodeSegment r1;
        avrora.sim.mcu.ReprogrammableCodeSegment$1 r2;

        r0 := @this: avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg;

        r1 := @parameter0: avrora.sim.mcu.ReprogrammableCodeSegment;

        r2 := @parameter1: avrora.sim.mcu.ReprogrammableCodeSegment$1;

        specialinvoke r0.<avrora.sim.mcu.ReprogrammableCodeSegment$SPMCSR_reg: void <init>(avrora.sim.mcu.ReprogrammableCodeSegment)>(r1);

        return;
    }
}
