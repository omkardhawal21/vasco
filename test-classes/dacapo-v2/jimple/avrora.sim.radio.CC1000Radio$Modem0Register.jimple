public class avrora.sim.radio.CC1000Radio$Modem0Register extends avrora.sim.radio.CC1000Radio$RadioRegister
{
    int baudrate;
    int bitrate;
    static final int DATA_FORMAT_NRZ;
    static final int DATA_FORMAT_MANCHESTER;
    static final int DATA_FORMAT_UART;
    int dataFormat;
    int xoscFreqRange;
    final avrora.sim.radio.CC1000Radio this$0;

    void <init>(avrora.sim.radio.CC1000Radio)
    {
        avrora.sim.radio.CC1000Radio$Modem0Register r0;
        avrora.sim.radio.CC1000Radio r1;
        int[] $r2;
        int $i0;
        byte $b1;

        r0 := @this: avrora.sim.radio.CC1000Radio$Modem0Register;

        r1 := @parameter0: avrora.sim.radio.CC1000Radio;

        r0.<avrora.sim.radio.CC1000Radio$Modem0Register: avrora.sim.radio.CC1000Radio this$0> = r1;

        specialinvoke r0.<avrora.sim.radio.CC1000Radio$RadioRegister: void <init>(avrora.sim.radio.CC1000Radio,java.lang.String,byte)>(r1, "MODEM0", 36);

        r0.<avrora.sim.radio.CC1000Radio$Modem0Register: int baudrate> = 2400;

        r0.<avrora.sim.radio.CC1000Radio$Modem0Register: int bitrate> = 1200;

        r0.<avrora.sim.radio.CC1000Radio$Modem0Register: int dataFormat> = 1;

        $r2 = <avrora.sim.radio.CC1000Radio: int[] XOSC_FREQ>;

        $i0 = $r2[0];

        r0.<avrora.sim.radio.CC1000Radio$Modem0Register: int xoscFreqRange> = $i0;

        $b1 = r0.<avrora.sim.radio.CC1000Radio$Modem0Register: byte value>;

        virtualinvoke r0.<avrora.sim.radio.CC1000Radio$Modem0Register: void decode(byte)>($b1);

        return;
    }

    protected void decode(byte)
    {
        byte b0, $b10;
        int $i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9;
        avrora.sim.radio.CC1000Radio$Modem0Register r0;
        int[] $r1;

        r0 := @this: avrora.sim.radio.CC1000Radio$Modem0Register;

        b0 := @parameter0: byte;

        $i1 = b0 & 112;

        i2 = $i1 >> 4;

        i3 = b0 & 3;

        $i4 = b0 & 12;

        $i5 = $i4 >> 2;

        r0.<avrora.sim.radio.CC1000Radio$Modem0Register: int dataFormat> = $i5;

        $r1 = <avrora.sim.radio.CC1000Radio: int[] XOSC_FREQ>;

        $i6 = $r1[i3];

        r0.<avrora.sim.radio.CC1000Radio$Modem0Register: int xoscFreqRange> = $i6;

        specialinvoke r0.<avrora.sim.radio.CC1000Radio$Modem0Register: void calculateBaudRate(int,int)>(i2, i3);

        $i8 = r0.<avrora.sim.radio.CC1000Radio$Modem0Register: int baudrate>;

        $i7 = r0.<avrora.sim.radio.CC1000Radio$Modem0Register: int dataFormat>;

        if $i7 != 1 goto label1;

        $b10 = 2;

        goto label2;

     label1:
        $b10 = 1;

     label2:
        $i9 = $i8 / $b10;

        r0.<avrora.sim.radio.CC1000Radio$Modem0Register: int bitrate> = $i9;

        return;
    }

    private void calculateBaudRate(int, int)
    {
        int i0, $i1, $i2, i6, $i7;
        avrora.sim.radio.CC1000Radio$Modem0Register r0;
        int[] $r1, $r3, $r4;
        avrora.sim.radio.CC1000Radio $r2;
        long $l3, $l4;
        byte $b5;

        r0 := @this: avrora.sim.radio.CC1000Radio$Modem0Register;

        i0 := @parameter0: int;

        i6 := @parameter1: int;

        if i0 != 5 goto label3;

        $r2 = r0.<avrora.sim.radio.CC1000Radio$Modem0Register: avrora.sim.radio.CC1000Radio this$0>;

        $l4 = $r2.<avrora.sim.radio.CC1000Radio: long xoscFrequency>;

        $r3 = <avrora.sim.radio.CC1000Radio: int[] XOSC_FREQ>;

        $i2 = $r3[2];

        $l3 = (long) $i2;

        $b5 = $l4 cmp $l3;

        if $b5 <= 0 goto label3;

        if i6 != 0 goto label1;

        r0.<avrora.sim.radio.CC1000Radio$Modem0Register: int baudrate> = 76800;

        goto label4;

     label1:
        if i6 != 1 goto label2;

        r0.<avrora.sim.radio.CC1000Radio$Modem0Register: int baudrate> = 38400;

        goto label4;

     label2:
        $r4 = <avrora.sim.radio.CC1000Radio: int[] BAUDRATE>;

        $i7 = $r4[i0];

        r0.<avrora.sim.radio.CC1000Radio$Modem0Register: int baudrate> = $i7;

        goto label4;

     label3:
        $r1 = <avrora.sim.radio.CC1000Radio: int[] BAUDRATE>;

        $i1 = $r1[i0];

        r0.<avrora.sim.radio.CC1000Radio$Modem0Register: int baudrate> = $i1;

     label4:
        return;
    }

    protected void printStatus()
    {
        avrora.sim.radio.CC1000Radio$Modem0Register r0;
        avrora.sim.radio.CC1000Radio $r1;
        java.lang.StringBuilder $r2, $r4, $r5, $r6, $r7, $r8, $r9;
        avrora.sim.output.SimPrinter $r3;
        int $i0, $i1, $i2;
        java.lang.String $r10;
        boolean $z0;

        r0 := @this: avrora.sim.radio.CC1000Radio$Modem0Register;

        $r1 = r0.<avrora.sim.radio.CC1000Radio$Modem0Register: avrora.sim.radio.CC1000Radio this$0>;

        $r3 = $r1.<avrora.sim.radio.CC1000Radio: avrora.sim.output.SimPrinter radioPrinter>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CC1000[MODEM0]: ");

        $i0 = r0.<avrora.sim.radio.CC1000Radio$Modem0Register: int baudrate>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" baud, ");

        $i1 = r0.<avrora.sim.radio.CC1000Radio$Modem0Register: int bitrate>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bit rate, manchester: ");

        $i2 = r0.<avrora.sim.radio.CC1000Radio$Modem0Register: int dataFormat>;

        if $i2 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<avrora.sim.output.SimPrinter: void println(java.lang.String)>($r10);

        return;
    }

    public static void <clinit>()
    {
        <avrora.sim.radio.CC1000Radio$Modem0Register: int DATA_FORMAT_UART> = 2;

        <avrora.sim.radio.CC1000Radio$Modem0Register: int DATA_FORMAT_MANCHESTER> = 1;

        <avrora.sim.radio.CC1000Radio$Modem0Register: int DATA_FORMAT_NRZ> = 0;

        return;
    }
}
