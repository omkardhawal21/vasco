public class cck.text.Status extends java.lang.Object
{
    static java.util.Stack stack;
    static boolean inside;
    public static boolean ENABLED;
    public static boolean TIMING;

    public void <init>()
    {
        cck.text.Status r0;

        r0 := @this: cck.text.Status;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void begin(java.lang.String)
    {
        boolean $z0, $z1;
        java.util.Stack $r0, $r4;
        int $i0, $i1;
        java.lang.String $r1, r2;
        cck.text.Status$Item $r3;

        r2 := @parameter0: java.lang.String;

        $z0 = <cck.text.Status: boolean ENABLED>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $z1 = <cck.text.Status: boolean inside>;

        if $z1 == 0 goto label2;

        staticinvoke <cck.text.Terminal: void nextln()>();

     label2:
        $r0 = <cck.text.Status: java.util.Stack stack>;

        $i0 = virtualinvoke $r0.<java.util.Stack: int size()>();

        $i1 = $i0 * 4;

        $r1 = staticinvoke <cck.text.StringUtil: java.lang.String space(int)>($i1);

        staticinvoke <cck.text.Terminal: void print(java.lang.String)>($r1);

        staticinvoke <cck.text.Terminal: void print(int,java.lang.String)>(3, r2);

        staticinvoke <cck.text.Terminal: void print(java.lang.String)>("...");

        staticinvoke <cck.text.Terminal: void flush()>();

        $r4 = <cck.text.Status: java.util.Stack stack>;

        $r3 = new cck.text.Status$Item;

        specialinvoke $r3.<cck.text.Status$Item: void <init>(java.lang.String)>(r2);

        virtualinvoke $r4.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r3);

        <cck.text.Status: boolean inside> = 1;

        return;
    }

    public static void success()
    {
        boolean $z0;

        $z0 = <cck.text.Status: boolean ENABLED>;

        if $z0 != 0 goto label1;

        return;

     label1:
        staticinvoke <cck.text.Status: void print(int,java.lang.String)>(2, "OK");

        return;
    }

    private static void print(int, java.lang.String)
    {
        java.util.Stack $r0;
        java.lang.Object $r1;
        cck.text.Status$Item r2;
        boolean $z0, $z1;
        int i0;
        java.lang.String r3, $r5, $r8;
        byte $b1;
        java.lang.StringBuilder $r4, $r6, $r7;
        long $l2, $l3, l4;

        i0 := @parameter0: int;

        r3 := @parameter1: java.lang.String;

        l4 = -1L;

        $r0 = <cck.text.Status: java.util.Stack stack>;

        $r1 = virtualinvoke $r0.<java.util.Stack: java.lang.Object pop()>();

        r2 = (cck.text.Status$Item) $r1;

        if r2 == null goto label1;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l3 = r2.<cck.text.Status$Item: long starttime>;

        l4 = $l2 - $l3;

     label1:
        $z0 = <cck.text.Status: boolean TIMING>;

        if $z0 == 0 goto label2;

        staticinvoke <cck.text.Terminal: void print(java.lang.String)>("[");

     label2:
        staticinvoke <cck.text.Terminal: void print(int,java.lang.String)>(i0, r3);

        $z1 = <cck.text.Status: boolean TIMING>;

        if $z1 == 0 goto label4;

        $b1 = l4 cmp 0L;

        if $b1 < 0 goto label3;

        staticinvoke <cck.text.Terminal: void print(java.lang.String)>(": ");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = staticinvoke <cck.util.TimeUtil: java.lang.String milliToSecs(long)>(l4);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <cck.text.Terminal: void print(java.lang.String)>($r8);

     label3:
        staticinvoke <cck.text.Terminal: void print(java.lang.String)>("]");

     label4:
        staticinvoke <cck.text.Terminal: void nextln()>();

        <cck.text.Status: boolean inside> = 0;

        return;
    }

    public static void success(java.lang.String)
    {
        boolean $z0;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $z0 = <cck.text.Status: boolean ENABLED>;

        if $z0 != 0 goto label1;

        return;

     label1:
        staticinvoke <cck.text.Status: void print(int,java.lang.String)>(2, r0);

        return;
    }

    public static void error()
    {
        boolean $z0;

        $z0 = <cck.text.Status: boolean ENABLED>;

        if $z0 != 0 goto label1;

        return;

     label1:
        staticinvoke <cck.text.Status: void print(int,java.lang.String)>(1, "ERROR");

        return;
    }

    public static void error(java.lang.String)
    {
        boolean $z0;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $z0 = <cck.text.Status: boolean ENABLED>;

        if $z0 != 0 goto label1;

        return;

     label1:
        staticinvoke <cck.text.Status: void print(int,java.lang.String)>(1, r0);

        return;
    }

    public static void error(java.lang.Throwable)
    {
        boolean $z0;
        java.lang.Throwable r0;

        r0 := @parameter0: java.lang.Throwable;

        $z0 = <cck.text.Status: boolean ENABLED>;

        if $z0 != 0 goto label1;

        return;

     label1:
        staticinvoke <cck.text.Status: void print(int,java.lang.String)>(1, "UNEXPECTED EXCEPTION");

        return;
    }

    public static void error(cck.util.Util$Error)
    {
        boolean $z0;
        cck.util.Util$Error r0;

        r0 := @parameter0: cck.util.Util$Error;

        $z0 = <cck.text.Status: boolean ENABLED>;

        if $z0 != 0 goto label1;

        return;

     label1:
        staticinvoke <cck.text.Status: void print(int,java.lang.String)>(1, "ERROR");

        return;
    }

    static void <clinit>()
    {
        java.util.Stack $r0;

        $r0 = new java.util.Stack;

        specialinvoke $r0.<java.util.Stack: void <init>()>();

        <cck.text.Status: java.util.Stack stack> = $r0;

        <cck.text.Status: boolean inside> = 0;

        <cck.text.Status: boolean ENABLED> = 1;

        <cck.text.Status: boolean TIMING> = 1;

        return;
    }
}
