class avrora.sim.radio.CC1000Radio$Receiver extends avrora.sim.radio.Medium$Receiver
{
    final avrora.sim.radio.CC1000Radio this$0;

    void <init>(avrora.sim.radio.CC1000Radio, avrora.sim.radio.Medium)
    {
        avrora.sim.radio.CC1000Radio$Receiver r0;
        avrora.sim.radio.CC1000Radio r1;
        avrora.sim.radio.Medium r2;
        avrora.sim.Simulator $r3;
        avrora.sim.clock.MainClock $r4;

        r0 := @this: avrora.sim.radio.CC1000Radio$Receiver;

        r1 := @parameter0: avrora.sim.radio.CC1000Radio;

        r2 := @parameter1: avrora.sim.radio.Medium;

        r0.<avrora.sim.radio.CC1000Radio$Receiver: avrora.sim.radio.CC1000Radio this$0> = r1;

        $r3 = r1.<avrora.sim.radio.CC1000Radio: avrora.sim.Simulator sim>;

        $r4 = virtualinvoke $r3.<avrora.sim.Simulator: avrora.sim.clock.MainClock getClock()>();

        specialinvoke r0.<avrora.sim.radio.Medium$Receiver: void <init>(avrora.sim.radio.Medium,avrora.sim.clock.Clock)>(r2, $r4);

        return;
    }

    public void setRssiValid(boolean)
    {
        avrora.sim.radio.CC1000Radio$Receiver r0;
        boolean z0;

        r0 := @this: avrora.sim.radio.CC1000Radio$Receiver;

        z0 := @parameter0: boolean;

        return;
    }

    public boolean getRssiValid()
    {
        avrora.sim.radio.CC1000Radio$Receiver r0;

        r0 := @this: avrora.sim.radio.CC1000Radio$Receiver;

        return 0;
    }

    public void setRSSI(double)
    {
        avrora.sim.radio.CC1000Radio$Receiver r0;
        double d0;

        r0 := @this: avrora.sim.radio.CC1000Radio$Receiver;

        d0 := @parameter0: double;

        return;
    }

    public void setBER(double)
    {
        avrora.sim.radio.CC1000Radio$Receiver r0;
        double d0;

        r0 := @this: avrora.sim.radio.CC1000Radio$Receiver;

        d0 := @parameter0: double;

        return;
    }

    public byte nextByte(boolean, byte)
    {
        boolean z0;
        avrora.sim.radio.CC1000Radio$Receiver r0;
        avrora.sim.radio.CC1000Radio $r1, $r2, $r4, $r7, $r8, $r9, $r10, $r12;
        avrora.sim.output.SimPrinter $r3, $r5, $r11, $r14;
        byte b0;
        avrora.sim.clock.Clock $r6;
        long $l1, $l2, $l3, $l5, $l6, $l7, $l8, $l9, $l10, $l18;
        int i4, i11, $i12, $i13, $i14, $i15, $i16, $i17;
        java.lang.StringBuilder $r13, $r15, $r17;
        java.lang.String $r16, $r18;

        r0 := @this: avrora.sim.radio.CC1000Radio$Receiver;

        z0 := @parameter0: boolean;

        b0 := @parameter1: byte;

        if z0 == 0 goto label2;

        $r6 = r0.<avrora.sim.radio.CC1000Radio$Receiver: avrora.sim.clock.Clock clock>;

        $l1 = virtualinvoke $r6.<avrora.sim.clock.Clock: long getCount()>();

        $r7 = r0.<avrora.sim.radio.CC1000Radio$Receiver: avrora.sim.radio.CC1000Radio this$0>;

        $l2 = $r7.<avrora.sim.radio.CC1000Radio: long spiTick>;

        $l3 = $l1 - $l2;

        i4 = (int) $l3;

        $l6 = (long) i4;

        $l5 = r0.<avrora.sim.radio.CC1000Radio$Receiver: long cyclesPerByte>;

        $l7 = $l6 % $l5;

        $l9 = 8L * $l7;

        $l8 = r0.<avrora.sim.radio.CC1000Radio$Receiver: long cyclesPerByte>;

        $l10 = $l9 / $l8;

        i11 = (int) $l10;

        $r9 = r0.<avrora.sim.radio.CC1000Radio$Receiver: avrora.sim.radio.CC1000Radio this$0>;

        $r8 = r0.<avrora.sim.radio.CC1000Radio$Receiver: avrora.sim.radio.CC1000Radio this$0>;

        $i12 = $r8.<avrora.sim.radio.CC1000Radio: int rxBuffer>;

        $i16 = $i12 << 8;

        $i13 = b0 ^ -1;

        $i14 = $i13 & 255;

        $i15 = $i14 << i11;

        $i17 = $i16 | $i15;

        $r9.<avrora.sim.radio.CC1000Radio: int rxBuffer> = $i17;

        $r10 = r0.<avrora.sim.radio.CC1000Radio$Receiver: avrora.sim.radio.CC1000Radio this$0>;

        $r11 = $r10.<avrora.sim.radio.CC1000Radio: avrora.sim.output.SimPrinter radioPrinter>;

        if $r11 == null goto label1;

        $r12 = r0.<avrora.sim.radio.CC1000Radio$Receiver: avrora.sim.radio.CC1000Radio this$0>;

        $r14 = $r12.<avrora.sim.radio.CC1000Radio: avrora.sim.output.SimPrinter radioPrinter>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CC1000 <======== ");

        $l18 = (long) b0;

        $r16 = staticinvoke <cck.text.StringUtil: java.lang.String to0xHex(long,int)>($l18, 2);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<avrora.sim.output.SimPrinter: void println(java.lang.String)>($r18);

     label1:
        goto label3;

     label2:
        $r1 = r0.<avrora.sim.radio.CC1000Radio$Receiver: avrora.sim.radio.CC1000Radio this$0>;

        $r1.<avrora.sim.radio.CC1000Radio: int rxBuffer> = 0;

        $r2 = r0.<avrora.sim.radio.CC1000Radio$Receiver: avrora.sim.radio.CC1000Radio this$0>;

        $r3 = $r2.<avrora.sim.radio.CC1000Radio: avrora.sim.output.SimPrinter radioPrinter>;

        if $r3 == null goto label3;

        $r4 = r0.<avrora.sim.radio.CC1000Radio$Receiver: avrora.sim.radio.CC1000Radio this$0>;

        $r5 = $r4.<avrora.sim.radio.CC1000Radio: avrora.sim.output.SimPrinter radioPrinter>;

        virtualinvoke $r5.<avrora.sim.output.SimPrinter: void println(java.lang.String)>("CC1000 lock lost");

     label3:
        return b0;
    }
}
