public class avrora.sim.mcu.USART$DataRegister extends avrora.sim.RWRegister
{
    avrora.sim.RWRegister transmitRegister;
    avrora.sim.mcu.USART$DataRegister$TwoLevelFIFO receiveRegister;
    final avrora.sim.mcu.USART this$0;

    void <init>(avrora.sim.mcu.USART)
    {
        avrora.sim.mcu.USART$DataRegister r0;
        avrora.sim.mcu.USART r1;
        avrora.sim.RWRegister $r2;
        avrora.sim.mcu.USART$DataRegister$TwoLevelFIFO $r3;

        r0 := @this: avrora.sim.mcu.USART$DataRegister;

        r1 := @parameter0: avrora.sim.mcu.USART;

        r0.<avrora.sim.mcu.USART$DataRegister: avrora.sim.mcu.USART this$0> = r1;

        specialinvoke r0.<avrora.sim.RWRegister: void <init>()>();

        $r2 = new avrora.sim.RWRegister;

        specialinvoke $r2.<avrora.sim.RWRegister: void <init>()>();

        r0.<avrora.sim.mcu.USART$DataRegister: avrora.sim.RWRegister transmitRegister> = $r2;

        $r3 = new avrora.sim.mcu.USART$DataRegister$TwoLevelFIFO;

        specialinvoke $r3.<avrora.sim.mcu.USART$DataRegister$TwoLevelFIFO: void <init>(avrora.sim.mcu.USART$DataRegister)>(r0);

        r0.<avrora.sim.mcu.USART$DataRegister: avrora.sim.mcu.USART$DataRegister$TwoLevelFIFO receiveRegister> = $r3;

        return;
    }

    public void write(byte)
    {
        avrora.sim.mcu.USART$DataRegister r0;
        byte b0;
        avrora.sim.RWRegister $r1;
        avrora.sim.mcu.USART $r2, $r5, $r7;
        avrora.sim.mcu.USART$ControlRegisterA $r3;
        avrora.sim.mcu.ATMegaFamily$InterruptFlag $r4;
        avrora.sim.mcu.USART$ControlRegisterB $r6;
        boolean $z0;
        avrora.sim.mcu.USART$Transmitter $r8;

        r0 := @this: avrora.sim.mcu.USART$DataRegister;

        b0 := @parameter0: byte;

        $r1 = r0.<avrora.sim.mcu.USART$DataRegister: avrora.sim.RWRegister transmitRegister>;

        virtualinvoke $r1.<avrora.sim.RWRegister: void write(byte)>(b0);

        $r2 = r0.<avrora.sim.mcu.USART$DataRegister: avrora.sim.mcu.USART this$0>;

        $r3 = $r2.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$ControlRegisterA UCSRnA_reg>;

        $r4 = $r3.<avrora.sim.mcu.USART$ControlRegisterA: avrora.sim.mcu.ATMegaFamily$InterruptFlag UDRE_flag>;

        virtualinvoke $r4.<avrora.sim.mcu.ATMegaFamily$InterruptFlag: void flag(boolean)>(0);

        $r5 = r0.<avrora.sim.mcu.USART$DataRegister: avrora.sim.mcu.USART this$0>;

        $r6 = $r5.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$ControlRegisterB UCSRnB_reg>;

        $z0 = virtualinvoke $r6.<avrora.sim.mcu.USART$ControlRegisterB: boolean readBit(int)>(3);

        if $z0 == 0 goto label1;

        $r7 = r0.<avrora.sim.mcu.USART$DataRegister: avrora.sim.mcu.USART this$0>;

        $r8 = $r7.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$Transmitter transmitter>;

        virtualinvoke $r8.<avrora.sim.mcu.USART$Transmitter: void enableTransmit()>();

     label1:
        return;
    }

    public byte read()
    {
        avrora.sim.mcu.USART$DataRegister r0;
        avrora.sim.mcu.USART$DataRegister$TwoLevelFIFO $r1;
        byte $b0;

        r0 := @this: avrora.sim.mcu.USART$DataRegister;

        $r1 = r0.<avrora.sim.mcu.USART$DataRegister: avrora.sim.mcu.USART$DataRegister$TwoLevelFIFO receiveRegister>;

        $b0 = virtualinvoke $r1.<avrora.sim.mcu.USART$DataRegister$TwoLevelFIFO: byte read()>();

        return $b0;
    }
}
