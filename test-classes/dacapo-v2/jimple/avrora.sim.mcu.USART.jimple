public class avrora.sim.mcu.USART extends avrora.sim.mcu.AtmelInternalDevice
{
    static final int RXCn;
    static final int TXCn;
    static final int UDREn;
    static final int FEn;
    static final int DORn;
    static final int UPEn;
    static final int U2Xn;
    static final int MPCMn;
    static final int RXCIEn;
    static final int TXCIEn;
    static final int UDRIEn;
    static final int RXENn;
    static final int TXENn;
    static final int UCSZn2;
    static final int RXB8n;
    static final int TXB8n;
    static final int UMSELn;
    static final int UPMn1;
    static final int UPMn0;
    static final int USBSn;
    static final int UCSZn1;
    static final int UCSZn0;
    static final int UCPOLn;
    static final int PARITY_DISABLED;
    static final int PARITY_EVEN;
    static final int PARITY_ODD;
    static final int[] FRAME_SIZE;
    final avrora.sim.mcu.USART$DataRegister UDRn_reg;
    final avrora.sim.mcu.USART$ControlRegisterA UCSRnA_reg;
    final avrora.sim.mcu.USART$ControlRegisterB UCSRnB_reg;
    final avrora.sim.mcu.USART$ControlRegisterC UCSRnC_reg;
    final avrora.sim.mcu.USART$UBRRnLReg UBRRnL_reg;
    final avrora.sim.mcu.USART$UBRRnHReg UBRRnH_reg;
    final avrora.sim.mcu.USART$Transmitter transmitter;
    final avrora.sim.mcu.USART$Receiver receiver;
    final avrora.sim.mcu.USART$USARTProperties properties;
    public avrora.sim.mcu.USART$USARTDevice connectedDevice;
    int period;
    int UBRRMultiplier;

    static avrora.sim.mcu.USART$USARTProperties getUSARTProperties(java.lang.String, avrora.sim.mcu.Microcontroller)
    {
        avrora.sim.mcu.Microcontroller r0;
        avrora.sim.mcu.MCUProperties r1;
        avrora.sim.mcu.USART$USARTProperties $r2;
        java.lang.String r4, $r8, $r12, $r16, $r20, $r22, $r25, $r27, $r30, $r32, $r35;
        java.lang.StringBuilder $r5, $r6, $r7, $r9, $r10, $r11, $r13, $r14, $r15, $r17, $r18, $r19, $r21, $r23, $r24, $r26, $r28, $r29, $r31, $r33, $r34;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        int[] $r36;

        r4 := @parameter0: java.lang.String;

        r0 := @parameter1: avrora.sim.mcu.Microcontroller;

        r1 = interfaceinvoke r0.<avrora.sim.mcu.Microcontroller: avrora.sim.mcu.MCUProperties getProperties()>();

        $r2 = new avrora.sim.mcu.USART$USARTProperties;

        specialinvoke $r2.<avrora.sim.mcu.USART$USARTProperties: void <init>()>();

        $r2.<avrora.sim.mcu.USART$USARTProperties: java.lang.String subID> = r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("USART");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2.<avrora.sim.mcu.USART$USARTProperties: java.lang.String USART_name> = $r8;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UDR");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2.<avrora.sim.mcu.USART$USARTProperties: java.lang.String UDR_name> = $r12;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UCSR");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2.<avrora.sim.mcu.USART$USARTProperties: java.lang.String UCSR_name> = $r16;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UBRR");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2.<avrora.sim.mcu.USART$USARTProperties: java.lang.String UBRR_name> = $r20;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = $r2.<avrora.sim.mcu.USART$USARTProperties: java.lang.String USART_name>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", RX");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = virtualinvoke r1.<avrora.sim.mcu.MCUProperties: int getInterrupt(java.lang.String)>($r25);

        $r2.<avrora.sim.mcu.USART$USARTProperties: int USART_RX_inum> = $i0;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = $r2.<avrora.sim.mcu.USART$USARTProperties: java.lang.String USART_name>;

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", UDRE");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = virtualinvoke r1.<avrora.sim.mcu.MCUProperties: int getInterrupt(java.lang.String)>($r30);

        $r2.<avrora.sim.mcu.USART$USARTProperties: int USART_UDRE_inum> = $i1;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = $r2.<avrora.sim.mcu.USART$USARTProperties: java.lang.String USART_name>;

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", TX");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        $i2 = virtualinvoke r1.<avrora.sim.mcu.MCUProperties: int getInterrupt(java.lang.String)>($r35);

        $r2.<avrora.sim.mcu.USART$USARTProperties: int USART_TX_inum> = $i2;

        $r36 = newarray (int)[8];

        $r36[0] = -1;

        $r36[1] = -1;

        $r36[2] = -1;

        $r36[3] = -1;

        $r36[4] = -1;

        $i3 = $r2.<avrora.sim.mcu.USART$USARTProperties: int USART_UDRE_inum>;

        $r36[5] = $i3;

        $i4 = $r2.<avrora.sim.mcu.USART$USARTProperties: int USART_TX_inum>;

        $r36[6] = $i4;

        $i5 = $r2.<avrora.sim.mcu.USART$USARTProperties: int USART_RX_inum>;

        $r36[7] = $i5;

        $r2.<avrora.sim.mcu.USART$USARTProperties: int[] interruptMapping> = $r36;

        return $r2;
    }

    public avrora.sim.mcu.USART$Frame transmitFrame()
    {
        avrora.sim.mcu.USART$Frame $r0;
        avrora.sim.mcu.USART r1;
        avrora.sim.mcu.USART$DataRegister $r2;
        avrora.sim.RWRegister $r3;
        byte $b0;
        avrora.sim.mcu.USART$ControlRegisterB $r4;
        boolean $z0;
        avrora.sim.mcu.USART$ControlRegisterC $r5;
        int $i1;

        r1 := @this: avrora.sim.mcu.USART;

        $r0 = new avrora.sim.mcu.USART$Frame;

        $r2 = r1.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$DataRegister UDRn_reg>;

        $r3 = $r2.<avrora.sim.mcu.USART$DataRegister: avrora.sim.RWRegister transmitRegister>;

        $b0 = virtualinvoke $r3.<avrora.sim.RWRegister: byte read()>();

        $r4 = r1.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$ControlRegisterB UCSRnB_reg>;

        $z0 = virtualinvoke $r4.<avrora.sim.mcu.USART$ControlRegisterB: boolean readBit(int)>(0);

        $r5 = r1.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$ControlRegisterC UCSRnC_reg>;

        $i1 = virtualinvoke $r5.<avrora.sim.mcu.USART$ControlRegisterC: int getFrameSize()>();

        specialinvoke $r0.<avrora.sim.mcu.USART$Frame: void <init>(byte,boolean,int)>($b0, $z0, $i1);

        return $r0;
    }

    public void receiveFrame(avrora.sim.mcu.USART$Frame)
    {
        avrora.sim.mcu.USART r0;
        avrora.sim.mcu.USART$DataRegister $r1;
        avrora.sim.mcu.USART$Frame r2;
        avrora.sim.mcu.USART$DataRegister$TwoLevelFIFO $r3;

        r0 := @this: avrora.sim.mcu.USART;

        r2 := @parameter0: avrora.sim.mcu.USART$Frame;

        $r1 = r0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$DataRegister UDRn_reg>;

        $r3 = $r1.<avrora.sim.mcu.USART$DataRegister: avrora.sim.mcu.USART$DataRegister$TwoLevelFIFO receiveRegister>;

        virtualinvoke $r3.<avrora.sim.mcu.USART$DataRegister$TwoLevelFIFO: void writeFrame(avrora.sim.mcu.USART$Frame)>(r2);

        return;
    }

    public void <init>(java.lang.String, avrora.sim.mcu.AtmelMicrocontroller)
    {
        avrora.sim.mcu.USART r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r19, $r22, $r23, $r26, $r29, $r30, $r33, $r36, $r37, $r40, $r43, $r44, $r47, $r50, $r51;
        java.lang.String r3, $r5, $r18, $r21, $r24, $r28, $r31, $r35, $r38, $r42, $r45, $r49, $r52;
        avrora.sim.mcu.AtmelMicrocontroller r6;
        avrora.sim.mcu.USART$USARTProperties $r7, $r16, $r20, $r27, $r34, $r41, $r48;
        avrora.sim.mcu.USART$DataRegister $r8, $r17;
        avrora.sim.mcu.USART$ControlRegisterA $r9, $r25;
        avrora.sim.mcu.USART$ControlRegisterB $r10, $r32;
        avrora.sim.mcu.USART$ControlRegisterC $r11, $r39;
        avrora.sim.mcu.USART$UBRRnLReg $r12, $r46;
        avrora.sim.mcu.USART$UBRRnHReg $r13, $r53;
        avrora.sim.mcu.USART$Transmitter $r14;
        avrora.sim.mcu.USART$Receiver $r15;
        avrora.sim.mcu.USART$SerialPrinter $r54;

        r0 := @this: avrora.sim.mcu.USART;

        r3 := @parameter0: java.lang.String;

        r6 := @parameter1: avrora.sim.mcu.AtmelMicrocontroller;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("usart");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<avrora.sim.mcu.AtmelInternalDevice: void <init>(java.lang.String,avrora.sim.mcu.AtmelMicrocontroller)>($r5, r6);

        r0.<avrora.sim.mcu.USART: int UBRRMultiplier> = 16;

        $r7 = staticinvoke <avrora.sim.mcu.USART: avrora.sim.mcu.USART$USARTProperties getUSARTProperties(java.lang.String,avrora.sim.mcu.Microcontroller)>(r3, r6);

        r0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$USARTProperties properties> = $r7;

        $r8 = new avrora.sim.mcu.USART$DataRegister;

        specialinvoke $r8.<avrora.sim.mcu.USART$DataRegister: void <init>(avrora.sim.mcu.USART)>(r0);

        r0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$DataRegister UDRn_reg> = $r8;

        $r9 = new avrora.sim.mcu.USART$ControlRegisterA;

        specialinvoke $r9.<avrora.sim.mcu.USART$ControlRegisterA: void <init>(avrora.sim.mcu.USART)>(r0);

        r0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$ControlRegisterA UCSRnA_reg> = $r9;

        $r10 = new avrora.sim.mcu.USART$ControlRegisterB;

        specialinvoke $r10.<avrora.sim.mcu.USART$ControlRegisterB: void <init>(avrora.sim.mcu.USART)>(r0);

        r0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$ControlRegisterB UCSRnB_reg> = $r10;

        $r11 = new avrora.sim.mcu.USART$ControlRegisterC;

        specialinvoke $r11.<avrora.sim.mcu.USART$ControlRegisterC: void <init>(avrora.sim.mcu.USART)>(r0);

        r0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$ControlRegisterC UCSRnC_reg> = $r11;

        $r12 = new avrora.sim.mcu.USART$UBRRnLReg;

        specialinvoke $r12.<avrora.sim.mcu.USART$UBRRnLReg: void <init>(avrora.sim.mcu.USART)>(r0);

        r0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$UBRRnLReg UBRRnL_reg> = $r12;

        $r13 = new avrora.sim.mcu.USART$UBRRnHReg;

        specialinvoke $r13.<avrora.sim.mcu.USART$UBRRnHReg: void <init>(avrora.sim.mcu.USART)>(r0);

        r0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$UBRRnHReg UBRRnH_reg> = $r13;

        $r14 = new avrora.sim.mcu.USART$Transmitter;

        specialinvoke $r14.<avrora.sim.mcu.USART$Transmitter: void <init>(avrora.sim.mcu.USART)>(r0);

        r0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$Transmitter transmitter> = $r14;

        $r15 = new avrora.sim.mcu.USART$Receiver;

        specialinvoke $r15.<avrora.sim.mcu.USART$Receiver: void <init>(avrora.sim.mcu.USART)>(r0);

        r0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$Receiver receiver> = $r15;

        $r16 = r0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$USARTProperties properties>;

        $r18 = $r16.<avrora.sim.mcu.USART$USARTProperties: java.lang.String UDR_name>;

        $r17 = r0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$DataRegister UDRn_reg>;

        virtualinvoke r0.<avrora.sim.mcu.USART: void installIOReg(java.lang.String,avrora.sim.ActiveRegister)>($r18, $r17);

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = r0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$USARTProperties properties>;

        $r21 = $r20.<avrora.sim.mcu.USART$USARTProperties: java.lang.String UCSR_name>;

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("A");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $r25 = r0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$ControlRegisterA UCSRnA_reg>;

        virtualinvoke r0.<avrora.sim.mcu.USART: void installIOReg(java.lang.String,avrora.sim.ActiveRegister)>($r24, $r25);

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = r0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$USARTProperties properties>;

        $r28 = $r27.<avrora.sim.mcu.USART$USARTProperties: java.lang.String UCSR_name>;

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("B");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        $r32 = r0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$ControlRegisterB UCSRnB_reg>;

        virtualinvoke r0.<avrora.sim.mcu.USART: void installIOReg(java.lang.String,avrora.sim.ActiveRegister)>($r31, $r32);

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = r0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$USARTProperties properties>;

        $r35 = $r34.<avrora.sim.mcu.USART$USARTProperties: java.lang.String UCSR_name>;

        $r36 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("C");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        $r39 = r0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$ControlRegisterC UCSRnC_reg>;

        virtualinvoke r0.<avrora.sim.mcu.USART: void installIOReg(java.lang.String,avrora.sim.ActiveRegister)>($r38, $r39);

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r41 = r0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$USARTProperties properties>;

        $r42 = $r41.<avrora.sim.mcu.USART$USARTProperties: java.lang.String UBRR_name>;

        $r43 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("L");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        $r46 = r0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$UBRRnLReg UBRRnL_reg>;

        virtualinvoke r0.<avrora.sim.mcu.USART: void installIOReg(java.lang.String,avrora.sim.ActiveRegister)>($r45, $r46);

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r48 = r0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$USARTProperties properties>;

        $r49 = $r48.<avrora.sim.mcu.USART$USARTProperties: java.lang.String UBRR_name>;

        $r50 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("H");

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        $r53 = r0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$UBRRnHReg UBRRnH_reg>;

        virtualinvoke r0.<avrora.sim.mcu.USART: void installIOReg(java.lang.String,avrora.sim.ActiveRegister)>($r52, $r53);

        $r54 = new avrora.sim.mcu.USART$SerialPrinter;

        specialinvoke $r54.<avrora.sim.mcu.USART$SerialPrinter: void <init>(avrora.sim.mcu.USART)>(r0);

        virtualinvoke r0.<avrora.sim.mcu.USART: void connect(avrora.sim.mcu.USART$USARTDevice)>($r54);

        return;
    }

    public void connect(avrora.sim.mcu.USART$USARTDevice)
    {
        avrora.sim.mcu.USART r0;
        avrora.sim.mcu.USART$USARTDevice r1;

        r0 := @this: avrora.sim.mcu.USART;

        r1 := @parameter0: avrora.sim.mcu.USART$USARTDevice;

        r0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$USARTDevice connectedDevice> = r1;

        return;
    }

    void updatePeriod()
    {
        avrora.sim.mcu.USART r0;
        avrora.sim.mcu.USART$UBRRnLReg $r1;
        avrora.sim.mcu.USART$UBRRnHReg $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        avrora.sim.output.SimPrinter $r3, $r5;
        java.lang.StringBuilder $r4, $r8, $r9, $r10;
        avrora.sim.mcu.USART$USARTProperties $r6;
        java.lang.String $r7, $r11;

        r0 := @this: avrora.sim.mcu.USART;

        $r2 = r0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$UBRRnHReg UBRRnH_reg>;

        $r1 = r0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$UBRRnLReg UBRRnL_reg>;

        $i0 = staticinvoke <avrora.sim.mcu.USART: int read16(avrora.sim.RWRegister,avrora.sim.RWRegister)>($r2, $r1);

        $i1 = $i0 + 1;

        r0.<avrora.sim.mcu.USART: int period> = $i1;

        $r3 = r0.<avrora.sim.mcu.USART: avrora.sim.output.SimPrinter devicePrinter>;

        if $r3 == null goto label1;

        $r5 = r0.<avrora.sim.mcu.USART: avrora.sim.output.SimPrinter devicePrinter>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = r0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$USARTProperties properties>;

        $r7 = $r6.<avrora.sim.mcu.USART$USARTProperties: java.lang.String USART_name>;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": period set to ");

        $i5 = r0.<avrora.sim.mcu.USART: int period>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<avrora.sim.output.SimPrinter: void println(java.lang.String)>($r11);

     label1:
        $i3 = r0.<avrora.sim.mcu.USART: int period>;

        $i2 = r0.<avrora.sim.mcu.USART: int UBRRMultiplier>;

        $i4 = $i3 * $i2;

        r0.<avrora.sim.mcu.USART: int period> = $i4;

        return;
    }

    public void startReceive()
    {
        avrora.sim.mcu.USART r0;
        avrora.sim.mcu.USART$Receiver $r1;

        r0 := @this: avrora.sim.mcu.USART;

        $r1 = r0.<avrora.sim.mcu.USART: avrora.sim.mcu.USART$Receiver receiver>;

        virtualinvoke $r1.<avrora.sim.mcu.USART$Receiver: void enableReceive()>();

        return;
    }

    static void <clinit>()
    {
        int[] $r0;

        <avrora.sim.mcu.USART: int PARITY_ODD> = 3;

        <avrora.sim.mcu.USART: int PARITY_EVEN> = 2;

        <avrora.sim.mcu.USART: int PARITY_DISABLED> = 0;

        <avrora.sim.mcu.USART: int UCPOLn> = 0;

        <avrora.sim.mcu.USART: int UCSZn0> = 1;

        <avrora.sim.mcu.USART: int UCSZn1> = 2;

        <avrora.sim.mcu.USART: int USBSn> = 3;

        <avrora.sim.mcu.USART: int UPMn0> = 4;

        <avrora.sim.mcu.USART: int UPMn1> = 5;

        <avrora.sim.mcu.USART: int UMSELn> = 6;

        <avrora.sim.mcu.USART: int TXB8n> = 0;

        <avrora.sim.mcu.USART: int RXB8n> = 1;

        <avrora.sim.mcu.USART: int UCSZn2> = 2;

        <avrora.sim.mcu.USART: int TXENn> = 3;

        <avrora.sim.mcu.USART: int RXENn> = 4;

        <avrora.sim.mcu.USART: int UDRIEn> = 5;

        <avrora.sim.mcu.USART: int TXCIEn> = 6;

        <avrora.sim.mcu.USART: int RXCIEn> = 7;

        <avrora.sim.mcu.USART: int MPCMn> = 0;

        <avrora.sim.mcu.USART: int U2Xn> = 1;

        <avrora.sim.mcu.USART: int UPEn> = 2;

        <avrora.sim.mcu.USART: int DORn> = 3;

        <avrora.sim.mcu.USART: int FEn> = 4;

        <avrora.sim.mcu.USART: int UDREn> = 5;

        <avrora.sim.mcu.USART: int TXCn> = 6;

        <avrora.sim.mcu.USART: int RXCn> = 7;

        $r0 = newarray (int)[8];

        $r0[0] = 5;

        $r0[1] = 6;

        $r0[2] = 7;

        $r0[3] = 8;

        $r0[4] = 8;

        $r0[5] = 8;

        $r0[6] = 8;

        $r0[7] = 9;

        <avrora.sim.mcu.USART: int[] FRAME_SIZE> = $r0;

        return;
    }
}
