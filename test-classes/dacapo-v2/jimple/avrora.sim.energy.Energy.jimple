public class avrora.sim.energy.Energy extends java.lang.Object implements avrora.sim.FiniteStateMachine$Probe
{
    private java.lang.String deviceName;
    private double[] ampere;
    private long[] cycles;
    private int currentMode;
    private int oldMode;
    private long lastChange;
    private static final double voltage;
    private double cycleTime;
    private avrora.sim.FiniteStateMachine stateMachine;
    private avrora.sim.clock.Clock clock;
    private avrora.sim.energy.EnergyControl energyControl;

    public void <init>(java.lang.String, double[], avrora.sim.FiniteStateMachine, avrora.sim.energy.EnergyControl)
    {
        avrora.sim.energy.Energy r0;
        java.lang.String r1;
        avrora.sim.FiniteStateMachine r2;
        avrora.sim.clock.Clock $r3, $r5;
        double[] r4;
        int $i0, i2;
        long $l1;
        double $d0, $d1;
        avrora.sim.energy.EnergyControl r6;

        r0 := @this: avrora.sim.energy.Energy;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: double[];

        r2 := @parameter2: avrora.sim.FiniteStateMachine;

        r6 := @parameter3: avrora.sim.energy.EnergyControl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<avrora.sim.energy.Energy: java.lang.String deviceName> = r1;

        $r3 = virtualinvoke r2.<avrora.sim.FiniteStateMachine: avrora.sim.clock.Clock getClock()>();

        r0.<avrora.sim.energy.Energy: avrora.sim.clock.Clock clock> = $r3;

        r0.<avrora.sim.energy.Energy: double[] ampere> = r4;

        r0.<avrora.sim.energy.Energy: avrora.sim.FiniteStateMachine stateMachine> = r2;

        $i0 = virtualinvoke r2.<avrora.sim.FiniteStateMachine: int getStartState()>();

        r0.<avrora.sim.energy.Energy: int currentMode> = $i0;

        $r5 = r0.<avrora.sim.energy.Energy: avrora.sim.clock.Clock clock>;

        $l1 = virtualinvoke $r5.<avrora.sim.clock.Clock: long getHZ()>();

        i2 = (int) $l1;

        $d0 = (double) i2;

        $d1 = 1.0 / $d0;

        r0.<avrora.sim.energy.Energy: double cycleTime> = $d1;

        r0.<avrora.sim.energy.Energy: avrora.sim.energy.EnergyControl energyControl> = r6;

        virtualinvoke r6.<avrora.sim.energy.EnergyControl: void addConsumer(avrora.sim.energy.Energy)>(r0);

        return;
    }

    public void fireBeforeTransition(int, int)
    {
        avrora.sim.energy.Energy r0;
        int i0, i1;

        r0 := @this: avrora.sim.energy.Energy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void fireAfterTransition(int, int)
    {
        int i0, $i1, $i2, $i8, i10;
        avrora.sim.energy.Energy r0;
        long[] $r1;
        avrora.sim.clock.Clock $r2, $r3;
        long $l3, $l4, $l5, $l6, $l7, $l9;
        avrora.sim.energy.EnergyControl $r4;

        r0 := @this: avrora.sim.energy.Energy;

        i10 := @parameter0: int;

        i0 := @parameter1: int;

        $i1 = r0.<avrora.sim.energy.Energy: int currentMode>;

        if i0 == $i1 goto label1;

        $r1 = r0.<avrora.sim.energy.Energy: long[] cycles>;

        $i2 = r0.<avrora.sim.energy.Energy: int currentMode>;

        $l3 = $r1[$i2];

        $r2 = r0.<avrora.sim.energy.Energy: avrora.sim.clock.Clock clock>;

        $l4 = virtualinvoke $r2.<avrora.sim.clock.Clock: long getCount()>();

        $l5 = r0.<avrora.sim.energy.Energy: long lastChange>;

        $l6 = $l4 - $l5;

        $l7 = $l3 + $l6;

        $r1[$i2] = $l7;

        $i8 = r0.<avrora.sim.energy.Energy: int currentMode>;

        r0.<avrora.sim.energy.Energy: int oldMode> = $i8;

        r0.<avrora.sim.energy.Energy: int currentMode> = i0;

        $r3 = r0.<avrora.sim.energy.Energy: avrora.sim.clock.Clock clock>;

        $l9 = virtualinvoke $r3.<avrora.sim.clock.Clock: long getCount()>();

        r0.<avrora.sim.energy.Energy: long lastChange> = $l9;

        $r4 = r0.<avrora.sim.energy.Energy: avrora.sim.energy.EnergyControl energyControl>;

        virtualinvoke $r4.<avrora.sim.energy.EnergyControl: void stateChange(avrora.sim.energy.Energy)>(r0);

     label1:
        return;
    }

    public double getTotalConsumedEnergy()
    {
        avrora.sim.energy.Energy r0;
        double[] $r1;
        int $i0, i1;
        double $d0, d1;

        r0 := @this: avrora.sim.energy.Energy;

        d1 = 0.0;

        i1 = 0;

     label1:
        $r1 = r0.<avrora.sim.energy.Energy: double[] ampere>;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label2;

        $d0 = virtualinvoke r0.<avrora.sim.energy.Energy: double getConsumedEnergy(int)>(i1);

        d1 = d1 + $d0;

        i1 = i1 + 1;

        goto label1;

     label2:
        return d1;
    }

    public double getConsumedEnergy(int)
    {
        avrora.sim.energy.Energy r0;
        int i0;
        long $l1;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        double[] $r1;

        r0 := @this: avrora.sim.energy.Energy;

        i0 := @parameter0: int;

        $l1 = virtualinvoke r0.<avrora.sim.energy.Energy: long getCycles(int)>(i0);

        $d0 = (double) $l1;

        $d2 = 3.0 * $d0;

        $r1 = r0.<avrora.sim.energy.Energy: double[] ampere>;

        $d1 = $r1[i0];

        $d4 = $d2 * $d1;

        $d3 = r0.<avrora.sim.energy.Energy: double cycleTime>;

        $d5 = $d4 * $d3;

        return $d5;
    }

    public int getModeNumber()
    {
        avrora.sim.energy.Energy r0;
        double[] $r1;
        int $i0;

        r0 := @this: avrora.sim.energy.Energy;

        $r1 = r0.<avrora.sim.energy.Energy: double[] ampere>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public int getCurrentMode()
    {
        avrora.sim.energy.Energy r0;
        int $i0;

        r0 := @this: avrora.sim.energy.Energy;

        $i0 = r0.<avrora.sim.energy.Energy: int currentMode>;

        return $i0;
    }

    public java.lang.String getModeName(int)
    {
        avrora.sim.energy.Energy r0;
        int i0;
        avrora.sim.FiniteStateMachine $r1;
        java.lang.String $r2;

        r0 := @this: avrora.sim.energy.Energy;

        i0 := @parameter0: int;

        $r1 = r0.<avrora.sim.energy.Energy: avrora.sim.FiniteStateMachine stateMachine>;

        $r2 = virtualinvoke $r1.<avrora.sim.FiniteStateMachine: java.lang.String getStateName(int)>(i0);

        return $r2;
    }

    public double getModeAmpere(int)
    {
        avrora.sim.energy.Energy r0;
        int i0;
        double[] $r1;
        double $d0;

        r0 := @this: avrora.sim.energy.Energy;

        i0 := @parameter0: int;

        $r1 = r0.<avrora.sim.energy.Energy: double[] ampere>;

        $d0 = $r1[i0];

        return $d0;
    }

    public long getCycles(int)
    {
        avrora.sim.energy.Energy r0;
        long[] $r1, $r2;
        int i0, $i1;
        avrora.sim.clock.Clock $r3;
        long $l2, $l3, $l4, l5;

        r0 := @this: avrora.sim.energy.Energy;

        i0 := @parameter0: int;

        $r1 = r0.<avrora.sim.energy.Energy: long[] cycles>;

        if $r1 != null goto label1;

        return 0L;

     label1:
        $r2 = r0.<avrora.sim.energy.Energy: long[] cycles>;

        l5 = $r2[i0];

        $i1 = r0.<avrora.sim.energy.Energy: int currentMode>;

        if i0 != $i1 goto label2;

        $r3 = r0.<avrora.sim.energy.Energy: avrora.sim.clock.Clock clock>;

        $l2 = virtualinvoke $r3.<avrora.sim.clock.Clock: long getCount()>();

        $l3 = r0.<avrora.sim.energy.Energy: long lastChange>;

        $l4 = $l2 - $l3;

        l5 = l5 + $l4;

     label2:
        return l5;
    }

    public java.lang.String getName()
    {
        avrora.sim.energy.Energy r0;
        java.lang.String $r1;

        r0 := @this: avrora.sim.energy.Energy;

        $r1 = r0.<avrora.sim.energy.Energy: java.lang.String deviceName>;

        return $r1;
    }

    public int getOldMode()
    {
        avrora.sim.energy.Energy r0;
        int $i0;

        r0 := @this: avrora.sim.energy.Energy;

        $i0 = r0.<avrora.sim.energy.Energy: int oldMode>;

        return $i0;
    }

    public double getCurrentAmpere()
    {
        avrora.sim.energy.Energy r0;
        int $i0;
        double[] $r1;
        double $d0;

        r0 := @this: avrora.sim.energy.Energy;

        $r1 = r0.<avrora.sim.energy.Energy: double[] ampere>;

        $i0 = r0.<avrora.sim.energy.Energy: int currentMode>;

        $d0 = $r1[$i0];

        return $d0;
    }

    public double getOldAmpere()
    {
        avrora.sim.energy.Energy r0;
        int $i0;
        double[] $r1;
        double $d0;

        r0 := @this: avrora.sim.energy.Energy;

        $r1 = r0.<avrora.sim.energy.Energy: double[] ampere>;

        $i0 = r0.<avrora.sim.energy.Energy: int oldMode>;

        $d0 = $r1[$i0];

        return $d0;
    }

    public void activate()
    {
        avrora.sim.energy.Energy r0;
        avrora.sim.FiniteStateMachine $r1;
        double[] $r2;
        int $i0, $i1, i2;
        long[] $r3, $r4, $r5;

        r0 := @this: avrora.sim.energy.Energy;

        $r1 = r0.<avrora.sim.energy.Energy: avrora.sim.FiniteStateMachine stateMachine>;

        virtualinvoke $r1.<avrora.sim.FiniteStateMachine: void insertProbe(avrora.sim.FiniteStateMachine$Probe)>(r0);

        $r2 = r0.<avrora.sim.energy.Energy: double[] ampere>;

        $i0 = lengthof $r2;

        $r3 = newarray (long)[$i0];

        r0.<avrora.sim.energy.Energy: long[] cycles> = $r3;

        i2 = 0;

     label1:
        $r4 = r0.<avrora.sim.energy.Energy: long[] cycles>;

        $i1 = lengthof $r4;

        if i2 >= $i1 goto label2;

        $r5 = r0.<avrora.sim.energy.Energy: long[] cycles>;

        $r5[i2] = 0L;

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public static void <clinit>()
    {
        <avrora.sim.energy.Energy: double voltage> = 3.0;

        return;
    }
}
