public abstract class avrora.sim.mcu.Timer8Bit extends avrora.sim.mcu.AtmelInternalDevice
{
    public static final int MODE_NORMAL;
    public static final int MODE_PWM;
    public static final int MODE_CTC;
    public static final int MODE_FASTPWM;
    public static final int MAX;
    public static final int BOTTOM;
    final avrora.sim.mcu.Timer8Bit$ControlRegister TCCRn_reg;
    final avrora.sim.mcu.Timer8Bit$TCNTnRegister TCNTn_reg;
    final avrora.sim.mcu.Timer8Bit$BufferedRegister OCRn_reg;
    protected final int n;
    protected avrora.sim.Simulator$Event ticker;
    protected final avrora.sim.clock.Clock externalClock;
    protected avrora.sim.clock.Clock timerClock;
    protected int period;
    final avrora.sim.mcu.DefaultMCU$Pin outputComparePin;
    final avrora.sim.Simulator$Event[] tickers;
    boolean blockCompareMatch;
    final int OCIEn;
    final int TOIEn;
    final int OCFn;
    final int TOVn;
    protected avrora.sim.mcu.ATMegaFamily$FlagRegister TIFR_reg;
    protected avrora.sim.mcu.ATMegaFamily$MaskRegister TIMSK_reg;
    final int[] periods;

    protected void <init>(avrora.sim.mcu.AtmelMicrocontroller, int, int, int, int, int, int[])
    {
        avrora.sim.mcu.Timer8Bit r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r15, $r17, $r18, $r23, $r24, $r25, $r28, $r29, $r30, $r33, $r34, $r35;
        int i0, i1, i2, i3, i4;
        java.lang.String $r4, $r19, $r26, $r31, $r36;
        avrora.sim.mcu.AtmelMicrocontroller r5, $r16;
        avrora.sim.mcu.Timer8Bit$ControlRegister $r6, $r27;
        avrora.sim.mcu.Timer8Bit$TCNTnRegister $r7, $r32;
        avrora.sim.mcu.Timer8Bit$BufferedRegister $r8, $r37;
        avrora.sim.ActiveRegister $r9, $r11;
        avrora.sim.mcu.ATMegaFamily$FlagRegister $r10;
        avrora.sim.mcu.ATMegaFamily$MaskRegister $r12;
        avrora.sim.clock.Clock $r13, $r14;
        avrora.sim.mcu.Microcontroller$Pin $r20;
        avrora.sim.mcu.DefaultMCU$Pin $r21;
        int[] r22;
        avrora.sim.Simulator$Event[] $r38;

        r0 := @this: avrora.sim.mcu.Timer8Bit;

        r5 := @parameter0: avrora.sim.mcu.AtmelMicrocontroller;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        r22 := @parameter6: int[];

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("timer");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<avrora.sim.mcu.AtmelInternalDevice: void <init>(java.lang.String,avrora.sim.mcu.AtmelMicrocontroller)>($r4, r5);

        $r6 = new avrora.sim.mcu.Timer8Bit$ControlRegister;

        specialinvoke $r6.<avrora.sim.mcu.Timer8Bit$ControlRegister: void <init>(avrora.sim.mcu.Timer8Bit)>(r0);

        r0.<avrora.sim.mcu.Timer8Bit: avrora.sim.mcu.Timer8Bit$ControlRegister TCCRn_reg> = $r6;

        $r7 = new avrora.sim.mcu.Timer8Bit$TCNTnRegister;

        specialinvoke $r7.<avrora.sim.mcu.Timer8Bit$TCNTnRegister: void <init>(avrora.sim.mcu.Timer8Bit)>(r0);

        r0.<avrora.sim.mcu.Timer8Bit: avrora.sim.mcu.Timer8Bit$TCNTnRegister TCNTn_reg> = $r7;

        $r8 = new avrora.sim.mcu.Timer8Bit$BufferedRegister;

        specialinvoke $r8.<avrora.sim.mcu.Timer8Bit$BufferedRegister: void <init>(avrora.sim.mcu.Timer8Bit)>(r0);

        r0.<avrora.sim.mcu.Timer8Bit: avrora.sim.mcu.Timer8Bit$BufferedRegister OCRn_reg> = $r8;

        $r9 = virtualinvoke r5.<avrora.sim.mcu.AtmelMicrocontroller: avrora.sim.ActiveRegister getIOReg(java.lang.String)>("TIFR");

        $r10 = (avrora.sim.mcu.ATMegaFamily$FlagRegister) $r9;

        r0.<avrora.sim.mcu.Timer8Bit: avrora.sim.mcu.ATMegaFamily$FlagRegister TIFR_reg> = $r10;

        $r11 = virtualinvoke r5.<avrora.sim.mcu.AtmelMicrocontroller: avrora.sim.ActiveRegister getIOReg(java.lang.String)>("TIMSK");

        $r12 = (avrora.sim.mcu.ATMegaFamily$MaskRegister) $r11;

        r0.<avrora.sim.mcu.Timer8Bit: avrora.sim.mcu.ATMegaFamily$MaskRegister TIMSK_reg> = $r12;

        $r13 = virtualinvoke r5.<avrora.sim.mcu.AtmelMicrocontroller: avrora.sim.clock.Clock getClock(java.lang.String)>("external");

        r0.<avrora.sim.mcu.Timer8Bit: avrora.sim.clock.Clock externalClock> = $r13;

        $r14 = r0.<avrora.sim.mcu.Timer8Bit: avrora.sim.clock.Clock mainClock>;

        r0.<avrora.sim.mcu.Timer8Bit: avrora.sim.clock.Clock timerClock> = $r14;

        $r16 = r0.<avrora.sim.mcu.Timer8Bit: avrora.sim.mcu.AtmelMicrocontroller microcontroller>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OC");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = virtualinvoke $r16.<avrora.sim.mcu.AtmelMicrocontroller: avrora.sim.mcu.Microcontroller$Pin getPin(java.lang.String)>($r19);

        $r21 = (avrora.sim.mcu.DefaultMCU$Pin) $r20;

        r0.<avrora.sim.mcu.Timer8Bit: avrora.sim.mcu.DefaultMCU$Pin outputComparePin> = $r21;

        r0.<avrora.sim.mcu.Timer8Bit: int OCIEn> = i1;

        r0.<avrora.sim.mcu.Timer8Bit: int TOIEn> = i2;

        r0.<avrora.sim.mcu.Timer8Bit: int OCFn> = i3;

        r0.<avrora.sim.mcu.Timer8Bit: int TOVn> = i4;

        r0.<avrora.sim.mcu.Timer8Bit: int n> = i0;

        r0.<avrora.sim.mcu.Timer8Bit: int[] periods> = r22;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TCCR");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        $r27 = r0.<avrora.sim.mcu.Timer8Bit: avrora.sim.mcu.Timer8Bit$ControlRegister TCCRn_reg>;

        virtualinvoke r0.<avrora.sim.mcu.Timer8Bit: void installIOReg(java.lang.String,avrora.sim.ActiveRegister)>($r26, $r27);

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TCNT");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        $r32 = r0.<avrora.sim.mcu.Timer8Bit: avrora.sim.mcu.Timer8Bit$TCNTnRegister TCNTn_reg>;

        virtualinvoke r0.<avrora.sim.mcu.Timer8Bit: void installIOReg(java.lang.String,avrora.sim.ActiveRegister)>($r31, $r32);

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OCR");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        $r37 = r0.<avrora.sim.mcu.Timer8Bit: avrora.sim.mcu.Timer8Bit$BufferedRegister OCRn_reg>;

        virtualinvoke r0.<avrora.sim.mcu.Timer8Bit: void installIOReg(java.lang.String,avrora.sim.ActiveRegister)>($r36, $r37);

        $r38 = newarray (avrora.sim.Simulator$Event)[4];

        r0.<avrora.sim.mcu.Timer8Bit: avrora.sim.Simulator$Event[] tickers> = $r38;

        specialinvoke r0.<avrora.sim.mcu.Timer8Bit: void installTickers()>();

        return;
    }

    private void installTickers()
    {
        avrora.sim.mcu.Timer8Bit r0;
        avrora.sim.mcu.Timer8Bit$Mode_Normal $r1;
        avrora.sim.Simulator$Event[] $r2, $r4, $r6, $r8;
        avrora.sim.mcu.Timer8Bit$Mode_CTC $r3;
        avrora.sim.mcu.Timer8Bit$Mode_FastPWM $r5;
        avrora.sim.mcu.Timer8Bit$Mode_PWM $r7;

        r0 := @this: avrora.sim.mcu.Timer8Bit;

        $r2 = r0.<avrora.sim.mcu.Timer8Bit: avrora.sim.Simulator$Event[] tickers>;

        $r1 = new avrora.sim.mcu.Timer8Bit$Mode_Normal;

        specialinvoke $r1.<avrora.sim.mcu.Timer8Bit$Mode_Normal: void <init>(avrora.sim.mcu.Timer8Bit)>(r0);

        $r2[0] = $r1;

        $r4 = r0.<avrora.sim.mcu.Timer8Bit: avrora.sim.Simulator$Event[] tickers>;

        $r3 = new avrora.sim.mcu.Timer8Bit$Mode_CTC;

        specialinvoke $r3.<avrora.sim.mcu.Timer8Bit$Mode_CTC: void <init>(avrora.sim.mcu.Timer8Bit)>(r0);

        $r4[2] = $r3;

        $r6 = r0.<avrora.sim.mcu.Timer8Bit: avrora.sim.Simulator$Event[] tickers>;

        $r5 = new avrora.sim.mcu.Timer8Bit$Mode_FastPWM;

        specialinvoke $r5.<avrora.sim.mcu.Timer8Bit$Mode_FastPWM: void <init>(avrora.sim.mcu.Timer8Bit)>(r0);

        $r6[3] = $r5;

        $r8 = r0.<avrora.sim.mcu.Timer8Bit: avrora.sim.Simulator$Event[] tickers>;

        $r7 = new avrora.sim.mcu.Timer8Bit$Mode_PWM;

        specialinvoke $r7.<avrora.sim.mcu.Timer8Bit$Mode_PWM: void <init>(avrora.sim.mcu.Timer8Bit)>(r0);

        $r8[1] = $r7;

        return;
    }

    protected void compareMatch()
    {
        avrora.sim.mcu.Timer8Bit r0;
        avrora.sim.output.SimPrinter $r1, $r5;
        int $i0, $i1, $i2;
        avrora.sim.mcu.ATMegaFamily$FlagRegister $r2;
        avrora.sim.mcu.ATMegaFamily$MaskRegister $r3;
        boolean z0;
        java.lang.StringBuilder $r4, $r6, $r7, $r8, $r9, $r10;
        java.lang.String $r11;

        r0 := @this: avrora.sim.mcu.Timer8Bit;

        $r1 = r0.<avrora.sim.mcu.Timer8Bit: avrora.sim.output.SimPrinter devicePrinter>;

        if $r1 == null goto label1;

        $r3 = r0.<avrora.sim.mcu.Timer8Bit: avrora.sim.mcu.ATMegaFamily$MaskRegister TIMSK_reg>;

        $i1 = r0.<avrora.sim.mcu.Timer8Bit: int OCIEn>;

        z0 = virtualinvoke $r3.<avrora.sim.mcu.ATMegaFamily$MaskRegister: boolean readBit(int)>($i1);

        $r5 = r0.<avrora.sim.mcu.Timer8Bit: avrora.sim.output.SimPrinter devicePrinter>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timer");

        $i2 = r0.<avrora.sim.mcu.Timer8Bit: int n>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".compareMatch (enabled: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<avrora.sim.output.SimPrinter: void println(java.lang.String)>($r11);

     label1:
        $r2 = r0.<avrora.sim.mcu.Timer8Bit: avrora.sim.mcu.ATMegaFamily$FlagRegister TIFR_reg>;

        $i0 = r0.<avrora.sim.mcu.Timer8Bit: int OCFn>;

        virtualinvoke $r2.<avrora.sim.mcu.ATMegaFamily$FlagRegister: void flagBit(int)>($i0);

        return;
    }

    protected void overflow()
    {
        avrora.sim.mcu.Timer8Bit r0;
        avrora.sim.output.SimPrinter $r1, $r5;
        int $i0, $i1, $i2;
        avrora.sim.mcu.ATMegaFamily$FlagRegister $r2;
        avrora.sim.mcu.ATMegaFamily$MaskRegister $r3;
        boolean z0;
        java.lang.StringBuilder $r4, $r6, $r7, $r8, $r9, $r10;
        java.lang.String $r11;

        r0 := @this: avrora.sim.mcu.Timer8Bit;

        $r1 = r0.<avrora.sim.mcu.Timer8Bit: avrora.sim.output.SimPrinter devicePrinter>;

        if $r1 == null goto label1;

        $r3 = r0.<avrora.sim.mcu.Timer8Bit: avrora.sim.mcu.ATMegaFamily$MaskRegister TIMSK_reg>;

        $i1 = r0.<avrora.sim.mcu.Timer8Bit: int TOIEn>;

        z0 = virtualinvoke $r3.<avrora.sim.mcu.ATMegaFamily$MaskRegister: boolean readBit(int)>($i1);

        $r5 = r0.<avrora.sim.mcu.Timer8Bit: avrora.sim.output.SimPrinter devicePrinter>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timer");

        $i2 = r0.<avrora.sim.mcu.Timer8Bit: int n>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".overFlow (enabled: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<avrora.sim.output.SimPrinter: void println(java.lang.String)>($r11);

     label1:
        $r2 = r0.<avrora.sim.mcu.Timer8Bit: avrora.sim.mcu.ATMegaFamily$FlagRegister TIFR_reg>;

        $i0 = r0.<avrora.sim.mcu.Timer8Bit: int TOVn>;

        virtualinvoke $r2.<avrora.sim.mcu.ATMegaFamily$FlagRegister: void flagBit(int)>($i0);

        return;
    }

    private void tickerStart(int)
    {
        avrora.sim.mcu.Timer8Bit r0;
        boolean $z0;
        int i0, $i2;
        avrora.sim.mcu.Timer8Bit$BufferedRegister $r1;
        byte $b1;

        r0 := @this: avrora.sim.mcu.Timer8Bit;

        i0 := @parameter0: int;

        $z0 = r0.<avrora.sim.mcu.Timer8Bit: boolean blockCompareMatch>;

        if $z0 != 0 goto label1;

        $r1 = r0.<avrora.sim.mcu.Timer8Bit: avrora.sim.mcu.Timer8Bit$BufferedRegister OCRn_reg>;

        $b1 = virtualinvoke $r1.<avrora.sim.mcu.Timer8Bit$BufferedRegister: byte read()>();

        $i2 = $b1 & 255;

        if i0 != $i2 goto label1;

        virtualinvoke r0.<avrora.sim.mcu.Timer8Bit: void compareMatch()>();

     label1:
        return;
    }

    private void tickerFinish(avrora.sim.Simulator$Event, int)
    {
        avrora.sim.mcu.Timer8Bit r0;
        int i0, $i2;
        byte $b1;
        avrora.sim.mcu.Timer8Bit$TCNTnRegister $r1;
        avrora.sim.Simulator$Event r2;
        long $l3;
        avrora.sim.clock.Clock $r3;

        r0 := @this: avrora.sim.mcu.Timer8Bit;

        r2 := @parameter0: avrora.sim.Simulator$Event;

        i0 := @parameter1: int;

        $r1 = r0.<avrora.sim.mcu.Timer8Bit: avrora.sim.mcu.Timer8Bit$TCNTnRegister TCNTn_reg>;

        $b1 = (byte) i0;

        virtualinvoke $r1.<avrora.sim.mcu.Timer8Bit$TCNTnRegister: void write(byte)>($b1);

        r0.<avrora.sim.mcu.Timer8Bit: boolean blockCompareMatch> = 0;

        $r3 = r0.<avrora.sim.mcu.Timer8Bit: avrora.sim.clock.Clock timerClock>;

        $i2 = r0.<avrora.sim.mcu.Timer8Bit: int period>;

        $l3 = (long) $i2;

        virtualinvoke $r3.<avrora.sim.clock.Clock: void insertEvent(avrora.sim.Simulator$Event,long)>(r2, $l3);

        return;
    }

    static void access$000(avrora.sim.mcu.Timer8Bit, int)
    {
        avrora.sim.mcu.Timer8Bit r0;
        int i0;

        r0 := @parameter0: avrora.sim.mcu.Timer8Bit;

        i0 := @parameter1: int;

        specialinvoke r0.<avrora.sim.mcu.Timer8Bit: void tickerStart(int)>(i0);

        return;
    }

    static void access$100(avrora.sim.mcu.Timer8Bit, avrora.sim.Simulator$Event, int)
    {
        avrora.sim.mcu.Timer8Bit r0;
        avrora.sim.Simulator$Event r1;
        int i0;

        r0 := @parameter0: avrora.sim.mcu.Timer8Bit;

        r1 := @parameter1: avrora.sim.Simulator$Event;

        i0 := @parameter2: int;

        specialinvoke r0.<avrora.sim.mcu.Timer8Bit: void tickerFinish(avrora.sim.Simulator$Event,int)>(r1, i0);

        return;
    }

    public static void <clinit>()
    {
        <avrora.sim.mcu.Timer8Bit: int BOTTOM> = 0;

        <avrora.sim.mcu.Timer8Bit: int MAX> = 255;

        <avrora.sim.mcu.Timer8Bit: int MODE_FASTPWM> = 3;

        <avrora.sim.mcu.Timer8Bit: int MODE_CTC> = 2;

        <avrora.sim.mcu.Timer8Bit: int MODE_PWM> = 1;

        <avrora.sim.mcu.Timer8Bit: int MODE_NORMAL> = 0;

        return;
    }
}
