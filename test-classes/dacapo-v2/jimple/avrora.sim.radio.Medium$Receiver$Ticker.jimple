public class avrora.sim.radio.Medium$Receiver$Ticker extends java.lang.Object implements avrora.sim.Simulator$Event
{
    static final boolean $assertionsDisabled;
    final avrora.sim.radio.Medium$Receiver this$0;

    protected void <init>(avrora.sim.radio.Medium$Receiver)
    {
        avrora.sim.radio.Medium$Receiver$Ticker r0;
        avrora.sim.radio.Medium$Receiver r1;

        r0 := @this: avrora.sim.radio.Medium$Receiver$Ticker;

        r1 := @parameter0: avrora.sim.radio.Medium$Receiver;

        r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void fire()
    {
        avrora.sim.radio.Medium$Receiver$Ticker r0;
        avrora.sim.radio.Medium$Receiver $r1, $r2, $r3, $r5;
        boolean $z0, $z1;
        avrora.sim.clock.Clock $r4, $r6;
        long $l0, $l1;

        r0 := @this: avrora.sim.radio.Medium$Receiver$Ticker;

        $r1 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $z0 = $r1.<avrora.sim.radio.Medium$Receiver: boolean activated>;

        if $z0 == 0 goto label2;

        $r2 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $z1 = $r2.<avrora.sim.radio.Medium$Receiver: boolean locked>;

        if $z1 == 0 goto label1;

        $r5 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $r6 = $r5.<avrora.sim.radio.Medium$Receiver: avrora.sim.clock.Clock clock>;

        $l1 = virtualinvoke $r6.<avrora.sim.clock.Clock: long getCount()>();

        specialinvoke r0.<avrora.sim.radio.Medium$Receiver$Ticker: void fireLocked(long)>($l1);

        goto label2;

     label1:
        $r3 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $r4 = $r3.<avrora.sim.radio.Medium$Receiver: avrora.sim.clock.Clock clock>;

        $l0 = virtualinvoke $r4.<avrora.sim.clock.Clock: long getCount()>();

        specialinvoke r0.<avrora.sim.radio.Medium$Receiver$Ticker: void fireUnlocked(long)>($l0);

     label2:
        return;
    }

    private void fireUnlocked(long)
    {
        avrora.sim.radio.Medium$Receiver$Ticker r0;
        long l0, $l1, l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9, l10, l11, $l13, $l15, $l16, $l17;
        avrora.sim.radio.Medium$Receiver $r1, $r2, $r3, $r4, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r15, $r16, $r18;
        avrora.sim.radio.Medium$Transmission r5;
        avrora.sim.clock.Clock $r8, $r14, $r17;
        byte $b12, $b14, $b18;

        r0 := @this: avrora.sim.radio.Medium$Receiver$Ticker;

        l0 := @parameter0: long;

        $r1 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $l1 = virtualinvoke $r1.<avrora.sim.radio.Medium$Receiver: long getBitNum(long)>(l0);

        l2 = $l1 - 1L;

        $r3 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $r2 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $l3 = $r2.<avrora.sim.radio.Medium$Receiver: long cyclesPerByte>;

        $l4 = l0 - $l3;

        staticinvoke <avrora.sim.radio.Medium$Receiver: void access$000(avrora.sim.radio.Medium$Receiver,long)>($r3, $l4);

        $r4 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $l5 = l2 - 8L;

        r5 = staticinvoke <avrora.sim.radio.Medium$Receiver: avrora.sim.radio.Medium$Transmission access$100(avrora.sim.radio.Medium$Receiver,long)>($r4, $l5);

        if r5 == null goto label3;

        $r9 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $l7 = r5.<avrora.sim.radio.Medium$Transmission: long firstBit>;

        $l8 = $l7 + 8L;

        $l9 = $l8 + 1L;

        l10 = virtualinvoke $r9.<avrora.sim.radio.Medium$Receiver: long getCycleTime(long)>($l9);

        l11 = l10 - l0;

        $b12 = l11 cmp 0L;

        if $b12 > 0 goto label1;

        $r18 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $r18.<avrora.sim.radio.Medium$Receiver: boolean locked> = 1;

        specialinvoke r0.<avrora.sim.radio.Medium$Receiver$Ticker: void deliverByte(long)>(l2);

        return;

     label1:
        $r10 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $l13 = $r10.<avrora.sim.radio.Medium$Receiver: long leadCycles>;

        $b14 = l11 cmp $l13;

        if $b14 >= 0 goto label2;

        $r15 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $r15.<avrora.sim.radio.Medium$Receiver: boolean locked> = 1;

        $r16 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $r17 = $r16.<avrora.sim.radio.Medium$Receiver: avrora.sim.clock.Clock clock>;

        virtualinvoke $r17.<avrora.sim.clock.Clock: void insertEvent(avrora.sim.Simulator$Event,long)>(r0, l11);

        return;

     label2:
        $r11 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $l16 = $r11.<avrora.sim.radio.Medium$Receiver: long leadCycles>;

        $r12 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $l15 = $r12.<avrora.sim.radio.Medium$Receiver: long cyclesPerByte>;

        $l17 = $l16 + $l15;

        $b18 = l11 cmp $l17;

        if $b18 >= 0 goto label3;

        $r13 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $r14 = $r13.<avrora.sim.radio.Medium$Receiver: avrora.sim.clock.Clock clock>;

        virtualinvoke $r14.<avrora.sim.clock.Clock: void insertEvent(avrora.sim.Simulator$Event,long)>(r0, l11);

        return;

     label3:
        $r6 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $r8 = $r6.<avrora.sim.radio.Medium$Receiver: avrora.sim.clock.Clock clock>;

        $r7 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $l6 = $r7.<avrora.sim.radio.Medium$Receiver: long leadCycles>;

        virtualinvoke $r8.<avrora.sim.clock.Clock: void insertEvent(avrora.sim.Simulator$Event,long)>(r0, $l6);

        return;
    }

    private void fireLocked(long)
    {
        avrora.sim.radio.Medium$Receiver$Ticker r0;
        long l0, $l1, l2, $l3, $l4;
        avrora.sim.radio.Medium$Receiver $r1, $r2, $r3;

        r0 := @this: avrora.sim.radio.Medium$Receiver$Ticker;

        l0 := @parameter0: long;

        $r1 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $l1 = virtualinvoke $r1.<avrora.sim.radio.Medium$Receiver: long getBitNum(long)>(l0);

        l2 = $l1 - 1L;

        $r3 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $r2 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $l3 = $r2.<avrora.sim.radio.Medium$Receiver: long cyclesPerByte>;

        $l4 = l0 - $l3;

        staticinvoke <avrora.sim.radio.Medium$Receiver: void access$000(avrora.sim.radio.Medium$Receiver,long)>($r3, $l4);

        specialinvoke r0.<avrora.sim.radio.Medium$Receiver$Ticker: void deliverByte(long)>(l2);

        return;
    }

    private void deliverByte(long)
    {
        avrora.sim.radio.Medium$Receiver$Ticker r0;
        long l0, $l1, $l3, $l4, $l5, $l6, $l7, $l13, $l14, $l16, $l21;
        avrora.sim.radio.Medium$Receiver $r1, $r3, $r4, $r5, $r7, $r8, $r9, $r11, $r12, $r15, $r17, $r18, $r21, $r23, $r24, $r26, $r27, $r29, $r30, $r33, $r35, $r36, $r39, $r41, $r43, $r44, $r48, $r49, $r50, $r52, $r53, $r56;
        java.util.List r2;
        avrora.sim.radio.Medium$Probe$List $r6, $r13, $r25, $r31;
        avrora.sim.clock.Clock $r10, $r19, $r22, $r28, $r37, $r40, $r45, $r47, $r54, $r57;
        boolean $z0, z1, $z2;
        java.util.Iterator r14;
        avrora.sim.radio.Medium $r16, $r34, $r42, $r51;
        avrora.sim.radio.Medium$Arbitrator $r20, $r38, $r46, $r55;
        double $d0, $d1, $d2, $d4, $d5, $d6, $d7, $d8, $d9, d10, $d11, d12, d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, d29, d30, d32, d33, d34;
        int $i8, $i11, $i12, $i15, $i17, $i18, $i20, $i22, $i23, i25, i26, i27, i28;
        byte $b9, $b10;
        java.lang.Object $r32;
        java.lang.AssertionError $r58;
        avrora.sim.radio.Medium$Transmission r59;
        char c24, c29;

        r0 := @this: avrora.sim.radio.Medium$Receiver$Ticker;

        l0 := @parameter0: long;

        $r1 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $l1 = l0 - 8L;

        r2 = staticinvoke <avrora.sim.radio.Medium$Receiver: java.util.List access$200(avrora.sim.radio.Medium$Receiver,long)>($r1, $l1);

        if r2 == null goto label7;

        z1 = 0;

        d29 = 0.0;

        d30 = 0.0;

        $z0 = <avrora.sim.radio.Medium$Receiver$Ticker: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i23 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i23 > 0 goto label1;

        $r58 = new java.lang.AssertionError;

        specialinvoke $r58.<java.lang.AssertionError: void <init>()>();

        throw $r58;

     label1:
        r14 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r32 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r59 = (avrora.sim.radio.Medium$Transmission) $r32;

        if z1 == 0 goto label3;

        $r50 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $r51 = $r50.<avrora.sim.radio.Medium$Receiver: avrora.sim.radio.Medium medium>;

        $r55 = $r51.<avrora.sim.radio.Medium: avrora.sim.radio.Medium$Arbitrator arbitrator>;

        $r56 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $r52 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $r57 = $r52.<avrora.sim.radio.Medium$Receiver: avrora.sim.clock.Clock clock>;

        $r53 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $r54 = $r53.<avrora.sim.radio.Medium$Receiver: avrora.sim.clock.Clock clock>;

        $l21 = virtualinvoke $r54.<avrora.sim.clock.Clock: long getCount()>();

        $d22 = virtualinvoke $r57.<avrora.sim.clock.Clock: double cyclesToMillis(long)>($l21);

        $i22 = (int) $d22;

        d32 = interfaceinvoke $r55.<avrora.sim.radio.Medium$Arbitrator: double computeReceivedPower(avrora.sim.radio.Medium$Transmission,avrora.sim.radio.Medium$Receiver,int)>(r59, $r56, $i22);

        $d23 = d29 / 10.0;

        $d24 = staticinvoke <java.lang.Math: double pow(double,double)>(10.0, $d23);

        $d25 = d32 / 10.0;

        $d26 = staticinvoke <java.lang.Math: double pow(double,double)>(10.0, $d25);

        $d27 = $d24 + $d26;

        $d28 = staticinvoke <java.lang.Math: double log10(double)>($d27);

        d29 = 10.0 * $d28;

        d30 = d30 - d32;

        goto label4;

     label3:
        z1 = 1;

        $r33 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $r34 = $r33.<avrora.sim.radio.Medium$Receiver: avrora.sim.radio.Medium medium>;

        $r38 = $r34.<avrora.sim.radio.Medium: avrora.sim.radio.Medium$Arbitrator arbitrator>;

        $r39 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $r35 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $r40 = $r35.<avrora.sim.radio.Medium$Receiver: avrora.sim.clock.Clock clock>;

        $r36 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $r37 = $r36.<avrora.sim.radio.Medium$Receiver: avrora.sim.clock.Clock clock>;

        $l14 = virtualinvoke $r37.<avrora.sim.clock.Clock: long getCount()>();

        $d1 = virtualinvoke $r40.<avrora.sim.clock.Clock: double cyclesToMillis(long)>($l14);

        $i15 = (int) $d1;

        $d2 = interfaceinvoke $r38.<avrora.sim.radio.Medium$Arbitrator: double computeReceivedPower(avrora.sim.radio.Medium$Transmission,avrora.sim.radio.Medium$Receiver,int)>(r59, $r39, $i15);

        staticinvoke <avrora.sim.radio.Medium: double access$302(double)>($d2);

        $r41 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $r42 = $r41.<avrora.sim.radio.Medium$Receiver: avrora.sim.radio.Medium medium>;

        $r46 = $r42.<avrora.sim.radio.Medium: avrora.sim.radio.Medium$Arbitrator arbitrator>;

        $r43 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $r47 = $r43.<avrora.sim.radio.Medium$Receiver: avrora.sim.clock.Clock clock>;

        $r44 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $r45 = $r44.<avrora.sim.radio.Medium$Receiver: avrora.sim.clock.Clock clock>;

        $l16 = virtualinvoke $r45.<avrora.sim.clock.Clock: long getCount()>();

        $d4 = virtualinvoke $r47.<avrora.sim.clock.Clock: double cyclesToMillis(long)>($l16);

        $i17 = (int) $d4;

        $i18 = interfaceinvoke $r46.<avrora.sim.radio.Medium$Arbitrator: int getNoise(int)>($i17);

        staticinvoke <avrora.sim.radio.Medium: int access$402(int)>($i18);

        d29 = staticinvoke <avrora.sim.radio.Medium: double access$300()>();

        $d5 = staticinvoke <avrora.sim.radio.Medium: double access$300()>();

        $i20 = staticinvoke <avrora.sim.radio.Medium: int access$400()>();

        $d6 = (double) $i20;

        d30 = $d5 - $d6;

     label4:
        $d7 = d30 / 10.0;

        d33 = staticinvoke <java.lang.Math: double pow(double,double)>(10.0, $d7);

        $d8 = 1.0 + d33;

        $d9 = staticinvoke <java.lang.Math: double log(double)>($d8);

        d10 = d33 / $d9;

        $d11 = 2.0 * d10;

        d12 = staticinvoke <java.lang.Math: double sqrt(double)>($d11);

        d13 = staticinvoke <java.lang.Math: double pow(double,double)>(d12, 2.0);

        $d14 = neg d13;

        $d15 = $d14 / 2.0;

        $d16 = staticinvoke <java.lang.Math: double exp(double)>($d15);

        $d19 = 1.64 * d12;

        $d17 = 0.76 * d13;

        $d18 = $d17 + 4.0;

        $d20 = staticinvoke <java.lang.Math: double sqrt(double)>($d18);

        $d21 = $d19 + $d20;

        d34 = $d16 / $d21;

        $r48 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        virtualinvoke $r48.<avrora.sim.radio.Medium$Receiver: void setBER(double)>(d34);

        $r49 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        virtualinvoke $r49.<avrora.sim.radio.Medium$Receiver: void setRSSI(double)>(d29);

        goto label2;

     label5:
        $r15 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $r16 = $r15.<avrora.sim.radio.Medium$Receiver: avrora.sim.radio.Medium medium>;

        $r20 = $r16.<avrora.sim.radio.Medium: avrora.sim.radio.Medium$Arbitrator arbitrator>;

        $r21 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $l6 = l0 - 8L;

        $r17 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $r22 = $r17.<avrora.sim.radio.Medium$Receiver: avrora.sim.clock.Clock clock>;

        $r18 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $r19 = $r18.<avrora.sim.radio.Medium$Receiver: avrora.sim.clock.Clock clock>;

        $l7 = virtualinvoke $r19.<avrora.sim.clock.Clock: long getCount()>();

        $d0 = virtualinvoke $r22.<avrora.sim.clock.Clock: double cyclesToMillis(long)>($l7);

        $i8 = (int) $d0;

        c24 = interfaceinvoke $r20.<avrora.sim.radio.Medium$Arbitrator: char mergeTransmissions(avrora.sim.radio.Medium$Receiver,java.util.List,long,int)>($r21, r2, $l6, $i8);

        i25 = c24 >>> 8;

        $r23 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $b9 = (byte) c24;

        $b10 = virtualinvoke $r23.<avrora.sim.radio.Medium$Receiver: byte nextByte(boolean,byte)>(1, $b9);

        i26 = 255 & $b10;

        $i11 = i26 << 8;

        $i12 = i25 & $i11;

        i27 = i26 | $i12;

        i28 = i27 | i25;

        c29 = (char) i28;

        $r24 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $r25 = $r24.<avrora.sim.radio.Medium$Receiver: avrora.sim.radio.Medium$Probe$List probeList>;

        if $r25 == null goto label6;

        $r29 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $r31 = $r29.<avrora.sim.radio.Medium$Receiver: avrora.sim.radio.Medium$Probe$List probeList>;

        $r30 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        virtualinvoke $r31.<avrora.sim.radio.Medium$Probe$List: void fireAfterReceive(avrora.sim.radio.Medium$Receiver,char)>($r30, c29);

     label6:
        $r26 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $r28 = $r26.<avrora.sim.radio.Medium$Receiver: avrora.sim.clock.Clock clock>;

        $r27 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $l13 = $r27.<avrora.sim.radio.Medium$Receiver: long cyclesPerByte>;

        virtualinvoke $r28.<avrora.sim.clock.Clock: void insertEvent(avrora.sim.Simulator$Event,long)>(r0, $l13);

        goto label9;

     label7:
        $r3 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $r3.<avrora.sim.radio.Medium$Receiver: boolean locked> = 0;

        $r4 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        virtualinvoke $r4.<avrora.sim.radio.Medium$Receiver: byte nextByte(boolean,byte)>(0, 0);

        $r5 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $r6 = $r5.<avrora.sim.radio.Medium$Receiver: avrora.sim.radio.Medium$Probe$List probeList>;

        if $r6 == null goto label8;

        $r11 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $r13 = $r11.<avrora.sim.radio.Medium$Receiver: avrora.sim.radio.Medium$Probe$List probeList>;

        $r12 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        virtualinvoke $r13.<avrora.sim.radio.Medium$Probe$List: void fireAfterReceiveEnd(avrora.sim.radio.Medium$Receiver)>($r12);

     label8:
        $r7 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $r10 = $r7.<avrora.sim.radio.Medium$Receiver: avrora.sim.clock.Clock clock>;

        $r8 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $l4 = $r8.<avrora.sim.radio.Medium$Receiver: long leadCycles>;

        $r9 = r0.<avrora.sim.radio.Medium$Receiver$Ticker: avrora.sim.radio.Medium$Receiver this$0>;

        $l3 = $r9.<avrora.sim.radio.Medium$Receiver: long cyclesPerByte>;

        $l5 = $l4 + $l3;

        virtualinvoke $r10.<avrora.sim.clock.Clock: void insertEvent(avrora.sim.Simulator$Event,long)>(r0, $l5);

     label9:
        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lavrora/sim/radio/Medium;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <avrora.sim.radio.Medium$Receiver$Ticker: boolean $assertionsDisabled> = $z1;

        return;
    }
}
