public class avrora.sim.InterruptTable extends java.lang.Object
{
    protected final int numInterrupts;
    protected long posted;
    protected long pending;
    protected long enabled;
    protected avrora.sim.util.MulticastInterruptProbe globalProbe;
    protected final avrora.sim.util.MulticastInterruptProbe[] probes;
    protected final avrora.sim.InterruptTable$Notification[] notify;
    protected final avrora.sim.Interpreter interpreter;
    protected final avrora.sim.State state;

    public void <init>(avrora.sim.Interpreter, int)
    {
        avrora.sim.InterruptTable r0;
        avrora.sim.Interpreter r1, $r4;
        int i0;
        avrora.sim.util.MulticastInterruptProbe[] $r2;
        avrora.sim.InterruptTable$Notification[] $r3;
        avrora.sim.State $r5;

        r0 := @this: avrora.sim.InterruptTable;

        r1 := @parameter0: avrora.sim.Interpreter;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<avrora.sim.InterruptTable: avrora.sim.Interpreter interpreter> = r1;

        $r2 = newarray (avrora.sim.util.MulticastInterruptProbe)[i0];

        r0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe[] probes> = $r2;

        $r3 = newarray (avrora.sim.InterruptTable$Notification)[i0];

        r0.<avrora.sim.InterruptTable: avrora.sim.InterruptTable$Notification[] notify> = $r3;

        $r4 = r0.<avrora.sim.InterruptTable: avrora.sim.Interpreter interpreter>;

        $r5 = virtualinvoke $r4.<avrora.sim.Interpreter: avrora.sim.State getState()>();

        r0.<avrora.sim.InterruptTable: avrora.sim.State state> = $r5;

        r0.<avrora.sim.InterruptTable: int numInterrupts> = i0;

        return;
    }

    public void post(int)
    {
        avrora.sim.InterruptTable r0;
        avrora.sim.Interpreter $r1;
        int i0;
        long $l1, $l2, $l3, $l4, $l5;
        avrora.sim.util.MulticastInterruptProbe[] $r2;
        avrora.sim.util.MulticastInterruptProbe r3, $r4, $r7;
        avrora.sim.State $r5, $r6;

        r0 := @this: avrora.sim.InterruptTable;

        i0 := @parameter0: int;

        $r1 = r0.<avrora.sim.InterruptTable: avrora.sim.Interpreter interpreter>;

        $r1.<avrora.sim.Interpreter: boolean innerLoop> = 0;

        $l1 = r0.<avrora.sim.InterruptTable: long posted>;

        $l2 = staticinvoke <cck.util.Arithmetic: long setBit(long,int,boolean)>($l1, i0, 1);

        r0.<avrora.sim.InterruptTable: long posted> = $l2;

        $l4 = r0.<avrora.sim.InterruptTable: long posted>;

        $l3 = r0.<avrora.sim.InterruptTable: long enabled>;

        $l5 = $l4 & $l3;

        r0.<avrora.sim.InterruptTable: long pending> = $l5;

        $r2 = r0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe[] probes>;

        r3 = $r2[i0];

        $r4 = r0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe>;

        if $r4 == null goto label1;

        $r7 = r0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe>;

        $r6 = r0.<avrora.sim.InterruptTable: avrora.sim.State state>;

        virtualinvoke $r7.<avrora.sim.util.MulticastInterruptProbe: void fireWhenPosted(avrora.sim.State,int)>($r6, i0);

     label1:
        if r3 == null goto label2;

        $r5 = r0.<avrora.sim.InterruptTable: avrora.sim.State state>;

        virtualinvoke r3.<avrora.sim.util.MulticastInterruptProbe: void fireWhenPosted(avrora.sim.State,int)>($r5, i0);

     label2:
        return;
    }

    void force(int)
    {
        avrora.sim.InterruptTable r0;
        int i0;
        avrora.sim.InterruptTable$Notification[] $r1;
        avrora.sim.InterruptTable$Notification r2;

        r0 := @this: avrora.sim.InterruptTable;

        i0 := @parameter0: int;

        virtualinvoke r0.<avrora.sim.InterruptTable: void post(int)>(i0);

        $r1 = r0.<avrora.sim.InterruptTable: avrora.sim.InterruptTable$Notification[] notify>;

        r2 = $r1[i0];

        if r2 == null goto label1;

        interfaceinvoke r2.<avrora.sim.InterruptTable$Notification: void force(int)>(i0);

     label1:
        return;
    }

    public void unpost(int)
    {
        avrora.sim.InterruptTable r0;
        int i0;
        long $l1, $l2, $l3, $l4, $l5;
        avrora.sim.util.MulticastInterruptProbe[] $r1;
        avrora.sim.util.MulticastInterruptProbe r2, $r3, $r6;
        avrora.sim.State $r4, $r5;

        r0 := @this: avrora.sim.InterruptTable;

        i0 := @parameter0: int;

        $l1 = r0.<avrora.sim.InterruptTable: long posted>;

        $l2 = staticinvoke <cck.util.Arithmetic: long setBit(long,int,boolean)>($l1, i0, 0);

        r0.<avrora.sim.InterruptTable: long posted> = $l2;

        $l4 = r0.<avrora.sim.InterruptTable: long posted>;

        $l3 = r0.<avrora.sim.InterruptTable: long enabled>;

        $l5 = $l4 & $l3;

        r0.<avrora.sim.InterruptTable: long pending> = $l5;

        $r1 = r0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe[] probes>;

        r2 = $r1[i0];

        $r3 = r0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe>;

        if $r3 == null goto label1;

        $r6 = r0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe>;

        $r5 = r0.<avrora.sim.InterruptTable: avrora.sim.State state>;

        virtualinvoke $r6.<avrora.sim.util.MulticastInterruptProbe: void fireWhenUnposted(avrora.sim.State,int)>($r5, i0);

     label1:
        if r2 == null goto label2;

        $r4 = r0.<avrora.sim.InterruptTable: avrora.sim.State state>;

        virtualinvoke r2.<avrora.sim.util.MulticastInterruptProbe: void fireWhenUnposted(avrora.sim.State,int)>($r4, i0);

     label2:
        return;
    }

    void enable(int)
    {
        avrora.sim.InterruptTable r0;
        int i0;
        long $l1, $l2, $l3, $l4, $l5;
        avrora.sim.util.MulticastInterruptProbe[] $r1;
        avrora.sim.util.MulticastInterruptProbe r2, $r3, $r6;
        avrora.sim.State $r4, $r5;

        r0 := @this: avrora.sim.InterruptTable;

        i0 := @parameter0: int;

        $l1 = r0.<avrora.sim.InterruptTable: long enabled>;

        $l2 = staticinvoke <cck.util.Arithmetic: long setBit(long,int,boolean)>($l1, i0, 1);

        r0.<avrora.sim.InterruptTable: long enabled> = $l2;

        $l4 = r0.<avrora.sim.InterruptTable: long posted>;

        $l3 = r0.<avrora.sim.InterruptTable: long enabled>;

        $l5 = $l4 & $l3;

        r0.<avrora.sim.InterruptTable: long pending> = $l5;

        $r1 = r0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe[] probes>;

        r2 = $r1[i0];

        $r3 = r0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe>;

        if $r3 == null goto label1;

        $r6 = r0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe>;

        $r5 = r0.<avrora.sim.InterruptTable: avrora.sim.State state>;

        virtualinvoke $r6.<avrora.sim.util.MulticastInterruptProbe: void fireWhenEnabled(avrora.sim.State,int)>($r5, i0);

     label1:
        if r2 == null goto label2;

        $r4 = r0.<avrora.sim.InterruptTable: avrora.sim.State state>;

        virtualinvoke r2.<avrora.sim.util.MulticastInterruptProbe: void fireWhenEnabled(avrora.sim.State,int)>($r4, i0);

     label2:
        return;
    }

    public void disable(int)
    {
        avrora.sim.InterruptTable r0;
        int i0;
        long $l1, $l2, $l3, $l4, $l5;
        avrora.sim.util.MulticastInterruptProbe[] $r1;
        avrora.sim.util.MulticastInterruptProbe r2, $r3, $r6;
        avrora.sim.State $r4, $r5;

        r0 := @this: avrora.sim.InterruptTable;

        i0 := @parameter0: int;

        $l1 = r0.<avrora.sim.InterruptTable: long enabled>;

        $l2 = staticinvoke <cck.util.Arithmetic: long setBit(long,int,boolean)>($l1, i0, 0);

        r0.<avrora.sim.InterruptTable: long enabled> = $l2;

        $l4 = r0.<avrora.sim.InterruptTable: long posted>;

        $l3 = r0.<avrora.sim.InterruptTable: long enabled>;

        $l5 = $l4 & $l3;

        r0.<avrora.sim.InterruptTable: long pending> = $l5;

        $r1 = r0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe[] probes>;

        r2 = $r1[i0];

        $r3 = r0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe>;

        if $r3 == null goto label1;

        $r6 = r0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe>;

        $r5 = r0.<avrora.sim.InterruptTable: avrora.sim.State state>;

        virtualinvoke $r6.<avrora.sim.util.MulticastInterruptProbe: void fireWhenDisabled(avrora.sim.State,int)>($r5, i0);

     label1:
        if r2 == null goto label2;

        $r4 = r0.<avrora.sim.InterruptTable: avrora.sim.State state>;

        virtualinvoke r2.<avrora.sim.util.MulticastInterruptProbe: void fireWhenDisabled(avrora.sim.State,int)>($r4, i0);

     label2:
        return;
    }

    public void enableAll()
    {
        avrora.sim.InterruptTable r0;
        avrora.sim.util.MulticastInterruptProbe $r1, $r3;
        avrora.sim.State $r2;

        r0 := @this: avrora.sim.InterruptTable;

        $r1 = r0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe>;

        if $r1 == null goto label1;

        $r3 = r0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe>;

        $r2 = r0.<avrora.sim.InterruptTable: avrora.sim.State state>;

        virtualinvoke $r3.<avrora.sim.util.MulticastInterruptProbe: void fireWhenEnabled(avrora.sim.State,int)>($r2, 0);

     label1:
        return;
    }

    public void disableAll()
    {
        avrora.sim.InterruptTable r0;
        avrora.sim.util.MulticastInterruptProbe $r1, $r3;
        avrora.sim.State $r2;

        r0 := @this: avrora.sim.InterruptTable;

        $r1 = r0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe>;

        if $r1 == null goto label1;

        $r3 = r0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe>;

        $r2 = r0.<avrora.sim.InterruptTable: avrora.sim.State state>;

        virtualinvoke $r3.<avrora.sim.util.MulticastInterruptProbe: void fireWhenDisabled(avrora.sim.State,int)>($r2, 0);

     label1:
        return;
    }

    public void beforeInvoke(int)
    {
        avrora.sim.InterruptTable r0;
        int i0;
        avrora.sim.util.MulticastInterruptProbe[] $r1;
        avrora.sim.util.MulticastInterruptProbe r2, $r3, $r8;
        avrora.sim.InterruptTable$Notification[] $r4;
        avrora.sim.InterruptTable$Notification r5;
        avrora.sim.State $r6, $r7;

        r0 := @this: avrora.sim.InterruptTable;

        i0 := @parameter0: int;

        $r1 = r0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe[] probes>;

        r2 = $r1[i0];

        $r3 = r0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe>;

        if $r3 == null goto label1;

        $r8 = r0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe>;

        $r7 = r0.<avrora.sim.InterruptTable: avrora.sim.State state>;

        virtualinvoke $r8.<avrora.sim.util.MulticastInterruptProbe: void fireBeforeInvoke(avrora.sim.State,int)>($r7, i0);

     label1:
        if r2 == null goto label2;

        $r6 = r0.<avrora.sim.InterruptTable: avrora.sim.State state>;

        virtualinvoke r2.<avrora.sim.util.MulticastInterruptProbe: void fireBeforeInvoke(avrora.sim.State,int)>($r6, i0);

     label2:
        $r4 = r0.<avrora.sim.InterruptTable: avrora.sim.InterruptTable$Notification[] notify>;

        r5 = $r4[i0];

        if r5 == null goto label3;

        interfaceinvoke r5.<avrora.sim.InterruptTable$Notification: void invoke(int)>(i0);

     label3:
        return;
    }

    public void afterInvoke(int)
    {
        avrora.sim.InterruptTable r0;
        int i0;
        avrora.sim.util.MulticastInterruptProbe[] $r1;
        avrora.sim.util.MulticastInterruptProbe r2, $r3, $r6;
        avrora.sim.State $r4, $r5;

        r0 := @this: avrora.sim.InterruptTable;

        i0 := @parameter0: int;

        $r1 = r0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe[] probes>;

        r2 = $r1[i0];

        $r3 = r0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe>;

        if $r3 == null goto label1;

        $r6 = r0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe>;

        $r5 = r0.<avrora.sim.InterruptTable: avrora.sim.State state>;

        virtualinvoke $r6.<avrora.sim.util.MulticastInterruptProbe: void fireAfterInvoke(avrora.sim.State,int)>($r5, i0);

     label1:
        if r2 == null goto label2;

        $r4 = r0.<avrora.sim.InterruptTable: avrora.sim.State state>;

        virtualinvoke r2.<avrora.sim.util.MulticastInterruptProbe: void fireAfterInvoke(avrora.sim.State,int)>($r4, i0);

     label2:
        return;
    }

    public void registerInternalNotification(avrora.sim.InterruptTable$Notification, int)
    {
        avrora.sim.InterruptTable r0;
        int i0;
        avrora.sim.InterruptTable$Notification r1;
        avrora.sim.InterruptTable$Notification[] $r2;

        r0 := @this: avrora.sim.InterruptTable;

        r1 := @parameter0: avrora.sim.InterruptTable$Notification;

        i0 := @parameter1: int;

        $r2 = r0.<avrora.sim.InterruptTable: avrora.sim.InterruptTable$Notification[] notify>;

        $r2[i0] = r1;

        return;
    }

    public long getPostedInterrupts()
    {
        avrora.sim.InterruptTable r0;
        long $l0;

        r0 := @this: avrora.sim.InterruptTable;

        $l0 = r0.<avrora.sim.InterruptTable: long posted>;

        return $l0;
    }

    public long getPendingInterrupts()
    {
        avrora.sim.InterruptTable r0;
        long $l0;

        r0 := @this: avrora.sim.InterruptTable;

        $l0 = r0.<avrora.sim.InterruptTable: long pending>;

        return $l0;
    }

    public long getEnabledInterrupts()
    {
        avrora.sim.InterruptTable r0;
        long $l0;

        r0 := @this: avrora.sim.InterruptTable;

        $l0 = r0.<avrora.sim.InterruptTable: long enabled>;

        return $l0;
    }

    public boolean isPosted(int)
    {
        avrora.sim.InterruptTable r0;
        int i0;
        long $l1;
        boolean $z0;

        r0 := @this: avrora.sim.InterruptTable;

        i0 := @parameter0: int;

        $l1 = r0.<avrora.sim.InterruptTable: long posted>;

        $z0 = staticinvoke <cck.util.Arithmetic: boolean getBit(long,int)>($l1, i0);

        return $z0;
    }

    public boolean isPending(int)
    {
        avrora.sim.InterruptTable r0;
        int i0;
        long $l1;
        boolean $z0;

        r0 := @this: avrora.sim.InterruptTable;

        i0 := @parameter0: int;

        $l1 = r0.<avrora.sim.InterruptTable: long pending>;

        $z0 = staticinvoke <cck.util.Arithmetic: boolean getBit(long,int)>($l1, i0);

        return $z0;
    }

    public boolean isEnabled(int)
    {
        avrora.sim.InterruptTable r0;
        int i0;
        long $l1;
        boolean $z0;

        r0 := @this: avrora.sim.InterruptTable;

        i0 := @parameter0: int;

        $l1 = r0.<avrora.sim.InterruptTable: long enabled>;

        $z0 = staticinvoke <cck.util.Arithmetic: boolean getBit(long,int)>($l1, i0);

        return $z0;
    }

    public void insertProbe(avrora.sim.Simulator$InterruptProbe, int)
    {
        avrora.sim.InterruptTable r0;
        int i0;
        avrora.sim.util.MulticastInterruptProbe[] $r1, $r4;
        avrora.sim.Simulator$InterruptProbe r2;
        avrora.sim.util.MulticastInterruptProbe $r3, r5;

        r0 := @this: avrora.sim.InterruptTable;

        r2 := @parameter0: avrora.sim.Simulator$InterruptProbe;

        i0 := @parameter1: int;

        $r1 = r0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe[] probes>;

        r5 = $r1[i0];

        if r5 != null goto label1;

        $r4 = r0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe[] probes>;

        $r3 = new avrora.sim.util.MulticastInterruptProbe;

        specialinvoke $r3.<avrora.sim.util.MulticastInterruptProbe: void <init>()>();

        r5 = $r3;

        $r4[i0] = $r3;

     label1:
        virtualinvoke r5.<avrora.sim.util.MulticastInterruptProbe: void add(java.lang.Object)>(r2);

        return;
    }

    public void removeProbe(avrora.sim.Simulator$InterruptProbe, int)
    {
        avrora.sim.InterruptTable r0;
        int i0;
        avrora.sim.util.MulticastInterruptProbe[] $r1;
        avrora.sim.util.MulticastInterruptProbe r2;
        avrora.sim.Simulator$InterruptProbe r3;

        r0 := @this: avrora.sim.InterruptTable;

        r3 := @parameter0: avrora.sim.Simulator$InterruptProbe;

        i0 := @parameter1: int;

        $r1 = r0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe[] probes>;

        r2 = $r1[i0];

        if r2 == null goto label1;

        virtualinvoke r2.<avrora.sim.util.MulticastInterruptProbe: void remove(java.lang.Object)>(r3);

     label1:
        return;
    }

    public void insertProbe(avrora.sim.Simulator$InterruptProbe)
    {
        avrora.sim.InterruptTable r0;
        avrora.sim.util.MulticastInterruptProbe $r1, $r3, $r4;
        avrora.sim.Simulator$InterruptProbe r2;

        r0 := @this: avrora.sim.InterruptTable;

        r2 := @parameter0: avrora.sim.Simulator$InterruptProbe;

        $r1 = r0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe>;

        if $r1 != null goto label1;

        $r4 = new avrora.sim.util.MulticastInterruptProbe;

        specialinvoke $r4.<avrora.sim.util.MulticastInterruptProbe: void <init>()>();

        r0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe> = $r4;

     label1:
        $r3 = r0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe>;

        virtualinvoke $r3.<avrora.sim.util.MulticastInterruptProbe: void add(java.lang.Object)>(r2);

        return;
    }

    public void removeProbe(avrora.sim.Simulator$InterruptProbe)
    {
        avrora.sim.InterruptTable r0;
        avrora.sim.util.MulticastInterruptProbe $r1, $r3;
        avrora.sim.Simulator$InterruptProbe r2;

        r0 := @this: avrora.sim.InterruptTable;

        r2 := @parameter0: avrora.sim.Simulator$InterruptProbe;

        $r1 = r0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe>;

        if $r1 == null goto label1;

        $r3 = r0.<avrora.sim.InterruptTable: avrora.sim.util.MulticastInterruptProbe globalProbe>;

        virtualinvoke $r3.<avrora.sim.util.MulticastInterruptProbe: void remove(java.lang.Object)>(r2);

     label1:
        return;
    }

    public int getNumberOfInterrupts()
    {
        avrora.sim.InterruptTable r0;
        int $i0;

        r0 := @this: avrora.sim.InterruptTable;

        $i0 = r0.<avrora.sim.InterruptTable: int numInterrupts>;

        return $i0;
    }
}
