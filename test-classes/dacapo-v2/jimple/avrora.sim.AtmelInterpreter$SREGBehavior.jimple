class avrora.sim.AtmelInterpreter$SREGBehavior extends avrora.sim.state.VolatileBehavior
{
    final avrora.sim.AtmelInterpreter this$0;

    private void <init>(avrora.sim.AtmelInterpreter)
    {
        avrora.sim.AtmelInterpreter$SREGBehavior r0;
        avrora.sim.AtmelInterpreter r1;

        r0 := @this: avrora.sim.AtmelInterpreter$SREGBehavior;

        r1 := @parameter0: avrora.sim.AtmelInterpreter;

        r0.<avrora.sim.AtmelInterpreter$SREGBehavior: avrora.sim.AtmelInterpreter this$0> = r1;

        specialinvoke r0.<avrora.sim.state.VolatileBehavior: void <init>()>();

        return;
    }

    public int read(int)
    {
        avrora.sim.AtmelInterpreter$SREGBehavior r0;
        avrora.sim.AtmelInterpreter $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        byte $b0;
        int i1, i2;

        r0 := @this: avrora.sim.AtmelInterpreter$SREGBehavior;

        i1 := @parameter0: int;

        i2 = 0;

        $r1 = r0.<avrora.sim.AtmelInterpreter$SREGBehavior: avrora.sim.AtmelInterpreter this$0>;

        $z0 = $r1.<avrora.sim.AtmelInterpreter: boolean I>;

        if $z0 == 0 goto label1;

        i2 = 0 | 128;

     label1:
        $r2 = r0.<avrora.sim.AtmelInterpreter$SREGBehavior: avrora.sim.AtmelInterpreter this$0>;

        $z1 = $r2.<avrora.sim.AtmelInterpreter: boolean T>;

        if $z1 == 0 goto label2;

        i2 = i2 | 64;

     label2:
        $r3 = r0.<avrora.sim.AtmelInterpreter$SREGBehavior: avrora.sim.AtmelInterpreter this$0>;

        $z2 = $r3.<avrora.sim.AtmelInterpreter: boolean H>;

        if $z2 == 0 goto label3;

        i2 = i2 | 32;

     label3:
        $r4 = r0.<avrora.sim.AtmelInterpreter$SREGBehavior: avrora.sim.AtmelInterpreter this$0>;

        $z3 = $r4.<avrora.sim.AtmelInterpreter: boolean S>;

        if $z3 == 0 goto label4;

        i2 = i2 | 16;

     label4:
        $r5 = r0.<avrora.sim.AtmelInterpreter$SREGBehavior: avrora.sim.AtmelInterpreter this$0>;

        $z4 = $r5.<avrora.sim.AtmelInterpreter: boolean V>;

        if $z4 == 0 goto label5;

        i2 = i2 | 8;

     label5:
        $r6 = r0.<avrora.sim.AtmelInterpreter$SREGBehavior: avrora.sim.AtmelInterpreter this$0>;

        $z5 = $r6.<avrora.sim.AtmelInterpreter: boolean N>;

        if $z5 == 0 goto label6;

        i2 = i2 | 4;

     label6:
        $r7 = r0.<avrora.sim.AtmelInterpreter$SREGBehavior: avrora.sim.AtmelInterpreter this$0>;

        $z6 = $r7.<avrora.sim.AtmelInterpreter: boolean Z>;

        if $z6 == 0 goto label7;

        i2 = i2 | 2;

     label7:
        $r8 = r0.<avrora.sim.AtmelInterpreter$SREGBehavior: avrora.sim.AtmelInterpreter this$0>;

        $z7 = $r8.<avrora.sim.AtmelInterpreter: boolean C>;

        if $z7 == 0 goto label8;

        i2 = i2 | 1;

     label8:
        $b0 = (byte) i2;

        return $b0;
    }

    public int write(int, int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        avrora.sim.AtmelInterpreter$SREGBehavior r0;
        avrora.sim.AtmelInterpreter $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;

        r0 := @this: avrora.sim.AtmelInterpreter$SREGBehavior;

        i9 := @parameter0: int;

        i0 := @parameter1: int;

        $i1 = i0 & 128;

        if $i1 == 0 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        if $z1 == 0 goto label03;

        $r9 = r0.<avrora.sim.AtmelInterpreter$SREGBehavior: avrora.sim.AtmelInterpreter this$0>;

        virtualinvoke $r9.<avrora.sim.AtmelInterpreter: void enableInterrupts()>();

        goto label04;

     label03:
        $r1 = r0.<avrora.sim.AtmelInterpreter$SREGBehavior: avrora.sim.AtmelInterpreter this$0>;

        virtualinvoke $r1.<avrora.sim.AtmelInterpreter: void disableInterrupts()>();

     label04:
        $r2 = r0.<avrora.sim.AtmelInterpreter$SREGBehavior: avrora.sim.AtmelInterpreter this$0>;

        $i2 = i0 & 64;

        if $i2 == 0 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        $r2.<avrora.sim.AtmelInterpreter: boolean T> = $z2;

        $r3 = r0.<avrora.sim.AtmelInterpreter$SREGBehavior: avrora.sim.AtmelInterpreter this$0>;

        $i3 = i0 & 32;

        if $i3 == 0 goto label07;

        $z3 = 1;

        goto label08;

     label07:
        $z3 = 0;

     label08:
        $r3.<avrora.sim.AtmelInterpreter: boolean H> = $z3;

        $r4 = r0.<avrora.sim.AtmelInterpreter$SREGBehavior: avrora.sim.AtmelInterpreter this$0>;

        $i4 = i0 & 16;

        if $i4 == 0 goto label09;

        $z4 = 1;

        goto label10;

     label09:
        $z4 = 0;

     label10:
        $r4.<avrora.sim.AtmelInterpreter: boolean S> = $z4;

        $r5 = r0.<avrora.sim.AtmelInterpreter$SREGBehavior: avrora.sim.AtmelInterpreter this$0>;

        $i5 = i0 & 8;

        if $i5 == 0 goto label11;

        $z5 = 1;

        goto label12;

     label11:
        $z5 = 0;

     label12:
        $r5.<avrora.sim.AtmelInterpreter: boolean V> = $z5;

        $r6 = r0.<avrora.sim.AtmelInterpreter$SREGBehavior: avrora.sim.AtmelInterpreter this$0>;

        $i6 = i0 & 4;

        if $i6 == 0 goto label13;

        $z6 = 1;

        goto label14;

     label13:
        $z6 = 0;

     label14:
        $r6.<avrora.sim.AtmelInterpreter: boolean N> = $z6;

        $r7 = r0.<avrora.sim.AtmelInterpreter$SREGBehavior: avrora.sim.AtmelInterpreter this$0>;

        $i7 = i0 & 2;

        if $i7 == 0 goto label15;

        $z7 = 1;

        goto label16;

     label15:
        $z7 = 0;

     label16:
        $r7.<avrora.sim.AtmelInterpreter: boolean Z> = $z7;

        $r8 = r0.<avrora.sim.AtmelInterpreter$SREGBehavior: avrora.sim.AtmelInterpreter this$0>;

        $i8 = i0 & 1;

        if $i8 == 0 goto label17;

        $z8 = 1;

        goto label18;

     label17:
        $z8 = 0;

     label18:
        $r8.<avrora.sim.AtmelInterpreter: boolean C> = $z8;

        return i0;
    }

    void <init>(avrora.sim.AtmelInterpreter, avrora.sim.AtmelInterpreter$1)
    {
        avrora.sim.AtmelInterpreter$SREGBehavior r0;
        avrora.sim.AtmelInterpreter r1;
        avrora.sim.AtmelInterpreter$1 r2;

        r0 := @this: avrora.sim.AtmelInterpreter$SREGBehavior;

        r1 := @parameter0: avrora.sim.AtmelInterpreter;

        r2 := @parameter1: avrora.sim.AtmelInterpreter$1;

        specialinvoke r0.<avrora.sim.AtmelInterpreter$SREGBehavior: void <init>(avrora.sim.AtmelInterpreter)>(r1);

        return;
    }
}
