public class org.dacapo.harness.TeeOutputStream extends java.io.FilterOutputStream
{
    private java.io.OutputStream log;
    private int version;
    private final java.io.File logFile;
    private boolean toScreen;

    public void <init>(java.io.OutputStream, java.io.File)
    {
        org.dacapo.harness.TeeOutputStream r0;
        java.io.OutputStream r1;
        java.io.File r2;

        r0 := @this: org.dacapo.harness.TeeOutputStream;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: java.io.File;

        specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>(r1);

        r0.<org.dacapo.harness.TeeOutputStream: java.io.OutputStream log> = null;

        r0.<org.dacapo.harness.TeeOutputStream: int version> = 0;

        r0.<org.dacapo.harness.TeeOutputStream: boolean toScreen> = 0;

        r0.<org.dacapo.harness.TeeOutputStream: java.io.File logFile> = r2;

        specialinvoke r0.<org.dacapo.harness.TeeOutputStream: void newLog()>();

        return;
    }

    public void enableOutput(boolean)
    {
        org.dacapo.harness.TeeOutputStream r0;
        boolean z0;

        r0 := @this: org.dacapo.harness.TeeOutputStream;

        z0 := @parameter0: boolean;

        r0.<org.dacapo.harness.TeeOutputStream: boolean toScreen> = z0;

        return;
    }

    private void newLog()
    {
        org.dacapo.harness.TeeOutputStream r0;
        java.io.FileOutputStream $r1;
        java.io.File $r2;
        java.io.FileNotFoundException $r3;

        r0 := @this: org.dacapo.harness.TeeOutputStream;

     label1:
        $r1 = new java.io.FileOutputStream;

        $r2 = r0.<org.dacapo.harness.TeeOutputStream: java.io.File logFile>;

        specialinvoke $r1.<java.io.FileOutputStream: void <init>(java.io.File)>($r2);

        r0.<org.dacapo.harness.TeeOutputStream: java.io.OutputStream log> = $r1;

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r3.<java.io.FileNotFoundException: void printStackTrace()>();

     label4:
        return;

        catch java.io.FileNotFoundException from label1 to label2 with label3;
    }

    public void openLog()
    {
        org.dacapo.harness.TeeOutputStream r0;

        r0 := @this: org.dacapo.harness.TeeOutputStream;

        specialinvoke r0.<org.dacapo.harness.TeeOutputStream: void newLog()>();

        return;
    }

    public void closeLog()
    {
        org.dacapo.harness.TeeOutputStream r0;
        java.io.OutputStream $r1;
        java.io.IOException $r2;

        r0 := @this: org.dacapo.harness.TeeOutputStream;

     label1:
        virtualinvoke r0.<org.dacapo.harness.TeeOutputStream: void flush()>();

        $r1 = r0.<org.dacapo.harness.TeeOutputStream: java.io.OutputStream log>;

        virtualinvoke $r1.<java.io.OutputStream: void close()>();

        r0.<org.dacapo.harness.TeeOutputStream: java.io.OutputStream log> = null;

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        virtualinvoke $r2.<java.io.IOException: void printStackTrace()>();

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void close() throws java.io.IOException
    {
        org.dacapo.harness.TeeOutputStream r0;
        java.io.OutputStream $r1, $r2;

        r0 := @this: org.dacapo.harness.TeeOutputStream;

        specialinvoke r0.<java.io.FilterOutputStream: void close()>();

        $r1 = r0.<org.dacapo.harness.TeeOutputStream: java.io.OutputStream log>;

        if $r1 == null goto label1;

        $r2 = r0.<org.dacapo.harness.TeeOutputStream: java.io.OutputStream log>;

        virtualinvoke $r2.<java.io.OutputStream: void close()>();

     label1:
        return;
    }

    public void flush() throws java.io.IOException
    {
        org.dacapo.harness.TeeOutputStream r0;
        java.io.OutputStream $r1, $r2;

        r0 := @this: org.dacapo.harness.TeeOutputStream;

        specialinvoke r0.<java.io.FilterOutputStream: void flush()>();

        $r1 = r0.<org.dacapo.harness.TeeOutputStream: java.io.OutputStream log>;

        if $r1 == null goto label1;

        $r2 = r0.<org.dacapo.harness.TeeOutputStream: java.io.OutputStream log>;

        virtualinvoke $r2.<java.io.OutputStream: void flush()>();

     label1:
        return;
    }

    public void write(int) throws java.io.IOException
    {
        org.dacapo.harness.TeeOutputStream r0;
        boolean $z0;
        java.io.OutputStream $r1, $r2, $r3;
        int i0;

        r0 := @this: org.dacapo.harness.TeeOutputStream;

        i0 := @parameter0: int;

        $z0 = r0.<org.dacapo.harness.TeeOutputStream: boolean toScreen>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<java.io.FilterOutputStream: void write(int)>(i0);

        specialinvoke r0.<java.io.FilterOutputStream: void flush()>();

     label1:
        $r1 = r0.<org.dacapo.harness.TeeOutputStream: java.io.OutputStream log>;

        if $r1 == null goto label2;

        $r2 = r0.<org.dacapo.harness.TeeOutputStream: java.io.OutputStream log>;

        virtualinvoke $r2.<java.io.OutputStream: void write(int)>(i0);

        $r3 = r0.<org.dacapo.harness.TeeOutputStream: java.io.OutputStream log>;

        virtualinvoke $r3.<java.io.OutputStream: void flush()>();

     label2:
        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        org.dacapo.harness.TeeOutputStream r0;
        java.lang.Exception $r1;

        r0 := @this: org.dacapo.harness.TeeOutputStream;

     label1:
        virtualinvoke r0.<org.dacapo.harness.TeeOutputStream: void flush()>();

        virtualinvoke r0.<org.dacapo.harness.TeeOutputStream: void close()>();

        specialinvoke r0.<java.lang.Object: void finalize()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void version()
    {
        org.dacapo.harness.TeeOutputStream r0;
        int $i0, $i1, $i2;
        java.io.File $r1, $r3, $r14;
        java.lang.StringBuilder $r2, $r5, $r6, $r7;
        java.lang.String $r4, $r8;
        java.io.OutputStream $r10, $r11;
        java.io.IOException $r12;

        r0 := @this: org.dacapo.harness.TeeOutputStream;

        $i0 = r0.<org.dacapo.harness.TeeOutputStream: int version>;

        $i1 = $i0 + 1;

        r0.<org.dacapo.harness.TeeOutputStream: int version> = $i1;

        $r1 = new java.io.File;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<org.dacapo.harness.TeeOutputStream: java.io.File logFile>;

        $r4 = virtualinvoke $r3.<java.io.File: java.lang.String getAbsolutePath()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $i2 = r0.<org.dacapo.harness.TeeOutputStream: int version>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r8);

        $r10 = r0.<org.dacapo.harness.TeeOutputStream: java.io.OutputStream log>;

        if $r10 == null goto label4;

     label1:
        $r11 = r0.<org.dacapo.harness.TeeOutputStream: java.io.OutputStream log>;

        virtualinvoke $r11.<java.io.OutputStream: void close()>();

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

     label4:
        $r14 = r0.<org.dacapo.harness.TeeOutputStream: java.io.File logFile>;

        virtualinvoke $r14.<java.io.File: boolean renameTo(java.io.File)>($r1);

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
