public class avrora.sim.clock.RippleSynchronizer$NotifyEvent extends java.lang.Object implements avrora.sim.Simulator$Event
{
    protected final avrora.sim.SimulatorThread thread;
    protected final avrora.sim.clock.MainClock clock;
    protected boolean removed;
    protected avrora.sim.clock.RippleSynchronizer$WaitLink lastLink;
    final avrora.sim.clock.RippleSynchronizer this$0;

    protected void <init>(avrora.sim.clock.RippleSynchronizer, avrora.sim.SimulatorThread)
    {
        avrora.sim.clock.RippleSynchronizer$NotifyEvent r0;
        avrora.sim.clock.RippleSynchronizer r1;
        avrora.sim.SimulatorThread r2;
        avrora.sim.Simulator $r3;
        avrora.sim.clock.MainClock $r4;

        r0 := @this: avrora.sim.clock.RippleSynchronizer$NotifyEvent;

        r1 := @parameter0: avrora.sim.clock.RippleSynchronizer;

        r2 := @parameter1: avrora.sim.SimulatorThread;

        r0.<avrora.sim.clock.RippleSynchronizer$NotifyEvent: avrora.sim.clock.RippleSynchronizer this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<avrora.sim.clock.RippleSynchronizer$NotifyEvent: avrora.sim.SimulatorThread thread> = r2;

        $r3 = virtualinvoke r2.<avrora.sim.SimulatorThread: avrora.sim.Simulator getSimulator()>();

        $r4 = virtualinvoke $r3.<avrora.sim.Simulator: avrora.sim.clock.MainClock getClock()>();

        r0.<avrora.sim.clock.RippleSynchronizer$NotifyEvent: avrora.sim.clock.MainClock clock> = $r4;

        return;
    }

    public void fire()
    {
        avrora.sim.clock.RippleSynchronizer$NotifyEvent r0;
        boolean $z0;
        avrora.sim.clock.MainClock $r1, $r11, $r12;
        long l0, $l1, l2, $l3, $l5;
        avrora.sim.clock.RippleSynchronizer $r2, $r4, $r9, $r10;
        avrora.sim.clock.RippleSynchronizer$WaitLink $r5, $r6, $r7, $r8;
        byte $b4;
        java.lang.Throwable $r13;

        r0 := @this: avrora.sim.clock.RippleSynchronizer$NotifyEvent;

        $z0 = r0.<avrora.sim.clock.RippleSynchronizer$NotifyEvent: boolean removed>;

        if $z0 != 0 goto label7;

        $r1 = r0.<avrora.sim.clock.RippleSynchronizer$NotifyEvent: avrora.sim.clock.MainClock clock>;

        l0 = virtualinvoke $r1.<avrora.sim.clock.MainClock: long getCount()>();

        $r2 = r0.<avrora.sim.clock.RippleSynchronizer$NotifyEvent: avrora.sim.clock.RippleSynchronizer this$0>;

        entermonitor $r2;

     label1:
        $r4 = r0.<avrora.sim.clock.RippleSynchronizer$NotifyEvent: avrora.sim.clock.RippleSynchronizer this$0>;

        $r5 = specialinvoke r0.<avrora.sim.clock.RippleSynchronizer$NotifyEvent: avrora.sim.clock.RippleSynchronizer$WaitLink currentWaitLink()>();

        $r6 = staticinvoke <avrora.sim.clock.RippleSynchronizer: avrora.sim.clock.RippleSynchronizer$WaitLink access$000(avrora.sim.clock.RippleSynchronizer,long,avrora.sim.clock.RippleSynchronizer$WaitLink)>($r4, l0, $r5);

        r0.<avrora.sim.clock.RippleSynchronizer$NotifyEvent: avrora.sim.clock.RippleSynchronizer$WaitLink lastLink> = $r6;

        $r7 = r0.<avrora.sim.clock.RippleSynchronizer$NotifyEvent: avrora.sim.clock.RippleSynchronizer$WaitLink lastLink>;

        $r8 = $r7.<avrora.sim.clock.RippleSynchronizer$WaitLink: avrora.sim.clock.RippleSynchronizer$WaitLink next>;

        $l1 = $r8.<avrora.sim.clock.RippleSynchronizer$WaitLink: long time>;

        l2 = $l1 - l0;

        exitmonitor $r2;

     label2:
        goto label5;

     label3:
        $r13 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r13;

     label5:
        $r9 = r0.<avrora.sim.clock.RippleSynchronizer$NotifyEvent: avrora.sim.clock.RippleSynchronizer this$0>;

        $l3 = $r9.<avrora.sim.clock.RippleSynchronizer: long notifyPeriod>;

        $b4 = l2 cmp $l3;

        if $b4 >= 0 goto label6;

        $r12 = r0.<avrora.sim.clock.RippleSynchronizer$NotifyEvent: avrora.sim.clock.MainClock clock>;

        virtualinvoke $r12.<avrora.sim.clock.MainClock: void insertEvent(avrora.sim.Simulator$Event,long)>(r0, l2);

        goto label7;

     label6:
        $r11 = r0.<avrora.sim.clock.RippleSynchronizer$NotifyEvent: avrora.sim.clock.MainClock clock>;

        $r10 = r0.<avrora.sim.clock.RippleSynchronizer$NotifyEvent: avrora.sim.clock.RippleSynchronizer this$0>;

        $l5 = $r10.<avrora.sim.clock.RippleSynchronizer: long notifyPeriod>;

        virtualinvoke $r11.<avrora.sim.clock.MainClock: void insertEvent(avrora.sim.Simulator$Event,long)>(r0, $l5);

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private avrora.sim.clock.RippleSynchronizer$WaitLink currentWaitLink()
    {
        avrora.sim.clock.RippleSynchronizer$NotifyEvent r0;
        avrora.sim.clock.RippleSynchronizer$WaitLink $r1, $r2, $r4;
        avrora.sim.clock.RippleSynchronizer $r3;

        r0 := @this: avrora.sim.clock.RippleSynchronizer$NotifyEvent;

        $r1 = r0.<avrora.sim.clock.RippleSynchronizer$NotifyEvent: avrora.sim.clock.RippleSynchronizer$WaitLink lastLink>;

        if $r1 != null goto label1;

        $r3 = r0.<avrora.sim.clock.RippleSynchronizer$NotifyEvent: avrora.sim.clock.RippleSynchronizer this$0>;

        $r4 = $r3.<avrora.sim.clock.RippleSynchronizer: avrora.sim.clock.RippleSynchronizer$WaitLink waitListHead>;

        return $r4;

     label1:
        $r2 = r0.<avrora.sim.clock.RippleSynchronizer$NotifyEvent: avrora.sim.clock.RippleSynchronizer$WaitLink lastLink>;

        return $r2;
    }

    static avrora.sim.clock.RippleSynchronizer$WaitLink access$100(avrora.sim.clock.RippleSynchronizer$NotifyEvent)
    {
        avrora.sim.clock.RippleSynchronizer$NotifyEvent r0;
        avrora.sim.clock.RippleSynchronizer$WaitLink $r1;

        r0 := @parameter0: avrora.sim.clock.RippleSynchronizer$NotifyEvent;

        $r1 = specialinvoke r0.<avrora.sim.clock.RippleSynchronizer$NotifyEvent: avrora.sim.clock.RippleSynchronizer$WaitLink currentWaitLink()>();

        return $r1;
    }
}
