public class avrora.sim.mcu.ADC extends avrora.sim.mcu.AtmelInternalDevice
{
    public static final float VBG_LEVEL;
    public static final float GND_LEVEL;
    private final avrora.sim.mcu.ADC$ADCInput VBG_INPUT;
    private static final avrora.sim.mcu.ADC$ADCInput GND_INPUT;
    final avrora.sim.mcu.ADC$MUXRegister ADMUX_reg;
    final avrora.sim.mcu.ADC$ControlRegister ADCSRA_reg;
    final avrora.sim.RWRegister ADCH_reg;
    final avrora.sim.RWRegister ADCL_reg;
    final int channels;
    final int interruptNum;
    final avrora.sim.mcu.ADC$ADCInput[] connectedDevices;
    float voltageRef;
    static final byte[] SINGLE_ENDED_INPUT;
    static final short[] GAIN;
    static final byte[] POS_INPUT;
    static final byte[] NEG_INPUT;
    static final short[] PRESCALER;

    public void <init>(avrora.sim.mcu.AtmelMicrocontroller, int)
    {
        avrora.sim.mcu.ADC r0;
        avrora.sim.mcu.AtmelMicrocontroller r1;
        avrora.sim.mcu.ADC$1 $r2;
        avrora.sim.mcu.ADC$MUXRegister $r3, $r13;
        avrora.sim.mcu.ADC$ControlRegister $r4, $r16, $r19;
        avrora.sim.RWRegister $r5, $r6, $r14, $r15;
        int i0, $i1, $i2, $i3, $i4;
        avrora.sim.mcu.ADC$ADCInput[] $r7, $r9, $r11;
        avrora.sim.mcu.ADC$ADCInput $r8, $r10;
        avrora.sim.mcu.MCUProperties $r12;
        avrora.sim.AtmelInterpreter $r17;
        avrora.sim.InterruptTable $r18;

        r0 := @this: avrora.sim.mcu.ADC;

        r1 := @parameter0: avrora.sim.mcu.AtmelMicrocontroller;

        i0 := @parameter1: int;

        specialinvoke r0.<avrora.sim.mcu.AtmelInternalDevice: void <init>(java.lang.String,avrora.sim.mcu.AtmelMicrocontroller)>("adc", r1);

        $r2 = new avrora.sim.mcu.ADC$1;

        specialinvoke $r2.<avrora.sim.mcu.ADC$1: void <init>(avrora.sim.mcu.ADC)>(r0);

        r0.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$ADCInput VBG_INPUT> = $r2;

        $r3 = new avrora.sim.mcu.ADC$MUXRegister;

        specialinvoke $r3.<avrora.sim.mcu.ADC$MUXRegister: void <init>(avrora.sim.mcu.ADC)>(r0);

        r0.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$MUXRegister ADMUX_reg> = $r3;

        $r4 = new avrora.sim.mcu.ADC$ControlRegister;

        specialinvoke $r4.<avrora.sim.mcu.ADC$ControlRegister: void <init>(avrora.sim.mcu.ADC)>(r0);

        r0.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$ControlRegister ADCSRA_reg> = $r4;

        $r5 = new avrora.sim.RWRegister;

        specialinvoke $r5.<avrora.sim.RWRegister: void <init>()>();

        r0.<avrora.sim.mcu.ADC: avrora.sim.RWRegister ADCH_reg> = $r5;

        $r6 = new avrora.sim.RWRegister;

        specialinvoke $r6.<avrora.sim.RWRegister: void <init>()>();

        r0.<avrora.sim.mcu.ADC: avrora.sim.RWRegister ADCL_reg> = $r6;

        r0.<avrora.sim.mcu.ADC: float voltageRef> = 1.0F;

        r0.<avrora.sim.mcu.ADC: int channels> = i0;

        $i1 = i0 + 2;

        $r7 = newarray (avrora.sim.mcu.ADC$ADCInput)[$i1];

        r0.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$ADCInput[] connectedDevices> = $r7;

        $r9 = r0.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$ADCInput[] connectedDevices>;

        $r8 = r0.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$ADCInput VBG_INPUT>;

        $r9[i0] = $r8;

        $r11 = r0.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$ADCInput[] connectedDevices>;

        $i2 = i0 + 1;

        $r10 = <avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$ADCInput GND_INPUT>;

        $r11[$i2] = $r10;

        $r12 = virtualinvoke r1.<avrora.sim.mcu.AtmelMicrocontroller: avrora.sim.mcu.MCUProperties getProperties()>();

        $i3 = virtualinvoke $r12.<avrora.sim.mcu.MCUProperties: int getInterrupt(java.lang.String)>("ADC");

        r0.<avrora.sim.mcu.ADC: int interruptNum> = $i3;

        $r13 = r0.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$MUXRegister ADMUX_reg>;

        virtualinvoke r0.<avrora.sim.mcu.ADC: void installIOReg(java.lang.String,avrora.sim.ActiveRegister)>("ADMUX", $r13);

        $r14 = r0.<avrora.sim.mcu.ADC: avrora.sim.RWRegister ADCH_reg>;

        virtualinvoke r0.<avrora.sim.mcu.ADC: void installIOReg(java.lang.String,avrora.sim.ActiveRegister)>("ADCH", $r14);

        $r15 = r0.<avrora.sim.mcu.ADC: avrora.sim.RWRegister ADCL_reg>;

        virtualinvoke r0.<avrora.sim.mcu.ADC: void installIOReg(java.lang.String,avrora.sim.ActiveRegister)>("ADCL", $r15);

        $r16 = r0.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$ControlRegister ADCSRA_reg>;

        virtualinvoke r0.<avrora.sim.mcu.ADC: void installIOReg(java.lang.String,avrora.sim.ActiveRegister)>("ADCSRA", $r16);

        $r17 = r0.<avrora.sim.mcu.ADC: avrora.sim.AtmelInterpreter interpreter>;

        $r18 = virtualinvoke $r17.<avrora.sim.AtmelInterpreter: avrora.sim.InterruptTable getInterruptTable()>();

        $r19 = r0.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$ControlRegister ADCSRA_reg>;

        $i4 = r0.<avrora.sim.mcu.ADC: int interruptNum>;

        virtualinvoke $r18.<avrora.sim.InterruptTable: void registerInternalNotification(avrora.sim.InterruptTable$Notification,int)>($r19, $i4);

        return;
    }

    public void setVoltageRef(float)
    {
        avrora.sim.mcu.ADC r0;
        float f0;

        r0 := @this: avrora.sim.mcu.ADC;

        f0 := @parameter0: float;

        r0.<avrora.sim.mcu.ADC: float voltageRef> = f0;

        return;
    }

    public float getVoltageRef()
    {
        avrora.sim.mcu.ADC r0;
        float $f0;

        r0 := @this: avrora.sim.mcu.ADC;

        $f0 = r0.<avrora.sim.mcu.ADC: float voltageRef>;

        return $f0;
    }

    public void connectADCInput(avrora.sim.mcu.ADC$ADCInput, int)
    {
        avrora.sim.mcu.ADC r0;
        int i0;
        avrora.sim.mcu.ADC$ADCInput r1;
        avrora.sim.mcu.ADC$ADCInput[] $r2;

        r0 := @this: avrora.sim.mcu.ADC;

        r1 := @parameter0: avrora.sim.mcu.ADC$ADCInput;

        i0 := @parameter1: int;

        $r2 = r0.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$ADCInput[] connectedDevices>;

        $r2[i0] = r1;

        return;
    }

    static void <clinit>()
    {
        avrora.sim.mcu.ADC$2 $r0;
        byte[] $r1, $r3, $r4;
        short[] $r2, $r5;

        <avrora.sim.mcu.ADC: float GND_LEVEL> = 0.0F;

        <avrora.sim.mcu.ADC: float VBG_LEVEL> = 1.0F;

        $r0 = new avrora.sim.mcu.ADC$2;

        specialinvoke $r0.<avrora.sim.mcu.ADC$2: void <init>()>();

        <avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$ADCInput GND_INPUT> = $r0;

        $r1 = newarray (byte)[32];

        $r1[0] = 0;

        $r1[1] = 1;

        $r1[2] = 2;

        $r1[3] = 3;

        $r1[4] = 4;

        $r1[5] = 5;

        $r1[6] = 6;

        $r1[7] = 7;

        $r1[8] = -1;

        $r1[9] = -1;

        $r1[10] = -1;

        $r1[11] = -1;

        $r1[12] = -1;

        $r1[13] = -1;

        $r1[14] = -1;

        $r1[15] = -1;

        $r1[16] = -1;

        $r1[17] = -1;

        $r1[18] = -1;

        $r1[19] = -1;

        $r1[20] = -1;

        $r1[21] = -1;

        $r1[22] = -1;

        $r1[23] = -1;

        $r1[24] = -1;

        $r1[25] = -1;

        $r1[26] = -1;

        $r1[27] = -1;

        $r1[28] = -1;

        $r1[29] = -1;

        $r1[30] = 8;

        $r1[31] = 9;

        <avrora.sim.mcu.ADC: byte[] SINGLE_ENDED_INPUT> = $r1;

        $r2 = newarray (short)[32];

        $r2[0] = -1;

        $r2[1] = -1;

        $r2[2] = -1;

        $r2[3] = -1;

        $r2[4] = -1;

        $r2[5] = -1;

        $r2[6] = -1;

        $r2[7] = -1;

        $r2[8] = 10;

        $r2[9] = 10;

        $r2[10] = 200;

        $r2[11] = 200;

        $r2[12] = 10;

        $r2[13] = 10;

        $r2[14] = 200;

        $r2[15] = 200;

        $r2[16] = 1;

        $r2[17] = 1;

        $r2[18] = 1;

        $r2[19] = 1;

        $r2[20] = 1;

        $r2[21] = 1;

        $r2[22] = 1;

        $r2[23] = 1;

        $r2[24] = 1;

        $r2[25] = 1;

        $r2[26] = 1;

        $r2[27] = 1;

        $r2[28] = 1;

        $r2[29] = 1;

        $r2[30] = -1;

        $r2[31] = -1;

        <avrora.sim.mcu.ADC: short[] GAIN> = $r2;

        $r3 = newarray (byte)[32];

        $r3[0] = -1;

        $r3[1] = -1;

        $r3[2] = -1;

        $r3[3] = -1;

        $r3[4] = -1;

        $r3[5] = -1;

        $r3[6] = -1;

        $r3[7] = -1;

        $r3[8] = 0;

        $r3[9] = 1;

        $r3[10] = 0;

        $r3[11] = 1;

        $r3[12] = 2;

        $r3[13] = 3;

        $r3[14] = 2;

        $r3[15] = 3;

        $r3[16] = 0;

        $r3[17] = 1;

        $r3[18] = 2;

        $r3[19] = 3;

        $r3[20] = 4;

        $r3[21] = 5;

        $r3[22] = 6;

        $r3[23] = 7;

        $r3[24] = 0;

        $r3[25] = 1;

        $r3[26] = 2;

        $r3[27] = 3;

        $r3[28] = 4;

        $r3[29] = 5;

        $r3[30] = -1;

        $r3[31] = -1;

        <avrora.sim.mcu.ADC: byte[] POS_INPUT> = $r3;

        $r4 = newarray (byte)[32];

        $r4[0] = -1;

        $r4[1] = -1;

        $r4[2] = -1;

        $r4[3] = -1;

        $r4[4] = -1;

        $r4[5] = -1;

        $r4[6] = -1;

        $r4[7] = -1;

        $r4[8] = 0;

        $r4[9] = 0;

        $r4[10] = 0;

        $r4[11] = 0;

        $r4[12] = 2;

        $r4[13] = 2;

        $r4[14] = 2;

        $r4[15] = 2;

        $r4[16] = 1;

        $r4[17] = 1;

        $r4[18] = 1;

        $r4[19] = 1;

        $r4[20] = 1;

        $r4[21] = 1;

        $r4[22] = 1;

        $r4[23] = 1;

        $r4[24] = 2;

        $r4[25] = 2;

        $r4[26] = 2;

        $r4[27] = 2;

        $r4[28] = 2;

        $r4[29] = 2;

        $r4[30] = -1;

        $r4[31] = -1;

        <avrora.sim.mcu.ADC: byte[] NEG_INPUT> = $r4;

        $r5 = newarray (short)[8];

        $r5[0] = 2;

        $r5[1] = 2;

        $r5[2] = 4;

        $r5[3] = 8;

        $r5[4] = 16;

        $r5[5] = 32;

        $r5[6] = 64;

        $r5[7] = 128;

        <avrora.sim.mcu.ADC: short[] PRESCALER> = $r5;

        return;
    }
}
