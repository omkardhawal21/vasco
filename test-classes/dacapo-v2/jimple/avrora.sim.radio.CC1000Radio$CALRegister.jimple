public class avrora.sim.radio.CC1000Radio$CALRegister extends avrora.sim.radio.CC1000Radio$RadioRegister
{
    static final int CAL_START;
    static final int CAL_DUAL;
    static final int CAL_WAIT;
    static final int CAL_CURRENT;
    static final int CAL_COMPLETE;
    boolean calStart;
    boolean calDual;
    boolean calWait;
    boolean calCurrent;
    boolean calComplete;
    static final int CAL_ITERATE_NORMAL;
    int calIterate;
    avrora.sim.radio.CC1000Radio$CALRegister$Calibrate calibrate;
    boolean calibrating;
    final avrora.sim.radio.CC1000Radio this$0;

    void <init>(avrora.sim.radio.CC1000Radio)
    {
        avrora.sim.radio.CC1000Radio$CALRegister r0;
        avrora.sim.radio.CC1000Radio r1;
        avrora.sim.radio.CC1000Radio$CALRegister$Calibrate $r2;

        r0 := @this: avrora.sim.radio.CC1000Radio$CALRegister;

        r1 := @parameter0: avrora.sim.radio.CC1000Radio;

        r0.<avrora.sim.radio.CC1000Radio$CALRegister: avrora.sim.radio.CC1000Radio this$0> = r1;

        specialinvoke r0.<avrora.sim.radio.CC1000Radio$RadioRegister: void <init>(avrora.sim.radio.CC1000Radio,java.lang.String,byte)>(r1, "CAL", 5);

        $r2 = new avrora.sim.radio.CC1000Radio$CALRegister$Calibrate;

        specialinvoke $r2.<avrora.sim.radio.CC1000Radio$CALRegister$Calibrate: void <init>(avrora.sim.radio.CC1000Radio$CALRegister)>(r0);

        r0.<avrora.sim.radio.CC1000Radio$CALRegister: avrora.sim.radio.CC1000Radio$CALRegister$Calibrate calibrate> = $r2;

        return;
    }

    protected void decode(byte)
    {
        avrora.sim.radio.CC1000Radio$CALRegister r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        byte b0, $b1;
        int $i2, $i3;
        avrora.sim.radio.CC1000Radio $r1, $r3, $r4;
        avrora.sim.radio.CC1000Radio$PLLRegister $r2;
        double $d0, d1;
        avrora.sim.clock.Clock $r5, $r6;
        avrora.sim.radio.CC1000Radio$CALRegister$Calibrate $r7;
        long $l4;

        r0 := @this: avrora.sim.radio.CC1000Radio$CALRegister;

        b0 := @parameter0: byte;

        z0 = r0.<avrora.sim.radio.CC1000Radio$CALRegister: boolean calStart>;

        $z1 = staticinvoke <cck.util.Arithmetic: boolean getBit(byte,int)>(b0, 7);

        r0.<avrora.sim.radio.CC1000Radio$CALRegister: boolean calStart> = $z1;

        $z2 = staticinvoke <cck.util.Arithmetic: boolean getBit(byte,int)>(b0, 6);

        r0.<avrora.sim.radio.CC1000Radio$CALRegister: boolean calDual> = $z2;

        $z3 = staticinvoke <cck.util.Arithmetic: boolean getBit(byte,int)>(b0, 5);

        r0.<avrora.sim.radio.CC1000Radio$CALRegister: boolean calWait> = $z3;

        $z4 = staticinvoke <cck.util.Arithmetic: boolean getBit(byte,int)>(b0, 4);

        r0.<avrora.sim.radio.CC1000Radio$CALRegister: boolean calCurrent> = $z4;

        $z5 = staticinvoke <cck.util.Arithmetic: boolean getBit(byte,int)>(b0, 3);

        r0.<avrora.sim.radio.CC1000Radio$CALRegister: boolean calComplete> = $z5;

        $b1 = r0.<avrora.sim.radio.CC1000Radio$CALRegister: byte value>;

        $i2 = $b1 & 7;

        r0.<avrora.sim.radio.CC1000Radio$CALRegister: int calIterate> = $i2;

        if z0 != 0 goto label1;

        $z6 = r0.<avrora.sim.radio.CC1000Radio$CALRegister: boolean calStart>;

        if $z6 == 0 goto label1;

        $z7 = r0.<avrora.sim.radio.CC1000Radio$CALRegister: boolean calibrating>;

        if $z7 != 0 goto label1;

        r0.<avrora.sim.radio.CC1000Radio$CALRegister: boolean calibrating> = 1;

        $r1 = r0.<avrora.sim.radio.CC1000Radio$CALRegister: avrora.sim.radio.CC1000Radio this$0>;

        $r2 = $r1.<avrora.sim.radio.CC1000Radio: avrora.sim.radio.CC1000Radio$PLLRegister PLL_reg>;

        $i3 = $r2.<avrora.sim.radio.CC1000Radio$PLLRegister: int refDiv>;

        $d0 = (double) $i3;

        d1 = 2.3057725694444446 * $d0;

        $r3 = r0.<avrora.sim.radio.CC1000Radio$CALRegister: avrora.sim.radio.CC1000Radio this$0>;

        $r6 = $r3.<avrora.sim.radio.CC1000Radio: avrora.sim.clock.Clock clock>;

        $r7 = r0.<avrora.sim.radio.CC1000Radio$CALRegister: avrora.sim.radio.CC1000Radio$CALRegister$Calibrate calibrate>;

        $r4 = r0.<avrora.sim.radio.CC1000Radio$CALRegister: avrora.sim.radio.CC1000Radio this$0>;

        $r5 = $r4.<avrora.sim.radio.CC1000Radio: avrora.sim.clock.Clock clock>;

        $l4 = virtualinvoke $r5.<avrora.sim.clock.Clock: long millisToCycles(double)>(d1);

        virtualinvoke $r6.<avrora.sim.clock.Clock: void insertEvent(avrora.sim.Simulator$Event,long)>($r7, $l4);

     label1:
        return;
    }

    protected void printStatus()
    {
        java.lang.StringBuffer $r0;
        avrora.sim.radio.CC1000Radio$CALRegister r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        char $c0, $c1, $c2, $c3, $c4;
        int $i5;
        avrora.sim.radio.CC1000Radio $r15;
        avrora.sim.output.SimPrinter $r16;
        java.lang.String $r17;

        r3 := @this: avrora.sim.radio.CC1000Radio$CALRegister;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>(100);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("CC1000[CAL]: cal start: ");

        $z0 = r3.<avrora.sim.radio.CC1000Radio$CALRegister: boolean calStart>;

        $c0 = staticinvoke <cck.text.StringUtil: char toBit(boolean)>($z0);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c0);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", dual: ");

        $z1 = r3.<avrora.sim.radio.CC1000Radio$CALRegister: boolean calDual>;

        $c1 = staticinvoke <cck.text.StringUtil: char toBit(boolean)>($z1);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", wait: ");

        $z2 = r3.<avrora.sim.radio.CC1000Radio$CALRegister: boolean calWait>;

        $c2 = staticinvoke <cck.text.StringUtil: char toBit(boolean)>($z2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", current: ");

        $z3 = r3.<avrora.sim.radio.CC1000Radio$CALRegister: boolean calCurrent>;

        $c3 = staticinvoke <cck.text.StringUtil: char toBit(boolean)>($z3);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", complete: ");

        $z4 = r3.<avrora.sim.radio.CC1000Radio$CALRegister: boolean calComplete>;

        $c4 = staticinvoke <cck.text.StringUtil: char toBit(boolean)>($z4);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c4);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", iterate: ");

        $i5 = r3.<avrora.sim.radio.CC1000Radio$CALRegister: int calIterate>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i5);

        $r15 = r3.<avrora.sim.radio.CC1000Radio$CALRegister: avrora.sim.radio.CC1000Radio this$0>;

        $r16 = $r15.<avrora.sim.radio.CC1000Radio: avrora.sim.output.SimPrinter radioPrinter>;

        $r17 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r16.<avrora.sim.output.SimPrinter: void println(java.lang.String)>($r17);

        return;
    }

    public static void <clinit>()
    {
        <avrora.sim.radio.CC1000Radio$CALRegister: int CAL_ITERATE_NORMAL> = 6;

        <avrora.sim.radio.CC1000Radio$CALRegister: int CAL_COMPLETE> = 3;

        <avrora.sim.radio.CC1000Radio$CALRegister: int CAL_CURRENT> = 4;

        <avrora.sim.radio.CC1000Radio$CALRegister: int CAL_WAIT> = 5;

        <avrora.sim.radio.CC1000Radio$CALRegister: int CAL_DUAL> = 6;

        <avrora.sim.radio.CC1000Radio$CALRegister: int CAL_START> = 7;

        return;
    }
}
