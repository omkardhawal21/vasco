public class avrora.sim.radio.Medium$BasicArbitrator extends java.lang.Object implements avrora.sim.radio.Medium$Arbitrator
{
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        avrora.sim.radio.Medium$BasicArbitrator r0;

        r0 := @this: avrora.sim.radio.Medium$BasicArbitrator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean lockTransmission(avrora.sim.radio.Medium$Receiver, avrora.sim.radio.Medium$Transmission, int)
    {
        avrora.sim.radio.Medium$BasicArbitrator r0;
        avrora.sim.radio.Medium$Receiver r1;
        avrora.sim.radio.Medium$Transmission r2;
        int i0;

        r0 := @this: avrora.sim.radio.Medium$BasicArbitrator;

        r1 := @parameter0: avrora.sim.radio.Medium$Receiver;

        r2 := @parameter1: avrora.sim.radio.Medium$Transmission;

        i0 := @parameter2: int;

        return 1;
    }

    public char mergeTransmissions(avrora.sim.radio.Medium$Receiver, java.util.List, long, int)
    {
        boolean $z0, $z1;
        java.util.List r0;
        java.util.Iterator r1;
        java.lang.Object $r2, $r4;
        avrora.sim.radio.Medium$Transmission r3, r5;
        long l0;
        byte $b1, $b3;
        char $c2;
        int i4, $i5, $i6, $i7, $i8, i9, i10, i11;
        java.lang.AssertionError $r6;
        avrora.sim.radio.Medium$BasicArbitrator r7;
        avrora.sim.radio.Medium$Receiver r8;

        r7 := @this: avrora.sim.radio.Medium$BasicArbitrator;

        r8 := @parameter0: avrora.sim.radio.Medium$Receiver;

        r0 := @parameter1: java.util.List;

        l0 := @parameter2: long;

        i9 := @parameter3: int;

        $z0 = <avrora.sim.radio.Medium$BasicArbitrator: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i8 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i8 > 0 goto label1;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label1:
        r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

        $r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (avrora.sim.radio.Medium$Transmission) $r2;

        $b1 = virtualinvoke r3.<avrora.sim.radio.Medium$Transmission: byte getByteAtTime(long)>(l0);

        i10 = 255 & $b1;

     label2:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r5 = (avrora.sim.radio.Medium$Transmission) $r4;

        $b3 = virtualinvoke r5.<avrora.sim.radio.Medium$Transmission: byte getByteAtTime(long)>(l0);

        i4 = 255 & $b3;

        $i6 = i4 << 8;

        $i5 = i10 << 8;

        $i7 = $i6 ^ $i5;

        i11 = i10 | $i7;

        i10 = i11 | i4;

        goto label2;

     label3:
        $c2 = (char) i10;

        return $c2;
    }

    public double computeReceivedPower(avrora.sim.radio.Medium$Transmission, avrora.sim.radio.Medium$Receiver, int)
    {
        double $d0;
        avrora.sim.radio.Medium$BasicArbitrator r0;
        avrora.sim.radio.Medium$Transmission r1;
        avrora.sim.radio.Medium$Receiver r2;
        int i0;

        r0 := @this: avrora.sim.radio.Medium$BasicArbitrator;

        r1 := @parameter0: avrora.sim.radio.Medium$Transmission;

        r2 := @parameter1: avrora.sim.radio.Medium$Receiver;

        i0 := @parameter2: int;

        $d0 = staticinvoke <avrora.sim.radio.Medium: double access$300()>();

        return $d0;
    }

    public int getNoise(int)
    {
        int $i0, i1;
        avrora.sim.radio.Medium$BasicArbitrator r0;

        r0 := @this: avrora.sim.radio.Medium$BasicArbitrator;

        i1 := @parameter0: int;

        $i0 = staticinvoke <avrora.sim.radio.Medium: int access$400()>();

        return $i0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lavrora/sim/radio/Medium;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <avrora.sim.radio.Medium$BasicArbitrator: boolean $assertionsDisabled> = $z1;

        return;
    }
}
