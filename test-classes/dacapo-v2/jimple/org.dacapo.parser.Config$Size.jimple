class org.dacapo.parser.Config$Size extends java.lang.Object
{
    final java.lang.String name;
    final java.lang.String[] args;
    private int threadLimit;
    private int nThreads;
    private java.lang.String description;
    java.util.HashMap outputFiles;
    final org.dacapo.parser.Config this$0;

    void <init>(org.dacapo.parser.Config, java.lang.String, java.util.Vector)
    {
        org.dacapo.parser.Config$Size r0;
        org.dacapo.parser.Config r1;
        java.util.LinkedHashMap $r2;
        java.util.Vector r3;
        java.lang.String[] $r4, $r6, $r7;
        java.lang.Object[] $r5;
        java.lang.String r8;

        r0 := @this: org.dacapo.parser.Config$Size;

        r1 := @parameter0: org.dacapo.parser.Config;

        r8 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.Vector;

        r0.<org.dacapo.parser.Config$Size: org.dacapo.parser.Config this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.dacapo.parser.Config$Size: int threadLimit> = 0;

        r0.<org.dacapo.parser.Config$Size: int nThreads> = 1;

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>(int)>(20);

        r0.<org.dacapo.parser.Config$Size: java.util.HashMap outputFiles> = $r2;

        $r4 = newarray (java.lang.String)[0];

        $r5 = virtualinvoke r3.<java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (java.lang.String[]) $r5;

        $r7 = (java.lang.String[]) $r6;

        r0.<org.dacapo.parser.Config$Size: java.lang.String[] args> = $r7;

        r0.<org.dacapo.parser.Config$Size: java.lang.String name> = r8;

        return;
    }

    void addOutputFile(java.lang.String)
    {
        org.dacapo.parser.Config$Size r0;
        java.lang.String r1;
        org.dacapo.parser.Config$OutputFile $r2;
        org.dacapo.parser.Config $r3;
        java.util.HashMap $r4;

        r0 := @this: org.dacapo.parser.Config$Size;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<org.dacapo.parser.Config$Size: java.util.HashMap outputFiles>;

        $r2 = new org.dacapo.parser.Config$OutputFile;

        $r3 = r0.<org.dacapo.parser.Config$Size: org.dacapo.parser.Config this$0>;

        specialinvoke $r2.<org.dacapo.parser.Config$OutputFile: void <init>(org.dacapo.parser.Config,java.lang.String)>($r3, r1);

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r2);

        return;
    }

    org.dacapo.parser.Config$OutputFile getOutputFile(java.lang.String)
    {
        org.dacapo.parser.Config$Size r0;
        java.lang.String r1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        org.dacapo.parser.Config$OutputFile $r4;

        r0 := @this: org.dacapo.parser.Config$Size;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.dacapo.parser.Config$Size: java.util.HashMap outputFiles>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.dacapo.parser.Config$OutputFile) $r3;

        return $r4;
    }

    void setThreadLimit(int)
    {
        org.dacapo.parser.Config$Size r0;
        int i0;

        r0 := @this: org.dacapo.parser.Config$Size;

        i0 := @parameter0: int;

        r0.<org.dacapo.parser.Config$Size: int threadLimit> = i0;

        return;
    }

    int getThreadLimit()
    {
        org.dacapo.parser.Config$Size r0;
        int $i0;

        r0 := @this: org.dacapo.parser.Config$Size;

        $i0 = r0.<org.dacapo.parser.Config$Size: int threadLimit>;

        return $i0;
    }

    void setThreadCount(int)
    {
        org.dacapo.parser.Config$Size r0;
        int i0;

        r0 := @this: org.dacapo.parser.Config$Size;

        i0 := @parameter0: int;

        r0.<org.dacapo.parser.Config$Size: int nThreads> = i0;

        return;
    }

    int getThreadCount()
    {
        org.dacapo.parser.Config$Size r0;
        int $i0;

        r0 := @this: org.dacapo.parser.Config$Size;

        $i0 = r0.<org.dacapo.parser.Config$Size: int nThreads>;

        return $i0;
    }

    void setDesc(java.lang.String)
    {
        org.dacapo.parser.Config$Size r0;
        java.lang.String r1;

        r0 := @this: org.dacapo.parser.Config$Size;

        r1 := @parameter0: java.lang.String;

        r0.<org.dacapo.parser.Config$Size: java.lang.String description> = r1;

        return;
    }

    java.lang.String getDesc()
    {
        org.dacapo.parser.Config$Size r0;
        java.lang.String $r1;

        r0 := @this: org.dacapo.parser.Config$Size;

        $r1 = r0.<org.dacapo.parser.Config$Size: java.lang.String description>;

        return $r1;
    }
}
