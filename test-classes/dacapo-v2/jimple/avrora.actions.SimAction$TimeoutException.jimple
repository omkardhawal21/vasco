public class avrora.actions.SimAction$TimeoutException extends java.lang.RuntimeException
{
    public final int address;
    public final avrora.sim.State state;
    public final long timeout;

    public void <init>(int, avrora.sim.State, long, java.lang.String)
    {
        avrora.actions.SimAction$TimeoutException r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r6, $r7, $r9;
        int i0;
        java.lang.String $r3, r8, $r10;
        long l1;
        avrora.sim.State r11;

        r0 := @this: avrora.actions.SimAction$TimeoutException;

        i0 := @parameter0: int;

        r11 := @parameter1: avrora.sim.State;

        l1 := @parameter2: long;

        r8 := @parameter3: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("timeout @ ");

        $r3 = staticinvoke <cck.text.StringUtil: java.lang.String addrToString(int)>(i0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reached after ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10);

        r0.<avrora.actions.SimAction$TimeoutException: int address> = i0;

        r0.<avrora.actions.SimAction$TimeoutException: avrora.sim.State state> = r11;

        r0.<avrora.actions.SimAction$TimeoutException: long timeout> = l1;

        return;
    }
}
