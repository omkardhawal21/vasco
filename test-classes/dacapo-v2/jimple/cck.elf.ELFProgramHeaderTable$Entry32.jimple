public class cck.elf.ELFProgramHeaderTable$Entry32 extends java.lang.Object
{
    public int p_type;
    public int p_offset;
    public int p_vaddr;
    public int p_paddr;
    public int p_filesz;
    public int p_memsz;
    public int p_flags;
    public int p_align;
    final cck.elf.ELFProgramHeaderTable this$0;

    public void <init>(cck.elf.ELFProgramHeaderTable)
    {
        cck.elf.ELFProgramHeaderTable$Entry32 r0;
        cck.elf.ELFProgramHeaderTable r1;

        r0 := @this: cck.elf.ELFProgramHeaderTable$Entry32;

        r1 := @parameter0: cck.elf.ELFProgramHeaderTable;

        r0.<cck.elf.ELFProgramHeaderTable$Entry32: cck.elf.ELFProgramHeaderTable this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String getFlags()
    {
        java.lang.StringBuffer $r0;
        cck.elf.ELFProgramHeaderTable$Entry32 r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r3;

        r2 := @this: cck.elf.ELFProgramHeaderTable$Entry32;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $i0 = r2.<cck.elf.ELFProgramHeaderTable$Entry32: int p_flags>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("EXEC ");

     label1:
        $i2 = r2.<cck.elf.ELFProgramHeaderTable$Entry32: int p_flags>;

        $i3 = $i2 & 2;

        if $i3 == 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("WRITE ");

     label2:
        $i4 = r2.<cck.elf.ELFProgramHeaderTable$Entry32: int p_flags>;

        $i5 = $i4 & 4;

        if $i5 == 0 goto label3;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("READ ");

     label3:
        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public boolean isLoadable()
    {
        cck.elf.ELFProgramHeaderTable$Entry32 r0;
        int $i0;
        boolean $z0;

        r0 := @this: cck.elf.ELFProgramHeaderTable$Entry32;

        $i0 = r0.<cck.elf.ELFProgramHeaderTable$Entry32: int p_type>;

        if $i0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isExecutable()
    {
        cck.elf.ELFProgramHeaderTable$Entry32 r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: cck.elf.ELFProgramHeaderTable$Entry32;

        $i0 = r0.<cck.elf.ELFProgramHeaderTable$Entry32: int p_flags>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }
}
