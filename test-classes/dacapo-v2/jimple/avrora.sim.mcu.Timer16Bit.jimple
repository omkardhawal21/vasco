public abstract class avrora.sim.mcu.Timer16Bit extends avrora.sim.mcu.AtmelInternalDevice
{
    public static final int MODE_NORMAL;
    public static final int MODE_PWM_PHASE_CORRECT_8_BIT;
    public static final int MODE_PWM_PHASE_CORRECT_9_BIT;
    public static final int MODE_PWM_PHASE_CORRECT_10_BIT;
    public static final int MODE_CTC_OCRnA;
    public static final int MODE_FASTPWM_8_BIT;
    public static final int MODE_FASTPWM_9_BIT;
    public static final int MODE_FASTPWM_10_BIT;
    public static final int MODE_PWM_PNF_ICRn;
    public static final int MODE_PWM_PNF_OCRnA;
    public static final int MODE_PWN_PHASE_CORRECT_ICRn;
    public static final int MODE_PWN_PHASE_CORRECT_OCRnA;
    public static final int MODE_CTC_ICRn;
    public static final int MODE_FASTPWM_ICRn;
    public static final int MODE_FASTPWM_OCRnA;
    public static final int MAX;
    public static final int BOTTOM;
    final avrora.sim.mcu.RegisterSet$Field ICESn_flag;
    final avrora.sim.RWRegister TCNTnH_reg;
    final avrora.sim.mcu.Timer16Bit$TCNTnRegister TCNTnL_reg;
    final avrora.sim.mcu.Timer16Bit$PairedRegister TCNTn_reg;
    final avrora.sim.mcu.Timer16Bit$OutputCompareUnit[] compareUnits;
    final avrora.sim.Simulator$Event[] tickers;
    final avrora.sim.RWRegister highTempReg;
    final avrora.sim.RWRegister ICRnH_reg;
    final avrora.sim.RWRegister ICRnL_reg;
    final avrora.sim.mcu.Timer16Bit$PairedRegister ICRn_reg;
    avrora.sim.Simulator$Event ticker;
    final avrora.sim.mcu.RegisterSet$Field WGMn;
    final avrora.sim.mcu.RegisterSet$Field CSn;
    final avrora.sim.mcu.Timer16Bit$InputCapturePin inputCapturePin;
    long period;
    boolean blockCompareMatch;
    protected final avrora.sim.clock.Clock externalClock;
    avrora.sim.clock.Clock timerClock;
    final int n;
    int OCIEnA;
    int OCIEnB;
    int OCIEnC;
    int TOIEn;
    int TOVn;
    int OCFnA;
    int OCFnB;
    int OCFnC;
    int ICFn;
    int inputCaptureInterrupt;
    protected avrora.sim.mcu.ATMegaFamily$FlagRegister xTIFR_reg;
    protected avrora.sim.mcu.ATMegaFamily$MaskRegister xTIMSK_reg;
    protected avrora.sim.mcu.ATMegaFamily$FlagRegister cTIFR_reg;
    protected avrora.sim.mcu.ATMegaFamily$MaskRegister cTIMSK_reg;
    protected int[] periods;

    protected abstract void initValues();

    protected void <init>(int, int, avrora.sim.mcu.AtmelMicrocontroller)
    {
        avrora.sim.mcu.Timer16Bit r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r7, $r8, $r9, $r13, $r14, $r15, $r20, $r21, $r22, $r23, $r41, $r42, $r43, $r48, $r49, $r50, $r51, $r54, $r55, $r56, $r57, $r60, $r61, $r62, $r63, $r66, $r67, $r68, $r69;
        int i0, $i1, i2, $i3, $i4, $i5;
        java.lang.String $r4, $r10, $r16, $r24, $r44, $r52, $r58, $r64, $r70;
        avrora.sim.mcu.AtmelMicrocontroller r5;
        avrora.sim.mcu.RegisterSet r6;
        avrora.sim.mcu.Timer16Bit$1 $r11;
        avrora.sim.mcu.RegisterSet$Field $r12, $r18, $r45;
        avrora.sim.mcu.Timer16Bit$2 $r17;
        avrora.sim.mcu.MCUProperties $r19;
        avrora.sim.mcu.Timer16Bit$InputCapturePin $r25;
        avrora.sim.RWRegister $r26, $r31, $r35, $r36, $r37, $r39, $r40, $r53, $r65;
        avrora.sim.mcu.Timer16Bit$OutputCompareUnit[] $r27;
        avrora.sim.mcu.ATMegaFamily$FlagRegister $r28, $r29, $r30;
        avrora.sim.mcu.Timer16Bit$TCNTnRegister $r32, $r34;
        avrora.sim.mcu.Timer16Bit$PairedRegister $r33, $r38, $r59, $r71;
        avrora.sim.clock.Clock $r46, $r47;
        avrora.sim.Simulator$Event[] $r72;

        r0 := @this: avrora.sim.mcu.Timer16Bit;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        r5 := @parameter2: avrora.sim.mcu.AtmelMicrocontroller;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("timer");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<avrora.sim.mcu.AtmelInternalDevice: void <init>(java.lang.String,avrora.sim.mcu.AtmelMicrocontroller)>($r4, r5);

        r0.<avrora.sim.mcu.Timer16Bit: int n> = i0;

        r6 = virtualinvoke r5.<avrora.sim.mcu.AtmelMicrocontroller: avrora.sim.mcu.RegisterSet getRegisterSet()>();

        virtualinvoke r0.<avrora.sim.mcu.Timer16Bit: void initValues()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WGM");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = new avrora.sim.mcu.Timer16Bit$1;

        specialinvoke $r11.<avrora.sim.mcu.Timer16Bit$1: void <init>(avrora.sim.mcu.Timer16Bit)>(r0);

        $r12 = virtualinvoke r6.<avrora.sim.mcu.RegisterSet: avrora.sim.mcu.RegisterSet$Field installField(java.lang.String,avrora.sim.mcu.RegisterSet$Field)>($r10, $r11);

        r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.RegisterSet$Field WGMn> = $r12;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CS");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = new avrora.sim.mcu.Timer16Bit$2;

        specialinvoke $r17.<avrora.sim.mcu.Timer16Bit$2: void <init>(avrora.sim.mcu.Timer16Bit)>(r0);

        $r18 = virtualinvoke r6.<avrora.sim.mcu.RegisterSet: avrora.sim.mcu.RegisterSet$Field installField(java.lang.String,avrora.sim.mcu.RegisterSet$Field)>($r16, $r17);

        r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.RegisterSet$Field CSn> = $r18;

        $r19 = virtualinvoke r5.<avrora.sim.mcu.AtmelMicrocontroller: avrora.sim.mcu.MCUProperties getProperties()>();

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TIMER");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" CAPT");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = virtualinvoke $r19.<avrora.sim.mcu.MCUProperties: int getInterrupt(java.lang.String)>($r24);

        r0.<avrora.sim.mcu.Timer16Bit: int inputCaptureInterrupt> = $i1;

        $r25 = new avrora.sim.mcu.Timer16Bit$InputCapturePin;

        specialinvoke $r25.<avrora.sim.mcu.Timer16Bit$InputCapturePin: void <init>(avrora.sim.mcu.Timer16Bit)>(r0);

        r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.Timer16Bit$InputCapturePin inputCapturePin> = $r25;

        $r26 = new avrora.sim.RWRegister;

        specialinvoke $r26.<avrora.sim.RWRegister: void <init>()>();

        r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister highTempReg> = $r26;

        $r27 = newarray (avrora.sim.mcu.Timer16Bit$OutputCompareUnit)[i2];

        r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.Timer16Bit$OutputCompareUnit[] compareUnits> = $r27;

        $i3 = r0.<avrora.sim.mcu.Timer16Bit: int OCFnA>;

        $r28 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.ATMegaFamily$FlagRegister xTIFR_reg>;

        virtualinvoke r0.<avrora.sim.mcu.Timer16Bit: void newOCU(int,int,avrora.sim.mcu.Microcontroller,avrora.sim.mcu.RegisterSet,char,int,avrora.sim.mcu.ATMegaFamily$FlagRegister)>(0, i2, r5, r6, 65, $i3, $r28);

        $i4 = r0.<avrora.sim.mcu.Timer16Bit: int OCFnB>;

        $r29 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.ATMegaFamily$FlagRegister xTIFR_reg>;

        virtualinvoke r0.<avrora.sim.mcu.Timer16Bit: void newOCU(int,int,avrora.sim.mcu.Microcontroller,avrora.sim.mcu.RegisterSet,char,int,avrora.sim.mcu.ATMegaFamily$FlagRegister)>(1, i2, r5, r6, 66, $i4, $r29);

        $i5 = r0.<avrora.sim.mcu.Timer16Bit: int OCFnC>;

        $r30 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.ATMegaFamily$FlagRegister cTIFR_reg>;

        virtualinvoke r0.<avrora.sim.mcu.Timer16Bit: void newOCU(int,int,avrora.sim.mcu.Microcontroller,avrora.sim.mcu.RegisterSet,char,int,avrora.sim.mcu.ATMegaFamily$FlagRegister)>(2, i2, r5, r6, 67, $i5, $r30);

        $r31 = new avrora.sim.RWRegister;

        specialinvoke $r31.<avrora.sim.RWRegister: void <init>()>();

        r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister TCNTnH_reg> = $r31;

        $r32 = new avrora.sim.mcu.Timer16Bit$TCNTnRegister;

        specialinvoke $r32.<avrora.sim.mcu.Timer16Bit$TCNTnRegister: void <init>(avrora.sim.mcu.Timer16Bit)>(r0);

        r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.Timer16Bit$TCNTnRegister TCNTnL_reg> = $r32;

        $r33 = new avrora.sim.mcu.Timer16Bit$PairedRegister;

        $r35 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister TCNTnH_reg>;

        $r34 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.Timer16Bit$TCNTnRegister TCNTnL_reg>;

        specialinvoke $r33.<avrora.sim.mcu.Timer16Bit$PairedRegister: void <init>(avrora.sim.mcu.Timer16Bit,avrora.sim.RWRegister,avrora.sim.RWRegister)>(r0, $r35, $r34);

        r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.Timer16Bit$PairedRegister TCNTn_reg> = $r33;

        $r36 = new avrora.sim.RWRegister;

        specialinvoke $r36.<avrora.sim.RWRegister: void <init>()>();

        r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister ICRnH_reg> = $r36;

        $r37 = new avrora.sim.RWRegister;

        specialinvoke $r37.<avrora.sim.RWRegister: void <init>()>();

        r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister ICRnL_reg> = $r37;

        $r38 = new avrora.sim.mcu.Timer16Bit$PairedRegister;

        $r40 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister ICRnL_reg>;

        $r39 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister ICRnH_reg>;

        specialinvoke $r38.<avrora.sim.mcu.Timer16Bit$PairedRegister: void <init>(avrora.sim.mcu.Timer16Bit,avrora.sim.RWRegister,avrora.sim.RWRegister)>(r0, $r40, $r39);

        r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.Timer16Bit$PairedRegister ICRn_reg> = $r38;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ICES");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        $r45 = virtualinvoke r6.<avrora.sim.mcu.RegisterSet: avrora.sim.mcu.RegisterSet$Field getField(java.lang.String)>($r44);

        r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.RegisterSet$Field ICESn_flag> = $r45;

        $r46 = virtualinvoke r5.<avrora.sim.mcu.AtmelMicrocontroller: avrora.sim.clock.Clock getClock(java.lang.String)>("external");

        r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.clock.Clock externalClock> = $r46;

        $r47 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.clock.Clock mainClock>;

        r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.clock.Clock timerClock> = $r47;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TCNT");

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("H");

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        $r53 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister highTempReg>;

        virtualinvoke r0.<avrora.sim.mcu.Timer16Bit: void installIOReg(java.lang.String,avrora.sim.ActiveRegister)>($r52, $r53);

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TCNT");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("L");

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        $r59 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.Timer16Bit$PairedRegister TCNTn_reg>;

        virtualinvoke r0.<avrora.sim.mcu.Timer16Bit: void installIOReg(java.lang.String,avrora.sim.ActiveRegister)>($r58, $r59);

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ICR");

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("H");

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        $r65 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister highTempReg>;

        virtualinvoke r0.<avrora.sim.mcu.Timer16Bit: void installIOReg(java.lang.String,avrora.sim.ActiveRegister)>($r64, $r65);

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ICR");

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("L");

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        $r71 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.Timer16Bit$PairedRegister ICRn_reg>;

        virtualinvoke r0.<avrora.sim.mcu.Timer16Bit: void installIOReg(java.lang.String,avrora.sim.ActiveRegister)>($r70, $r71);

        $r72 = newarray (avrora.sim.Simulator$Event)[16];

        r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event[] tickers> = $r72;

        specialinvoke r0.<avrora.sim.mcu.Timer16Bit: void installTickers()>();

        return;
    }

    private void installTickers()
    {
        avrora.sim.mcu.Timer16Bit r0;
        avrora.sim.mcu.Timer16Bit$OutputCompareUnit[] $r1;
        avrora.sim.mcu.Timer16Bit$OutputCompareUnit r2;
        avrora.sim.mcu.Timer16Bit$BufferedRegister r3, r4;
        avrora.sim.mcu.Timer16Bit$Mode_Normal $r5;
        avrora.sim.Simulator$Event[] $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r24, $r26, $r30, $r32, $r36, $r38, $r42, $r44;
        avrora.sim.mcu.Timer16Bit$Mode_PWMPhaseCorrect $r7, $r9, $r11, $r27, $r31;
        avrora.sim.mcu.Timer16Bit$Mode_CTC $r13, $r33;
        avrora.sim.mcu.Timer16Bit$Mode_FastPWM $r15, $r17, $r19, $r39, $r43;
        avrora.sim.mcu.Timer16Bit$Mode_PWM_PNF $r21, $r25;
        avrora.sim.RWRegister $r22, $r23, $r28, $r29, $r34, $r35, $r40, $r41;
        avrora.sim.mcu.Timer16Bit$Mode_Reserved $r37;

        r0 := @this: avrora.sim.mcu.Timer16Bit;

        $r1 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.Timer16Bit$OutputCompareUnit[] compareUnits>;

        r2 = $r1[0];

        r3 = r2.<avrora.sim.mcu.Timer16Bit$OutputCompareUnit: avrora.sim.mcu.Timer16Bit$BufferedRegister OCRnXH_reg>;

        r4 = r2.<avrora.sim.mcu.Timer16Bit$OutputCompareUnit: avrora.sim.mcu.Timer16Bit$BufferedRegister OCRnXL_reg>;

        $r6 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event[] tickers>;

        $r5 = new avrora.sim.mcu.Timer16Bit$Mode_Normal;

        specialinvoke $r5.<avrora.sim.mcu.Timer16Bit$Mode_Normal: void <init>(avrora.sim.mcu.Timer16Bit)>(r0);

        $r6[0] = $r5;

        $r8 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event[] tickers>;

        $r7 = new avrora.sim.mcu.Timer16Bit$Mode_PWMPhaseCorrect;

        specialinvoke $r7.<avrora.sim.mcu.Timer16Bit$Mode_PWMPhaseCorrect: void <init>(avrora.sim.mcu.Timer16Bit,int,avrora.sim.RWRegister,avrora.sim.RWRegister)>(r0, 255, null, null);

        $r8[1] = $r7;

        $r10 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event[] tickers>;

        $r9 = new avrora.sim.mcu.Timer16Bit$Mode_PWMPhaseCorrect;

        specialinvoke $r9.<avrora.sim.mcu.Timer16Bit$Mode_PWMPhaseCorrect: void <init>(avrora.sim.mcu.Timer16Bit,int,avrora.sim.RWRegister,avrora.sim.RWRegister)>(r0, 511, null, null);

        $r10[2] = $r9;

        $r12 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event[] tickers>;

        $r11 = new avrora.sim.mcu.Timer16Bit$Mode_PWMPhaseCorrect;

        specialinvoke $r11.<avrora.sim.mcu.Timer16Bit$Mode_PWMPhaseCorrect: void <init>(avrora.sim.mcu.Timer16Bit,int,avrora.sim.RWRegister,avrora.sim.RWRegister)>(r0, 1023, null, null);

        $r12[3] = $r11;

        $r14 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event[] tickers>;

        $r13 = new avrora.sim.mcu.Timer16Bit$Mode_CTC;

        specialinvoke $r13.<avrora.sim.mcu.Timer16Bit$Mode_CTC: void <init>(avrora.sim.mcu.Timer16Bit,avrora.sim.RWRegister,avrora.sim.RWRegister)>(r0, r3, r4);

        $r14[4] = $r13;

        $r16 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event[] tickers>;

        $r15 = new avrora.sim.mcu.Timer16Bit$Mode_FastPWM;

        specialinvoke $r15.<avrora.sim.mcu.Timer16Bit$Mode_FastPWM: void <init>(avrora.sim.mcu.Timer16Bit,int,avrora.sim.RWRegister,avrora.sim.RWRegister)>(r0, 255, null, null);

        $r16[5] = $r15;

        $r18 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event[] tickers>;

        $r17 = new avrora.sim.mcu.Timer16Bit$Mode_FastPWM;

        specialinvoke $r17.<avrora.sim.mcu.Timer16Bit$Mode_FastPWM: void <init>(avrora.sim.mcu.Timer16Bit,int,avrora.sim.RWRegister,avrora.sim.RWRegister)>(r0, 511, null, null);

        $r18[6] = $r17;

        $r20 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event[] tickers>;

        $r19 = new avrora.sim.mcu.Timer16Bit$Mode_FastPWM;

        specialinvoke $r19.<avrora.sim.mcu.Timer16Bit$Mode_FastPWM: void <init>(avrora.sim.mcu.Timer16Bit,int,avrora.sim.RWRegister,avrora.sim.RWRegister)>(r0, 1023, null, null);

        $r20[7] = $r19;

        $r24 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event[] tickers>;

        $r21 = new avrora.sim.mcu.Timer16Bit$Mode_PWM_PNF;

        $r23 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister ICRnH_reg>;

        $r22 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister ICRnL_reg>;

        specialinvoke $r21.<avrora.sim.mcu.Timer16Bit$Mode_PWM_PNF: void <init>(avrora.sim.mcu.Timer16Bit,avrora.sim.RWRegister,avrora.sim.RWRegister)>(r0, $r23, $r22);

        $r24[8] = $r21;

        $r26 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event[] tickers>;

        $r25 = new avrora.sim.mcu.Timer16Bit$Mode_PWM_PNF;

        specialinvoke $r25.<avrora.sim.mcu.Timer16Bit$Mode_PWM_PNF: void <init>(avrora.sim.mcu.Timer16Bit,avrora.sim.RWRegister,avrora.sim.RWRegister)>(r0, r3, r4);

        $r26[9] = $r25;

        $r30 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event[] tickers>;

        $r27 = new avrora.sim.mcu.Timer16Bit$Mode_PWMPhaseCorrect;

        $r29 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister ICRnH_reg>;

        $r28 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister ICRnL_reg>;

        specialinvoke $r27.<avrora.sim.mcu.Timer16Bit$Mode_PWMPhaseCorrect: void <init>(avrora.sim.mcu.Timer16Bit,int,avrora.sim.RWRegister,avrora.sim.RWRegister)>(r0, 0, $r29, $r28);

        $r30[10] = $r27;

        $r32 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event[] tickers>;

        $r31 = new avrora.sim.mcu.Timer16Bit$Mode_PWMPhaseCorrect;

        specialinvoke $r31.<avrora.sim.mcu.Timer16Bit$Mode_PWMPhaseCorrect: void <init>(avrora.sim.mcu.Timer16Bit,int,avrora.sim.RWRegister,avrora.sim.RWRegister)>(r0, 0, r3, r4);

        $r32[11] = $r31;

        $r36 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event[] tickers>;

        $r33 = new avrora.sim.mcu.Timer16Bit$Mode_CTC;

        $r35 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister ICRnH_reg>;

        $r34 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister ICRnL_reg>;

        specialinvoke $r33.<avrora.sim.mcu.Timer16Bit$Mode_CTC: void <init>(avrora.sim.mcu.Timer16Bit,avrora.sim.RWRegister,avrora.sim.RWRegister)>(r0, $r35, $r34);

        $r36[12] = $r33;

        $r38 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event[] tickers>;

        $r37 = new avrora.sim.mcu.Timer16Bit$Mode_Reserved;

        specialinvoke $r37.<avrora.sim.mcu.Timer16Bit$Mode_Reserved: void <init>(avrora.sim.mcu.Timer16Bit)>(r0);

        $r38[13] = $r37;

        $r42 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event[] tickers>;

        $r39 = new avrora.sim.mcu.Timer16Bit$Mode_FastPWM;

        $r41 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister ICRnH_reg>;

        $r40 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister ICRnL_reg>;

        specialinvoke $r39.<avrora.sim.mcu.Timer16Bit$Mode_FastPWM: void <init>(avrora.sim.mcu.Timer16Bit,int,avrora.sim.RWRegister,avrora.sim.RWRegister)>(r0, 0, $r41, $r40);

        $r42[14] = $r39;

        $r44 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event[] tickers>;

        $r43 = new avrora.sim.mcu.Timer16Bit$Mode_FastPWM;

        specialinvoke $r43.<avrora.sim.mcu.Timer16Bit$Mode_FastPWM: void <init>(avrora.sim.mcu.Timer16Bit,int,avrora.sim.RWRegister,avrora.sim.RWRegister)>(r0, 0, r3, r4);

        $r44[15] = $r43;

        return;
    }

    public avrora.sim.state.BooleanView getInputCapturePin()
    {
        avrora.sim.mcu.Timer16Bit r0;
        avrora.sim.mcu.Timer16Bit$InputCapturePin $r1;

        r0 := @this: avrora.sim.mcu.Timer16Bit;

        $r1 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.Timer16Bit$InputCapturePin inputCapturePin>;

        return $r1;
    }

    void captureInput()
    {
        avrora.sim.mcu.Timer16Bit r0;
        avrora.sim.mcu.Timer16Bit$TCNTnRegister $r1;
        byte $b0, $b1;
        avrora.sim.RWRegister $r2, $r3, $r4;
        int $i2, $i3;
        avrora.sim.mcu.ATMegaFamily$FlagRegister $r5;
        avrora.sim.AtmelInterpreter $r6;
        avrora.sim.InterruptTable $r7;

        r0 := @this: avrora.sim.mcu.Timer16Bit;

        $r2 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister ICRnL_reg>;

        $r1 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.Timer16Bit$TCNTnRegister TCNTnL_reg>;

        $b0 = $r1.<avrora.sim.mcu.Timer16Bit$TCNTnRegister: byte value>;

        virtualinvoke $r2.<avrora.sim.RWRegister: void write(byte)>($b0);

        $r4 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister ICRnH_reg>;

        $r3 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister TCNTnH_reg>;

        $b1 = $r3.<avrora.sim.RWRegister: byte value>;

        virtualinvoke $r4.<avrora.sim.RWRegister: void write(byte)>($b1);

        $r5 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.ATMegaFamily$FlagRegister xTIFR_reg>;

        $i2 = r0.<avrora.sim.mcu.Timer16Bit: int ICFn>;

        virtualinvoke $r5.<avrora.sim.mcu.ATMegaFamily$FlagRegister: void flagBit(int)>($i2);

        $r6 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.AtmelInterpreter interpreter>;

        $r7 = virtualinvoke $r6.<avrora.sim.AtmelInterpreter: avrora.sim.InterruptTable getInterruptTable()>();

        $i3 = r0.<avrora.sim.mcu.Timer16Bit: int inputCaptureInterrupt>;

        virtualinvoke $r7.<avrora.sim.InterruptTable: void post(int)>($i3);

        return;
    }

    void newOCU(int, int, avrora.sim.mcu.Microcontroller, avrora.sim.mcu.RegisterSet, char, int, avrora.sim.mcu.ATMegaFamily$FlagRegister)
    {
        int i0, i1, i3;
        avrora.sim.mcu.Timer16Bit r0;
        avrora.sim.mcu.Timer16Bit$OutputCompareUnit $r1;
        avrora.sim.mcu.Microcontroller r2;
        avrora.sim.mcu.RegisterSet r3;
        char c2;
        avrora.sim.mcu.ATMegaFamily$FlagRegister r4;
        avrora.sim.mcu.Timer16Bit$OutputCompareUnit[] $r5;

        r0 := @this: avrora.sim.mcu.Timer16Bit;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r2 := @parameter2: avrora.sim.mcu.Microcontroller;

        r3 := @parameter3: avrora.sim.mcu.RegisterSet;

        c2 := @parameter4: char;

        i3 := @parameter5: int;

        r4 := @parameter6: avrora.sim.mcu.ATMegaFamily$FlagRegister;

        if i0 >= i1 goto label1;

        $r5 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.Timer16Bit$OutputCompareUnit[] compareUnits>;

        $r1 = new avrora.sim.mcu.Timer16Bit$OutputCompareUnit;

        specialinvoke $r1.<avrora.sim.mcu.Timer16Bit$OutputCompareUnit: void <init>(avrora.sim.mcu.Timer16Bit,avrora.sim.mcu.Microcontroller,avrora.sim.mcu.RegisterSet,char,int,avrora.sim.mcu.ATMegaFamily$FlagRegister)>(r0, r2, r3, c2, i3, r4);

        $r5[i0] = $r1;

     label1:
        return;
    }

    protected void overflow()
    {
        avrora.sim.mcu.Timer16Bit r0;
        avrora.sim.output.SimPrinter $r1, $r5;
        int $i0, $i1, $i2;
        avrora.sim.mcu.ATMegaFamily$FlagRegister $r2;
        avrora.sim.mcu.ATMegaFamily$MaskRegister $r3;
        boolean z0;
        java.lang.StringBuilder $r4, $r6, $r7, $r8, $r9, $r10, $r11;
        java.lang.String $r12;

        r0 := @this: avrora.sim.mcu.Timer16Bit;

        $r1 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.output.SimPrinter devicePrinter>;

        if $r1 == null goto label1;

        $r3 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.ATMegaFamily$MaskRegister xTIMSK_reg>;

        $i1 = r0.<avrora.sim.mcu.Timer16Bit: int TOIEn>;

        z0 = virtualinvoke $r3.<avrora.sim.mcu.ATMegaFamily$MaskRegister: boolean readBit(int)>($i1);

        $r5 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.output.SimPrinter devicePrinter>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timer");

        $i2 = r0.<avrora.sim.mcu.Timer16Bit: int n>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".overFlow (enabled: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<avrora.sim.output.SimPrinter: void println(java.lang.String)>($r12);

     label1:
        $r2 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.ATMegaFamily$FlagRegister xTIFR_reg>;

        $i0 = r0.<avrora.sim.mcu.Timer16Bit: int TOVn>;

        virtualinvoke $r2.<avrora.sim.mcu.ATMegaFamily$FlagRegister: void flagBit(int)>($i0);

        return;
    }

    private void resetPeriod(int)
    {
        int i0, $i1, $i4, $i5, $i6;
        avrora.sim.mcu.Timer16Bit r0;
        avrora.sim.output.SimPrinter $r1, $r11, $r20, $r25;
        avrora.sim.Simulator$Event $r2, $r5, $r6, $r8, $r21, $r22;
        avrora.sim.mcu.RegisterSet$Field $r3, $r17;
        avrora.sim.Simulator$Event[] $r4;
        long $l2, $l3;
        avrora.sim.clock.Clock $r7, $r9, $r23;
        java.lang.StringBuilder $r10, $r12, $r13, $r14, $r15, $r16, $r18, $r24, $r26, $r27, $r28;
        java.lang.String $r19, $r29;

        r0 := @this: avrora.sim.mcu.Timer16Bit;

        i0 := @parameter0: int;

        if i0 != 0 goto label2;

        $r20 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.output.SimPrinter devicePrinter>;

        if $r20 == null goto label1;

        $r25 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.output.SimPrinter devicePrinter>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timer");

        $i6 = r0.<avrora.sim.mcu.Timer16Bit: int n>;

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" disabled");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r25.<avrora.sim.output.SimPrinter: void println(java.lang.String)>($r29);

     label1:
        $r21 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event ticker>;

        if $r21 == null goto label5;

        $r23 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.clock.Clock timerClock>;

        $r22 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event ticker>;

        virtualinvoke $r23.<avrora.sim.clock.Clock: void removeEvent(avrora.sim.Simulator$Event)>($r22);

        goto label5;

     label2:
        $r1 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.output.SimPrinter devicePrinter>;

        if $r1 == null goto label3;

        $r11 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.output.SimPrinter devicePrinter>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timer");

        $i4 = r0.<avrora.sim.mcu.Timer16Bit: int n>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" enabled: period = ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mode = ");

        $r17 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.RegisterSet$Field WGMn>;

        $i5 = $r17.<avrora.sim.mcu.RegisterSet$Field: int value>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<avrora.sim.output.SimPrinter: void println(java.lang.String)>($r19);

     label3:
        $r2 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event ticker>;

        if $r2 == null goto label4;

        $r9 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.clock.Clock timerClock>;

        $r8 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event ticker>;

        virtualinvoke $r9.<avrora.sim.clock.Clock: void removeEvent(avrora.sim.Simulator$Event)>($r8);

     label4:
        $r4 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event[] tickers>;

        $r3 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.RegisterSet$Field WGMn>;

        $i1 = $r3.<avrora.sim.mcu.RegisterSet$Field: int value>;

        $r5 = $r4[$i1];

        r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event ticker> = $r5;

        $l2 = (long) i0;

        r0.<avrora.sim.mcu.Timer16Bit: long period> = $l2;

        $r7 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.clock.Clock timerClock>;

        $r6 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event ticker>;

        $l3 = r0.<avrora.sim.mcu.Timer16Bit: long period>;

        virtualinvoke $r7.<avrora.sim.clock.Clock: void insertEvent(avrora.sim.Simulator$Event,long)>($r6, $l3);

     label5:
        return;
    }

    public void resetTicker(avrora.sim.Simulator$Event)
    {
        avrora.sim.mcu.Timer16Bit r0;
        avrora.sim.Simulator$Event $r1, r2, $r4;
        long $l0;
        avrora.sim.Simulator $r3, $r5;

        r0 := @this: avrora.sim.mcu.Timer16Bit;

        r2 := @parameter0: avrora.sim.Simulator$Event;

        $r1 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event ticker>;

        if $r1 == null goto label1;

        $r5 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator simulator>;

        $r4 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event ticker>;

        virtualinvoke $r5.<avrora.sim.Simulator: void removeEvent(avrora.sim.Simulator$Event)>($r4);

     label1:
        r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator$Event ticker> = r2;

        $r3 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.Simulator simulator>;

        $l0 = r0.<avrora.sim.mcu.Timer16Bit: long period>;

        virtualinvoke $r3.<avrora.sim.Simulator: void insertEvent(avrora.sim.Simulator$Event,long)>(r2, $l0);

        return;
    }

    private void tickerStart(int)
    {
        avrora.sim.mcu.Timer16Bit r0;
        boolean $z0;
        avrora.sim.mcu.Timer16Bit$OutputCompareUnit[] $r1, $r2;
        int $i0, i1, i2;
        avrora.sim.mcu.Timer16Bit$OutputCompareUnit $r3;

        r0 := @this: avrora.sim.mcu.Timer16Bit;

        i1 := @parameter0: int;

        $z0 = r0.<avrora.sim.mcu.Timer16Bit: boolean blockCompareMatch>;

        if $z0 != 0 goto label2;

        i2 = 0;

     label1:
        $r1 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.Timer16Bit$OutputCompareUnit[] compareUnits>;

        $i0 = lengthof $r1;

        if i2 >= $i0 goto label2;

        $r2 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.Timer16Bit$OutputCompareUnit[] compareUnits>;

        $r3 = $r2[i2];

        virtualinvoke $r3.<avrora.sim.mcu.Timer16Bit$OutputCompareUnit: void compare(int)>(i1);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    private void tickerFinish(avrora.sim.Simulator$Event, int)
    {
        int i0;
        avrora.sim.mcu.Timer16Bit r0;
        avrora.sim.mcu.Timer16Bit$TCNTnRegister $r1;
        avrora.sim.RWRegister $r2;
        long $l1, $l3;
        byte $b2;
        avrora.sim.Simulator$Event r3;
        avrora.sim.clock.Clock $r4;

        r0 := @this: avrora.sim.mcu.Timer16Bit;

        r3 := @parameter0: avrora.sim.Simulator$Event;

        i0 := @parameter1: int;

        $r2 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.RWRegister TCNTnH_reg>;

        $r1 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.Timer16Bit$TCNTnRegister TCNTnL_reg>;

        staticinvoke <avrora.sim.mcu.Timer16Bit: void write16(int,avrora.sim.RWRegister,avrora.sim.RWRegister)>(i0, $r2, $r1);

        r0.<avrora.sim.mcu.Timer16Bit: boolean blockCompareMatch> = 0;

        $l1 = r0.<avrora.sim.mcu.Timer16Bit: long period>;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label1;

        $r4 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.clock.Clock timerClock>;

        $l3 = r0.<avrora.sim.mcu.Timer16Bit: long period>;

        virtualinvoke $r4.<avrora.sim.clock.Clock: void insertEvent(avrora.sim.Simulator$Event,long)>(r3, $l3);

     label1:
        return;
    }

    private void flushOCRnx()
    {
        avrora.sim.mcu.Timer16Bit r0;
        avrora.sim.mcu.Timer16Bit$OutputCompareUnit[] $r1, $r2;
        int $i0, i1;
        avrora.sim.mcu.Timer16Bit$OutputCompareUnit $r3;

        r0 := @this: avrora.sim.mcu.Timer16Bit;

        i1 = 0;

     label1:
        $r1 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.Timer16Bit$OutputCompareUnit[] compareUnits>;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label2;

        $r2 = r0.<avrora.sim.mcu.Timer16Bit: avrora.sim.mcu.Timer16Bit$OutputCompareUnit[] compareUnits>;

        $r3 = $r2[i1];

        virtualinvoke $r3.<avrora.sim.mcu.Timer16Bit$OutputCompareUnit: void flush()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    static void access$100(avrora.sim.mcu.Timer16Bit, int)
    {
        avrora.sim.mcu.Timer16Bit r0;
        int i0;

        r0 := @parameter0: avrora.sim.mcu.Timer16Bit;

        i0 := @parameter1: int;

        specialinvoke r0.<avrora.sim.mcu.Timer16Bit: void resetPeriod(int)>(i0);

        return;
    }

    static void access$200(avrora.sim.mcu.Timer16Bit, int)
    {
        avrora.sim.mcu.Timer16Bit r0;
        int i0;

        r0 := @parameter0: avrora.sim.mcu.Timer16Bit;

        i0 := @parameter1: int;

        specialinvoke r0.<avrora.sim.mcu.Timer16Bit: void tickerStart(int)>(i0);

        return;
    }

    static void access$300(avrora.sim.mcu.Timer16Bit, avrora.sim.Simulator$Event, int)
    {
        avrora.sim.mcu.Timer16Bit r0;
        avrora.sim.Simulator$Event r1;
        int i0;

        r0 := @parameter0: avrora.sim.mcu.Timer16Bit;

        r1 := @parameter1: avrora.sim.Simulator$Event;

        i0 := @parameter2: int;

        specialinvoke r0.<avrora.sim.mcu.Timer16Bit: void tickerFinish(avrora.sim.Simulator$Event,int)>(r1, i0);

        return;
    }

    static void access$400(avrora.sim.mcu.Timer16Bit)
    {
        avrora.sim.mcu.Timer16Bit r0;

        r0 := @parameter0: avrora.sim.mcu.Timer16Bit;

        specialinvoke r0.<avrora.sim.mcu.Timer16Bit: void flushOCRnx()>();

        return;
    }

    public static void <clinit>()
    {
        <avrora.sim.mcu.Timer16Bit: int BOTTOM> = 0;

        <avrora.sim.mcu.Timer16Bit: int MAX> = 65535;

        <avrora.sim.mcu.Timer16Bit: int MODE_FASTPWM_OCRnA> = 15;

        <avrora.sim.mcu.Timer16Bit: int MODE_FASTPWM_ICRn> = 14;

        <avrora.sim.mcu.Timer16Bit: int MODE_CTC_ICRn> = 12;

        <avrora.sim.mcu.Timer16Bit: int MODE_PWN_PHASE_CORRECT_OCRnA> = 11;

        <avrora.sim.mcu.Timer16Bit: int MODE_PWN_PHASE_CORRECT_ICRn> = 10;

        <avrora.sim.mcu.Timer16Bit: int MODE_PWM_PNF_OCRnA> = 9;

        <avrora.sim.mcu.Timer16Bit: int MODE_PWM_PNF_ICRn> = 8;

        <avrora.sim.mcu.Timer16Bit: int MODE_FASTPWM_10_BIT> = 7;

        <avrora.sim.mcu.Timer16Bit: int MODE_FASTPWM_9_BIT> = 6;

        <avrora.sim.mcu.Timer16Bit: int MODE_FASTPWM_8_BIT> = 5;

        <avrora.sim.mcu.Timer16Bit: int MODE_CTC_OCRnA> = 4;

        <avrora.sim.mcu.Timer16Bit: int MODE_PWM_PHASE_CORRECT_10_BIT> = 3;

        <avrora.sim.mcu.Timer16Bit: int MODE_PWM_PHASE_CORRECT_9_BIT> = 2;

        <avrora.sim.mcu.Timer16Bit: int MODE_PWM_PHASE_CORRECT_8_BIT> = 1;

        <avrora.sim.mcu.Timer16Bit: int MODE_NORMAL> = 0;

        return;
    }
}
