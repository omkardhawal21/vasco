public class avrora.sim.mcu.ADC$ControlRegister extends avrora.sim.RWRegister implements avrora.sim.InterruptTable$Notification
{
    final avrora.sim.mcu.ADC$ControlRegister$ConversionEvent conversion;
    final avrora.sim.state.BooleanView _aden;
    final avrora.sim.state.BooleanView _adsc;
    final avrora.sim.state.BooleanView _adfr;
    final avrora.sim.state.BooleanView _adif;
    final avrora.sim.state.BooleanView _adie;
    final avrora.sim.state.RegisterView _prescaler;
    int cycles;
    boolean converting;
    final avrora.sim.mcu.ADC this$0;

    protected void <init>(avrora.sim.mcu.ADC)
    {
        avrora.sim.mcu.ADC$ControlRegister r0;
        avrora.sim.mcu.ADC r1;
        avrora.sim.mcu.ADC$ControlRegister$ConversionEvent $r2;
        avrora.sim.state.BooleanView $r3, $r4, $r5, $r6, $r7;
        avrora.sim.state.RegisterView $r8;

        r0 := @this: avrora.sim.mcu.ADC$ControlRegister;

        r1 := @parameter0: avrora.sim.mcu.ADC;

        r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0> = r1;

        specialinvoke r0.<avrora.sim.RWRegister: void <init>()>();

        $r2 = new avrora.sim.mcu.ADC$ControlRegister$ConversionEvent;

        specialinvoke $r2.<avrora.sim.mcu.ADC$ControlRegister$ConversionEvent: void <init>(avrora.sim.mcu.ADC$ControlRegister,avrora.sim.mcu.ADC$1)>(r0, null);

        r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC$ControlRegister$ConversionEvent conversion> = $r2;

        $r3 = staticinvoke <avrora.sim.state.RegisterUtil: avrora.sim.state.BooleanView booleanView(avrora.sim.state.RegisterView,int)>(r0, 7);

        r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.BooleanView _aden> = $r3;

        $r4 = staticinvoke <avrora.sim.state.RegisterUtil: avrora.sim.state.BooleanView booleanView(avrora.sim.state.RegisterView,int)>(r0, 6);

        r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.BooleanView _adsc> = $r4;

        $r5 = staticinvoke <avrora.sim.state.RegisterUtil: avrora.sim.state.BooleanView booleanView(avrora.sim.state.RegisterView,int)>(r0, 5);

        r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.BooleanView _adfr> = $r5;

        $r6 = staticinvoke <avrora.sim.state.RegisterUtil: avrora.sim.state.BooleanView booleanView(avrora.sim.state.RegisterView,int)>(r0, 4);

        r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.BooleanView _adif> = $r6;

        $r7 = staticinvoke <avrora.sim.state.RegisterUtil: avrora.sim.state.BooleanView booleanView(avrora.sim.state.RegisterView,int)>(r0, 3);

        r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.BooleanView _adie> = $r7;

        $r8 = staticinvoke <avrora.sim.state.RegisterUtil: avrora.sim.state.RegisterView bitRangeView(avrora.sim.state.RegisterView,int,int)>(r0, 0, 2);

        r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.RegisterView _prescaler> = $r8;

        r0.<avrora.sim.mcu.ADC$ControlRegister: int cycles> = 25;

        return;
    }

    private void unpostADCInterrupt()
    {
        avrora.sim.mcu.ADC$ControlRegister r0;
        avrora.sim.state.BooleanView $r1;
        avrora.sim.mcu.ADC $r2, $r3;
        int $i0;
        avrora.sim.AtmelInterpreter $r4;

        r0 := @this: avrora.sim.mcu.ADC$ControlRegister;

        $r1 = r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.BooleanView _adif>;

        interfaceinvoke $r1.<avrora.sim.state.BooleanView: void setValue(boolean)>(0);

        $r2 = r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $r4 = $r2.<avrora.sim.mcu.ADC: avrora.sim.AtmelInterpreter interpreter>;

        $r3 = r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $i0 = $r3.<avrora.sim.mcu.ADC: int interruptNum>;

        virtualinvoke $r4.<avrora.sim.AtmelInterpreter: void setPosted(int,boolean)>($i0, 0);

        return;
    }

    public void write(byte)
    {
        avrora.sim.mcu.ADC$ControlRegister r0;
        byte b0;
        avrora.sim.state.BooleanView $r1, $r4, $r6, $r7;
        boolean $z0, $z1, $z2, $z3;
        avrora.sim.mcu.ADC $r2, $r3;
        avrora.sim.AtmelInterpreter $r5;
        int $i1;

        r0 := @this: avrora.sim.mcu.ADC$ControlRegister;

        b0 := @parameter0: byte;

        r0.<avrora.sim.mcu.ADC$ControlRegister: byte value> = b0;

        $r1 = r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.BooleanView _aden>;

        $z0 = interfaceinvoke $r1.<avrora.sim.state.BooleanView: boolean getValue()>();

        if $z0 == 0 goto label1;

        $r6 = r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.BooleanView _adsc>;

        $z2 = interfaceinvoke $r6.<avrora.sim.state.BooleanView: boolean getValue()>();

        if $z2 == 0 goto label2;

        specialinvoke r0.<avrora.sim.mcu.ADC$ControlRegister: void startConversion()>();

        goto label2;

     label1:
        specialinvoke r0.<avrora.sim.mcu.ADC$ControlRegister: void stopConversion()>();

     label2:
        $r7 = r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.BooleanView _adif>;

        $z3 = interfaceinvoke $r7.<avrora.sim.state.BooleanView: boolean getValue()>();

        if $z3 == 0 goto label3;

        specialinvoke r0.<avrora.sim.mcu.ADC$ControlRegister: void unpostADCInterrupt()>();

     label3:
        $r2 = r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $r5 = $r2.<avrora.sim.mcu.ADC: avrora.sim.AtmelInterpreter interpreter>;

        $r3 = r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $i1 = $r3.<avrora.sim.mcu.ADC: int interruptNum>;

        $r4 = r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.BooleanView _adie>;

        $z1 = interfaceinvoke $r4.<avrora.sim.state.BooleanView: boolean getValue()>();

        virtualinvoke $r5.<avrora.sim.AtmelInterpreter: void setEnabled(int,boolean)>($i1, $z1);

        return;
    }

    private void startConversion()
    {
        avrora.sim.mcu.ADC$ControlRegister r0;
        boolean $z0;

        r0 := @this: avrora.sim.mcu.ADC$ControlRegister;

        $z0 = r0.<avrora.sim.mcu.ADC$ControlRegister: boolean converting>;

        if $z0 != 0 goto label1;

        r0.<avrora.sim.mcu.ADC$ControlRegister: boolean converting> = 1;

        specialinvoke r0.<avrora.sim.mcu.ADC$ControlRegister: void insertConversion()>();

     label1:
        return;
    }

    private void insertConversion()
    {
        avrora.sim.mcu.ADC$ControlRegister r0;
        avrora.sim.mcu.ADC $r1, $r4, $r6, $r8, $r12, $r16, $r20, $r22, $r26;
        avrora.sim.clock.Clock $r2;
        avrora.sim.mcu.ADC$ControlRegister$ConversionEvent $r3;
        int $i0, $i1, $i2, $i4, $i5, $i6;
        long $l3;
        avrora.sim.mcu.ADC$MUXRegister $r5, $r13, $r17, $r27;
        boolean $z0;
        avrora.sim.output.SimPrinter $r7, $r10, $r21, $r24;
        java.lang.StringBuilder $r9, $r11, $r14, $r15, $r18, $r23, $r25, $r28;
        java.lang.String $r19, $r29;

        r0 := @this: avrora.sim.mcu.ADC$ControlRegister;

        $r1 = r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $r2 = $r1.<avrora.sim.mcu.ADC: avrora.sim.clock.Clock mainClock>;

        $r3 = r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC$ControlRegister$ConversionEvent conversion>;

        $i0 = specialinvoke r0.<avrora.sim.mcu.ADC$ControlRegister: int getPrescaler()>();

        $i1 = r0.<avrora.sim.mcu.ADC$ControlRegister: int cycles>;

        $i2 = $i0 * $i1;

        $l3 = (long) $i2;

        virtualinvoke $r2.<avrora.sim.clock.Clock: void insertEvent(avrora.sim.Simulator$Event,long)>($r3, $l3);

        $r4 = r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $r5 = $r4.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$MUXRegister ADMUX_reg>;

        $z0 = virtualinvoke $r5.<avrora.sim.mcu.ADC$MUXRegister: boolean isSingleEnded()>();

        if $z0 == 0 goto label1;

        $r20 = r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $r21 = $r20.<avrora.sim.mcu.ADC: avrora.sim.output.SimPrinter devicePrinter>;

        if $r21 == null goto label2;

        $r22 = r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $r24 = $r22.<avrora.sim.mcu.ADC: avrora.sim.output.SimPrinter devicePrinter>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ADC: beginning sample of channel ");

        $r26 = r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $r27 = $r26.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$MUXRegister ADMUX_reg>;

        $i6 = virtualinvoke $r27.<avrora.sim.mcu.ADC$MUXRegister: int getSingleIndex()>();

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<avrora.sim.output.SimPrinter: void println(java.lang.String)>($r29);

        goto label2;

     label1:
        $r6 = r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $r7 = $r6.<avrora.sim.mcu.ADC: avrora.sim.output.SimPrinter devicePrinter>;

        if $r7 == null goto label2;

        $r8 = r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $r10 = $r8.<avrora.sim.mcu.ADC: avrora.sim.output.SimPrinter devicePrinter>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ADC: beginning sample of channels ");

        $r12 = r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $r13 = $r12.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$MUXRegister ADMUX_reg>;

        $i4 = virtualinvoke $r13.<avrora.sim.mcu.ADC$MUXRegister: int getPosIndex()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r16 = r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $r17 = $r16.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$MUXRegister ADMUX_reg>;

        $i5 = virtualinvoke $r17.<avrora.sim.mcu.ADC$MUXRegister: int getNegIndex()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<avrora.sim.output.SimPrinter: void println(java.lang.String)>($r19);

     label2:
        r0.<avrora.sim.mcu.ADC$ControlRegister: int cycles> = 13;

        return;
    }

    private void stopConversion()
    {
        avrora.sim.mcu.ADC$ControlRegister r0;
        avrora.sim.state.BooleanView $r1;
        boolean $z0;
        avrora.sim.mcu.ADC $r2;
        avrora.sim.mcu.ADC$ControlRegister$ConversionEvent $r3;
        avrora.sim.clock.Clock $r4;

        r0 := @this: avrora.sim.mcu.ADC$ControlRegister;

        $r1 = r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.BooleanView _adsc>;

        interfaceinvoke $r1.<avrora.sim.state.BooleanView: void setValue(boolean)>(0);

        $z0 = r0.<avrora.sim.mcu.ADC$ControlRegister: boolean converting>;

        if $z0 == 0 goto label1;

        r0.<avrora.sim.mcu.ADC$ControlRegister: boolean converting> = 0;

        $r2 = r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $r4 = $r2.<avrora.sim.mcu.ADC: avrora.sim.clock.Clock mainClock>;

        $r3 = r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC$ControlRegister$ConversionEvent conversion>;

        virtualinvoke $r4.<avrora.sim.clock.Clock: void removeEvent(avrora.sim.Simulator$Event)>($r3);

     label1:
        return;
    }

    private int getPrescaler()
    {
        avrora.sim.mcu.ADC$ControlRegister r0;
        avrora.sim.state.RegisterView $r1;
        short[] $r2;
        int $i0;
        short $s1;

        r0 := @this: avrora.sim.mcu.ADC$ControlRegister;

        $r2 = <avrora.sim.mcu.ADC: short[] PRESCALER>;

        $r1 = r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.RegisterView _prescaler>;

        $i0 = interfaceinvoke $r1.<avrora.sim.state.RegisterView: int getValue()>();

        $s1 = $r2[$i0];

        return $s1;
    }

    private int convertVoltage()
    {
        avrora.sim.mcu.ADC$ControlRegister r0;
        avrora.sim.mcu.ADC $r1, $r3, $r4, $r7, $r8, $r11, $r12, $r14, $r15, $r18;
        avrora.sim.mcu.ADC$MUXRegister $r2, $r5, $r9, $r13, $r16;
        boolean $z0;
        avrora.sim.mcu.ADC$ADCInput[] $r6, $r10, $r17;
        int $i0, $i1, $i2, $i5, $i6, $i7, $i9, $i10;
        float f1, $f2, $f3, $f4, $f5, f6, $f7, $f8, $f9, f11, $f12, f13, $f14;
        byte $b3, $b4, $b8;
        avrora.sim.mcu.ADC$ADCInput r19, r20, r21;

        r0 := @this: avrora.sim.mcu.ADC$ControlRegister;

        $r1 = r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $r2 = $r1.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$MUXRegister ADMUX_reg>;

        $z0 = virtualinvoke $r2.<avrora.sim.mcu.ADC$MUXRegister: boolean isSingleEnded()>();

        if $z0 == 0 goto label04;

        $r14 = r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $r17 = $r14.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$ADCInput[] connectedDevices>;

        $r15 = r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $r16 = $r15.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$MUXRegister ADMUX_reg>;

        $i7 = virtualinvoke $r16.<avrora.sim.mcu.ADC$MUXRegister: int getSingleIndex()>();

        r19 = $r17[$i7];

        if r19 == null goto label01;

        $f9 = interfaceinvoke r19.<avrora.sim.mcu.ADC$ADCInput: float getVoltage()>();

        goto label02;

     label01:
        $f9 = 0.0F;

     label02:
        $r18 = r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        f11 = $r18.<avrora.sim.mcu.ADC: float voltageRef>;

        $b8 = $f9 cmpl f11;

        if $b8 < 0 goto label03;

        return 1023;

     label03:
        $f7 = $f9 * 1024.0F;

        $f8 = $f7 / f11;

        $i9 = (int) $f8;

        $i10 = 1023 & $i9;

        return $i10;

     label04:
        $r3 = r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $r6 = $r3.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$ADCInput[] connectedDevices>;

        $r4 = r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $r5 = $r4.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$MUXRegister ADMUX_reg>;

        $i0 = virtualinvoke $r5.<avrora.sim.mcu.ADC$MUXRegister: int getPosIndex()>();

        r20 = $r6[$i0];

        $r7 = r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $r10 = $r7.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$ADCInput[] connectedDevices>;

        $r8 = r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $r9 = $r8.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$MUXRegister ADMUX_reg>;

        $i1 = virtualinvoke $r9.<avrora.sim.mcu.ADC$MUXRegister: int getNegIndex()>();

        r21 = $r10[$i1];

        if r20 == null goto label05;

        $f12 = interfaceinvoke r20.<avrora.sim.mcu.ADC$ADCInput: float getVoltage()>();

        goto label06;

     label05:
        $f12 = 0.0F;

     label06:
        f13 = $f12;

        if r21 == null goto label07;

        $f14 = interfaceinvoke r21.<avrora.sim.mcu.ADC$ADCInput: float getVoltage()>();

        goto label08;

     label07:
        $f14 = 0.0F;

     label08:
        $r11 = r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        f1 = $r11.<avrora.sim.mcu.ADC: float voltageRef>;

        $f2 = f13 - $f14;

        $r12 = r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.mcu.ADC this$0>;

        $r13 = $r12.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$MUXRegister ADMUX_reg>;

        $i2 = virtualinvoke $r13.<avrora.sim.mcu.ADC$MUXRegister: int getGain()>();

        $f3 = (float) $i2;

        $f4 = $f2 * $f3;

        $f5 = $f4 * 512.0F;

        f6 = $f5 / f1;

        $b3 = f6 cmpg -512.0F;

        if $b3 >= 0 goto label09;

        return 1023;

     label09:
        $b4 = f6 cmpl 511.0F;

        if $b4 <= 0 goto label10;

        return 511;

     label10:
        $i5 = (int) f6;

        $i6 = 1023 & $i5;

        return $i6;
    }

    public void force(int)
    {
        avrora.sim.mcu.ADC$ControlRegister r0;
        avrora.sim.state.BooleanView $r1;
        int i0;

        r0 := @this: avrora.sim.mcu.ADC$ControlRegister;

        i0 := @parameter0: int;

        $r1 = r0.<avrora.sim.mcu.ADC$ControlRegister: avrora.sim.state.BooleanView _adif>;

        interfaceinvoke $r1.<avrora.sim.state.BooleanView: void setValue(boolean)>(1);

        return;
    }

    public void invoke(int)
    {
        avrora.sim.mcu.ADC$ControlRegister r0;
        int i0;

        r0 := @this: avrora.sim.mcu.ADC$ControlRegister;

        i0 := @parameter0: int;

        specialinvoke r0.<avrora.sim.mcu.ADC$ControlRegister: void unpostADCInterrupt()>();

        return;
    }

    static int access$100(avrora.sim.mcu.ADC$ControlRegister)
    {
        avrora.sim.mcu.ADC$ControlRegister r0;
        int $i0;

        r0 := @parameter0: avrora.sim.mcu.ADC$ControlRegister;

        $i0 = specialinvoke r0.<avrora.sim.mcu.ADC$ControlRegister: int convertVoltage()>();

        return $i0;
    }

    static void access$200(avrora.sim.mcu.ADC$ControlRegister)
    {
        avrora.sim.mcu.ADC$ControlRegister r0;

        r0 := @parameter0: avrora.sim.mcu.ADC$ControlRegister;

        specialinvoke r0.<avrora.sim.mcu.ADC$ControlRegister: void insertConversion()>();

        return;
    }

    static void access$300(avrora.sim.mcu.ADC$ControlRegister)
    {
        avrora.sim.mcu.ADC$ControlRegister r0;

        r0 := @parameter0: avrora.sim.mcu.ADC$ControlRegister;

        specialinvoke r0.<avrora.sim.mcu.ADC$ControlRegister: void stopConversion()>();

        return;
    }
}
