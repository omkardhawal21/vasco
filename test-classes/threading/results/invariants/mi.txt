Main.main([Ljava/lang/String;)V
A.<init>()V
java/lang/Thread.<init>()V
java/lang/Object.<init>()V
java/lang/StringBuilder.<init>()V
java/lang/AbstractStringBuilder.<init>(I)V
java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;
java/lang/AbstractStringBuilder.append(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;
java/lang/AbstractStringBuilder.appendNull()Ljava/lang/AbstractStringBuilder;
java/lang/AbstractStringBuilder.ensureCapacityInternal(I)V
java/lang/AbstractStringBuilder.newCapacity(I)I
java/lang/AbstractStringBuilder.hugeCapacity(I)I
java/lang/OutOfMemoryError.<init>()V
java/lang/VirtualMachineError.<init>()V
java/lang/Error.<init>()V
java/lang/Throwable.<init>()V
java/lang/Throwable.fillInStackTrace()Ljava/lang/Throwable;
java/util/Arrays.copyOf([CI)[C
java/lang/Math.min(II)I
java/lang/String.length()I
java/lang/String.getChars(II[CI)V
java/lang/StringIndexOutOfBoundsException.<init>(I)V
java/lang/StringBuilder.append(I)Ljava/lang/StringBuilder;
java/lang/AbstractStringBuilder.append(I)Ljava/lang/AbstractStringBuilder;
java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;
java/lang/Integer.stringSize(I)I
java/lang/Integer.getChars(II[C)V
java/lang/StringBuilder.toString()Ljava/lang/String;
java/lang/String.<init>([CII)V
java/util/Arrays.copyOfRange([CII)[C
java/lang/IllegalArgumentException.<init>(Ljava/lang/String;)V
java/lang/RuntimeException.<init>(Ljava/lang/String;)V
java/lang/Exception.<init>(Ljava/lang/String;)V
java/lang/Throwable.<init>(Ljava/lang/String;)V
java/lang/IndexOutOfBoundsException.<init>(Ljava/lang/String;)V
java/lang/Thread.nextThreadNum()I
java/lang/Thread.init(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;J)V
java/lang/Thread.init(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;JLjava/security/AccessControlContext;Z)V
java/lang/NullPointerException.<init>(Ljava/lang/String;)V
java/lang/System.getSecurityManager()Ljava/lang/SecurityManager;
java/lang/Thread.isCCLOverridden(Ljava/lang/Class;)Z
java/lang/Thread.processQueue(Ljava/lang/ref/ReferenceQueue;Ljava/util/concurrent/ConcurrentMap;)V
java/lang/Thread$WeakClassKey.<init>(Ljava/lang/Class;Ljava/lang/ref/ReferenceQueue;)V
java/lang/ref/WeakReference.<init>(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
java/lang/ref/Reference.<init>(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
java/lang/Thread.auditSubclass(Ljava/lang/Class;)Z
java/lang/Thread$1.<init>(Ljava/lang/Class;)V
java/lang/Boolean.valueOf(Z)Ljava/lang/Boolean;
java/security/AccessController.getContext()Ljava/security/AccessControlContext;
java/security/AccessControlContext.<init>([Ljava/security/ProtectionDomain;Z)V
java/lang/Thread.setPriority(I)V
java/lang/Thread.checkAccess()V
java/lang/Thread.getThreadGroup()Ljava/lang/ThreadGroup;
java/lang/IllegalArgumentException.<init>()V
java/lang/RuntimeException.<init>()V
java/lang/Exception.<init>()V
java/lang/ThreadLocal.createInheritedMap(Ljava/lang/ThreadLocal$ThreadLocalMap;)Ljava/lang/ThreadLocal$ThreadLocalMap;
java/lang/ThreadLocal$ThreadLocalMap.<init>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal$1;)V
java/lang/ThreadLocal$ThreadLocalMap.<init>(Ljava/lang/ThreadLocal$ThreadLocalMap;)V
java/lang/ThreadLocal$ThreadLocalMap.setThreshold(I)V
java/lang/ThreadLocal$ThreadLocalMap$Entry.<init>(Ljava/lang/ThreadLocal;Ljava/lang/Object;)V
java/lang/ref/WeakReference.<init>(Ljava/lang/Object;)V
java/lang/ref/Reference.<init>(Ljava/lang/Object;)V
java/lang/ThreadLocal.access$400(Ljava/lang/ThreadLocal;)I
java/lang/ThreadLocal$ThreadLocalMap.nextIndex(II)I
java/lang/Thread.nextThreadID()J
A.run()V
A.foo()V
